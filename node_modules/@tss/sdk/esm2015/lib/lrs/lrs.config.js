/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { Injectable } from '@angular/core';
import { AutoConfig } from '../core/auto-config.decorator';
import { ResourceConfig } from '../core/resource.config';
import * as i0 from "@angular/core";
/**
 * Configuration class for storing global ESRI-related settings.
 */
let LrsConfig = /**
 * Configuration class for storing global ESRI-related settings.
 */
class LrsConfig extends ResourceConfig {
    constructor() {
        super(...arguments);
        this.dataSourceLrsMetadataEndpoint = 'api/spatial/data/sources/{dataSourceId}/lrs/meta';
        this.cacheInSessionLrsMetadata = true;
    }
};
LrsConfig.decorators = [
    { type: Injectable, args: [{
                providedIn: 'root'
            },] }
];
/** @nocollapse */ LrsConfig.ngInjectableDef = i0.defineInjectable({ factory: function LrsConfig_Factory() { return new LrsConfig(); }, token: LrsConfig, providedIn: "root" });
/**
 * Configuration class for storing global ESRI-related settings.
 */
LrsConfig = tslib_1.__decorate([
    AutoConfig('LrsConfig')
], LrsConfig);
export { LrsConfig };
if (false) {
    /** @type {?} */
    LrsConfig.prototype.dataSourceLrsMetadataEndpoint;
    /** @type {?} */
    LrsConfig.prototype.cacheInSessionLrsMetadata;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibHJzLmNvbmZpZy5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0B0c3Mvc2RrLyIsInNvdXJjZXMiOlsibGliL2xycy9scnMuY29uZmlnLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7O0FBQUEsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUMzQyxPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0sK0JBQStCLENBQUM7QUFDM0QsT0FBTyxFQUFFLGNBQWMsRUFBRSxNQUFNLHlCQUF5QixDQUFDOzs7OztJQVU1QyxTQUFTOzs7TUFBVCxTQUFVLFNBQVEsY0FBYztJQUo3Qzs7UUFLRSxrQ0FBNkIsR0FBRyxrREFBa0QsQ0FBQztRQUNuRiw4QkFBeUIsR0FBRyxJQUFJLENBQUM7S0FDbEM7Q0FBQSxDQUFBOztZQVBBLFVBQVUsU0FBQztnQkFDVixVQUFVLEVBQUUsTUFBTTthQUNuQjs7Ozs7O0FBRVksU0FBUztJQURyQixVQUFVLENBQUMsV0FBVyxDQUFDO0dBQ1gsU0FBUyxDQUdyQjtTQUhZLFNBQVM7OztJQUNwQixrREFBbUY7O0lBQ25GLDhDQUFpQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEluamVjdGFibGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IEF1dG9Db25maWcgfSBmcm9tICcuLi9jb3JlL2F1dG8tY29uZmlnLmRlY29yYXRvcic7XG5pbXBvcnQgeyBSZXNvdXJjZUNvbmZpZyB9IGZyb20gJy4uL2NvcmUvcmVzb3VyY2UuY29uZmlnJztcblxuXG4vKipcbiAqIENvbmZpZ3VyYXRpb24gY2xhc3MgZm9yIHN0b3JpbmcgZ2xvYmFsIEVTUkktcmVsYXRlZCBzZXR0aW5ncy5cbiAqL1xuQEluamVjdGFibGUoe1xuICBwcm92aWRlZEluOiAncm9vdCdcbn0pXG5AQXV0b0NvbmZpZygnTHJzQ29uZmlnJylcbmV4cG9ydCBjbGFzcyBMcnNDb25maWcgZXh0ZW5kcyBSZXNvdXJjZUNvbmZpZyB7XG4gIGRhdGFTb3VyY2VMcnNNZXRhZGF0YUVuZHBvaW50ID0gJ2FwaS9zcGF0aWFsL2RhdGEvc291cmNlcy97ZGF0YVNvdXJjZUlkfS9scnMvbWV0YSc7XG4gIGNhY2hlSW5TZXNzaW9uTHJzTWV0YWRhdGEgPSB0cnVlO1xufVxuIl19