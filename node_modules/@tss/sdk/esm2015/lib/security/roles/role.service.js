/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { HttpClient } from '@angular/common/http';
import { Injectable } from '@angular/core';
import { BaseResourceService } from '../../core/resource/base-resource.service';
import { SecurityConfig } from '../security-config';
import { join } from '../../core/url/join.function';
import * as i0 from "@angular/core";
import * as i1 from "@angular/common/http";
import * as i2 from "../security-config";
export class RoleService extends BaseResourceService {
    /**
     * @param {?} http
     * @param {?} config
     */
    constructor(http, config) {
        super(http, {
            url: join(config.serviceUrl, config.rolesEndpoint)
        });
        this.http = http;
    }
}
RoleService.decorators = [
    { type: Injectable, args: [{
                providedIn: 'root'
            },] }
];
/** @nocollapse */
RoleService.ctorParameters = () => [
    { type: HttpClient },
    { type: SecurityConfig }
];
/** @nocollapse */ RoleService.ngInjectableDef = i0.defineInjectable({ factory: function RoleService_Factory() { return new RoleService(i0.inject(i1.HttpClient), i0.inject(i2.SecurityConfig)); }, token: RoleService, providedIn: "root" });
if (false) {
    /**
     * @type {?}
     * @protected
     */
    RoleService.prototype.http;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicm9sZS5zZXJ2aWNlLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQHRzcy9zZGsvIiwic291cmNlcyI6WyJsaWIvc2VjdXJpdHkvcm9sZXMvcm9sZS5zZXJ2aWNlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFBQSxPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0sc0JBQXNCLENBQUM7QUFDbEQsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUUzQyxPQUFPLEVBQUUsbUJBQW1CLEVBQUUsTUFBTSwyQ0FBMkMsQ0FBQztBQUVoRixPQUFPLEVBQUUsY0FBYyxFQUFFLE1BQU0sb0JBQW9CLENBQUM7QUFDcEQsT0FBTyxFQUFFLElBQUksRUFBRSxNQUFNLDhCQUE4QixDQUFDOzs7O0FBTXBELE1BQU0sT0FBTyxXQUFZLFNBQVEsbUJBQXlCOzs7OztJQUN4RCxZQUFzQixJQUFnQixFQUFFLE1BQXNCO1FBQzVELEtBQUssQ0FBQyxJQUFJLEVBQUU7WUFDVixHQUFHLEVBQUUsSUFBSSxDQUFDLE1BQU0sQ0FBQyxVQUFVLEVBQUUsTUFBTSxDQUFDLGFBQWEsQ0FBQztTQUNuRCxDQUFDLENBQUM7UUFIaUIsU0FBSSxHQUFKLElBQUksQ0FBWTtJQUl0QyxDQUFDOzs7WUFSRixVQUFVLFNBQUM7Z0JBQ1YsVUFBVSxFQUFFLE1BQU07YUFDbkI7Ozs7WUFYUSxVQUFVO1lBS1YsY0FBYzs7Ozs7Ozs7SUFRVCwyQkFBMEIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBIdHRwQ2xpZW50IH0gZnJvbSAnQGFuZ3VsYXIvY29tbW9uL2h0dHAnO1xuaW1wb3J0IHsgSW5qZWN0YWJsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuXG5pbXBvcnQgeyBCYXNlUmVzb3VyY2VTZXJ2aWNlIH0gZnJvbSAnLi4vLi4vY29yZS9yZXNvdXJjZS9iYXNlLXJlc291cmNlLnNlcnZpY2UnO1xuaW1wb3J0IHsgUm9sZSB9IGZyb20gJy4vcm9sZSc7XG5pbXBvcnQgeyBTZWN1cml0eUNvbmZpZyB9IGZyb20gJy4uL3NlY3VyaXR5LWNvbmZpZyc7XG5pbXBvcnQgeyBqb2luIH0gZnJvbSAnLi4vLi4vY29yZS91cmwvam9pbi5mdW5jdGlvbic7XG5cblxuQEluamVjdGFibGUoe1xuICBwcm92aWRlZEluOiAncm9vdCdcbn0pXG5leHBvcnQgY2xhc3MgUm9sZVNlcnZpY2UgZXh0ZW5kcyBCYXNlUmVzb3VyY2VTZXJ2aWNlPFJvbGU+IHtcbiAgY29uc3RydWN0b3IocHJvdGVjdGVkIGh0dHA6IEh0dHBDbGllbnQsIGNvbmZpZzogU2VjdXJpdHlDb25maWcpIHtcbiAgICBzdXBlcihodHRwLCB7XG4gICAgICB1cmw6IGpvaW4oY29uZmlnLnNlcnZpY2VVcmwsIGNvbmZpZy5yb2xlc0VuZHBvaW50KVxuICAgIH0pO1xuICB9XG59XG4iXX0=