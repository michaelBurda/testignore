/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { upperCaseEachWord } from './upper-case-each-word.function';
import { upperCaseFirstLetter } from './upper-case-first-letter.function';
import { PASCAL_CASE_FIRST_LETTER_MATCH_REGEX, LEADING_AND_TRAILING_UNDERSCORE_MATCH_REGEX, LEADING_AND_TRAILING_HYPHEN_MATCH_REGEX, UNDERSCORE_MATCH_REGEX, HYPHEN_MATCH_REGEX } from './formatting.constants';
/**
 * @param {?} text
 * @param {?=} upperCaseAllWords
 * @return {?}
 */
export function humanize(text, upperCaseAllWords = true) {
    /** @type {?} */
    const result = (text || '')
        .split(PASCAL_CASE_FIRST_LETTER_MATCH_REGEX)
        .join(' ')
        .replace(LEADING_AND_TRAILING_UNDERSCORE_MATCH_REGEX, '')
        .replace(LEADING_AND_TRAILING_HYPHEN_MATCH_REGEX, '')
        .replace(UNDERSCORE_MATCH_REGEX, ' ')
        .replace(HYPHEN_MATCH_REGEX, ' ')
        .toLowerCase();
    return upperCaseAllWords
        ? upperCaseEachWord(result)
        : upperCaseFirstLetter(result);
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaHVtYW5pemUuZnVuY3Rpb24uanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AdHNzL3Nkay8iLCJzb3VyY2VzIjpbImxpYi9jb3JlL2Zvcm1hdHRpbmcvaHVtYW5pemUuZnVuY3Rpb24udHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBRSxpQkFBaUIsRUFBRSxNQUFNLGlDQUFpQyxDQUFDO0FBQ3BFLE9BQU8sRUFBRSxvQkFBb0IsRUFBRSxNQUFNLG9DQUFvQyxDQUFDO0FBQzFFLE9BQU8sRUFDTCxvQ0FBb0MsRUFDcEMsMkNBQTJDLEVBQzNDLHVDQUF1QyxFQUN2QyxzQkFBc0IsRUFDdEIsa0JBQWtCLEVBQ25CLE1BQU0sd0JBQXdCLENBQUM7Ozs7OztBQUdoQyxNQUFNLFVBQVUsUUFBUSxDQUFDLElBQVksRUFBRSxpQkFBaUIsR0FBRyxJQUFJOztVQUN2RCxNQUFNLEdBQUcsQ0FBQyxJQUFJLElBQUksRUFBRSxDQUFDO1NBQ3hCLEtBQUssQ0FBQyxvQ0FBb0MsQ0FBQztTQUMzQyxJQUFJLENBQUMsR0FBRyxDQUFDO1NBQ1QsT0FBTyxDQUFDLDJDQUEyQyxFQUFFLEVBQUUsQ0FBQztTQUN4RCxPQUFPLENBQUMsdUNBQXVDLEVBQUUsRUFBRSxDQUFDO1NBQ3BELE9BQU8sQ0FBQyxzQkFBc0IsRUFBRSxHQUFHLENBQUM7U0FDcEMsT0FBTyxDQUFDLGtCQUFrQixFQUFFLEdBQUcsQ0FBQztTQUNoQyxXQUFXLEVBQUU7SUFFaEIsT0FBTyxpQkFBaUI7UUFDdEIsQ0FBQyxDQUFDLGlCQUFpQixDQUFDLE1BQU0sQ0FBQztRQUMzQixDQUFDLENBQUMsb0JBQW9CLENBQUMsTUFBTSxDQUFDLENBQUM7QUFDbkMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHVwcGVyQ2FzZUVhY2hXb3JkIH0gZnJvbSAnLi91cHBlci1jYXNlLWVhY2gtd29yZC5mdW5jdGlvbic7XG5pbXBvcnQgeyB1cHBlckNhc2VGaXJzdExldHRlciB9IGZyb20gJy4vdXBwZXItY2FzZS1maXJzdC1sZXR0ZXIuZnVuY3Rpb24nO1xuaW1wb3J0IHtcbiAgUEFTQ0FMX0NBU0VfRklSU1RfTEVUVEVSX01BVENIX1JFR0VYLFxuICBMRUFESU5HX0FORF9UUkFJTElOR19VTkRFUlNDT1JFX01BVENIX1JFR0VYLFxuICBMRUFESU5HX0FORF9UUkFJTElOR19IWVBIRU5fTUFUQ0hfUkVHRVgsXG4gIFVOREVSU0NPUkVfTUFUQ0hfUkVHRVgsXG4gIEhZUEhFTl9NQVRDSF9SRUdFWFxufSBmcm9tICcuL2Zvcm1hdHRpbmcuY29uc3RhbnRzJztcblxuXG5leHBvcnQgZnVuY3Rpb24gaHVtYW5pemUodGV4dDogc3RyaW5nLCB1cHBlckNhc2VBbGxXb3JkcyA9IHRydWUpIHtcbiAgY29uc3QgcmVzdWx0ID0gKHRleHQgfHwgJycpXG4gICAgLnNwbGl0KFBBU0NBTF9DQVNFX0ZJUlNUX0xFVFRFUl9NQVRDSF9SRUdFWClcbiAgICAuam9pbignICcpXG4gICAgLnJlcGxhY2UoTEVBRElOR19BTkRfVFJBSUxJTkdfVU5ERVJTQ09SRV9NQVRDSF9SRUdFWCwgJycpXG4gICAgLnJlcGxhY2UoTEVBRElOR19BTkRfVFJBSUxJTkdfSFlQSEVOX01BVENIX1JFR0VYLCAnJylcbiAgICAucmVwbGFjZShVTkRFUlNDT1JFX01BVENIX1JFR0VYLCAnICcpXG4gICAgLnJlcGxhY2UoSFlQSEVOX01BVENIX1JFR0VYLCAnICcpXG4gICAgLnRvTG93ZXJDYXNlKCk7XG5cbiAgcmV0dXJuIHVwcGVyQ2FzZUFsbFdvcmRzXG4gICAgPyB1cHBlckNhc2VFYWNoV29yZChyZXN1bHQpXG4gICAgOiB1cHBlckNhc2VGaXJzdExldHRlcihyZXN1bHQpO1xufVxuIl19