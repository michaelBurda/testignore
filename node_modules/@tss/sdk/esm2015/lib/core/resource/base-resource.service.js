/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
// TSS.
import { BaseEmptyResourceService } from './base-empty-resource.service';
/**
 * @abstract
 * @template T
 */
export class BaseResourceService extends BaseEmptyResourceService {
    /**
     * @param {?} http
     * @param {?} paramsOrUrl
     */
    constructor(http, paramsOrUrl) {
        super(http, paramsOrUrl);
        this.http = http;
    }
    /**
     * @param {?=} routeTokens
     * @param {?=} params
     * @return {?}
     */
    query(routeTokens, params) {
        /** @type {?} */
        const url = this.getUrl(this.config.queryEndpoint, routeTokens);
        return this.http.get(url, { params });
    }
    /**
     * @param {?} id
     * @param {?=} routeTokens
     * @param {?=} params
     * @return {?}
     */
    get(id, routeTokens, params) {
        /** @type {?} */
        const url = this.getUrlWithId(id, this.config.getEndpoint, routeTokens);
        return this.http.get(url, { params });
    }
    /**
     * @param {?} entity
     * @param {?=} routeTokens
     * @param {?=} params
     * @return {?}
     */
    create(entity, routeTokens, params) {
        /** @type {?} */
        const url = this.getUrl(this.config.createEndpoint, routeTokens);
        return this.http.post(url, entity, { params });
    }
    /**
     * @param {?} entity
     * @param {?=} routeTokens
     * @param {?=} params
     * @return {?}
     */
    update(entity, routeTokens, params) {
        /** @type {?} */
        const url = this.getUrlWithEntity(entity, this.config.updateEndpoint, routeTokens);
        return this.http.put(url, entity, { params });
    }
    /**
     * @param {?} id
     * @param {?=} routeTokens
     * @param {?=} params
     * @return {?}
     */
    delete(id, routeTokens, params) {
        /** @type {?} */
        const url = this.getUrlWithId(id, this.config.deleteEndpoint, routeTokens);
        return this.http.delete(url, { params });
    }
}
if (false) {
    /**
     * @type {?}
     * @protected
     */
    BaseResourceService.prototype.http;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYmFzZS1yZXNvdXJjZS5zZXJ2aWNlLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQHRzcy9zZGsvIiwic291cmNlcyI6WyJsaWIvY29yZS9yZXNvdXJjZS9iYXNlLXJlc291cmNlLnNlcnZpY2UudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFPQSxPQUFPLEVBQUUsd0JBQXdCLEVBQUUsTUFBTSwrQkFBK0IsQ0FBQzs7Ozs7QUFJekUsTUFBTSxPQUFnQixtQkFBdUIsU0FBUSx3QkFBMkI7Ozs7O0lBQzlFLFlBQXNCLElBQWdCLEVBQUUsV0FBMkM7UUFDakYsS0FBSyxDQUFDLElBQUksRUFBRSxXQUFXLENBQUMsQ0FBQztRQURMLFNBQUksR0FBSixJQUFJLENBQVk7SUFFdEMsQ0FBQzs7Ozs7O0lBRUQsS0FBSyxDQUFDLFdBQWlCLEVBQUUsTUFBbUI7O2NBQ3BDLEdBQUcsR0FBRyxJQUFJLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsYUFBYSxFQUFFLFdBQVcsQ0FBQztRQUMvRCxPQUFPLElBQUksQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFNLEdBQUcsRUFBRSxFQUFFLE1BQU0sRUFBRSxDQUFDLENBQUM7SUFDN0MsQ0FBQzs7Ozs7OztJQUVELEdBQUcsQ0FBQyxFQUFtQixFQUFFLFdBQWlCLEVBQUUsTUFBbUI7O2NBQ3ZELEdBQUcsR0FBRyxJQUFJLENBQUMsWUFBWSxDQUFDLEVBQUUsRUFBRSxJQUFJLENBQUMsTUFBTSxDQUFDLFdBQVcsRUFBRSxXQUFXLENBQUM7UUFDdkUsT0FBTyxJQUFJLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBSSxHQUFHLEVBQUUsRUFBRSxNQUFNLEVBQUUsQ0FBQyxDQUFDO0lBQzNDLENBQUM7Ozs7Ozs7SUFFRCxNQUFNLENBQUMsTUFBUyxFQUFFLFdBQWlCLEVBQUUsTUFBbUI7O2NBQ2hELEdBQUcsR0FBRyxJQUFJLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsY0FBYyxFQUFFLFdBQVcsQ0FBQztRQUNoRSxPQUFPLElBQUksQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFJLEdBQUcsRUFBRSxNQUFNLEVBQUUsRUFBRSxNQUFNLEVBQUUsQ0FBQyxDQUFDO0lBQ3BELENBQUM7Ozs7Ozs7SUFFRCxNQUFNLENBQUMsTUFBUyxFQUFFLFdBQWlCLEVBQUUsTUFBbUI7O2NBQ2hELEdBQUcsR0FBRyxJQUFJLENBQUMsZ0JBQWdCLENBQUMsTUFBTSxFQUFFLElBQUksQ0FBQyxNQUFNLENBQUMsY0FBYyxFQUFFLFdBQVcsQ0FBQztRQUNsRixPQUFPLElBQUksQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLEdBQUcsRUFBRSxNQUFNLEVBQUUsRUFBRSxNQUFNLEVBQUUsQ0FBQyxDQUFDO0lBQ2hELENBQUM7Ozs7Ozs7SUFFRCxNQUFNLENBQUMsRUFBbUIsRUFBRSxXQUFpQixFQUFFLE1BQW1COztjQUMxRCxHQUFHLEdBQUcsSUFBSSxDQUFDLFlBQVksQ0FBQyxFQUFFLEVBQUUsSUFBSSxDQUFDLE1BQU0sQ0FBQyxjQUFjLEVBQUUsV0FBVyxDQUFDO1FBQzFFLE9BQU8sSUFBSSxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUksR0FBRyxFQUFFLEVBQUUsTUFBTSxFQUFFLENBQUMsQ0FBQztJQUM5QyxDQUFDO0NBQ0Y7Ozs7OztJQTVCYSxtQ0FBMEIiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBBbmd1bGFyLlxuaW1wb3J0IHsgSHR0cENsaWVudCwgSHR0cFBhcmFtcyB9IGZyb20gJ0Bhbmd1bGFyL2NvbW1vbi9odHRwJztcblxuLy8gM3JkIHBhcnR5LlxuaW1wb3J0IHsgT2JzZXJ2YWJsZSB9IGZyb20gJ3J4anMnO1xuXG4vLyBUU1MuXG5pbXBvcnQgeyBCYXNlRW1wdHlSZXNvdXJjZVNlcnZpY2UgfSBmcm9tICcuL2Jhc2UtZW1wdHktcmVzb3VyY2Uuc2VydmljZSc7XG5pbXBvcnQgeyBSZXNvdXJjZVNlcnZpY2VDb25maWcgfSBmcm9tICcuL3Jlc291cmNlLXNlcnZpY2UtY29uZmlnJztcblxuXG5leHBvcnQgYWJzdHJhY3QgY2xhc3MgQmFzZVJlc291cmNlU2VydmljZTxUPiBleHRlbmRzIEJhc2VFbXB0eVJlc291cmNlU2VydmljZTxUPiBpbXBsZW1lbnRzIEJhc2VFbXB0eVJlc291cmNlU2VydmljZTxUPiB7XG4gIGNvbnN0cnVjdG9yKHByb3RlY3RlZCBodHRwOiBIdHRwQ2xpZW50LCBwYXJhbXNPclVybDogc3RyaW5nIHwgUmVzb3VyY2VTZXJ2aWNlQ29uZmlnKSB7XG4gICAgc3VwZXIoaHR0cCwgcGFyYW1zT3JVcmwpO1xuICB9XG5cbiAgcXVlcnkocm91dGVUb2tlbnM/OiBhbnksIHBhcmFtcz86IEh0dHBQYXJhbXMpOiBPYnNlcnZhYmxlPFRbXT4ge1xuICAgIGNvbnN0IHVybCA9IHRoaXMuZ2V0VXJsKHRoaXMuY29uZmlnLnF1ZXJ5RW5kcG9pbnQsIHJvdXRlVG9rZW5zKTtcbiAgICByZXR1cm4gdGhpcy5odHRwLmdldDxUW10+KHVybCwgeyBwYXJhbXMgfSk7XG4gIH1cblxuICBnZXQoaWQ6IHN0cmluZyB8IG51bWJlciwgcm91dGVUb2tlbnM/OiBhbnksIHBhcmFtcz86IEh0dHBQYXJhbXMpOiBPYnNlcnZhYmxlPFQ+IHtcbiAgICBjb25zdCB1cmwgPSB0aGlzLmdldFVybFdpdGhJZChpZCwgdGhpcy5jb25maWcuZ2V0RW5kcG9pbnQsIHJvdXRlVG9rZW5zKTtcbiAgICByZXR1cm4gdGhpcy5odHRwLmdldDxUPih1cmwsIHsgcGFyYW1zIH0pO1xuICB9XG5cbiAgY3JlYXRlKGVudGl0eTogVCwgcm91dGVUb2tlbnM/OiBhbnksIHBhcmFtcz86IEh0dHBQYXJhbXMpOiBPYnNlcnZhYmxlPFQ+IHtcbiAgICBjb25zdCB1cmwgPSB0aGlzLmdldFVybCh0aGlzLmNvbmZpZy5jcmVhdGVFbmRwb2ludCwgcm91dGVUb2tlbnMpO1xuICAgIHJldHVybiB0aGlzLmh0dHAucG9zdDxUPih1cmwsIGVudGl0eSwgeyBwYXJhbXMgfSk7XG4gIH1cblxuICB1cGRhdGUoZW50aXR5OiBULCByb3V0ZVRva2Vucz86IGFueSwgcGFyYW1zPzogSHR0cFBhcmFtcyk6IE9ic2VydmFibGU8YW55PiB7XG4gICAgY29uc3QgdXJsID0gdGhpcy5nZXRVcmxXaXRoRW50aXR5KGVudGl0eSwgdGhpcy5jb25maWcudXBkYXRlRW5kcG9pbnQsIHJvdXRlVG9rZW5zKTtcbiAgICByZXR1cm4gdGhpcy5odHRwLnB1dCh1cmwsIGVudGl0eSwgeyBwYXJhbXMgfSk7XG4gIH1cblxuICBkZWxldGUoaWQ6IHN0cmluZyB8IG51bWJlciwgcm91dGVUb2tlbnM/OiBhbnksIHBhcmFtcz86IEh0dHBQYXJhbXMpOiBPYnNlcnZhYmxlPFQ+IHtcbiAgICBjb25zdCB1cmwgPSB0aGlzLmdldFVybFdpdGhJZChpZCwgdGhpcy5jb25maWcuZGVsZXRlRW5kcG9pbnQsIHJvdXRlVG9rZW5zKTtcbiAgICByZXR1cm4gdGhpcy5odHRwLmRlbGV0ZTxUPih1cmwsIHsgcGFyYW1zIH0pO1xuICB9XG59XG4iXX0=