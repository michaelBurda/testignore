/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { PORTAL_REDIRECT_URL_PARAMS_BREAK_CHARACTER } from '../esri.constants';
import { toEsriPortalAccessToken } from './to-esri-portal-access-token.function';
import { trimStart } from '../../core/formatting/trip-start.function';
import { getQueryParams } from '../../core/url/get-query-params.function';
/**
 * @param {?=} urlHash
 * @return {?}
 */
export function extractPortalAccessToken(urlHash = window.location.hash) {
    /** @type {?} */
    const portalParamsStartIndex = urlHash.lastIndexOf(PORTAL_REDIRECT_URL_PARAMS_BREAK_CHARACTER);
    /** @type {?} */
    const portalParamsHash = trimStart(urlHash.substr(portalParamsStartIndex));
    /** @type {?} */
    const portalParams = getQueryParams(portalParamsHash);
    /** @type {?} */
    const accessToken = portalParams.access_token;
    /** @type {?} */
    const username = portalParams.username;
    /** @type {?} */
    const expiresIn = Number(portalParams.expires_in);
    /** @type {?} */
    const isSecure = Boolean(portalParams.ssl);
    return toEsriPortalAccessToken({
        accessToken,
        username,
        expiresIn,
        isSecure
    });
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZXh0cmFjdC1wb3J0YWwtYWNjZXNzLXRva2VuLmZ1bmN0aW9uLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQHRzcy9zZGsvIiwic291cmNlcyI6WyJsaWIvZXNyaS9wb3J0YWwvZXh0cmFjdC1wb3J0YWwtYWNjZXNzLXRva2VuLmZ1bmN0aW9uLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFDQSxPQUFPLEVBQUUsMENBQTBDLEVBQUUsTUFBTSxtQkFBbUIsQ0FBQztBQUMvRSxPQUFPLEVBQUUsdUJBQXVCLEVBQUUsTUFBTSx3Q0FBd0MsQ0FBQztBQUNqRixPQUFPLEVBQUUsU0FBUyxFQUFFLE1BQU0sMkNBQTJDLENBQUM7QUFDdEUsT0FBTyxFQUFFLGNBQWMsRUFBRSxNQUFNLDBDQUEwQyxDQUFDOzs7OztBQUcxRSxNQUFNLFVBQVUsd0JBQXdCLENBQUMsVUFBa0IsTUFBTSxDQUFDLFFBQVEsQ0FBQyxJQUFJOztVQUN2RSxzQkFBc0IsR0FBRyxPQUFPLENBQUMsV0FBVyxDQUFDLDBDQUEwQyxDQUFDOztVQUN4RixnQkFBZ0IsR0FBRyxTQUFTLENBQ2hDLE9BQU8sQ0FBQyxNQUFNLENBQUMsc0JBQXNCLENBQUMsQ0FDdkM7O1VBRUssWUFBWSxHQUFHLGNBQWMsQ0FBQyxnQkFBZ0IsQ0FBQzs7VUFDL0MsV0FBVyxHQUFHLFlBQVksQ0FBQyxZQUFZOztVQUN2QyxRQUFRLEdBQUcsWUFBWSxDQUFDLFFBQVE7O1VBQ2hDLFNBQVMsR0FBRyxNQUFNLENBQUMsWUFBWSxDQUFDLFVBQVUsQ0FBQzs7VUFDM0MsUUFBUSxHQUFHLE9BQU8sQ0FBQyxZQUFZLENBQUMsR0FBRyxDQUFDO0lBRTFDLE9BQU8sdUJBQXVCLENBQUM7UUFDN0IsV0FBVztRQUNYLFFBQVE7UUFDUixTQUFTO1FBQ1QsUUFBUTtLQUNULENBQUMsQ0FBQztBQUNMLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBFc3JpUG9ydGFsQWNjZXNzVG9rZW4gfSBmcm9tICcuL2VzcmktcG9ydGFsLWFjY2Vzcy10b2tlbic7XG5pbXBvcnQgeyBQT1JUQUxfUkVESVJFQ1RfVVJMX1BBUkFNU19CUkVBS19DSEFSQUNURVIgfSBmcm9tICcuLi9lc3JpLmNvbnN0YW50cyc7XG5pbXBvcnQgeyB0b0VzcmlQb3J0YWxBY2Nlc3NUb2tlbiB9IGZyb20gJy4vdG8tZXNyaS1wb3J0YWwtYWNjZXNzLXRva2VuLmZ1bmN0aW9uJztcbmltcG9ydCB7IHRyaW1TdGFydCB9IGZyb20gJy4uLy4uL2NvcmUvZm9ybWF0dGluZy90cmlwLXN0YXJ0LmZ1bmN0aW9uJztcbmltcG9ydCB7IGdldFF1ZXJ5UGFyYW1zIH0gZnJvbSAnLi4vLi4vY29yZS91cmwvZ2V0LXF1ZXJ5LXBhcmFtcy5mdW5jdGlvbic7XG5cblxuZXhwb3J0IGZ1bmN0aW9uIGV4dHJhY3RQb3J0YWxBY2Nlc3NUb2tlbih1cmxIYXNoOiBzdHJpbmcgPSB3aW5kb3cubG9jYXRpb24uaGFzaCk6IEVzcmlQb3J0YWxBY2Nlc3NUb2tlbiB7XG4gIGNvbnN0IHBvcnRhbFBhcmFtc1N0YXJ0SW5kZXggPSB1cmxIYXNoLmxhc3RJbmRleE9mKFBPUlRBTF9SRURJUkVDVF9VUkxfUEFSQU1TX0JSRUFLX0NIQVJBQ1RFUik7XG4gIGNvbnN0IHBvcnRhbFBhcmFtc0hhc2ggPSB0cmltU3RhcnQoXG4gICAgdXJsSGFzaC5zdWJzdHIocG9ydGFsUGFyYW1zU3RhcnRJbmRleClcbiAgKTtcblxuICBjb25zdCBwb3J0YWxQYXJhbXMgPSBnZXRRdWVyeVBhcmFtcyhwb3J0YWxQYXJhbXNIYXNoKTtcbiAgY29uc3QgYWNjZXNzVG9rZW4gPSBwb3J0YWxQYXJhbXMuYWNjZXNzX3Rva2VuO1xuICBjb25zdCB1c2VybmFtZSA9IHBvcnRhbFBhcmFtcy51c2VybmFtZTtcbiAgY29uc3QgZXhwaXJlc0luID0gTnVtYmVyKHBvcnRhbFBhcmFtcy5leHBpcmVzX2luKTtcbiAgY29uc3QgaXNTZWN1cmUgPSBCb29sZWFuKHBvcnRhbFBhcmFtcy5zc2wpO1xuXG4gIHJldHVybiB0b0VzcmlQb3J0YWxBY2Nlc3NUb2tlbih7XG4gICAgYWNjZXNzVG9rZW4sXG4gICAgdXNlcm5hbWUsXG4gICAgZXhwaXJlc0luLFxuICAgIGlzU2VjdXJlXG4gIH0pO1xufVxuIl19