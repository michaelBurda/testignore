/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
// Server identifiers.
/** @type {?} */
export const MAP_SERVER_SERVICE_MATCH_IDENTIFIER = /(\/MapServer$|\/MapServer\/)/;
/** @type {?} */
export const MAP_SERVER_SERVICE_IDENTIFIER = /(MapServer|MapServer\/)$/;
/** @type {?} */
export const FEATURE_SERVER_SERVICE_IDENTIFIER = /(FeatureServer|FeatureServer\/)$/;
/** @type {?} */
export const IMAGE_SERVER_SERVICE_IDENTIFIER = /(ImageServer|ImageServer\/)$'/;
/** @type {?} */
export const FEATURE_SERVER_LAYER_SERVICE_IDENTIFIER = /FeatureServer\/(\d+|\d+\/)$/;
/** @type {?} */
export const MAP_SERVER_LAYER_SERVICE_MATCH_IDENTIFIER = /(\/MapServer\/(\d+|\d+\/)|\/MapServer\/(\d+|\d+\/)\/)/;
/** @type {?} */
export const MAP_SERVER_LAYER_SERVICE_IDENTIFIER = /MapServer\/(\d+|\d+\/)$/;
/** @type {?} */
export const LRS_SERVER_SERVICE_IDENTIFIER = /(MapServer\/exts\/LRSServer|MapServer\/exts\/LRSServer\/)$/;
/** @type {?} */
export const LRS_SERVER_LAYERS_SERVICE_IDENTIFIER = /(MapServer\/exts\/LRSServer\/layers|MapServer\/exts\/LRSServer\/layers\/)$/;
// Map endpoints.
/** @type {?} */
export const MAP_LAYERS_SERVICE_ENDPOINT = 'layers';
/** @type {?} */
export const MAP_LAYER_SERVICE_ENDPOINT = '{layerId}';
/** @type {?} */
export const MAP_LAYER_QUERY_SERVICE_ENDPOINT = '{layerId}/query';
/** @type {?} */
export const MAP_LAYER_QUERY_RELATED_RECORDS_SERVICE_ENDPOINT = 'layers/{layerId}/queryRelatedRecords';
// LRS endpoints.
/** @type {?} */
export const LRS_SERVER_META_ENDPOINT = 'exts/LRSServer';
/** @type {?} */
export const LRS_LAYERS_SERVICE_ENDPOINT = 'exts/LRSServer/layers';
/** @type {?} */
export const LRS_SERVER_APPLY_EDITS_ENDPOINT = 'exts/LRSServer/applyEdits';
// Network endpoints.
/** @type {?} */
export const LRS_GEOMETRY_TO_MEASURE = 'exts/LRSServer/networkLayers/{layerId}/geometryToMeasure';
// Portal.
/** @type {?} */
export const PORTAL_SHARING_ENDPOINT = 'sharing';
/** @type {?} */
export const PORTAL_OAUTH_AUTHORIZE_ENDPOINT = 'sharing/oauth2/authorize';
/** @type {?} */
export const PORTAL_OAUTH_TOKEN_ENDPOINT = 'sharing/rest/oauth2/token';
/** @type {?} */
export const PORTAL_GENERATE_TOKEN_ENDPOINT = 'sharing/generateToken';
/** @type {?} */
export const PORTAL_REDIRECT_URL_PARAMS_BREAK_CHARACTER = '#';
/** @type {?} */
export const DEFAULT_PORTAL_OAUTH_REDIRECT_OPTIONS = {
    responseType: 'token',
    urlParamsBreak: PORTAL_REDIRECT_URL_PARAMS_BREAK_CHARACTER,
    redirectUrl: window.location.href
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZXNyaS5jb25zdGFudHMuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AdHNzL3Nkay8iLCJzb3VyY2VzIjpbImxpYi9lc3JpL2VzcmkuY29uc3RhbnRzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7OztBQUlBLE1BQU0sT0FBTyxtQ0FBbUMsR0FBRyw4QkFBOEI7O0FBQ2pGLE1BQU0sT0FBTyw2QkFBNkIsR0FBRywwQkFBMEI7O0FBQ3ZFLE1BQU0sT0FBTyxpQ0FBaUMsR0FBRyxrQ0FBa0M7O0FBQ25GLE1BQU0sT0FBTywrQkFBK0IsR0FBRywrQkFBK0I7O0FBRTlFLE1BQU0sT0FBTyx1Q0FBdUMsR0FBRyw2QkFBNkI7O0FBQ3BGLE1BQU0sT0FBTyx5Q0FBeUMsR0FBRyx1REFBdUQ7O0FBQ2hILE1BQU0sT0FBTyxtQ0FBbUMsR0FBRyx5QkFBeUI7O0FBRTVFLE1BQU0sT0FBTyw2QkFBNkIsR0FBRyw0REFBNEQ7O0FBQ3pHLE1BQU0sT0FBTyxvQ0FBb0MsR0FBRyw0RUFBNEU7OztBQUdoSSxNQUFNLE9BQU8sMkJBQTJCLEdBQUcsUUFBUTs7QUFDbkQsTUFBTSxPQUFPLDBCQUEwQixHQUFHLFdBQVc7O0FBQ3JELE1BQU0sT0FBTyxnQ0FBZ0MsR0FBRyxpQkFBaUI7O0FBQ2pFLE1BQU0sT0FBTyxnREFBZ0QsR0FBRyxzQ0FBc0M7OztBQUd0RyxNQUFNLE9BQU8sd0JBQXdCLEdBQUcsZ0JBQWdCOztBQUN4RCxNQUFNLE9BQU8sMkJBQTJCLEdBQUcsdUJBQXVCOztBQUNsRSxNQUFNLE9BQU8sK0JBQStCLEdBQUcsMkJBQTJCOzs7QUFHMUUsTUFBTSxPQUFPLHVCQUF1QixHQUFHLDBEQUEwRDs7O0FBR2pHLE1BQU0sT0FBTyx1QkFBdUIsR0FBRyxTQUFTOztBQUNoRCxNQUFNLE9BQU8sK0JBQStCLEdBQUcsMEJBQTBCOztBQUN6RSxNQUFNLE9BQU8sMkJBQTJCLEdBQUcsMkJBQTJCOztBQUN0RSxNQUFNLE9BQU8sOEJBQThCLEdBQUcsdUJBQXVCOztBQUVyRSxNQUFNLE9BQU8sMENBQTBDLEdBQUcsR0FBRzs7QUFDN0QsTUFBTSxPQUFPLHFDQUFxQyxHQUFrQztJQUNsRixZQUFZLEVBQUUsT0FBTztJQUNyQixjQUFjLEVBQUUsMENBQTBDO0lBQzFELFdBQVcsRUFBRSxNQUFNLENBQUMsUUFBUSxDQUFDLElBQUk7Q0FDbEMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBFc3JpUG9ydGFsQXV0aFJlZGlyZWN0T3B0aW9ucyB9IGZyb20gJy4vcG9ydGFsL2VzcmktcG9ydGFsLWF1dGgtcmVkaXJlY3Qtb3B0aW9ucyc7XG5cblxuLy8gU2VydmVyIGlkZW50aWZpZXJzLlxuZXhwb3J0IGNvbnN0IE1BUF9TRVJWRVJfU0VSVklDRV9NQVRDSF9JREVOVElGSUVSID0gLyhcXC9NYXBTZXJ2ZXIkfFxcL01hcFNlcnZlclxcLykvO1xuZXhwb3J0IGNvbnN0IE1BUF9TRVJWRVJfU0VSVklDRV9JREVOVElGSUVSID0gLyhNYXBTZXJ2ZXJ8TWFwU2VydmVyXFwvKSQvO1xuZXhwb3J0IGNvbnN0IEZFQVRVUkVfU0VSVkVSX1NFUlZJQ0VfSURFTlRJRklFUiA9IC8oRmVhdHVyZVNlcnZlcnxGZWF0dXJlU2VydmVyXFwvKSQvO1xuZXhwb3J0IGNvbnN0IElNQUdFX1NFUlZFUl9TRVJWSUNFX0lERU5USUZJRVIgPSAvKEltYWdlU2VydmVyfEltYWdlU2VydmVyXFwvKSQnLztcblxuZXhwb3J0IGNvbnN0IEZFQVRVUkVfU0VSVkVSX0xBWUVSX1NFUlZJQ0VfSURFTlRJRklFUiA9IC9GZWF0dXJlU2VydmVyXFwvKFxcZCt8XFxkK1xcLykkLztcbmV4cG9ydCBjb25zdCBNQVBfU0VSVkVSX0xBWUVSX1NFUlZJQ0VfTUFUQ0hfSURFTlRJRklFUiA9IC8oXFwvTWFwU2VydmVyXFwvKFxcZCt8XFxkK1xcLyl8XFwvTWFwU2VydmVyXFwvKFxcZCt8XFxkK1xcLylcXC8pLztcbmV4cG9ydCBjb25zdCBNQVBfU0VSVkVSX0xBWUVSX1NFUlZJQ0VfSURFTlRJRklFUiA9IC9NYXBTZXJ2ZXJcXC8oXFxkK3xcXGQrXFwvKSQvO1xuXG5leHBvcnQgY29uc3QgTFJTX1NFUlZFUl9TRVJWSUNFX0lERU5USUZJRVIgPSAvKE1hcFNlcnZlclxcL2V4dHNcXC9MUlNTZXJ2ZXJ8TWFwU2VydmVyXFwvZXh0c1xcL0xSU1NlcnZlclxcLykkLztcbmV4cG9ydCBjb25zdCBMUlNfU0VSVkVSX0xBWUVSU19TRVJWSUNFX0lERU5USUZJRVIgPSAvKE1hcFNlcnZlclxcL2V4dHNcXC9MUlNTZXJ2ZXJcXC9sYXllcnN8TWFwU2VydmVyXFwvZXh0c1xcL0xSU1NlcnZlclxcL2xheWVyc1xcLykkLztcblxuLy8gTWFwIGVuZHBvaW50cy5cbmV4cG9ydCBjb25zdCBNQVBfTEFZRVJTX1NFUlZJQ0VfRU5EUE9JTlQgPSAnbGF5ZXJzJztcbmV4cG9ydCBjb25zdCBNQVBfTEFZRVJfU0VSVklDRV9FTkRQT0lOVCA9ICd7bGF5ZXJJZH0nO1xuZXhwb3J0IGNvbnN0IE1BUF9MQVlFUl9RVUVSWV9TRVJWSUNFX0VORFBPSU5UID0gJ3tsYXllcklkfS9xdWVyeSc7XG5leHBvcnQgY29uc3QgTUFQX0xBWUVSX1FVRVJZX1JFTEFURURfUkVDT1JEU19TRVJWSUNFX0VORFBPSU5UID0gJ2xheWVycy97bGF5ZXJJZH0vcXVlcnlSZWxhdGVkUmVjb3Jkcyc7XG5cbi8vIExSUyBlbmRwb2ludHMuXG5leHBvcnQgY29uc3QgTFJTX1NFUlZFUl9NRVRBX0VORFBPSU5UID0gJ2V4dHMvTFJTU2VydmVyJztcbmV4cG9ydCBjb25zdCBMUlNfTEFZRVJTX1NFUlZJQ0VfRU5EUE9JTlQgPSAnZXh0cy9MUlNTZXJ2ZXIvbGF5ZXJzJztcbmV4cG9ydCBjb25zdCBMUlNfU0VSVkVSX0FQUExZX0VESVRTX0VORFBPSU5UID0gJ2V4dHMvTFJTU2VydmVyL2FwcGx5RWRpdHMnO1xuXG4vLyBOZXR3b3JrIGVuZHBvaW50cy5cbmV4cG9ydCBjb25zdCBMUlNfR0VPTUVUUllfVE9fTUVBU1VSRSA9ICdleHRzL0xSU1NlcnZlci9uZXR3b3JrTGF5ZXJzL3tsYXllcklkfS9nZW9tZXRyeVRvTWVhc3VyZSc7XG5cbi8vIFBvcnRhbC5cbmV4cG9ydCBjb25zdCBQT1JUQUxfU0hBUklOR19FTkRQT0lOVCA9ICdzaGFyaW5nJztcbmV4cG9ydCBjb25zdCBQT1JUQUxfT0FVVEhfQVVUSE9SSVpFX0VORFBPSU5UID0gJ3NoYXJpbmcvb2F1dGgyL2F1dGhvcml6ZSc7XG5leHBvcnQgY29uc3QgUE9SVEFMX09BVVRIX1RPS0VOX0VORFBPSU5UID0gJ3NoYXJpbmcvcmVzdC9vYXV0aDIvdG9rZW4nO1xuZXhwb3J0IGNvbnN0IFBPUlRBTF9HRU5FUkFURV9UT0tFTl9FTkRQT0lOVCA9ICdzaGFyaW5nL2dlbmVyYXRlVG9rZW4nO1xuXG5leHBvcnQgY29uc3QgUE9SVEFMX1JFRElSRUNUX1VSTF9QQVJBTVNfQlJFQUtfQ0hBUkFDVEVSID0gJyMnO1xuZXhwb3J0IGNvbnN0IERFRkFVTFRfUE9SVEFMX09BVVRIX1JFRElSRUNUX09QVElPTlM6IEVzcmlQb3J0YWxBdXRoUmVkaXJlY3RPcHRpb25zID0ge1xuICByZXNwb25zZVR5cGU6ICd0b2tlbicsXG4gIHVybFBhcmFtc0JyZWFrOiBQT1JUQUxfUkVESVJFQ1RfVVJMX1BBUkFNU19CUkVBS19DSEFSQUNURVIsXG4gIHJlZGlyZWN0VXJsOiB3aW5kb3cubG9jYXRpb24uaHJlZlxufTtcbiJdfQ==