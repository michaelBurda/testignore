/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { average } from '../core/stats/average.function';
var WorkQueueStatusTracker = /** @class */ (function () {
    function WorkQueueStatusTracker() {
        this.totalQueueSize = 0;
        this.workers = [];
    }
    Object.defineProperty(WorkQueueStatusTracker.prototype, "workerCount", {
        get: /**
         * @return {?}
         */
        function () {
            return this.workers.length;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(WorkQueueStatusTracker.prototype, "percentComplete", {
        get: /**
         * @return {?}
         */
        function () {
            return this.totalQueueSize >= 0
                ? Math.round(this.totalProcessed / this.totalQueueSize * 100) || 0
                : 0;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(WorkQueueStatusTracker.prototype, "totalComplete", {
        get: /**
         * @return {?}
         */
        function () {
            return this.workers.reduce((/**
             * @param {?} accumulator
             * @param {?} current
             * @return {?}
             */
            function (accumulator, current) { return accumulator + current.totalComplete; }), 0) || 0;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(WorkQueueStatusTracker.prototype, "totalFailed", {
        get: /**
         * @return {?}
         */
        function () {
            return this.workers.reduce((/**
             * @param {?} accumulator
             * @param {?} current
             * @return {?}
             */
            function (accumulator, current) { return accumulator + current.totalFailed; }), 0) || 0;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(WorkQueueStatusTracker.prototype, "totalProcessed", {
        get: /**
         * @return {?}
         */
        function () {
            return this.totalComplete + this.totalFailed;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(WorkQueueStatusTracker.prototype, "isWorking", {
        get: /**
         * @return {?}
         */
        function () {
            return Boolean(this.runningWorkerCount);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(WorkQueueStatusTracker.prototype, "isComplete", {
        get: /**
         * @return {?}
         */
        function () {
            return this.startTime && !this.isWorking;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(WorkQueueStatusTracker.prototype, "isCanceled", {
        get: /**
         * @return {?}
         */
        function () {
            /** @type {?} */
            var canceledWorkersCount = this.workers.filter((/**
             * @param {?} worker
             * @return {?}
             */
            function (worker) { return worker.isCanceled; })).length;
            return Boolean(canceledWorkersCount && canceledWorkersCount === this.workers.length);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(WorkQueueStatusTracker.prototype, "runningWorkerCount", {
        get: /**
         * @return {?}
         */
        function () {
            return this.workers.filter((/**
             * @param {?} worker
             * @return {?}
             */
            function (worker) { return worker.isWorking; })).length;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(WorkQueueStatusTracker.prototype, "startTime", {
        get: /**
         * @return {?}
         */
        function () {
            /** @type {?} */
            var startTimes = this.workers
                .filter((/**
             * @param {?} worker
             * @return {?}
             */
            function (worker) { return worker.startTime; }))
                .map((/**
             * @param {?} worker
             * @return {?}
             */
            function (worker) { return worker.startTime
                ? worker.startTime.getTime()
                : null; }));
            return new Date(Math.min.apply(Math, tslib_1.__spread(startTimes)));
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(WorkQueueStatusTracker.prototype, "endTime", {
        get: /**
         * @return {?}
         */
        function () {
            /** @type {?} */
            var startTimes = this.workers
                .filter((/**
             * @param {?} worker
             * @return {?}
             */
            function (worker) { return worker.startTime; }))
                .map((/**
             * @param {?} worker
             * @return {?}
             */
            function (worker) { return worker.startTime
                ? worker.startTime.getTime()
                : null; }));
            return new Date(Math.max.apply(Math, tslib_1.__spread(startTimes)));
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(WorkQueueStatusTracker.prototype, "remainingQueueSize", {
        get: /**
         * @return {?}
         */
        function () {
            return this.totalQueueSize - this.totalProcessed;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(WorkQueueStatusTracker.prototype, "estimatedSecondsLeft", {
        get: /**
         * @return {?}
         */
        function () {
            /** @type {?} */
            var remainingCount = this.remainingQueueSize;
            return remainingCount
                ? average(this.workers
                    .map((/**
                 * @param {?} worker
                 * @return {?}
                 */
                function (worker) { return worker.calculateRemainingSeconds(remainingCount); })))
                : 0;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(WorkQueueStatusTracker.prototype, "averageRecordsProcessedPerMinute", {
        get: /**
         * @return {?}
         */
        function () {
            return average(this.workers
                .map((/**
             * @param {?} worker
             * @return {?}
             */
            function (worker) { return worker.recordsProcessedPerMinute; })));
        },
        enumerable: true,
        configurable: true
    });
    /**
     * @param {?} totalQueueSize
     * @return {?}
     */
    WorkQueueStatusTracker.prototype.setQueueSize = /**
     * @param {?} totalQueueSize
     * @return {?}
     */
    function (totalQueueSize) {
        this.totalQueueSize = totalQueueSize;
        return this;
    };
    /**
     * @return {?}
     */
    WorkQueueStatusTracker.prototype.complete = /**
     * @return {?}
     */
    function () {
        this.workers.splice(0, this.workers.length);
        this.totalQueueSize = 0;
        return this;
    };
    /**
     * @param {...?} workers
     * @return {?}
     */
    WorkQueueStatusTracker.prototype.addWorker = /**
     * @param {...?} workers
     * @return {?}
     */
    function () {
        var _this = this;
        var workers = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            workers[_i] = arguments[_i];
        }
        workers.forEach((/**
         * @param {?} worker
         * @return {?}
         */
        function (worker) {
            _this.workers.push(worker);
        }));
        return this;
    };
    /**
     * @return {?}
     */
    WorkQueueStatusTracker.prototype.getStatus = /**
     * @return {?}
     */
    function () {
        return {
            isWorking: this.isWorking,
            isCanceled: this.isCanceled,
            isComplete: this.isComplete,
            totalProcessed: this.totalProcessed,
            startTime: this.startTime,
            endTime: this.endTime,
            percentComplete: this.percentComplete,
            totalQueueSize: this.totalQueueSize,
            remainingQueueSize: this.remainingQueueSize,
            totalComplete: this.totalComplete,
            totalFailed: this.totalFailed,
            estimatedSecondsLeft: this.estimatedSecondsLeft,
            workerCount: this.workers.length,
        };
    };
    return WorkQueueStatusTracker;
}());
export { WorkQueueStatusTracker };
if (false) {
    /** @type {?} */
    WorkQueueStatusTracker.prototype.totalQueueSize;
    /**
     * @type {?}
     * @protected
     */
    WorkQueueStatusTracker.prototype.workers;
}
//# sourceMappingURL=data:application/json;base64,