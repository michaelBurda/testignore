/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { Injectable } from '@angular/core';
import { HttpClient } from '@angular/common/http';
import { AppConfig } from './app.config';
import { BaseResourceService } from '../core/resource/base-resource.service';
import { join } from '../core/url/join.function';
import * as i0 from "@angular/core";
import * as i1 from "@angular/common/http";
import * as i2 from "./app.config";
var AppProfileService = /** @class */ (function (_super) {
    tslib_1.__extends(AppProfileService, _super);
    function AppProfileService(http, config) {
        var _this = _super.call(this, http, {
            url: join(config.serviceUrl, config.appProfileEndpoint),
            defaultRouteTokens: {
                appId: config.appId
            }
        }) || this;
        _this.http = http;
        return _this;
    }
    AppProfileService.decorators = [
        { type: Injectable, args: [{
                    providedIn: 'root'
                },] }
    ];
    /** @nocollapse */
    AppProfileService.ctorParameters = function () { return [
        { type: HttpClient },
        { type: AppConfig }
    ]; };
    /** @nocollapse */ AppProfileService.ngInjectableDef = i0.defineInjectable({ factory: function AppProfileService_Factory() { return new AppProfileService(i0.inject(i1.HttpClient), i0.inject(i2.AppConfig)); }, token: AppProfileService, providedIn: "root" });
    return AppProfileService;
}(BaseResourceService));
export { AppProfileService };
if (false) {
    /**
     * @type {?}
     * @protected
     */
    AppProfileService.prototype.http;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXBwLXByb2ZpbGUuc2VydmljZS5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0B0c3Mvc2RrLyIsInNvdXJjZXMiOlsibGliL2FwcC9hcHAtcHJvZmlsZS5zZXJ2aWNlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7O0FBQUEsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUMzQyxPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0sc0JBQXNCLENBQUM7QUFFbEQsT0FBTyxFQUFFLFNBQVMsRUFBRSxNQUFNLGNBQWMsQ0FBQztBQUV6QyxPQUFPLEVBQUUsbUJBQW1CLEVBQUUsTUFBTSx3Q0FBd0MsQ0FBQztBQUM3RSxPQUFPLEVBQUUsSUFBSSxFQUFFLE1BQU0sMkJBQTJCLENBQUM7Ozs7QUFHakQ7SUFHdUMsNkNBQStCO0lBQ3BFLDJCQUFzQixJQUFnQixFQUFFLE1BQWlCO1FBQXpELFlBQ0Usa0JBQU0sSUFBSSxFQUFFO1lBQ1YsR0FBRyxFQUFFLElBQUksQ0FBQyxNQUFNLENBQUMsVUFBVSxFQUFFLE1BQU0sQ0FBQyxrQkFBa0IsQ0FBQztZQUN2RCxrQkFBa0IsRUFBRTtnQkFDbEIsS0FBSyxFQUFFLE1BQU0sQ0FBQyxLQUFLO2FBQ3BCO1NBQ0YsQ0FBQyxTQUNIO1FBUHFCLFVBQUksR0FBSixJQUFJLENBQVk7O0lBT3RDLENBQUM7O2dCQVhGLFVBQVUsU0FBQztvQkFDVixVQUFVLEVBQUUsTUFBTTtpQkFDbkI7Ozs7Z0JBVlEsVUFBVTtnQkFFVixTQUFTOzs7NEJBSGxCO0NBcUJDLEFBWkQsQ0FHdUMsbUJBQW1CLEdBU3pEO1NBVFksaUJBQWlCOzs7Ozs7SUFDaEIsaUNBQTBCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSW5qZWN0YWJsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgSHR0cENsaWVudCB9IGZyb20gJ0Bhbmd1bGFyL2NvbW1vbi9odHRwJztcblxuaW1wb3J0IHsgQXBwQ29uZmlnIH0gZnJvbSAnLi9hcHAuY29uZmlnJztcbmltcG9ydCB7IEFwcFByb2ZpbGUgfSBmcm9tICcuL2FwcC1wcm9maWxlJztcbmltcG9ydCB7IEJhc2VSZXNvdXJjZVNlcnZpY2UgfSBmcm9tICcuLi9jb3JlL3Jlc291cmNlL2Jhc2UtcmVzb3VyY2Uuc2VydmljZSc7XG5pbXBvcnQgeyBqb2luIH0gZnJvbSAnLi4vY29yZS91cmwvam9pbi5mdW5jdGlvbic7XG5cblxuQEluamVjdGFibGUoe1xuICBwcm92aWRlZEluOiAncm9vdCdcbn0pXG5leHBvcnQgY2xhc3MgQXBwUHJvZmlsZVNlcnZpY2UgZXh0ZW5kcyBCYXNlUmVzb3VyY2VTZXJ2aWNlPEFwcFByb2ZpbGU+IHtcbiAgY29uc3RydWN0b3IocHJvdGVjdGVkIGh0dHA6IEh0dHBDbGllbnQsIGNvbmZpZzogQXBwQ29uZmlnKSB7XG4gICAgc3VwZXIoaHR0cCwge1xuICAgICAgdXJsOiBqb2luKGNvbmZpZy5zZXJ2aWNlVXJsLCBjb25maWcuYXBwUHJvZmlsZUVuZHBvaW50KSxcbiAgICAgIGRlZmF1bHRSb3V0ZVRva2Vuczoge1xuICAgICAgICBhcHBJZDogY29uZmlnLmFwcElkXG4gICAgICB9XG4gICAgfSk7XG4gIH1cbn1cblxuIl19