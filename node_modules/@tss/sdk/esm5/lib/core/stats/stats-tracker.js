/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { sum } from './sum.function';
var StatsTracker = /** @class */ (function () {
    function StatsTracker() {
        var progressables = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            progressables[_i] = arguments[_i];
        }
        this.progressables = progressables || [];
    }
    /**
     * @template THIS
     * @this {THIS}
     * @param {?} progressable
     * @return {THIS}
     */
    StatsTracker.prototype.add = /**
     * @template THIS
     * @this {THIS}
     * @param {?} progressable
     * @return {THIS}
     */
    function (progressable) {
        (/** @type {?} */ (this)).progressables.push(progressable);
        return (/** @type {?} */ (this));
    };
    /**
     * @return {?}
     */
    StatsTracker.prototype.getPercentComplete = /**
     * @return {?}
     */
    function () {
        /** @type {?} */
        var totalPercentComplete = sum(this.progressables, (/**
         * @param {?} p
         * @return {?}
         */
        function (p) { return p.percentComplete; }));
        /** @type {?} */
        var overallComplete = totalPercentComplete / this.progressables.length;
        return Math.round(overallComplete);
    };
    return StatsTracker;
}());
export { StatsTracker };
if (false) {
    /** @type {?} */
    StatsTracker.prototype.progressables;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3RhdHMtdHJhY2tlci5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0B0c3Mvc2RrLyIsInNvdXJjZXMiOlsibGliL2NvcmUvc3RhdHMvc3RhdHMtdHJhY2tlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQ0EsT0FBTyxFQUFFLEdBQUcsRUFBRSxNQUFNLGdCQUFnQixDQUFDO0FBR3JDO0lBR0U7UUFBWSx1QkFBZ0M7YUFBaEMsVUFBZ0MsRUFBaEMscUJBQWdDLEVBQWhDLElBQWdDO1lBQWhDLGtDQUFnQzs7UUFDMUMsSUFBSSxDQUFDLGFBQWEsR0FBRyxhQUFhLElBQUksRUFBRSxDQUFDO0lBQzNDLENBQUM7Ozs7Ozs7SUFFRCwwQkFBRzs7Ozs7O0lBQUgsVUFBSSxZQUEwQjtRQUM1QixtQkFBQSxJQUFJLEVBQUEsQ0FBQyxhQUFhLENBQUMsSUFBSSxDQUFDLFlBQVksQ0FBQyxDQUFDO1FBQ3RDLE9BQU8sbUJBQUEsSUFBSSxFQUFBLENBQUM7SUFDZCxDQUFDOzs7O0lBRUQseUNBQWtCOzs7SUFBbEI7O1lBQ1Esb0JBQW9CLEdBQUcsR0FBRyxDQUFDLElBQUksQ0FBQyxhQUFhOzs7O1FBQUUsVUFBQSxDQUFDLElBQUksT0FBQSxDQUFDLENBQUMsZUFBZSxFQUFqQixDQUFpQixFQUFDOztZQUN0RSxlQUFlLEdBQUcsb0JBQW9CLEdBQUcsSUFBSSxDQUFDLGFBQWEsQ0FBQyxNQUFNO1FBRXhFLE9BQU8sSUFBSSxDQUFDLEtBQUssQ0FBQyxlQUFlLENBQUMsQ0FBQztJQUNyQyxDQUFDO0lBQ0gsbUJBQUM7QUFBRCxDQUFDLEFBbEJELElBa0JDOzs7O0lBakJDLHFDQUE4QiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFByb2dyZXNzYWJsZSB9IGZyb20gJy4vcHJvZ3Jlc3NhYmxlJztcbmltcG9ydCB7IHN1bSB9IGZyb20gJy4vc3VtLmZ1bmN0aW9uJztcblxuXG5leHBvcnQgY2xhc3MgU3RhdHNUcmFja2VyIHtcbiAgcHJvZ3Jlc3NhYmxlczogUHJvZ3Jlc3NhYmxlW107XG5cbiAgY29uc3RydWN0b3IoLi4ucHJvZ3Jlc3NhYmxlczogUHJvZ3Jlc3NhYmxlW10pIHtcbiAgICB0aGlzLnByb2dyZXNzYWJsZXMgPSBwcm9ncmVzc2FibGVzIHx8IFtdO1xuICB9XG5cbiAgYWRkKHByb2dyZXNzYWJsZTogUHJvZ3Jlc3NhYmxlKTogdGhpcyB7XG4gICAgdGhpcy5wcm9ncmVzc2FibGVzLnB1c2gocHJvZ3Jlc3NhYmxlKTtcbiAgICByZXR1cm4gdGhpcztcbiAgfVxuXG4gIGdldFBlcmNlbnRDb21wbGV0ZSgpOiBudW1iZXIge1xuICAgIGNvbnN0IHRvdGFsUGVyY2VudENvbXBsZXRlID0gc3VtKHRoaXMucHJvZ3Jlc3NhYmxlcywgcCA9PiBwLnBlcmNlbnRDb21wbGV0ZSk7XG4gICAgY29uc3Qgb3ZlcmFsbENvbXBsZXRlID0gdG90YWxQZXJjZW50Q29tcGxldGUgLyB0aGlzLnByb2dyZXNzYWJsZXMubGVuZ3RoO1xuXG4gICAgcmV0dXJuIE1hdGgucm91bmQob3ZlcmFsbENvbXBsZXRlKTtcbiAgfVxufVxuIl19