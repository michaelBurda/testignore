/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { isObject } from '../type-check/is-object.function';
import { isFunction } from '../type-check/is-function.function';
/**
 * Deep merge two objects.
 * @param {?} target
 * @param {?} source
 * @param {?=} options
 * @return {?}
 */
export function mergeDeep(target, source, options) {
    if (options === void 0) { options = {}; }
    if (isObject(target) && isObject(source)) {
        Object.keys(source).forEach((/**
         * @param {?} key
         * @return {?}
         */
        function (key) {
            var _a;
            /** @type {?} */
            var value = source[key];
            if (isObject(value)) {
                if (!target[key]) {
                    target[key] = {};
                }
                mergeDeep(target[key], value, options);
            }
            else {
                /** @type {?} */
                var doCopy = true;
                if (options.ignoreArrays && Array.isArray(value)
                    || isFunction(value) && !options.copyFunctions) {
                    doCopy = false;
                }
                if (doCopy) {
                    Object.assign(target, (_a = {}, _a[key] = value, _a));
                }
            }
        }));
    }
    return target;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWVyZ2UtZGVlcC5mdW5jdGlvbi5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0B0c3Mvc2RrLyIsInNvdXJjZXMiOlsibGliL2NvcmUvbWVyZ2UvbWVyZ2UtZGVlcC5mdW5jdGlvbi50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFFLFFBQVEsRUFBRSxNQUFNLGtDQUFrQyxDQUFDO0FBQzVELE9BQU8sRUFBRSxVQUFVLEVBQUUsTUFBTSxvQ0FBb0MsQ0FBQzs7Ozs7Ozs7QUFNaEUsTUFBTSxVQUFVLFNBQVMsQ0FBQyxNQUFXLEVBQUUsTUFBVyxFQUFFLE9BQWlFO0lBQWpFLHdCQUFBLEVBQUEsWUFBaUU7SUFDbkgsSUFBSSxRQUFRLENBQUMsTUFBTSxDQUFDLElBQUksUUFBUSxDQUFDLE1BQU0sQ0FBQyxFQUFFO1FBQ3hDLE1BQU0sQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUMsT0FBTzs7OztRQUFDLFVBQUEsR0FBRzs7O2dCQUN2QixLQUFLLEdBQUcsTUFBTSxDQUFDLEdBQUcsQ0FBQztZQUN6QixJQUFJLFFBQVEsQ0FBQyxLQUFLLENBQUMsRUFBRTtnQkFDbkIsSUFBSSxDQUFDLE1BQU0sQ0FBQyxHQUFHLENBQUMsRUFBRTtvQkFDaEIsTUFBTSxDQUFDLEdBQUcsQ0FBQyxHQUFHLEVBQUUsQ0FBQztpQkFDbEI7Z0JBRUQsU0FBUyxDQUFDLE1BQU0sQ0FBQyxHQUFHLENBQUMsRUFBRSxLQUFLLEVBQUUsT0FBTyxDQUFDLENBQUM7YUFDeEM7aUJBQU07O29CQUNELE1BQU0sR0FBRyxJQUFJO2dCQUVqQixJQUFJLE9BQU8sQ0FBQyxZQUFZLElBQUksS0FBSyxDQUFDLE9BQU8sQ0FBQyxLQUFLLENBQUM7dUJBQzNDLFVBQVUsQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxhQUFhLEVBQUU7b0JBQ2hELE1BQU0sR0FBRyxLQUFLLENBQUM7aUJBQ2hCO2dCQUVELElBQUksTUFBTSxFQUFFO29CQUNWLE1BQU0sQ0FBQyxNQUFNLENBQUMsTUFBTSxZQUFJLEdBQUMsR0FBRyxJQUFHLEtBQUssTUFBRyxDQUFDO2lCQUN6QzthQUNGO1FBQ0gsQ0FBQyxFQUFDLENBQUM7S0FDSjtJQUVELE9BQU8sTUFBTSxDQUFDO0FBQ2hCLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBpc09iamVjdCB9IGZyb20gJy4uL3R5cGUtY2hlY2svaXMtb2JqZWN0LmZ1bmN0aW9uJztcbmltcG9ydCB7IGlzRnVuY3Rpb24gfSBmcm9tICcuLi90eXBlLWNoZWNrL2lzLWZ1bmN0aW9uLmZ1bmN0aW9uJztcblxuXG4vKipcbiAqIERlZXAgbWVyZ2UgdHdvIG9iamVjdHMuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBtZXJnZURlZXAodGFyZ2V0OiBhbnksIHNvdXJjZTogYW55LCBvcHRpb25zOiB7IGlnbm9yZUFycmF5cz86IGJvb2xlYW4sIGNvcHlGdW5jdGlvbnM/OiBib29sZWFuIH0gPSB7fSk6IGFueSB7XG4gIGlmIChpc09iamVjdCh0YXJnZXQpICYmIGlzT2JqZWN0KHNvdXJjZSkpIHtcbiAgICBPYmplY3Qua2V5cyhzb3VyY2UpLmZvckVhY2goa2V5ID0+IHtcbiAgICAgIGNvbnN0IHZhbHVlID0gc291cmNlW2tleV07XG4gICAgICBpZiAoaXNPYmplY3QodmFsdWUpKSB7XG4gICAgICAgIGlmICghdGFyZ2V0W2tleV0pIHtcbiAgICAgICAgICB0YXJnZXRba2V5XSA9IHt9O1xuICAgICAgICB9XG5cbiAgICAgICAgbWVyZ2VEZWVwKHRhcmdldFtrZXldLCB2YWx1ZSwgb3B0aW9ucyk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBsZXQgZG9Db3B5ID0gdHJ1ZTtcblxuICAgICAgICBpZiAob3B0aW9ucy5pZ25vcmVBcnJheXMgJiYgQXJyYXkuaXNBcnJheSh2YWx1ZSlcbiAgICAgICAgICB8fCBpc0Z1bmN0aW9uKHZhbHVlKSAmJiAhb3B0aW9ucy5jb3B5RnVuY3Rpb25zKSB7XG4gICAgICAgICAgZG9Db3B5ID0gZmFsc2U7XG4gICAgICAgIH1cblxuICAgICAgICBpZiAoZG9Db3B5KSB7XG4gICAgICAgICAgT2JqZWN0LmFzc2lnbih0YXJnZXQsIHsgW2tleV06IHZhbHVlIH0pO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfSk7XG4gIH1cblxuICByZXR1cm4gdGFyZ2V0O1xufVxuIl19