/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
// Angular.
import { Injectable } from '@angular/core';
import { getByteSize } from './get-byte-size.function';
import { formatByteSize } from './format-byte-size.function';
import * as i0 from "@angular/core";
/**
 * @abstract
 */
var BaseStorage = /** @class */ (function () {
    function BaseStorage() {
        this.keyPrefix = '';
        this.keySuffix = '';
    }
    /**
     * @param {?} key
     * @return {?}
     */
    BaseStorage.prototype.has = /**
     * @param {?} key
     * @return {?}
     */
    function (key) {
        return Boolean(this.get(key));
    };
    /**
     * Returns the number of bytes for this storage key.
     */
    /**
     * Returns the number of bytes for this storage key.
     * @param {?} key
     * @return {?}
     */
    BaseStorage.prototype.size = /**
     * Returns the number of bytes for this storage key.
     * @param {?} key
     * @return {?}
     */
    function (key) {
        /** @type {?} */
        var value = this.get(key);
        return getByteSize(value) + getByteSize(key);
    };
    /**
     * @param {?} key
     * @return {?}
     */
    BaseStorage.prototype.sizeFormatted = /**
     * @param {?} key
     * @return {?}
     */
    function (key) {
        return formatByteSize(this.size(key));
    };
    /**
     * @param {?} key
     * @return {?}
     */
    BaseStorage.prototype.getObject = /**
     * @param {?} key
     * @return {?}
     */
    function (key) {
        /** @type {?} */
        var value = this.get(key);
        return value ? JSON.parse(value) : null;
    };
    /**
     * @param {?} key
     * @param {?} value
     * @return {?}
     */
    BaseStorage.prototype.setObject = /**
     * @param {?} key
     * @param {?} value
     * @return {?}
     */
    function (key, value) {
        this.set(key, JSON.stringify(value));
    };
    /**
     * @protected
     * @param {?} key
     * @return {?}
     */
    BaseStorage.prototype.formatKey = /**
     * @protected
     * @param {?} key
     * @return {?}
     */
    function (key) {
        return "" + this.keyPrefix + key + this.keySuffix;
    };
    BaseStorage.decorators = [
        { type: Injectable, args: [{
                    providedIn: 'root'
                },] }
    ];
    /** @nocollapse */ BaseStorage.ngInjectableDef = i0.defineInjectable({ factory: function BaseStorage_Factory() { return new BaseStorage(); }, token: BaseStorage, providedIn: "root" });
    return BaseStorage;
}());
export { BaseStorage };
if (false) {
    /**
     * @type {?}
     * @protected
     */
    BaseStorage.prototype.keyPrefix;
    /**
     * @type {?}
     * @protected
     */
    BaseStorage.prototype.keySuffix;
    /** @type {?} */
    BaseStorage.prototype.length;
    /**
     * @abstract
     * @param {?} key
     * @return {?}
     */
    BaseStorage.prototype.get = function (key) { };
    /**
     * @abstract
     * @param {?} key
     * @param {?} value
     * @return {?}
     */
    BaseStorage.prototype.set = function (key, value) { };
    /**
     * @abstract
     * @param {?} key
     * @return {?}
     */
    BaseStorage.prototype.remove = function (key) { };
    /**
     * @abstract
     * @return {?}
     */
    BaseStorage.prototype.clear = function () { };
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYmFzZS1zdG9yYWdlLnNlcnZpY2UuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AdHNzL3Nkay8iLCJzb3VyY2VzIjpbImxpYi9jb3JlL3N0b3JhZ2UvYmFzZS1zdG9yYWdlLnNlcnZpY2UudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFDQSxPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQzNDLE9BQU8sRUFBRSxXQUFXLEVBQUUsTUFBTSwwQkFBMEIsQ0FBQztBQUN2RCxPQUFPLEVBQUUsY0FBYyxFQUFFLE1BQU0sNkJBQTZCLENBQUM7Ozs7O0FBRzdEO0lBQUE7UUFJWSxjQUFTLEdBQUcsRUFBRSxDQUFDO1FBQ2YsY0FBUyxHQUFHLEVBQUUsQ0FBQztLQW9DMUI7Ozs7O0lBNUJDLHlCQUFHOzs7O0lBQUgsVUFBSSxHQUFXO1FBQ2IsT0FBTyxPQUFPLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDO0lBQ2hDLENBQUM7SUFFRDs7T0FFRzs7Ozs7O0lBQ0gsMEJBQUk7Ozs7O0lBQUosVUFBSyxHQUFXOztZQUNSLEtBQUssR0FBRyxJQUFJLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQztRQUMzQixPQUFPLFdBQVcsQ0FBQyxLQUFLLENBQUMsR0FBRyxXQUFXLENBQUMsR0FBRyxDQUFDLENBQUM7SUFDL0MsQ0FBQzs7Ozs7SUFFRCxtQ0FBYTs7OztJQUFiLFVBQWMsR0FBVztRQUN2QixPQUFPLGNBQWMsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUM7SUFDeEMsQ0FBQzs7Ozs7SUFFRCwrQkFBUzs7OztJQUFULFVBQVUsR0FBVzs7WUFDYixLQUFLLEdBQUcsSUFBSSxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUM7UUFDM0IsT0FBTyxLQUFLLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQztJQUMxQyxDQUFDOzs7Ozs7SUFFRCwrQkFBUzs7Ozs7SUFBVCxVQUFVLEdBQVcsRUFBRSxLQUFVO1FBQy9CLElBQUksQ0FBQyxHQUFHLENBQUMsR0FBRyxFQUFFLElBQUksQ0FBQyxTQUFTLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQztJQUN2QyxDQUFDOzs7Ozs7SUFFUywrQkFBUzs7Ozs7SUFBbkIsVUFBb0IsR0FBVztRQUM3QixPQUFPLEtBQUcsSUFBSSxDQUFDLFNBQVMsR0FBRyxHQUFHLEdBQUcsSUFBSSxDQUFDLFNBQVcsQ0FBQztJQUNwRCxDQUFDOztnQkF4Q0YsVUFBVSxTQUFDO29CQUNWLFVBQVUsRUFBRSxNQUFNO2lCQUNuQjs7O3NCQVJEO0NBK0NDLEFBekNELElBeUNDO1NBdENxQixXQUFXOzs7Ozs7SUFDL0IsZ0NBQXlCOzs7OztJQUN6QixnQ0FBeUI7O0lBRXpCLDZCQUF3Qjs7Ozs7O0lBQ3hCLCtDQUFrQzs7Ozs7OztJQUNsQyxzREFBK0M7Ozs7OztJQUMvQyxrREFBbUM7Ozs7O0lBQ25DLDhDQUF1QiIsInNvdXJjZXNDb250ZW50IjpbIi8vIEFuZ3VsYXIuXG5pbXBvcnQgeyBJbmplY3RhYmxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBnZXRCeXRlU2l6ZSB9IGZyb20gJy4vZ2V0LWJ5dGUtc2l6ZS5mdW5jdGlvbic7XG5pbXBvcnQgeyBmb3JtYXRCeXRlU2l6ZSB9IGZyb20gJy4vZm9ybWF0LWJ5dGUtc2l6ZS5mdW5jdGlvbic7XG5cblxuQEluamVjdGFibGUoe1xuICBwcm92aWRlZEluOiAncm9vdCdcbn0pXG5leHBvcnQgYWJzdHJhY3QgY2xhc3MgQmFzZVN0b3JhZ2Uge1xuICBwcm90ZWN0ZWQga2V5UHJlZml4ID0gJyc7XG4gIHByb3RlY3RlZCBrZXlTdWZmaXggPSAnJztcblxuICBhYnN0cmFjdCBsZW5ndGg6IG51bWJlcjtcbiAgYWJzdHJhY3QgZ2V0KGtleTogc3RyaW5nKTogc3RyaW5nO1xuICBhYnN0cmFjdCBzZXQoa2V5OiBzdHJpbmcsIHZhbHVlOiBzdHJpbmcpOiB2b2lkO1xuICBhYnN0cmFjdCByZW1vdmUoa2V5OiBzdHJpbmcpOiB2b2lkO1xuICBhYnN0cmFjdCBjbGVhcigpOiB2b2lkO1xuXG4gIGhhcyhrZXk6IHN0cmluZyk6IGJvb2xlYW4ge1xuICAgIHJldHVybiBCb29sZWFuKHRoaXMuZ2V0KGtleSkpO1xuICB9XG5cbiAgLyoqXG4gICAqIFJldHVybnMgdGhlIG51bWJlciBvZiBieXRlcyBmb3IgdGhpcyBzdG9yYWdlIGtleS5cbiAgICovXG4gIHNpemUoa2V5OiBzdHJpbmcpOiBudW1iZXIge1xuICAgIGNvbnN0IHZhbHVlID0gdGhpcy5nZXQoa2V5KTtcbiAgICByZXR1cm4gZ2V0Qnl0ZVNpemUodmFsdWUpICsgZ2V0Qnl0ZVNpemUoa2V5KTtcbiAgfVxuXG4gIHNpemVGb3JtYXR0ZWQoa2V5OiBzdHJpbmcpOiBzdHJpbmcge1xuICAgIHJldHVybiBmb3JtYXRCeXRlU2l6ZSh0aGlzLnNpemUoa2V5KSk7XG4gIH1cblxuICBnZXRPYmplY3Qoa2V5OiBzdHJpbmcpOiBhbnkge1xuICAgIGNvbnN0IHZhbHVlID0gdGhpcy5nZXQoa2V5KTtcbiAgICByZXR1cm4gdmFsdWUgPyBKU09OLnBhcnNlKHZhbHVlKSA6IG51bGw7XG4gIH1cblxuICBzZXRPYmplY3Qoa2V5OiBzdHJpbmcsIHZhbHVlOiBhbnkpOiB2b2lkIHtcbiAgICB0aGlzLnNldChrZXksIEpTT04uc3RyaW5naWZ5KHZhbHVlKSk7XG4gIH1cblxuICBwcm90ZWN0ZWQgZm9ybWF0S2V5KGtleTogc3RyaW5nKTogc3RyaW5nIHtcbiAgICByZXR1cm4gYCR7dGhpcy5rZXlQcmVmaXh9JHtrZXl9JHt0aGlzLmtleVN1ZmZpeH1gO1xuICB9XG59XG4iXX0=