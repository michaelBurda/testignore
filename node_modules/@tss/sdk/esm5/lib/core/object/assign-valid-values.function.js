/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { isValue } from '../type-check/is-value.function';
/**
 * Assigns values from one object to another, but only for values that are valid (not null, undefined, or empty string).
 * Restriction properties can be passed in to specificy explicitly which properties to assign (if valid).
 * @template T
 * @param {?} targetItem
 * @param {?} sourceItem
 * @param {...?} restrictionProperties
 * @return {?}
 */
export function assignValidValues(targetItem, sourceItem) {
    var restrictionProperties = [];
    for (var _i = 2; _i < arguments.length; _i++) {
        restrictionProperties[_i - 2] = arguments[_i];
    }
    if (restrictionProperties.length === 0) {
        restrictionProperties = Object.keys(sourceItem);
    }
    restrictionProperties
        .filter((/**
     * @param {?} property
     * @return {?}
     */
    function (property) { return isValue(sourceItem[property]); }))
        .forEach((/**
     * @param {?} property
     * @return {?}
     */
    function (property) { return targetItem[property] = sourceItem[property]; }));
    return targetItem;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXNzaWduLXZhbGlkLXZhbHVlcy5mdW5jdGlvbi5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0B0c3Mvc2RrLyIsInNvdXJjZXMiOlsibGliL2NvcmUvb2JqZWN0L2Fzc2lnbi12YWxpZC12YWx1ZXMuZnVuY3Rpb24udHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBRSxPQUFPLEVBQUUsTUFBTSxpQ0FBaUMsQ0FBQzs7Ozs7Ozs7OztBQU8xRCxNQUFNLFVBQVUsaUJBQWlCLENBQUksVUFBYSxFQUFFLFVBQWU7SUFBRSwrQkFBa0M7U0FBbEMsVUFBa0MsRUFBbEMscUJBQWtDLEVBQWxDLElBQWtDO1FBQWxDLDhDQUFrQzs7SUFDckcsSUFBSSxxQkFBcUIsQ0FBQyxNQUFNLEtBQUssQ0FBQyxFQUFFO1FBQ3RDLHFCQUFxQixHQUFHLE1BQU0sQ0FBQyxJQUFJLENBQUMsVUFBVSxDQUFDLENBQUM7S0FDakQ7SUFFRCxxQkFBcUI7U0FDbEIsTUFBTTs7OztJQUFDLFVBQUEsUUFBUSxJQUFJLE9BQUEsT0FBTyxDQUFDLFVBQVUsQ0FBQyxRQUFRLENBQUMsQ0FBQyxFQUE3QixDQUE2QixFQUFDO1NBQ2pELE9BQU87Ozs7SUFBQyxVQUFBLFFBQVEsSUFBSSxPQUFBLFVBQVUsQ0FBQyxRQUFRLENBQUMsR0FBRyxVQUFVLENBQUMsUUFBUSxDQUFDLEVBQTNDLENBQTJDLEVBQUMsQ0FBQztJQUVwRSxPQUFPLFVBQVUsQ0FBQztBQUNwQixDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgaXNWYWx1ZSB9IGZyb20gJy4uL3R5cGUtY2hlY2svaXMtdmFsdWUuZnVuY3Rpb24nO1xuXG5cbi8qKlxuICogQXNzaWducyB2YWx1ZXMgZnJvbSBvbmUgb2JqZWN0IHRvIGFub3RoZXIsIGJ1dCBvbmx5IGZvciB2YWx1ZXMgdGhhdCBhcmUgdmFsaWQgKG5vdCBudWxsLCB1bmRlZmluZWQsIG9yIGVtcHR5IHN0cmluZykuXG4gKiBSZXN0cmljdGlvbiBwcm9wZXJ0aWVzIGNhbiBiZSBwYXNzZWQgaW4gdG8gc3BlY2lmaWN5IGV4cGxpY2l0bHkgd2hpY2ggcHJvcGVydGllcyB0byBhc3NpZ24gKGlmIHZhbGlkKS5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGFzc2lnblZhbGlkVmFsdWVzPFQ+KHRhcmdldEl0ZW06IFQsIHNvdXJjZUl0ZW06IGFueSwgLi4ucmVzdHJpY3Rpb25Qcm9wZXJ0aWVzOiBzdHJpbmdbXSk6IFQge1xuICBpZiAocmVzdHJpY3Rpb25Qcm9wZXJ0aWVzLmxlbmd0aCA9PT0gMCkge1xuICAgIHJlc3RyaWN0aW9uUHJvcGVydGllcyA9IE9iamVjdC5rZXlzKHNvdXJjZUl0ZW0pO1xuICB9XG5cbiAgcmVzdHJpY3Rpb25Qcm9wZXJ0aWVzXG4gICAgLmZpbHRlcihwcm9wZXJ0eSA9PiBpc1ZhbHVlKHNvdXJjZUl0ZW1bcHJvcGVydHldKSlcbiAgICAuZm9yRWFjaChwcm9wZXJ0eSA9PiB0YXJnZXRJdGVtW3Byb3BlcnR5XSA9IHNvdXJjZUl0ZW1bcHJvcGVydHldKTtcblxuICByZXR1cm4gdGFyZ2V0SXRlbTtcbn1cbiJdfQ==