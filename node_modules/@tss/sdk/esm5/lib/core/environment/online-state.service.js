/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
// Angular.
import { Injectable } from '@angular/core';
// 3rd party.
import { Subject } from 'rxjs';
import * as i0 from "@angular/core";
var OnlineOfflineService = /** @class */ (function () {
    function OnlineOfflineService() {
        var _this = this;
        this.internalConnectionChanged = new Subject();
        this.connectionChanged = this.internalConnectionChanged.asObservable();
        window.addEventListener('online', (/**
         * @return {?}
         */
        function () { return _this.updateOnlineStatus(); }));
        window.addEventListener('offline', (/**
         * @return {?}
         */
        function () { return _this.updateOnlineStatus(); }));
    }
    Object.defineProperty(OnlineOfflineService.prototype, "isOnline", {
        get: /**
         * @return {?}
         */
        function () {
            return !!window.navigator.onLine;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * @private
     * @return {?}
     */
    OnlineOfflineService.prototype.updateOnlineStatus = /**
     * @private
     * @return {?}
     */
    function () {
        this.internalConnectionChanged.next(window.navigator.onLine);
    };
    OnlineOfflineService.decorators = [
        { type: Injectable, args: [{ providedIn: 'root' },] }
    ];
    /** @nocollapse */
    OnlineOfflineService.ctorParameters = function () { return []; };
    /** @nocollapse */ OnlineOfflineService.ngInjectableDef = i0.defineInjectable({ factory: function OnlineOfflineService_Factory() { return new OnlineOfflineService(); }, token: OnlineOfflineService, providedIn: "root" });
    return OnlineOfflineService;
}());
export { OnlineOfflineService };
if (false) {
    /** @type {?} */
    OnlineOfflineService.prototype.connectionChanged;
    /**
     * @type {?}
     * @private
     */
    OnlineOfflineService.prototype.internalConnectionChanged;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoib25saW5lLXN0YXRlLnNlcnZpY2UuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AdHNzL3Nkay8iLCJzb3VyY2VzIjpbImxpYi9jb3JlL2Vudmlyb25tZW50L29ubGluZS1zdGF0ZS5zZXJ2aWNlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7O0FBQ0EsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLGVBQWUsQ0FBQzs7QUFHM0MsT0FBTyxFQUFFLE9BQU8sRUFBYyxNQUFNLE1BQU0sQ0FBQzs7QUFLM0M7SUFTRTtRQUFBLGlCQU1DO1FBTEMsSUFBSSxDQUFDLHlCQUF5QixHQUFHLElBQUksT0FBTyxFQUFXLENBQUM7UUFDeEQsSUFBSSxDQUFDLGlCQUFpQixHQUFHLElBQUksQ0FBQyx5QkFBeUIsQ0FBQyxZQUFZLEVBQUUsQ0FBQztRQUV2RSxNQUFNLENBQUMsZ0JBQWdCLENBQUMsUUFBUTs7O1FBQUUsY0FBTSxPQUFBLEtBQUksQ0FBQyxrQkFBa0IsRUFBRSxFQUF6QixDQUF5QixFQUFDLENBQUM7UUFDbkUsTUFBTSxDQUFDLGdCQUFnQixDQUFDLFNBQVM7OztRQUFFLGNBQU0sT0FBQSxLQUFJLENBQUMsa0JBQWtCLEVBQUUsRUFBekIsQ0FBeUIsRUFBQyxDQUFDO0lBQ3RFLENBQUM7SUFWRCxzQkFBSSwwQ0FBUTs7OztRQUFaO1lBQ0UsT0FBTyxDQUFDLENBQUMsTUFBTSxDQUFDLFNBQVMsQ0FBQyxNQUFNLENBQUM7UUFDbkMsQ0FBQzs7O09BQUE7Ozs7O0lBVU8saURBQWtCOzs7O0lBQTFCO1FBQ0UsSUFBSSxDQUFDLHlCQUF5QixDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsU0FBUyxDQUFDLE1BQU0sQ0FBQyxDQUFDO0lBQy9ELENBQUM7O2dCQW5CRixVQUFVLFNBQUMsRUFBRSxVQUFVLEVBQUUsTUFBTSxFQUFFOzs7OzsrQkFUbEM7Q0E2QkMsQUFwQkQsSUFvQkM7U0FuQlksb0JBQW9COzs7SUFDL0IsaURBQWdEOzs7OztJQUNoRCx5REFBNkQiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBBbmd1bGFyLlxuaW1wb3J0IHsgSW5qZWN0YWJsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuXG4vLyAzcmQgcGFydHkuXG5pbXBvcnQgeyBTdWJqZWN0LCBPYnNlcnZhYmxlIH0gZnJvbSAncnhqcyc7XG5cblxuZGVjbGFyZSBjb25zdCB3aW5kb3c6IGFueTtcblxuQEluamVjdGFibGUoeyBwcm92aWRlZEluOiAncm9vdCcgfSlcbmV4cG9ydCBjbGFzcyBPbmxpbmVPZmZsaW5lU2VydmljZSB7XG4gIHJlYWRvbmx5IGNvbm5lY3Rpb25DaGFuZ2VkOiBPYnNlcnZhYmxlPGJvb2xlYW4+O1xuICBwcml2YXRlIHJlYWRvbmx5IGludGVybmFsQ29ubmVjdGlvbkNoYW5nZWQ6IFN1YmplY3Q8Ym9vbGVhbj47XG5cbiAgZ2V0IGlzT25saW5lKCkge1xuICAgIHJldHVybiAhIXdpbmRvdy5uYXZpZ2F0b3Iub25MaW5lO1xuICB9XG5cbiAgY29uc3RydWN0b3IoKSB7XG4gICAgdGhpcy5pbnRlcm5hbENvbm5lY3Rpb25DaGFuZ2VkID0gbmV3IFN1YmplY3Q8Ym9vbGVhbj4oKTtcbiAgICB0aGlzLmNvbm5lY3Rpb25DaGFuZ2VkID0gdGhpcy5pbnRlcm5hbENvbm5lY3Rpb25DaGFuZ2VkLmFzT2JzZXJ2YWJsZSgpO1xuXG4gICAgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoJ29ubGluZScsICgpID0+IHRoaXMudXBkYXRlT25saW5lU3RhdHVzKCkpO1xuICAgIHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKCdvZmZsaW5lJywgKCkgPT4gdGhpcy51cGRhdGVPbmxpbmVTdGF0dXMoKSk7XG4gIH1cblxuICBwcml2YXRlIHVwZGF0ZU9ubGluZVN0YXR1cygpIHtcbiAgICB0aGlzLmludGVybmFsQ29ubmVjdGlvbkNoYW5nZWQubmV4dCh3aW5kb3cubmF2aWdhdG9yLm9uTGluZSk7XG4gIH1cbn1cbiJdfQ==