/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { uuid } from './uuid.function';
import { INVALID_GUID_ERROR_MSG } from './guid.constants';
/**
 * Represents a Global Unique Identifier (GUID). GUID creation ported from:
 * https://stackoverflow.com/questions/105034/create-guid-uuid-in-javascript
 */
var Guid = /** @class */ (function () {
    function Guid(value) {
        this.value = value || Guid.empty;
        if (!Guid.isValid(value)) {
            throw new Error(INVALID_GUID_ERROR_MSG);
        }
    }
    Object.defineProperty(Guid.prototype, "isEmpty", {
        get: /**
         * @return {?}
         */
        function () {
            return this.value === Guid.empty;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * @return {?}
     */
    Guid.newGuid = /**
     * @return {?}
     */
    function () {
        return new Guid(uuid());
    };
    /**
     * @param {?} str
     * @return {?}
     */
    Guid.isValid = /**
     * @param {?} str
     * @return {?}
     */
    function (str) {
        /** @type {?} */
        var validRegex = /^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$/i;
        return validRegex.test(str);
    };
    /**
     * @param {?} guid
     * @return {?}
     */
    Guid.prototype.equals = /**
     * @param {?} guid
     * @return {?}
     */
    function (guid) {
        return guid.toString() === this.toString();
    };
    /**
     * @return {?}
     */
    Guid.prototype.toString = /**
     * @return {?}
     */
    function () {
        return this.value;
    };
    /**
     * @return {?}
     */
    Guid.prototype.toJSON = /**
     * @return {?}
     */
    function () {
        return this.value;
    };
    Guid.empty = '00000000-0000-0000-0000-000000000000';
    return Guid;
}());
export { Guid };
if (false) {
    /** @type {?} */
    Guid.empty;
    /** @type {?} */
    Guid.prototype.value;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ3VpZC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0B0c3Mvc2RrLyIsInNvdXJjZXMiOlsibGliL2NvcmUvdXVpZC9ndWlkLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFBQSxPQUFPLEVBQUUsSUFBSSxFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFDdkMsT0FBTyxFQUFFLHNCQUFzQixFQUFFLE1BQU0sa0JBQWtCLENBQUM7Ozs7O0FBTzFEO0lBa0JFLGNBQVksS0FBYztRQUN4QixJQUFJLENBQUMsS0FBSyxHQUFHLEtBQUssSUFBSSxJQUFJLENBQUMsS0FBSyxDQUFDO1FBRWpDLElBQUksQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLEtBQUssQ0FBQyxFQUFFO1lBQ3hCLE1BQU0sSUFBSSxLQUFLLENBQUMsc0JBQXNCLENBQUMsQ0FBQztTQUN6QztJQUNILENBQUM7SUFuQkQsc0JBQUkseUJBQU87Ozs7UUFBWDtZQUNFLE9BQU8sSUFBSSxDQUFDLEtBQUssS0FBSyxJQUFJLENBQUMsS0FBSyxDQUFDO1FBQ25DLENBQUM7OztPQUFBOzs7O0lBRWEsWUFBTzs7O0lBQXJCO1FBQ0UsT0FBTyxJQUFJLElBQUksQ0FBQyxJQUFJLEVBQUUsQ0FBQyxDQUFDO0lBQzFCLENBQUM7Ozs7O0lBRWEsWUFBTzs7OztJQUFyQixVQUFzQixHQUFXOztZQUN6QixVQUFVLEdBQUcsNEVBQTRFO1FBQy9GLE9BQU8sVUFBVSxDQUFDLElBQUksQ0FBQyxHQUFHLENBQUMsQ0FBQztJQUM5QixDQUFDOzs7OztJQVVELHFCQUFNOzs7O0lBQU4sVUFBTyxJQUFVO1FBQ2YsT0FBTyxJQUFJLENBQUMsUUFBUSxFQUFFLEtBQUssSUFBSSxDQUFDLFFBQVEsRUFBRSxDQUFDO0lBQzdDLENBQUM7Ozs7SUFFRCx1QkFBUTs7O0lBQVI7UUFDRSxPQUFPLElBQUksQ0FBQyxLQUFLLENBQUM7SUFDcEIsQ0FBQzs7OztJQUVELHFCQUFNOzs7SUFBTjtRQUNFLE9BQU8sSUFBSSxDQUFDLEtBQUssQ0FBQztJQUNwQixDQUFDO0lBbkNzQixVQUFLLEdBQUcsc0NBQXNDLENBQUM7SUFvQ3hFLFdBQUM7Q0FBQSxBQXJDRCxJQXFDQztTQXJDWSxJQUFJOzs7SUFDZixXQUFzRTs7SUFFdEUscUJBQXVCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgdXVpZCB9IGZyb20gJy4vdXVpZC5mdW5jdGlvbic7XG5pbXBvcnQgeyBJTlZBTElEX0dVSURfRVJST1JfTVNHIH0gZnJvbSAnLi9ndWlkLmNvbnN0YW50cyc7XG5cblxuLyoqXG4gKiBSZXByZXNlbnRzIGEgR2xvYmFsIFVuaXF1ZSBJZGVudGlmaWVyIChHVUlEKS4gR1VJRCBjcmVhdGlvbiBwb3J0ZWQgZnJvbTpcbiAqIGh0dHBzOi8vc3RhY2tvdmVyZmxvdy5jb20vcXVlc3Rpb25zLzEwNTAzNC9jcmVhdGUtZ3VpZC11dWlkLWluLWphdmFzY3JpcHRcbiAqL1xuZXhwb3J0IGNsYXNzIEd1aWQge1xuICBwdWJsaWMgc3RhdGljIHJlYWRvbmx5IGVtcHR5ID0gJzAwMDAwMDAwLTAwMDAtMDAwMC0wMDAwLTAwMDAwMDAwMDAwMCc7XG5cbiAgcmVhZG9ubHkgdmFsdWU6IHN0cmluZztcblxuICBnZXQgaXNFbXB0eSgpOiBib29sZWFuIHtcbiAgICByZXR1cm4gdGhpcy52YWx1ZSA9PT0gR3VpZC5lbXB0eTtcbiAgfVxuXG4gIHB1YmxpYyBzdGF0aWMgbmV3R3VpZCgpOiBHdWlkIHtcbiAgICByZXR1cm4gbmV3IEd1aWQodXVpZCgpKTtcbiAgfVxuXG4gIHB1YmxpYyBzdGF0aWMgaXNWYWxpZChzdHI6IHN0cmluZyk6IGJvb2xlYW4ge1xuICAgIGNvbnN0IHZhbGlkUmVnZXggPSAvXlswLTlhLWZdezh9LVswLTlhLWZdezR9LVsxLTVdWzAtOWEtZl17M30tWzg5YWJdWzAtOWEtZl17M30tWzAtOWEtZl17MTJ9JC9pO1xuICAgIHJldHVybiB2YWxpZFJlZ2V4LnRlc3Qoc3RyKTtcbiAgfVxuXG4gIGNvbnN0cnVjdG9yKHZhbHVlPzogc3RyaW5nKSB7XG4gICAgdGhpcy52YWx1ZSA9IHZhbHVlIHx8IEd1aWQuZW1wdHk7XG5cbiAgICBpZiAoIUd1aWQuaXNWYWxpZCh2YWx1ZSkpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcihJTlZBTElEX0dVSURfRVJST1JfTVNHKTtcbiAgICB9XG4gIH1cblxuICBlcXVhbHMoZ3VpZDogR3VpZCk6IGJvb2xlYW4ge1xuICAgIHJldHVybiBndWlkLnRvU3RyaW5nKCkgPT09IHRoaXMudG9TdHJpbmcoKTtcbiAgfVxuXG4gIHRvU3RyaW5nKCk6IHN0cmluZyB7XG4gICAgcmV0dXJuIHRoaXMudmFsdWU7XG4gIH1cblxuICB0b0pTT04oKTogc3RyaW5nIHtcbiAgICByZXR1cm4gdGhpcy52YWx1ZTtcbiAgfVxufVxuIl19