/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { tap, publishReplay } from 'rxjs/operators';
import { BaseNotificationTracker } from './base-notification-tracker';
/**
 * @template T
 */
var /**
 * @template T
 */
NotificationSubscriptionTracker = /** @class */ (function (_super) {
    tslib_1.__extends(NotificationSubscriptionTracker, _super);
    function NotificationSubscriptionTracker(source, notify, log, config) {
        if (config === void 0) { config = {}; }
        var _this = _super.call(this, notify, log, config) || this;
        _this.source = source;
        // We need to do a timeout here so that the chained events coming in after this method will be fired
        // before this subscription is added - this is necessary for any synchronous/immediate observables.
        _this.source = _this.source.pipe(tap((/**
         * @param {?} x
         * @return {?}
         */
        function (x) {
            setTimeout((/**
             * @return {?}
             */
            function () { return _this.onSuccess(x); }));
        }), (/**
         * @param {?} error
         * @return {?}
         */
        function (error) {
            setTimeout((/**
             * @return {?}
             */
            function () { return _this.onFail(error); }));
        })));
        if (_this.config.useSingletonSubscriptionEmission) {
            _this.source = _this.source.pipe(publishReplay());
        }
        return _this;
    }
    /**
     * @param {?} message
     * @param {?=} title
     * @param {?=} config
     * @return {?}
     */
    NotificationSubscriptionTracker.prototype.wait = /**
     * @param {?} message
     * @param {?=} title
     * @param {?=} config
     * @return {?}
     */
    function (message, title, config) {
        return (/** @type {?} */ (_super.prototype.wait.call(this, message, title, config)));
    };
    /**
     * @param {?} predicate
     * @param {?} message
     * @param {?=} title
     * @param {?=} config
     * @return {?}
     */
    NotificationSubscriptionTracker.prototype.waitIf = /**
     * @param {?} predicate
     * @param {?} message
     * @param {?=} title
     * @param {?=} config
     * @return {?}
     */
    function (predicate, message, title, config) {
        return (/** @type {?} */ (_super.prototype.waitIf.call(this, predicate, message, title, config)));
    };
    /**
     * @param {?} message
     * @param {?=} title
     * @param {?=} config
     * @return {?}
     */
    NotificationSubscriptionTracker.prototype.success = /**
     * @param {?} message
     * @param {?=} title
     * @param {?=} config
     * @return {?}
     */
    function (message, title, config) {
        return (/** @type {?} */ (_super.prototype.success.call(this, message, title, config)));
    };
    /**
     * @param {?} message
     * @param {?=} title
     * @param {?=} config
     * @return {?}
     */
    NotificationSubscriptionTracker.prototype.error = /**
     * @param {?} message
     * @param {?=} title
     * @param {?=} config
     * @return {?}
     */
    function (message, title, config) {
        return (/** @type {?} */ (_super.prototype.error.call(this, message, title, config)));
    };
    /**
     * @param {?} message
     * @param {?=} title
     * @param {?=} config
     * @return {?}
     */
    NotificationSubscriptionTracker.prototype.warn = /**
     * @param {?} message
     * @param {?=} title
     * @param {?=} config
     * @return {?}
     */
    function (message, title, config) {
        return (/** @type {?} */ (_super.prototype.warn.call(this, message, title, config)));
    };
    /**
     * @param {?} message
     * @param {?=} title
     * @param {?=} config
     * @return {?}
     */
    NotificationSubscriptionTracker.prototype.info = /**
     * @param {?} message
     * @param {?=} title
     * @param {?=} config
     * @return {?}
     */
    function (message, title, config) {
        return (/** @type {?} */ (_super.prototype.info.call(this, message, title, config)));
    };
    /**
     * @param {?} onDone
     * @return {?}
     */
    NotificationSubscriptionTracker.prototype.finally = /**
     * @param {?} onDone
     * @return {?}
     */
    function (onDone) {
        return (/** @type {?} */ (_super.prototype.finally.call(this, onDone)));
    };
    /**
     * @param {?=} next
     * @param {?=} error
     * @param {?=} complete
     * @return {?}
     */
    NotificationSubscriptionTracker.prototype.subscribe = /**
     * @param {?=} next
     * @param {?=} error
     * @param {?=} complete
     * @return {?}
     */
    function (next, error, complete) {
        return this.source.subscribe(next, error, complete);
    };
    return NotificationSubscriptionTracker;
}(BaseNotificationTracker));
/**
 * @template T
 */
export { NotificationSubscriptionTracker };
if (false) {
    /** @type {?} */
    NotificationSubscriptionTracker.prototype.source;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibm90aWZpY2F0aW9uLXN1YnNjcmlwdGlvbi10cmFja2VyLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQHRzcy9zZGsvIiwic291cmNlcyI6WyJsaWIvY29yZS9ub3RpZnkvbm90aWZpY2F0aW9uLXN1YnNjcmlwdGlvbi10cmFja2VyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7O0FBQ0EsT0FBTyxFQUFFLEdBQUcsRUFBRSxhQUFhLEVBQUUsTUFBTSxnQkFBZ0IsQ0FBQztBQUlwRCxPQUFPLEVBQUUsdUJBQXVCLEVBQUUsTUFBTSw2QkFBNkIsQ0FBQzs7OztBQUl0RTs7OztJQUF3RCwyREFBMEI7SUFDaEYseUNBQW1CLE1BQXFCLEVBQUUsTUFBcUIsRUFBRSxHQUFZLEVBQUUsTUFBK0I7UUFBL0IsdUJBQUEsRUFBQSxXQUErQjtRQUE5RyxZQUNFLGtCQUFNLE1BQU0sRUFBRSxHQUFHLEVBQUUsTUFBTSxDQUFDLFNBZTNCO1FBaEJrQixZQUFNLEdBQU4sTUFBTSxDQUFlO1FBR3RDLG9HQUFvRztRQUNwRyxtR0FBbUc7UUFDbkcsS0FBSSxDQUFDLE1BQU0sR0FBRyxLQUFJLENBQUMsTUFBTSxDQUFDLElBQUksQ0FDNUIsR0FBRzs7OztRQUFDLFVBQUMsQ0FBSTtZQUNQLFVBQVU7OztZQUFDLGNBQU0sT0FBQSxLQUFJLENBQUMsU0FBUyxDQUFDLENBQUMsQ0FBQyxFQUFqQixDQUFpQixFQUFDLENBQUM7UUFDdEMsQ0FBQzs7OztRQUFFLFVBQUMsS0FBVTtZQUNaLFVBQVU7OztZQUFDLGNBQU0sT0FBQSxLQUFJLENBQUMsTUFBTSxDQUFDLEtBQUssQ0FBQyxFQUFsQixDQUFrQixFQUFDLENBQUM7UUFDdkMsQ0FBQyxFQUFDLENBQ0gsQ0FBQztRQUVGLElBQUksS0FBSSxDQUFDLE1BQU0sQ0FBQyxnQ0FBZ0MsRUFBRTtZQUNoRCxLQUFJLENBQUMsTUFBTSxHQUFHLEtBQUksQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLGFBQWEsRUFBRSxDQUFDLENBQUM7U0FDakQ7O0lBQ0gsQ0FBQzs7Ozs7OztJQUVELDhDQUFJOzs7Ozs7SUFBSixVQUFLLE9BQWUsRUFBRSxLQUFjLEVBQUUsTUFBWTtRQUNoRCxPQUFPLG1CQUFBLGlCQUFNLElBQUksWUFBQyxPQUFPLEVBQUUsS0FBSyxFQUFFLE1BQU0sQ0FBQyxFQUFzQyxDQUFDO0lBQ2xGLENBQUM7Ozs7Ozs7O0lBRUQsZ0RBQU07Ozs7Ozs7SUFBTixVQUFPLFNBQW9DLEVBQUUsT0FBZSxFQUFFLEtBQWMsRUFBRSxNQUFZO1FBQ3hGLE9BQU8sbUJBQUEsaUJBQU0sTUFBTSxZQUFDLFNBQVMsRUFBRSxPQUFPLEVBQUUsS0FBSyxFQUFFLE1BQU0sQ0FBQyxFQUFzQyxDQUFDO0lBQy9GLENBQUM7Ozs7Ozs7SUFFRCxpREFBTzs7Ozs7O0lBQVAsVUFBUSxPQUFlLEVBQUUsS0FBYyxFQUFFLE1BQVk7UUFDbkQsT0FBTyxtQkFBQSxpQkFBTSxPQUFPLFlBQUMsT0FBTyxFQUFFLEtBQUssRUFBRSxNQUFNLENBQUMsRUFBc0MsQ0FBQztJQUNyRixDQUFDOzs7Ozs7O0lBRUQsK0NBQUs7Ozs7OztJQUFMLFVBQU0sT0FBZSxFQUFFLEtBQWMsRUFBRSxNQUFZO1FBQ2pELE9BQU8sbUJBQUEsaUJBQU0sS0FBSyxZQUFDLE9BQU8sRUFBRSxLQUFLLEVBQUUsTUFBTSxDQUFDLEVBQXNDLENBQUM7SUFDbkYsQ0FBQzs7Ozs7OztJQUVELDhDQUFJOzs7Ozs7SUFBSixVQUFLLE9BQWUsRUFBRSxLQUFjLEVBQUUsTUFBWTtRQUNoRCxPQUFPLG1CQUFBLGlCQUFNLElBQUksWUFBQyxPQUFPLEVBQUUsS0FBSyxFQUFFLE1BQU0sQ0FBQyxFQUFzQyxDQUFDO0lBQ2xGLENBQUM7Ozs7Ozs7SUFFRCw4Q0FBSTs7Ozs7O0lBQUosVUFBSyxPQUFlLEVBQUUsS0FBYyxFQUFFLE1BQVk7UUFDaEQsT0FBTyxtQkFBQSxpQkFBTSxJQUFJLFlBQUMsT0FBTyxFQUFFLEtBQUssRUFBRSxNQUFNLENBQUMsRUFBc0MsQ0FBQztJQUNsRixDQUFDOzs7OztJQUVELGlEQUFPOzs7O0lBQVAsVUFBUSxNQUE4RDtRQUNwRSxPQUFPLG1CQUFBLGlCQUFNLE9BQU8sWUFBQyxNQUFNLENBQUMsRUFBc0MsQ0FBQztJQUNyRSxDQUFDOzs7Ozs7O0lBRUQsbURBQVM7Ozs7OztJQUFULFVBQVUsSUFBeUIsRUFBRSxLQUE0QixFQUFFLFFBQXFCO1FBQ3RGLE9BQU8sSUFBSSxDQUFDLE1BQU0sQ0FBQyxTQUFTLENBQUMsSUFBSSxFQUFFLEtBQUssRUFBRSxRQUFRLENBQUMsQ0FBQztJQUN0RCxDQUFDO0lBQ0gsc0NBQUM7QUFBRCxDQUFDLEFBbERELENBQXdELHVCQUF1QixHQWtEOUU7Ozs7Ozs7SUFqRGEsaURBQTRCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgT2JzZXJ2YWJsZSwgU3Vic2NyaXB0aW9uIH0gZnJvbSAncnhqcyc7XG5pbXBvcnQgeyB0YXAsIHB1Ymxpc2hSZXBsYXkgfSBmcm9tICdyeGpzL29wZXJhdG9ycyc7XG5cbmltcG9ydCB7IE5vdGlmeVNlcnZpY2UgfSBmcm9tICcuL25vdGlmeS5zZXJ2aWNlJztcbmltcG9ydCB7IExvZ2dlciB9IGZyb20gJy4uL2xvZ2dpbmcvbG9nZ2VyLnNlcnZpY2UnO1xuaW1wb3J0IHsgQmFzZU5vdGlmaWNhdGlvblRyYWNrZXIgfSBmcm9tICcuL2Jhc2Utbm90aWZpY2F0aW9uLXRyYWNrZXInO1xuaW1wb3J0IHsgTm90aWZpY2F0aW9uQ29uZmlnIH0gZnJvbSAnLi9ub3RpZmljYXRpb24tY29uZmlnJztcblxuXG5leHBvcnQgY2xhc3MgTm90aWZpY2F0aW9uU3Vic2NyaXB0aW9uVHJhY2tlcjxUPiBleHRlbmRzIEJhc2VOb3RpZmljYXRpb25UcmFja2VyPFQ+IHtcbiAgY29uc3RydWN0b3IocHVibGljIHNvdXJjZTogT2JzZXJ2YWJsZTxUPiwgbm90aWZ5OiBOb3RpZnlTZXJ2aWNlLCBsb2c/OiBMb2dnZXIsIGNvbmZpZzogTm90aWZpY2F0aW9uQ29uZmlnID0ge30pIHtcbiAgICBzdXBlcihub3RpZnksIGxvZywgY29uZmlnKTtcblxuICAgIC8vIFdlIG5lZWQgdG8gZG8gYSB0aW1lb3V0IGhlcmUgc28gdGhhdCB0aGUgY2hhaW5lZCBldmVudHMgY29taW5nIGluIGFmdGVyIHRoaXMgbWV0aG9kIHdpbGwgYmUgZmlyZWRcbiAgICAvLyBiZWZvcmUgdGhpcyBzdWJzY3JpcHRpb24gaXMgYWRkZWQgLSB0aGlzIGlzIG5lY2Vzc2FyeSBmb3IgYW55IHN5bmNocm9ub3VzL2ltbWVkaWF0ZSBvYnNlcnZhYmxlcy5cbiAgICB0aGlzLnNvdXJjZSA9IHRoaXMuc291cmNlLnBpcGUoXG4gICAgICB0YXAoKHg6IFQpID0+IHtcbiAgICAgICAgc2V0VGltZW91dCgoKSA9PiB0aGlzLm9uU3VjY2Vzcyh4KSk7XG4gICAgICB9LCAoZXJyb3I6IGFueSkgPT4ge1xuICAgICAgICBzZXRUaW1lb3V0KCgpID0+IHRoaXMub25GYWlsKGVycm9yKSk7XG4gICAgICB9KVxuICAgICk7XG5cbiAgICBpZiAodGhpcy5jb25maWcudXNlU2luZ2xldG9uU3Vic2NyaXB0aW9uRW1pc3Npb24pIHtcbiAgICAgIHRoaXMuc291cmNlID0gdGhpcy5zb3VyY2UucGlwZShwdWJsaXNoUmVwbGF5KCkpO1xuICAgIH1cbiAgfVxuXG4gIHdhaXQobWVzc2FnZTogc3RyaW5nLCB0aXRsZT86IHN0cmluZywgY29uZmlnPzogYW55KTogTm90aWZpY2F0aW9uU3Vic2NyaXB0aW9uVHJhY2tlcjxUPiB7XG4gICAgcmV0dXJuIHN1cGVyLndhaXQobWVzc2FnZSwgdGl0bGUsIGNvbmZpZykgYXMgTm90aWZpY2F0aW9uU3Vic2NyaXB0aW9uVHJhY2tlcjxUPjtcbiAgfVxuXG4gIHdhaXRJZihwcmVkaWNhdGU6IGJvb2xlYW4gfCAoKCkgPT4gYm9vbGVhbiksIG1lc3NhZ2U6IHN0cmluZywgdGl0bGU/OiBzdHJpbmcsIGNvbmZpZz86IGFueSk6IE5vdGlmaWNhdGlvblN1YnNjcmlwdGlvblRyYWNrZXI8VD4ge1xuICAgIHJldHVybiBzdXBlci53YWl0SWYocHJlZGljYXRlLCBtZXNzYWdlLCB0aXRsZSwgY29uZmlnKSBhcyBOb3RpZmljYXRpb25TdWJzY3JpcHRpb25UcmFja2VyPFQ+O1xuICB9XG5cbiAgc3VjY2VzcyhtZXNzYWdlOiBzdHJpbmcsIHRpdGxlPzogc3RyaW5nLCBjb25maWc/OiBhbnkpOiBOb3RpZmljYXRpb25TdWJzY3JpcHRpb25UcmFja2VyPFQ+IHtcbiAgICByZXR1cm4gc3VwZXIuc3VjY2VzcyhtZXNzYWdlLCB0aXRsZSwgY29uZmlnKSBhcyBOb3RpZmljYXRpb25TdWJzY3JpcHRpb25UcmFja2VyPFQ+O1xuICB9XG5cbiAgZXJyb3IobWVzc2FnZTogc3RyaW5nLCB0aXRsZT86IHN0cmluZywgY29uZmlnPzogYW55KTogTm90aWZpY2F0aW9uU3Vic2NyaXB0aW9uVHJhY2tlcjxUPiB7XG4gICAgcmV0dXJuIHN1cGVyLmVycm9yKG1lc3NhZ2UsIHRpdGxlLCBjb25maWcpIGFzIE5vdGlmaWNhdGlvblN1YnNjcmlwdGlvblRyYWNrZXI8VD47XG4gIH1cblxuICB3YXJuKG1lc3NhZ2U6IHN0cmluZywgdGl0bGU/OiBzdHJpbmcsIGNvbmZpZz86IGFueSk6IE5vdGlmaWNhdGlvblN1YnNjcmlwdGlvblRyYWNrZXI8VD4ge1xuICAgIHJldHVybiBzdXBlci53YXJuKG1lc3NhZ2UsIHRpdGxlLCBjb25maWcpIGFzIE5vdGlmaWNhdGlvblN1YnNjcmlwdGlvblRyYWNrZXI8VD47XG4gIH1cblxuICBpbmZvKG1lc3NhZ2U6IHN0cmluZywgdGl0bGU/OiBzdHJpbmcsIGNvbmZpZz86IGFueSk6IE5vdGlmaWNhdGlvblN1YnNjcmlwdGlvblRyYWNrZXI8VD4ge1xuICAgIHJldHVybiBzdXBlci5pbmZvKG1lc3NhZ2UsIHRpdGxlLCBjb25maWcpIGFzIE5vdGlmaWNhdGlvblN1YnNjcmlwdGlvblRyYWNrZXI8VD47XG4gIH1cblxuICBmaW5hbGx5KG9uRG9uZTogKHZhbHVlOiBUIHwgdW5kZWZpbmVkIHwgbnVsbCB8IFByb21pc2VMaWtlPFQ+KSA9PiB2b2lkKTogTm90aWZpY2F0aW9uU3Vic2NyaXB0aW9uVHJhY2tlcjxUPiB7XG4gICAgcmV0dXJuIHN1cGVyLmZpbmFsbHkob25Eb25lKSBhcyBOb3RpZmljYXRpb25TdWJzY3JpcHRpb25UcmFja2VyPFQ+O1xuICB9XG5cbiAgc3Vic2NyaWJlKG5leHQ/OiAodmFsdWU6IFQpID0+IHZvaWQsIGVycm9yPzogKGVycm9yOiBhbnkpID0+IHZvaWQsIGNvbXBsZXRlPzogKCkgPT4gdm9pZCk6IFN1YnNjcmlwdGlvbiB7XG4gICAgcmV0dXJuIHRoaXMuc291cmNlLnN1YnNjcmliZShuZXh0LCBlcnJvciwgY29tcGxldGUpO1xuICB9XG59XG4iXX0=