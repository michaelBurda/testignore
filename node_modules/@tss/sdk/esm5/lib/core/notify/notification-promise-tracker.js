/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { BaseNotificationTracker } from './base-notification-tracker';
/**
 * @template T
 */
var /**
 * @template T
 */
NotificationPromiseTracker = /** @class */ (function (_super) {
    tslib_1.__extends(NotificationPromiseTracker, _super);
    function NotificationPromiseTracker(source, notify, log, config) {
        if (config === void 0) { config = {}; }
        var _this = _super.call(this, notify, log, config) || this;
        _this.source = source;
        return _this;
    }
    /**
     * @param {?} message
     * @param {?=} title
     * @return {?}
     */
    NotificationPromiseTracker.prototype.wait = /**
     * @param {?} message
     * @param {?=} title
     * @return {?}
     */
    function (message, title) {
        var _this = this;
        _super.prototype.wait.call(this, message, title);
        this.source = this.source
            .then((/**
         * @param {?} result
         * @return {?}
         */
        function (result) {
            _this.onSuccess(result);
            return result;
        }))
            .catch((/**
         * @param {?} error
         * @return {?}
         */
        function (error) {
            _this.onFail(error);
            throw error;
        }));
        return this;
    };
    /**
     * @param {?} predicate
     * @param {?} message
     * @param {?=} title
     * @return {?}
     */
    NotificationPromiseTracker.prototype.waitIf = /**
     * @param {?} predicate
     * @param {?} message
     * @param {?=} title
     * @return {?}
     */
    function (predicate, message, title) {
        return (/** @type {?} */ (_super.prototype.waitIf.call(this, predicate, message, title)));
    };
    /**
     * @param {?} message
     * @param {?=} title
     * @return {?}
     */
    NotificationPromiseTracker.prototype.success = /**
     * @param {?} message
     * @param {?=} title
     * @return {?}
     */
    function (message, title) {
        return (/** @type {?} */ (_super.prototype.success.call(this, message, title)));
    };
    /**
     * @param {?} message
     * @param {?=} title
     * @return {?}
     */
    NotificationPromiseTracker.prototype.error = /**
     * @param {?} message
     * @param {?=} title
     * @return {?}
     */
    function (message, title) {
        return (/** @type {?} */ (_super.prototype.error.call(this, message, title)));
    };
    /**
     * @param {?} message
     * @param {?=} title
     * @return {?}
     */
    NotificationPromiseTracker.prototype.warn = /**
     * @param {?} message
     * @param {?=} title
     * @return {?}
     */
    function (message, title) {
        return (/** @type {?} */ (_super.prototype.warn.call(this, message, title)));
    };
    /**
     * @param {?} message
     * @param {?=} title
     * @return {?}
     */
    NotificationPromiseTracker.prototype.info = /**
     * @param {?} message
     * @param {?=} title
     * @return {?}
     */
    function (message, title) {
        return (/** @type {?} */ (_super.prototype.info.call(this, message, title)));
    };
    /**
     * @param {?} onDone
     * @return {?}
     */
    NotificationPromiseTracker.prototype.finally = /**
     * @param {?} onDone
     * @return {?}
     */
    function (onDone) {
        return (/** @type {?} */ (_super.prototype.finally.call(this, onDone)));
    };
    /**
     * @param {?=} onfulfilled
     * @return {?}
     */
    NotificationPromiseTracker.prototype.then = /**
     * @param {?=} onfulfilled
     * @return {?}
     */
    function (onfulfilled) {
        return this.source.then(onfulfilled);
    };
    /**
     * @param {?=} onrejected
     * @return {?}
     */
    NotificationPromiseTracker.prototype.catch = /**
     * @param {?=} onrejected
     * @return {?}
     */
    function (onrejected) {
        return this.source.catch(onrejected);
    };
    return NotificationPromiseTracker;
}(BaseNotificationTracker));
/**
 * @template T
 */
export { NotificationPromiseTracker };
if (false) {
    /** @type {?} */
    NotificationPromiseTracker.prototype.source;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibm90aWZpY2F0aW9uLXByb21pc2UtdHJhY2tlci5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0B0c3Mvc2RrLyIsInNvdXJjZXMiOlsibGliL2NvcmUvbm90aWZ5L25vdGlmaWNhdGlvbi1wcm9taXNlLXRyYWNrZXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFFQSxPQUFPLEVBQUUsdUJBQXVCLEVBQUUsTUFBTSw2QkFBNkIsQ0FBQzs7OztBQUl0RTs7OztJQUFtRCxzREFBMEI7SUFDM0Usb0NBQW1CLE1BQWtCLEVBQUUsTUFBcUIsRUFBRSxHQUFZLEVBQUUsTUFBK0I7UUFBL0IsdUJBQUEsRUFBQSxXQUErQjtRQUEzRyxZQUNFLGtCQUFNLE1BQU0sRUFBRSxHQUFHLEVBQUUsTUFBTSxDQUFDLFNBQzNCO1FBRmtCLFlBQU0sR0FBTixNQUFNLENBQVk7O0lBRXJDLENBQUM7Ozs7OztJQUVELHlDQUFJOzs7OztJQUFKLFVBQUssT0FBZSxFQUFFLEtBQWM7UUFBcEMsaUJBWUM7UUFYQyxpQkFBTSxJQUFJLFlBQUMsT0FBTyxFQUFFLEtBQUssQ0FBQyxDQUFDO1FBQzNCLElBQUksQ0FBQyxNQUFNLEdBQUcsSUFBSSxDQUFDLE1BQU07YUFDdEIsSUFBSTs7OztRQUFDLFVBQUMsTUFBUztZQUNkLEtBQUksQ0FBQyxTQUFTLENBQUMsTUFBTSxDQUFDLENBQUM7WUFDdkIsT0FBTyxNQUFNLENBQUM7UUFDaEIsQ0FBQyxFQUFDO2FBQ0QsS0FBSzs7OztRQUFDLFVBQUMsS0FBVTtZQUNoQixLQUFJLENBQUMsTUFBTSxDQUFDLEtBQUssQ0FBQyxDQUFDO1lBQ25CLE1BQU0sS0FBSyxDQUFDO1FBQ2QsQ0FBQyxFQUFDLENBQUM7UUFDTCxPQUFPLElBQUksQ0FBQztJQUNkLENBQUM7Ozs7Ozs7SUFFRCwyQ0FBTTs7Ozs7O0lBQU4sVUFBTyxTQUFvQyxFQUFFLE9BQWUsRUFBRSxLQUFjO1FBQzFFLE9BQU8sbUJBQUEsaUJBQU0sTUFBTSxZQUFDLFNBQVMsRUFBRSxPQUFPLEVBQUUsS0FBSyxDQUFDLEVBQWlDLENBQUM7SUFDbEYsQ0FBQzs7Ozs7O0lBRUQsNENBQU87Ozs7O0lBQVAsVUFBUSxPQUFlLEVBQUUsS0FBYztRQUNyQyxPQUFPLG1CQUFBLGlCQUFNLE9BQU8sWUFBQyxPQUFPLEVBQUUsS0FBSyxDQUFDLEVBQWlDLENBQUM7SUFDeEUsQ0FBQzs7Ozs7O0lBRUQsMENBQUs7Ozs7O0lBQUwsVUFBTSxPQUFlLEVBQUUsS0FBYztRQUNuQyxPQUFPLG1CQUFBLGlCQUFNLEtBQUssWUFBQyxPQUFPLEVBQUUsS0FBSyxDQUFDLEVBQWlDLENBQUM7SUFDdEUsQ0FBQzs7Ozs7O0lBRUQseUNBQUk7Ozs7O0lBQUosVUFBSyxPQUFlLEVBQUUsS0FBYztRQUNsQyxPQUFPLG1CQUFBLGlCQUFNLElBQUksWUFBQyxPQUFPLEVBQUUsS0FBSyxDQUFDLEVBQWlDLENBQUM7SUFDckUsQ0FBQzs7Ozs7O0lBRUQseUNBQUk7Ozs7O0lBQUosVUFBSyxPQUFlLEVBQUUsS0FBYztRQUNsQyxPQUFPLG1CQUFBLGlCQUFNLElBQUksWUFBQyxPQUFPLEVBQUUsS0FBSyxDQUFDLEVBQWlDLENBQUM7SUFDckUsQ0FBQzs7Ozs7SUFFRCw0Q0FBTzs7OztJQUFQLFVBQVEsTUFBOEQ7UUFDcEUsT0FBTyxtQkFBQSxpQkFBTSxPQUFPLFlBQUMsTUFBTSxDQUFDLEVBQWlDLENBQUM7SUFDaEUsQ0FBQzs7Ozs7SUFFRCx5Q0FBSTs7OztJQUFKLFVBQUssV0FBbUU7UUFDdEUsT0FBTyxJQUFJLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxXQUFXLENBQUMsQ0FBQztJQUN2QyxDQUFDOzs7OztJQUVELDBDQUFLOzs7O0lBQUwsVUFBTSxVQUFxRTtRQUN6RSxPQUFPLElBQUksQ0FBQyxNQUFNLENBQUMsS0FBSyxDQUFDLFVBQVUsQ0FBQyxDQUFDO0lBQ3ZDLENBQUM7SUFDSCxpQ0FBQztBQUFELENBQUMsQUFsREQsQ0FBbUQsdUJBQXVCLEdBa0R6RTs7Ozs7OztJQWpEYSw0Q0FBeUIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBOb3RpZnlTZXJ2aWNlIH0gZnJvbSAnLi9ub3RpZnkuc2VydmljZSc7XG5pbXBvcnQgeyBMb2dnZXIgfSBmcm9tICcuLi9sb2dnaW5nL2xvZ2dlci5zZXJ2aWNlJztcbmltcG9ydCB7IEJhc2VOb3RpZmljYXRpb25UcmFja2VyIH0gZnJvbSAnLi9iYXNlLW5vdGlmaWNhdGlvbi10cmFja2VyJztcbmltcG9ydCB7IE5vdGlmaWNhdGlvbkNvbmZpZyB9IGZyb20gJy4vbm90aWZpY2F0aW9uLWNvbmZpZyc7XG5cblxuZXhwb3J0IGNsYXNzIE5vdGlmaWNhdGlvblByb21pc2VUcmFja2VyPFQ+IGV4dGVuZHMgQmFzZU5vdGlmaWNhdGlvblRyYWNrZXI8VD4ge1xuICBjb25zdHJ1Y3RvcihwdWJsaWMgc291cmNlOiBQcm9taXNlPFQ+LCBub3RpZnk6IE5vdGlmeVNlcnZpY2UsIGxvZz86IExvZ2dlciwgY29uZmlnOiBOb3RpZmljYXRpb25Db25maWcgPSB7fSkge1xuICAgIHN1cGVyKG5vdGlmeSwgbG9nLCBjb25maWcpO1xuICB9XG5cbiAgd2FpdChtZXNzYWdlOiBzdHJpbmcsIHRpdGxlPzogc3RyaW5nKTogTm90aWZpY2F0aW9uUHJvbWlzZVRyYWNrZXI8VD4ge1xuICAgIHN1cGVyLndhaXQobWVzc2FnZSwgdGl0bGUpO1xuICAgIHRoaXMuc291cmNlID0gdGhpcy5zb3VyY2VcbiAgICAgIC50aGVuKChyZXN1bHQ6IFQpID0+IHtcbiAgICAgICAgdGhpcy5vblN1Y2Nlc3MocmVzdWx0KTtcbiAgICAgICAgcmV0dXJuIHJlc3VsdDtcbiAgICAgIH0pXG4gICAgICAuY2F0Y2goKGVycm9yOiBhbnkpID0+IHtcbiAgICAgICAgdGhpcy5vbkZhaWwoZXJyb3IpO1xuICAgICAgICB0aHJvdyBlcnJvcjtcbiAgICAgIH0pO1xuICAgIHJldHVybiB0aGlzO1xuICB9XG5cbiAgd2FpdElmKHByZWRpY2F0ZTogYm9vbGVhbiB8ICgoKSA9PiBib29sZWFuKSwgbWVzc2FnZTogc3RyaW5nLCB0aXRsZT86IHN0cmluZyk6IE5vdGlmaWNhdGlvblByb21pc2VUcmFja2VyPFQ+IHtcbiAgICByZXR1cm4gc3VwZXIud2FpdElmKHByZWRpY2F0ZSwgbWVzc2FnZSwgdGl0bGUpIGFzIE5vdGlmaWNhdGlvblByb21pc2VUcmFja2VyPFQ+O1xuICB9XG5cbiAgc3VjY2VzcyhtZXNzYWdlOiBzdHJpbmcsIHRpdGxlPzogc3RyaW5nKTogTm90aWZpY2F0aW9uUHJvbWlzZVRyYWNrZXI8VD4ge1xuICAgIHJldHVybiBzdXBlci5zdWNjZXNzKG1lc3NhZ2UsIHRpdGxlKSBhcyBOb3RpZmljYXRpb25Qcm9taXNlVHJhY2tlcjxUPjtcbiAgfVxuXG4gIGVycm9yKG1lc3NhZ2U6IHN0cmluZywgdGl0bGU/OiBzdHJpbmcpOiBOb3RpZmljYXRpb25Qcm9taXNlVHJhY2tlcjxUPiB7XG4gICAgcmV0dXJuIHN1cGVyLmVycm9yKG1lc3NhZ2UsIHRpdGxlKSBhcyBOb3RpZmljYXRpb25Qcm9taXNlVHJhY2tlcjxUPjtcbiAgfVxuXG4gIHdhcm4obWVzc2FnZTogc3RyaW5nLCB0aXRsZT86IHN0cmluZyk6IE5vdGlmaWNhdGlvblByb21pc2VUcmFja2VyPFQ+IHtcbiAgICByZXR1cm4gc3VwZXIud2FybihtZXNzYWdlLCB0aXRsZSkgYXMgTm90aWZpY2F0aW9uUHJvbWlzZVRyYWNrZXI8VD47XG4gIH1cblxuICBpbmZvKG1lc3NhZ2U6IHN0cmluZywgdGl0bGU/OiBzdHJpbmcpOiBOb3RpZmljYXRpb25Qcm9taXNlVHJhY2tlcjxUPiB7XG4gICAgcmV0dXJuIHN1cGVyLmluZm8obWVzc2FnZSwgdGl0bGUpIGFzIE5vdGlmaWNhdGlvblByb21pc2VUcmFja2VyPFQ+O1xuICB9XG5cbiAgZmluYWxseShvbkRvbmU6ICh2YWx1ZTogVCB8IHVuZGVmaW5lZCB8IG51bGwgfCBQcm9taXNlTGlrZTxUPikgPT4gdm9pZCk6IE5vdGlmaWNhdGlvblByb21pc2VUcmFja2VyPFQ+IHtcbiAgICByZXR1cm4gc3VwZXIuZmluYWxseShvbkRvbmUpIGFzIE5vdGlmaWNhdGlvblByb21pc2VUcmFja2VyPFQ+O1xuICB9XG5cbiAgdGhlbihvbmZ1bGZpbGxlZD86ICgodmFsdWU6IFQpID0+IFQgfCBQcm9taXNlTGlrZTxUPikgfCB1bmRlZmluZWQgfCBudWxsKTogUHJvbWlzZTxUPiB7XG4gICAgcmV0dXJuIHRoaXMuc291cmNlLnRoZW4ob25mdWxmaWxsZWQpO1xuICB9XG5cbiAgY2F0Y2gob25yZWplY3RlZD86ICgocmVhc29uOiBhbnkpID0+IFQgfCBQcm9taXNlTGlrZTxUPikgfCB1bmRlZmluZWQgfCBudWxsKTogUHJvbWlzZTxUPiB7XG4gICAgcmV0dXJuIHRoaXMuc291cmNlLmNhdGNoKG9ucmVqZWN0ZWQpO1xuICB9XG59XG4iXX0=