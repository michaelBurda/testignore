/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { PORTAL_REDIRECT_URL_PARAMS_BREAK_CHARACTER } from '../esri.constants';
import { toEsriPortalAccessToken } from './to-esri-portal-access-token.function';
import { trimStart } from '../../core/formatting/trip-start.function';
import { getQueryParams } from '../../core/url/get-query-params.function';
/**
 * @param {?=} urlHash
 * @return {?}
 */
export function extractPortalAccessToken(urlHash) {
    if (urlHash === void 0) { urlHash = window.location.hash; }
    /** @type {?} */
    var portalParamsStartIndex = urlHash.lastIndexOf(PORTAL_REDIRECT_URL_PARAMS_BREAK_CHARACTER);
    /** @type {?} */
    var portalParamsHash = trimStart(urlHash.substr(portalParamsStartIndex));
    /** @type {?} */
    var portalParams = getQueryParams(portalParamsHash);
    /** @type {?} */
    var accessToken = portalParams.access_token;
    /** @type {?} */
    var username = portalParams.username;
    /** @type {?} */
    var expiresIn = Number(portalParams.expires_in);
    /** @type {?} */
    var isSecure = Boolean(portalParams.ssl);
    return toEsriPortalAccessToken({
        accessToken: accessToken,
        username: username,
        expiresIn: expiresIn,
        isSecure: isSecure
    });
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZXh0cmFjdC1wb3J0YWwtYWNjZXNzLXRva2VuLmZ1bmN0aW9uLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQHRzcy9zZGsvIiwic291cmNlcyI6WyJsaWIvZXNyaS9wb3J0YWwvZXh0cmFjdC1wb3J0YWwtYWNjZXNzLXRva2VuLmZ1bmN0aW9uLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFDQSxPQUFPLEVBQUUsMENBQTBDLEVBQUUsTUFBTSxtQkFBbUIsQ0FBQztBQUMvRSxPQUFPLEVBQUUsdUJBQXVCLEVBQUUsTUFBTSx3Q0FBd0MsQ0FBQztBQUNqRixPQUFPLEVBQUUsU0FBUyxFQUFFLE1BQU0sMkNBQTJDLENBQUM7QUFDdEUsT0FBTyxFQUFFLGNBQWMsRUFBRSxNQUFNLDBDQUEwQyxDQUFDOzs7OztBQUcxRSxNQUFNLFVBQVUsd0JBQXdCLENBQUMsT0FBc0M7SUFBdEMsd0JBQUEsRUFBQSxVQUFrQixNQUFNLENBQUMsUUFBUSxDQUFDLElBQUk7O1FBQ3ZFLHNCQUFzQixHQUFHLE9BQU8sQ0FBQyxXQUFXLENBQUMsMENBQTBDLENBQUM7O1FBQ3hGLGdCQUFnQixHQUFHLFNBQVMsQ0FDaEMsT0FBTyxDQUFDLE1BQU0sQ0FBQyxzQkFBc0IsQ0FBQyxDQUN2Qzs7UUFFSyxZQUFZLEdBQUcsY0FBYyxDQUFDLGdCQUFnQixDQUFDOztRQUMvQyxXQUFXLEdBQUcsWUFBWSxDQUFDLFlBQVk7O1FBQ3ZDLFFBQVEsR0FBRyxZQUFZLENBQUMsUUFBUTs7UUFDaEMsU0FBUyxHQUFHLE1BQU0sQ0FBQyxZQUFZLENBQUMsVUFBVSxDQUFDOztRQUMzQyxRQUFRLEdBQUcsT0FBTyxDQUFDLFlBQVksQ0FBQyxHQUFHLENBQUM7SUFFMUMsT0FBTyx1QkFBdUIsQ0FBQztRQUM3QixXQUFXLGFBQUE7UUFDWCxRQUFRLFVBQUE7UUFDUixTQUFTLFdBQUE7UUFDVCxRQUFRLFVBQUE7S0FDVCxDQUFDLENBQUM7QUFDTCxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgRXNyaVBvcnRhbEFjY2Vzc1Rva2VuIH0gZnJvbSAnLi9lc3JpLXBvcnRhbC1hY2Nlc3MtdG9rZW4nO1xuaW1wb3J0IHsgUE9SVEFMX1JFRElSRUNUX1VSTF9QQVJBTVNfQlJFQUtfQ0hBUkFDVEVSIH0gZnJvbSAnLi4vZXNyaS5jb25zdGFudHMnO1xuaW1wb3J0IHsgdG9Fc3JpUG9ydGFsQWNjZXNzVG9rZW4gfSBmcm9tICcuL3RvLWVzcmktcG9ydGFsLWFjY2Vzcy10b2tlbi5mdW5jdGlvbic7XG5pbXBvcnQgeyB0cmltU3RhcnQgfSBmcm9tICcuLi8uLi9jb3JlL2Zvcm1hdHRpbmcvdHJpcC1zdGFydC5mdW5jdGlvbic7XG5pbXBvcnQgeyBnZXRRdWVyeVBhcmFtcyB9IGZyb20gJy4uLy4uL2NvcmUvdXJsL2dldC1xdWVyeS1wYXJhbXMuZnVuY3Rpb24nO1xuXG5cbmV4cG9ydCBmdW5jdGlvbiBleHRyYWN0UG9ydGFsQWNjZXNzVG9rZW4odXJsSGFzaDogc3RyaW5nID0gd2luZG93LmxvY2F0aW9uLmhhc2gpOiBFc3JpUG9ydGFsQWNjZXNzVG9rZW4ge1xuICBjb25zdCBwb3J0YWxQYXJhbXNTdGFydEluZGV4ID0gdXJsSGFzaC5sYXN0SW5kZXhPZihQT1JUQUxfUkVESVJFQ1RfVVJMX1BBUkFNU19CUkVBS19DSEFSQUNURVIpO1xuICBjb25zdCBwb3J0YWxQYXJhbXNIYXNoID0gdHJpbVN0YXJ0KFxuICAgIHVybEhhc2guc3Vic3RyKHBvcnRhbFBhcmFtc1N0YXJ0SW5kZXgpXG4gICk7XG5cbiAgY29uc3QgcG9ydGFsUGFyYW1zID0gZ2V0UXVlcnlQYXJhbXMocG9ydGFsUGFyYW1zSGFzaCk7XG4gIGNvbnN0IGFjY2Vzc1Rva2VuID0gcG9ydGFsUGFyYW1zLmFjY2Vzc190b2tlbjtcbiAgY29uc3QgdXNlcm5hbWUgPSBwb3J0YWxQYXJhbXMudXNlcm5hbWU7XG4gIGNvbnN0IGV4cGlyZXNJbiA9IE51bWJlcihwb3J0YWxQYXJhbXMuZXhwaXJlc19pbik7XG4gIGNvbnN0IGlzU2VjdXJlID0gQm9vbGVhbihwb3J0YWxQYXJhbXMuc3NsKTtcblxuICByZXR1cm4gdG9Fc3JpUG9ydGFsQWNjZXNzVG9rZW4oe1xuICAgIGFjY2Vzc1Rva2VuLFxuICAgIHVzZXJuYW1lLFxuICAgIGV4cGlyZXNJbixcbiAgICBpc1NlY3VyZVxuICB9KTtcbn1cbiJdfQ==