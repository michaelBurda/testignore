/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { HttpHeaders, HttpParams } from '@angular/common/http';
import { toFormDataString } from '../http/to-form-data-string.function';
import { isValue } from '../core/type-check/is-value.function';
/**
 * @record
 */
export function AngularHttpOption() { }
if (false) {
    /** @type {?|undefined} */
    AngularHttpOption.prototype.headers;
    /** @type {?|undefined} */
    AngularHttpOption.prototype.observe;
    /** @type {?|undefined} */
    AngularHttpOption.prototype.params;
    /** @type {?|undefined} */
    AngularHttpOption.prototype.reportProgress;
    /** @type {?|undefined} */
    AngularHttpOption.prototype.responseType;
    /** @type {?|undefined} */
    AngularHttpOption.prototype.withCredentials;
}
/**
 * @param {?=} params
 * @param {?=} format
 * @return {?}
 */
export function getEsriMapServiceHttOptions(params, format) {
    if (format === void 0) { format = 'json'; }
    /** @type {?} */
    var headers = new HttpHeaders();
    params = params || new HttpParams();
    if (format) {
        params = params.set('f', format);
    }
    headers.append('Content-Type', 'application/json');
    headers.append('Access-Control-Allow-Origin', '*');
    /** @type {?} */
    var httpOptions = {
        withCredentials: true,
        headers: headers,
        params: params,
    };
    return httpOptions;
}
/**
 * @param {?} httpOption
 * @param {?} params
 * @return {?}
 */
export function addParamsToHttpOptions(httpOption, params) {
    Object
        .keys(params)
        .filter((/**
     * @param {?} key
     * @return {?}
     */
    function (key) { return isValue(params[key]); }))
        .forEach((/**
     * @param {?} key
     * @return {?}
     */
    function (key) {
        /** @type {?} */
        var value = params[key];
        httpOption.params = httpOption.params.set(key, toFormDataString(value, false));
    }));
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZXNyaS1tYXAtc2VydmljZS1yZXF1ZXN0LmpzIiwic291cmNlUm9vdCI6Im5nOi8vQHRzcy9zZGsvIiwic291cmNlcyI6WyJsaWIvZXNyaS9lc3JpLW1hcC1zZXJ2aWNlLXJlcXVlc3QudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBRSxXQUFXLEVBQUUsVUFBVSxFQUFFLE1BQU0sc0JBQXNCLENBQUM7QUFFL0QsT0FBTyxFQUFFLGdCQUFnQixFQUFFLE1BQU0sc0NBQXNDLENBQUM7QUFDeEUsT0FBTyxFQUFFLE9BQU8sRUFBRSxNQUFNLHNDQUFzQyxDQUFDOzs7O0FBRy9ELHVDQU9DOzs7SUFOQyxvQ0FBc0I7O0lBQ3RCLG9DQUFpQjs7SUFDakIsbUNBQW9COztJQUNwQiwyQ0FBeUI7O0lBQ3pCLHlDQUFzQjs7SUFDdEIsNENBQTBCOzs7Ozs7O0FBRzVCLE1BQU0sVUFBVSwyQkFBMkIsQ0FBQyxNQUFtQixFQUFFLE1BQXdDO0lBQXhDLHVCQUFBLEVBQUEsZUFBd0M7O1FBQ2pHLE9BQU8sR0FBRyxJQUFJLFdBQVcsRUFBRTtJQUNqQyxNQUFNLEdBQUcsTUFBTSxJQUFJLElBQUksVUFBVSxFQUFFLENBQUM7SUFFcEMsSUFBSSxNQUFNLEVBQUU7UUFDVixNQUFNLEdBQUcsTUFBTSxDQUFDLEdBQUcsQ0FBQyxHQUFHLEVBQUUsTUFBTSxDQUFDLENBQUM7S0FDbEM7SUFFRCxPQUFPLENBQUMsTUFBTSxDQUFDLGNBQWMsRUFBRSxrQkFBa0IsQ0FBQyxDQUFDO0lBQ25ELE9BQU8sQ0FBQyxNQUFNLENBQUMsNkJBQTZCLEVBQUUsR0FBRyxDQUFDLENBQUM7O1FBRTdDLFdBQVcsR0FBRztRQUNsQixlQUFlLEVBQUUsSUFBSTtRQUNyQixPQUFPLFNBQUE7UUFDUCxNQUFNLFFBQUE7S0FDUDtJQUVELE9BQU8sV0FBVyxDQUFDO0FBQ3JCLENBQUM7Ozs7OztBQUVELE1BQU0sVUFBVSxzQkFBc0IsQ0FBQyxVQUE2QixFQUFFLE1BQVU7SUFDOUUsTUFBTTtTQUNILElBQUksQ0FBQyxNQUFNLENBQUM7U0FDWixNQUFNOzs7O0lBQUMsVUFBQSxHQUFHLElBQUksT0FBQSxPQUFPLENBQUMsTUFBTSxDQUFDLEdBQUcsQ0FBQyxDQUFDLEVBQXBCLENBQW9CLEVBQUM7U0FDbkMsT0FBTzs7OztJQUFDLFVBQUEsR0FBRzs7WUFDSixLQUFLLEdBQUcsTUFBTSxDQUFDLEdBQUcsQ0FBQztRQUN6QixVQUFVLENBQUMsTUFBTSxHQUFHLFVBQVUsQ0FBQyxNQUFNLENBQUMsR0FBRyxDQUFDLEdBQUcsRUFBRSxnQkFBZ0IsQ0FBQyxLQUFLLEVBQUUsS0FBSyxDQUFDLENBQUMsQ0FBQztJQUNqRixDQUFDLEVBQUMsQ0FBQztBQUNQLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBIdHRwSGVhZGVycywgSHR0cFBhcmFtcyB9IGZyb20gJ0Bhbmd1bGFyL2NvbW1vbi9odHRwJztcbmltcG9ydCB7IEVzcmlRdWVyeVJlc3BvbnNlRm9ybWF0IH0gZnJvbSAnLi9lc3JpLXJlc3BvbnNlLWZvcm1hdCc7XG5pbXBvcnQgeyB0b0Zvcm1EYXRhU3RyaW5nIH0gZnJvbSAnLi4vaHR0cC90by1mb3JtLWRhdGEtc3RyaW5nLmZ1bmN0aW9uJztcbmltcG9ydCB7IGlzVmFsdWUgfSBmcm9tICcuLi9jb3JlL3R5cGUtY2hlY2svaXMtdmFsdWUuZnVuY3Rpb24nO1xuXG5cbmV4cG9ydCBpbnRlcmZhY2UgQW5ndWxhckh0dHBPcHRpb24ge1xuICBoZWFkZXJzPzogSHR0cEhlYWRlcnM7XG4gIG9ic2VydmU/OiAnYm9keSc7XG4gIHBhcmFtcz86IEh0dHBQYXJhbXM7XG4gIHJlcG9ydFByb2dyZXNzPzogYm9vbGVhbjtcbiAgcmVzcG9uc2VUeXBlPzogJ2pzb24nO1xuICB3aXRoQ3JlZGVudGlhbHM/OiBib29sZWFuO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gZ2V0RXNyaU1hcFNlcnZpY2VIdHRPcHRpb25zKHBhcmFtcz86IEh0dHBQYXJhbXMsIGZvcm1hdDogRXNyaVF1ZXJ5UmVzcG9uc2VGb3JtYXQgPSAnanNvbicpOiBBbmd1bGFySHR0cE9wdGlvbiB7XG4gIGNvbnN0IGhlYWRlcnMgPSBuZXcgSHR0cEhlYWRlcnMoKTtcbiAgcGFyYW1zID0gcGFyYW1zIHx8IG5ldyBIdHRwUGFyYW1zKCk7XG5cbiAgaWYgKGZvcm1hdCkge1xuICAgIHBhcmFtcyA9IHBhcmFtcy5zZXQoJ2YnLCBmb3JtYXQpO1xuICB9XG5cbiAgaGVhZGVycy5hcHBlbmQoJ0NvbnRlbnQtVHlwZScsICdhcHBsaWNhdGlvbi9qc29uJyk7XG4gIGhlYWRlcnMuYXBwZW5kKCdBY2Nlc3MtQ29udHJvbC1BbGxvdy1PcmlnaW4nLCAnKicpO1xuXG4gIGNvbnN0IGh0dHBPcHRpb25zID0ge1xuICAgIHdpdGhDcmVkZW50aWFsczogdHJ1ZSxcbiAgICBoZWFkZXJzLFxuICAgIHBhcmFtcyxcbiAgfTtcblxuICByZXR1cm4gaHR0cE9wdGlvbnM7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBhZGRQYXJhbXNUb0h0dHBPcHRpb25zKGh0dHBPcHRpb246IEFuZ3VsYXJIdHRwT3B0aW9uLCBwYXJhbXM6IHt9KTogdm9pZCB7XG4gIE9iamVjdFxuICAgIC5rZXlzKHBhcmFtcylcbiAgICAuZmlsdGVyKGtleSA9PiBpc1ZhbHVlKHBhcmFtc1trZXldKSlcbiAgICAuZm9yRWFjaChrZXkgPT4ge1xuICAgICAgY29uc3QgdmFsdWUgPSBwYXJhbXNba2V5XTtcbiAgICAgIGh0dHBPcHRpb24ucGFyYW1zID0gaHR0cE9wdGlvbi5wYXJhbXMuc2V0KGtleSwgdG9Gb3JtRGF0YVN0cmluZyh2YWx1ZSwgZmFsc2UpKTtcbiAgICB9KTtcbn1cbiJdfQ==