/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { Injectable } from '@angular/core';
import { ResourceConfig } from '../core/resource.config';
import { AutoConfig } from '../core/auto-config.decorator';
import * as i0 from "@angular/core";
/**
 * Configuration class for storing global ESRI-related settings.
 */
var DataSourceConfig = /** @class */ (function (_super) {
    tslib_1.__extends(DataSourceConfig, _super);
    function DataSourceConfig() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.dataSourcesEndpoint = 'api/data/sources/{id}';
        _this.tablesEndpoint = 'api/data/sources/{id}/tables';
        _this.columnsEndpoint = 'api/data/sources/{id}/tables/{table}/columns/{column}/{action}';
        _this.tableActionEndpoint = 'api/data/sources/{id}/tables/{table}/{action}/{subaction}';
        _this.editDataEndpoint = 'api/data/sources/{id}/tables/{table}/edit';
        _this.applyEditsEndpoint = 'api/data/sources/{id}/applyedits';
        _this.attachmentsEndpoint = 'api/attachments/{id}/{action}';
        _this.skipColumnQuotes = false;
        return _this;
    }
    DataSourceConfig.decorators = [
        { type: Injectable, args: [{
                    providedIn: 'root'
                },] }
    ];
    /** @nocollapse */ DataSourceConfig.ngInjectableDef = i0.defineInjectable({ factory: function DataSourceConfig_Factory() { return new DataSourceConfig(); }, token: DataSourceConfig, providedIn: "root" });
    /**
     * Configuration class for storing global ESRI-related settings.
     */
    DataSourceConfig = tslib_1.__decorate([
        AutoConfig('DataSourceConfig')
    ], DataSourceConfig);
    return DataSourceConfig;
}(ResourceConfig));
export { DataSourceConfig };
if (false) {
    /** @type {?} */
    DataSourceConfig.prototype.dataSourcesEndpoint;
    /** @type {?} */
    DataSourceConfig.prototype.tablesEndpoint;
    /** @type {?} */
    DataSourceConfig.prototype.columnsEndpoint;
    /** @type {?} */
    DataSourceConfig.prototype.tableActionEndpoint;
    /** @type {?} */
    DataSourceConfig.prototype.editDataEndpoint;
    /** @type {?} */
    DataSourceConfig.prototype.applyEditsEndpoint;
    /** @type {?} */
    DataSourceConfig.prototype.attachmentsEndpoint;
    /** @type {?} */
    DataSourceConfig.prototype.skipColumnQuotes;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGF0YS1zb3VyY2UtY29uZmlnLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQHRzcy9zZGsvIiwic291cmNlcyI6WyJsaWIvZGF0YS1zb3VyY2UvZGF0YS1zb3VyY2UtY29uZmlnLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7O0FBQUEsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUMzQyxPQUFPLEVBQUUsY0FBYyxFQUFFLE1BQU0seUJBQXlCLENBQUM7QUFDekQsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLCtCQUErQixDQUFDOzs7Ozs7SUFVckIsNENBQWM7SUFKcEQ7UUFBQSxxRUFhQztRQVJDLHlCQUFtQixHQUFHLHVCQUF1QixDQUFDO1FBQzlDLG9CQUFjLEdBQUcsOEJBQThCLENBQUM7UUFDaEQscUJBQWUsR0FBRyxnRUFBZ0UsQ0FBQztRQUNuRix5QkFBbUIsR0FBRywyREFBMkQsQ0FBQztRQUNsRixzQkFBZ0IsR0FBRywyQ0FBMkMsQ0FBQztRQUMvRCx3QkFBa0IsR0FBRyxrQ0FBa0MsQ0FBQztRQUN4RCx5QkFBbUIsR0FBRywrQkFBK0IsQ0FBQztRQUN0RCxzQkFBZ0IsR0FBRyxLQUFLLENBQUM7O0tBQzFCOztnQkFiQSxVQUFVLFNBQUM7b0JBQ1YsVUFBVSxFQUFFLE1BQU07aUJBQ25COzs7Ozs7SUFFWSxnQkFBZ0I7UUFENUIsVUFBVSxDQUFDLGtCQUFrQixDQUFDO09BQ2xCLGdCQUFnQixDQVM1QjsyQkFyQkQ7Q0FxQkMsQ0FUcUMsY0FBYyxHQVNuRDtTQVRZLGdCQUFnQjs7O0lBQzNCLCtDQUE4Qzs7SUFDOUMsMENBQWdEOztJQUNoRCwyQ0FBbUY7O0lBQ25GLCtDQUFrRjs7SUFDbEYsNENBQStEOztJQUMvRCw4Q0FBd0Q7O0lBQ3hELCtDQUFzRDs7SUFDdEQsNENBQXlCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSW5qZWN0YWJsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgUmVzb3VyY2VDb25maWcgfSBmcm9tICcuLi9jb3JlL3Jlc291cmNlLmNvbmZpZyc7XG5pbXBvcnQgeyBBdXRvQ29uZmlnIH0gZnJvbSAnLi4vY29yZS9hdXRvLWNvbmZpZy5kZWNvcmF0b3InO1xuXG5cbi8qKlxuICogQ29uZmlndXJhdGlvbiBjbGFzcyBmb3Igc3RvcmluZyBnbG9iYWwgRVNSSS1yZWxhdGVkIHNldHRpbmdzLlxuICovXG5ASW5qZWN0YWJsZSh7XG4gIHByb3ZpZGVkSW46ICdyb290J1xufSlcbkBBdXRvQ29uZmlnKCdEYXRhU291cmNlQ29uZmlnJylcbmV4cG9ydCBjbGFzcyBEYXRhU291cmNlQ29uZmlnIGV4dGVuZHMgUmVzb3VyY2VDb25maWcge1xuICBkYXRhU291cmNlc0VuZHBvaW50ID0gJ2FwaS9kYXRhL3NvdXJjZXMve2lkfSc7XG4gIHRhYmxlc0VuZHBvaW50ID0gJ2FwaS9kYXRhL3NvdXJjZXMve2lkfS90YWJsZXMnO1xuICBjb2x1bW5zRW5kcG9pbnQgPSAnYXBpL2RhdGEvc291cmNlcy97aWR9L3RhYmxlcy97dGFibGV9L2NvbHVtbnMve2NvbHVtbn0ve2FjdGlvbn0nO1xuICB0YWJsZUFjdGlvbkVuZHBvaW50ID0gJ2FwaS9kYXRhL3NvdXJjZXMve2lkfS90YWJsZXMve3RhYmxlfS97YWN0aW9ufS97c3ViYWN0aW9ufSc7XG4gIGVkaXREYXRhRW5kcG9pbnQgPSAnYXBpL2RhdGEvc291cmNlcy97aWR9L3RhYmxlcy97dGFibGV9L2VkaXQnO1xuICBhcHBseUVkaXRzRW5kcG9pbnQgPSAnYXBpL2RhdGEvc291cmNlcy97aWR9L2FwcGx5ZWRpdHMnO1xuICBhdHRhY2htZW50c0VuZHBvaW50ID0gJ2FwaS9hdHRhY2htZW50cy97aWR9L3thY3Rpb259JztcbiAgc2tpcENvbHVtblF1b3RlcyA9IGZhbHNlO1xufVxuIl19