/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { DataSourceProviderType } from './data-source-provider-type';
/** @type {?} */
export var SELECT_ALL_WHERE_CLAUSE = '1=1';
/** @type {?} */
export var DATA_SOURCE_PROVIDERS = [
    { alias: 'SQL Server', provider: DataSourceProviderType.SqlServer, canUseEF: true, schedulingCompatible: true },
    { alias: 'SQLite', provider: DataSourceProviderType.SqlLite, canUseEF: false, schedulingCompatible: true },
    {
        alias: 'SQL Server Compact Edition',
        provider: DataSourceProviderType.SqlCompactEdition,
        canUseEF: true,
        schedulingCompatible: false
    },
    { alias: 'Oracle', provider: DataSourceProviderType.Oracle, canUseEF: false, schedulingCompatible: false },
    { alias: 'Oracle', provider: DataSourceProviderType.OracleDevArt, canUseEF: true, efOnly: true, schedulingCompatible: false }
];
/** @type {?} */
export var DATA_SOURCE_EXAMPLES = [
    {
        name: 'SQL Server Connection',
        providerName: DataSourceProviderType.SqlServer,
        connectionString: 'data source=YOUR_HOST, 1433;initial catalog=YOUR_DB;persist security info=True;'
            + 'user id=YOUR_USER;password=YOUR_PASSWORD;MultipleActiveResultSets=true;'
    },
    {
        name: 'SQL Server Compact (SQL CE) Connection',
        providerName: DataSourceProviderType.SqlCompactEdition,
        connectionString: 'Data Source=|DataDirectory|\\YOUR_DB_NAME.sdf;Max Database Size=4091'
    },
    {
        name: 'SQLite',
        providerName: DataSourceProviderType.SqlLite,
        connectionString: 'Data Source=|DataDirectory|\\YOUR_DB_NAME.sqlite;Version=3'
    },
    {
        name: 'Oracle Connection (without TNS names entry)',
        providerName: DataSourceProviderType.Oracle,
        connectionString: 'Data Source=(DESCRIPTION=(ADDRESS_LIST=(ADDRESS=(PROTOCOL=TCP)'
            + '(HOST=YOUR_HOST)(PORT=1522)))(CONNECT_DATA=(SERVER=DEDICATED)(SERVICE_NAME=YOUR_SERVICE)));'
            + 'User Id=YOUR_USER;Password=YOUR_PASSWORD;'
    },
    {
        name: 'Oracle Connection (with TNS names entry)',
        providerName: DataSourceProviderType.Oracle,
        connectionString: 'Data Source=YOUR_SOURCE;User Id=YOUR_USER;Password=YOUR_PASSWORD;'
    },
    {
        name: 'Oracle Connection (without TNS names entry)',
        providerName: DataSourceProviderType.OracleDevArt,
        connectionString: 'Data Source=(DESCRIPTION=(ADDRESS_LIST=(ADDRESS=(PROTOCOL=TCP)'
            + '(HOST=YOUR_HOST)(PORT=1522)))(CONNECT_DATA=(SERVER=DEDICATED)(SERVICE_NAME=YOUR_SERVICE)));'
            + 'User Id=YOUR_USER;Password=YOUR_PASSWORD;'
    },
    {
        name: 'Oracle Connection (with TNS names entry)',
        providerName: DataSourceProviderType.OracleDevArt,
        connectionString: 'Data Source=YOUR_SOURCE;User Id=YOUR_USER;Password=YOUR_PASSWORD;'
    }
];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGF0YS1zb3VyY2UuY29uc3RhbnRzLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQHRzcy9zZGsvIiwic291cmNlcyI6WyJsaWIvZGF0YS1zb3VyY2UvZGF0YS1zb3VyY2UuY29uc3RhbnRzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFBQSxPQUFPLEVBQUUsc0JBQXNCLEVBQUUsTUFBTSw2QkFBNkIsQ0FBQzs7QUFJckUsTUFBTSxLQUFPLHVCQUF1QixHQUFHLEtBQUs7O0FBQzVDLE1BQU0sS0FBTyxxQkFBcUIsR0FBeUI7SUFDekQsRUFBRSxLQUFLLEVBQUUsWUFBWSxFQUFFLFFBQVEsRUFBRSxzQkFBc0IsQ0FBQyxTQUFTLEVBQUUsUUFBUSxFQUFFLElBQUksRUFBRSxvQkFBb0IsRUFBRSxJQUFJLEVBQUU7SUFDL0csRUFBRSxLQUFLLEVBQUUsUUFBUSxFQUFFLFFBQVEsRUFBRSxzQkFBc0IsQ0FBQyxPQUFPLEVBQUUsUUFBUSxFQUFFLEtBQUssRUFBRSxvQkFBb0IsRUFBRSxJQUFJLEVBQUU7SUFDMUc7UUFDRSxLQUFLLEVBQUUsNEJBQTRCO1FBQ25DLFFBQVEsRUFBRSxzQkFBc0IsQ0FBQyxpQkFBaUI7UUFDbEQsUUFBUSxFQUFFLElBQUk7UUFDZCxvQkFBb0IsRUFBRSxLQUFLO0tBQzVCO0lBQ0QsRUFBRSxLQUFLLEVBQUUsUUFBUSxFQUFFLFFBQVEsRUFBRSxzQkFBc0IsQ0FBQyxNQUFNLEVBQUUsUUFBUSxFQUFFLEtBQUssRUFBRSxvQkFBb0IsRUFBRSxLQUFLLEVBQUU7SUFDMUcsRUFBRSxLQUFLLEVBQUUsUUFBUSxFQUFFLFFBQVEsRUFBRSxzQkFBc0IsQ0FBQyxZQUFZLEVBQUUsUUFBUSxFQUFFLElBQUksRUFBRSxNQUFNLEVBQUUsSUFBSSxFQUFFLG9CQUFvQixFQUFFLEtBQUssRUFBRTtDQUM5SDs7QUFFRCxNQUFNLEtBQU8sb0JBQW9CLEdBQXVGO0lBQ3RIO1FBQ0UsSUFBSSxFQUFFLHVCQUF1QjtRQUM3QixZQUFZLEVBQUUsc0JBQXNCLENBQUMsU0FBUztRQUM5QyxnQkFBZ0IsRUFBRSxpRkFBaUY7Y0FDL0YseUVBQXlFO0tBQzlFO0lBQ0Q7UUFDRSxJQUFJLEVBQUUsd0NBQXdDO1FBQzlDLFlBQVksRUFBRSxzQkFBc0IsQ0FBQyxpQkFBaUI7UUFDdEQsZ0JBQWdCLEVBQUUsc0VBQXNFO0tBQ3pGO0lBQ0Q7UUFDRSxJQUFJLEVBQUUsUUFBUTtRQUNkLFlBQVksRUFBRSxzQkFBc0IsQ0FBQyxPQUFPO1FBQzVDLGdCQUFnQixFQUFFLDREQUE0RDtLQUMvRTtJQUNEO1FBQ0UsSUFBSSxFQUFFLDZDQUE2QztRQUNuRCxZQUFZLEVBQUUsc0JBQXNCLENBQUMsTUFBTTtRQUMzQyxnQkFBZ0IsRUFBRSxnRUFBZ0U7Y0FDOUUsNkZBQTZGO2NBQzdGLDJDQUEyQztLQUNoRDtJQUNEO1FBQ0UsSUFBSSxFQUFFLDBDQUEwQztRQUNoRCxZQUFZLEVBQUUsc0JBQXNCLENBQUMsTUFBTTtRQUMzQyxnQkFBZ0IsRUFBRSxtRUFBbUU7S0FDdEY7SUFDRDtRQUNFLElBQUksRUFBRSw2Q0FBNkM7UUFDbkQsWUFBWSxFQUFFLHNCQUFzQixDQUFDLFlBQVk7UUFDakQsZ0JBQWdCLEVBQUUsZ0VBQWdFO2NBQzlFLDZGQUE2RjtjQUM3RiwyQ0FBMkM7S0FDaEQ7SUFDRDtRQUNFLElBQUksRUFBRSwwQ0FBMEM7UUFDaEQsWUFBWSxFQUFFLHNCQUFzQixDQUFDLFlBQVk7UUFDakQsZ0JBQWdCLEVBQUUsbUVBQW1FO0tBQ3RGO0NBQ0YiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBEYXRhU291cmNlUHJvdmlkZXJUeXBlIH0gZnJvbSAnLi9kYXRhLXNvdXJjZS1wcm92aWRlci10eXBlJztcbmltcG9ydCB7IERhdGFTb3VyY2VQcm92aWRlciB9IGZyb20gJy4vZGF0YS1zb3VyY2UtcHJvdmlkZXInO1xuXG5cbmV4cG9ydCBjb25zdCBTRUxFQ1RfQUxMX1dIRVJFX0NMQVVTRSA9ICcxPTEnO1xuZXhwb3J0IGNvbnN0IERBVEFfU09VUkNFX1BST1ZJREVSUzogRGF0YVNvdXJjZVByb3ZpZGVyW10gPSBbXG4gIHsgYWxpYXM6ICdTUUwgU2VydmVyJywgcHJvdmlkZXI6IERhdGFTb3VyY2VQcm92aWRlclR5cGUuU3FsU2VydmVyLCBjYW5Vc2VFRjogdHJ1ZSwgc2NoZWR1bGluZ0NvbXBhdGlibGU6IHRydWUgfSxcbiAgeyBhbGlhczogJ1NRTGl0ZScsIHByb3ZpZGVyOiBEYXRhU291cmNlUHJvdmlkZXJUeXBlLlNxbExpdGUsIGNhblVzZUVGOiBmYWxzZSwgc2NoZWR1bGluZ0NvbXBhdGlibGU6IHRydWUgfSxcbiAge1xuICAgIGFsaWFzOiAnU1FMIFNlcnZlciBDb21wYWN0IEVkaXRpb24nLFxuICAgIHByb3ZpZGVyOiBEYXRhU291cmNlUHJvdmlkZXJUeXBlLlNxbENvbXBhY3RFZGl0aW9uLFxuICAgIGNhblVzZUVGOiB0cnVlLFxuICAgIHNjaGVkdWxpbmdDb21wYXRpYmxlOiBmYWxzZVxuICB9LFxuICB7IGFsaWFzOiAnT3JhY2xlJywgcHJvdmlkZXI6IERhdGFTb3VyY2VQcm92aWRlclR5cGUuT3JhY2xlLCBjYW5Vc2VFRjogZmFsc2UsIHNjaGVkdWxpbmdDb21wYXRpYmxlOiBmYWxzZSB9LFxuICB7IGFsaWFzOiAnT3JhY2xlJywgcHJvdmlkZXI6IERhdGFTb3VyY2VQcm92aWRlclR5cGUuT3JhY2xlRGV2QXJ0LCBjYW5Vc2VFRjogdHJ1ZSwgZWZPbmx5OiB0cnVlLCBzY2hlZHVsaW5nQ29tcGF0aWJsZTogZmFsc2UgfVxuXTtcblxuZXhwb3J0IGNvbnN0IERBVEFfU09VUkNFX0VYQU1QTEVTOiB7IG5hbWU6IHN0cmluZywgcHJvdmlkZXJOYW1lOiBEYXRhU291cmNlUHJvdmlkZXJUeXBlLCBjb25uZWN0aW9uU3RyaW5nOiBzdHJpbmcgfVtdID0gW1xuICB7XG4gICAgbmFtZTogJ1NRTCBTZXJ2ZXIgQ29ubmVjdGlvbicsXG4gICAgcHJvdmlkZXJOYW1lOiBEYXRhU291cmNlUHJvdmlkZXJUeXBlLlNxbFNlcnZlcixcbiAgICBjb25uZWN0aW9uU3RyaW5nOiAnZGF0YSBzb3VyY2U9WU9VUl9IT1NULCAxNDMzO2luaXRpYWwgY2F0YWxvZz1ZT1VSX0RCO3BlcnNpc3Qgc2VjdXJpdHkgaW5mbz1UcnVlOydcbiAgICAgICsgJ3VzZXIgaWQ9WU9VUl9VU0VSO3Bhc3N3b3JkPVlPVVJfUEFTU1dPUkQ7TXVsdGlwbGVBY3RpdmVSZXN1bHRTZXRzPXRydWU7J1xuICB9LFxuICB7XG4gICAgbmFtZTogJ1NRTCBTZXJ2ZXIgQ29tcGFjdCAoU1FMIENFKSBDb25uZWN0aW9uJyxcbiAgICBwcm92aWRlck5hbWU6IERhdGFTb3VyY2VQcm92aWRlclR5cGUuU3FsQ29tcGFjdEVkaXRpb24sXG4gICAgY29ubmVjdGlvblN0cmluZzogJ0RhdGEgU291cmNlPXxEYXRhRGlyZWN0b3J5fFxcXFxZT1VSX0RCX05BTUUuc2RmO01heCBEYXRhYmFzZSBTaXplPTQwOTEnXG4gIH0sXG4gIHtcbiAgICBuYW1lOiAnU1FMaXRlJyxcbiAgICBwcm92aWRlck5hbWU6IERhdGFTb3VyY2VQcm92aWRlclR5cGUuU3FsTGl0ZSxcbiAgICBjb25uZWN0aW9uU3RyaW5nOiAnRGF0YSBTb3VyY2U9fERhdGFEaXJlY3Rvcnl8XFxcXFlPVVJfREJfTkFNRS5zcWxpdGU7VmVyc2lvbj0zJ1xuICB9LFxuICB7XG4gICAgbmFtZTogJ09yYWNsZSBDb25uZWN0aW9uICh3aXRob3V0IFROUyBuYW1lcyBlbnRyeSknLFxuICAgIHByb3ZpZGVyTmFtZTogRGF0YVNvdXJjZVByb3ZpZGVyVHlwZS5PcmFjbGUsXG4gICAgY29ubmVjdGlvblN0cmluZzogJ0RhdGEgU291cmNlPShERVNDUklQVElPTj0oQUREUkVTU19MSVNUPShBRERSRVNTPShQUk9UT0NPTD1UQ1ApJ1xuICAgICAgKyAnKEhPU1Q9WU9VUl9IT1NUKShQT1JUPTE1MjIpKSkoQ09OTkVDVF9EQVRBPShTRVJWRVI9REVESUNBVEVEKShTRVJWSUNFX05BTUU9WU9VUl9TRVJWSUNFKSkpOydcbiAgICAgICsgJ1VzZXIgSWQ9WU9VUl9VU0VSO1Bhc3N3b3JkPVlPVVJfUEFTU1dPUkQ7J1xuICB9LFxuICB7XG4gICAgbmFtZTogJ09yYWNsZSBDb25uZWN0aW9uICh3aXRoIFROUyBuYW1lcyBlbnRyeSknLFxuICAgIHByb3ZpZGVyTmFtZTogRGF0YVNvdXJjZVByb3ZpZGVyVHlwZS5PcmFjbGUsXG4gICAgY29ubmVjdGlvblN0cmluZzogJ0RhdGEgU291cmNlPVlPVVJfU09VUkNFO1VzZXIgSWQ9WU9VUl9VU0VSO1Bhc3N3b3JkPVlPVVJfUEFTU1dPUkQ7J1xuICB9LFxuICB7XG4gICAgbmFtZTogJ09yYWNsZSBDb25uZWN0aW9uICh3aXRob3V0IFROUyBuYW1lcyBlbnRyeSknLFxuICAgIHByb3ZpZGVyTmFtZTogRGF0YVNvdXJjZVByb3ZpZGVyVHlwZS5PcmFjbGVEZXZBcnQsXG4gICAgY29ubmVjdGlvblN0cmluZzogJ0RhdGEgU291cmNlPShERVNDUklQVElPTj0oQUREUkVTU19MSVNUPShBRERSRVNTPShQUk9UT0NPTD1UQ1ApJ1xuICAgICAgKyAnKEhPU1Q9WU9VUl9IT1NUKShQT1JUPTE1MjIpKSkoQ09OTkVDVF9EQVRBPShTRVJWRVI9REVESUNBVEVEKShTRVJWSUNFX05BTUU9WU9VUl9TRVJWSUNFKSkpOydcbiAgICAgICsgJ1VzZXIgSWQ9WU9VUl9VU0VSO1Bhc3N3b3JkPVlPVVJfUEFTU1dPUkQ7J1xuICB9LFxuICB7XG4gICAgbmFtZTogJ09yYWNsZSBDb25uZWN0aW9uICh3aXRoIFROUyBuYW1lcyBlbnRyeSknLFxuICAgIHByb3ZpZGVyTmFtZTogRGF0YVNvdXJjZVByb3ZpZGVyVHlwZS5PcmFjbGVEZXZBcnQsXG4gICAgY29ubmVjdGlvblN0cmluZzogJ0RhdGEgU291cmNlPVlPVVJfU09VUkNFO1VzZXIgSWQ9WU9VUl9VU0VSO1Bhc3N3b3JkPVlPVVJfUEFTU1dPUkQ7J1xuICB9XG5dO1xuIl19