/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { NetworkFeature } from './networks/network-feature';
import { EventFeature } from './events/event-feature';
/**
 * @param {?} feature
 * @param {?} layerId
 * @param {?} lrsMeta
 * @return {?}
 */
export function toLrsFeature(feature, layerId, lrsMeta) {
    /** @type {?} */
    var layerInfo = lrsMeta.getLayerDetail(layerId);
    /** @type {?} */
    var lrsFeature;
    if (layerInfo.isNetworkLayer) {
        lrsFeature = new NetworkFeature(feature, (/** @type {?} */ (layerInfo.layer)));
    }
    else if (layerInfo.isEventLayer) {
        lrsFeature = new EventFeature(feature, (/** @type {?} */ (layerInfo.layer)));
    }
    return lrsFeature;
}
// Feature<G extends GeometryObject | null = Geometry, P = GeoJsonProperties> extends GeoJsonObject
/**
 * @param {?=} properties
 * @param {?=} geometry
 * @return {?}
 */
export function toFeature(properties, geometry) {
    if (properties === void 0) { properties = {}; }
    if (geometry === void 0) { geometry = null; }
    return {
        type: 'Feature',
        geometry: geometry,
        properties: properties
    };
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZmVhdHVyZS5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0B0c3Mvc2RrLyIsInNvdXJjZXMiOlsibGliL2xycy9mZWF0dXJlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFNQSxPQUFPLEVBQUUsY0FBYyxFQUFFLE1BQU0sNEJBQTRCLENBQUM7QUFHNUQsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLHdCQUF3QixDQUFDOzs7Ozs7O0FBR3RELE1BQU0sVUFBVSxZQUFZLENBQUMsT0FBZ0IsRUFBRSxPQUFlLEVBQUUsT0FBb0I7O1FBQzVFLFNBQVMsR0FBRyxPQUFPLENBQUMsY0FBYyxDQUFDLE9BQU8sQ0FBQzs7UUFDN0MsVUFBc0I7SUFFMUIsSUFBSSxTQUFTLENBQUMsY0FBYyxFQUFFO1FBQzVCLFVBQVUsR0FBRyxJQUFJLGNBQWMsQ0FBQyxPQUFPLEVBQUUsbUJBQUEsU0FBUyxDQUFDLEtBQUssRUFBZ0IsQ0FBQyxDQUFDO0tBQzNFO1NBQU0sSUFBSSxTQUFTLENBQUMsWUFBWSxFQUFFO1FBQ2pDLFVBQVUsR0FBRyxJQUFJLFlBQVksQ0FBQyxPQUFPLEVBQUUsbUJBQUEsU0FBUyxDQUFDLEtBQUssRUFBYyxDQUFDLENBQUM7S0FDdkU7SUFFRCxPQUFPLFVBQVUsQ0FBQztBQUNwQixDQUFDOzs7Ozs7O0FBR0QsTUFBTSxVQUFVLFNBQVMsQ0FBQyxVQUF5QyxFQUFFLFFBQXlCO0lBQXBFLDJCQUFBLEVBQUEsZUFBeUM7SUFBRSx5QkFBQSxFQUFBLGVBQXlCO0lBQzVGLE9BQU87UUFDTCxJQUFJLEVBQUUsU0FBUztRQUNmLFFBQVEsVUFBQTtRQUNSLFVBQVUsWUFBQTtLQUNYLENBQUM7QUFDSixDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLy8gM3JkIFBhcnR5LlxuaW1wb3J0IHsgRmVhdHVyZSwgR2VvbWV0cnkgfSBmcm9tICdnZW9qc29uJztcblxuLy8gVFNTLlxuaW1wb3J0IHsgTHJzTWV0YWRhdGEgfSBmcm9tICcuL2xycy1tZXRhZGF0YSc7XG5pbXBvcnQgeyBMcnNGZWF0dXJlIH0gZnJvbSAnLi9scnMtZmVhdHVyZSc7XG5pbXBvcnQgeyBOZXR3b3JrRmVhdHVyZSB9IGZyb20gJy4vbmV0d29ya3MvbmV0d29yay1mZWF0dXJlJztcbmltcG9ydCB7IEV2ZW50TGF5ZXIgfSBmcm9tICcuL2V2ZW50cy9ldmVudC1sYXllcic7XG5pbXBvcnQgeyBOZXR3b3JrTGF5ZXIgfSBmcm9tICcuL25ldHdvcmtzL25ldHdvcmstbGF5ZXInO1xuaW1wb3J0IHsgRXZlbnRGZWF0dXJlIH0gZnJvbSAnLi9ldmVudHMvZXZlbnQtZmVhdHVyZSc7XG5cblxuZXhwb3J0IGZ1bmN0aW9uIHRvTHJzRmVhdHVyZShmZWF0dXJlOiBGZWF0dXJlLCBsYXllcklkOiBudW1iZXIsIGxyc01ldGE6IExyc01ldGFkYXRhKSB7XG4gIGNvbnN0IGxheWVySW5mbyA9IGxyc01ldGEuZ2V0TGF5ZXJEZXRhaWwobGF5ZXJJZCk7XG4gIGxldCBscnNGZWF0dXJlOiBMcnNGZWF0dXJlO1xuXG4gIGlmIChsYXllckluZm8uaXNOZXR3b3JrTGF5ZXIpIHtcbiAgICBscnNGZWF0dXJlID0gbmV3IE5ldHdvcmtGZWF0dXJlKGZlYXR1cmUsIGxheWVySW5mby5sYXllciBhcyBOZXR3b3JrTGF5ZXIpO1xuICB9IGVsc2UgaWYgKGxheWVySW5mby5pc0V2ZW50TGF5ZXIpIHtcbiAgICBscnNGZWF0dXJlID0gbmV3IEV2ZW50RmVhdHVyZShmZWF0dXJlLCBsYXllckluZm8ubGF5ZXIgYXMgRXZlbnRMYXllcik7XG4gIH1cblxuICByZXR1cm4gbHJzRmVhdHVyZTtcbn1cblxuLy8gRmVhdHVyZTxHIGV4dGVuZHMgR2VvbWV0cnlPYmplY3QgfCBudWxsID0gR2VvbWV0cnksIFAgPSBHZW9Kc29uUHJvcGVydGllcz4gZXh0ZW5kcyBHZW9Kc29uT2JqZWN0XG5leHBvcnQgZnVuY3Rpb24gdG9GZWF0dXJlKHByb3BlcnRpZXM6IHsgW25hbWU6IHN0cmluZ106IGFueTsgfSA9IHt9LCBnZW9tZXRyeTogR2VvbWV0cnkgPSBudWxsKTogRmVhdHVyZSB7XG4gIHJldHVybiB7XG4gICAgdHlwZTogJ0ZlYXR1cmUnLFxuICAgIGdlb21ldHJ5LFxuICAgIHByb3BlcnRpZXNcbiAgfTtcbn1cbiJdfQ==