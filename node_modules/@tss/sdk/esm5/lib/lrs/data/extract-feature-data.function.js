/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
/** @type {?} */
export var ALL_FIELD_CRITERIA = '*';
/**
 * @template T
 * @param {?} layerId
 * @param {?=} field
 * @param {...?} features
 * @return {?}
 */
export function extractFeatureDataByLayer(layerId, field) {
    if (field === void 0) { field = '*'; }
    var features = [];
    for (var _i = 2; _i < arguments.length; _i++) {
        features[_i - 2] = arguments[_i];
    }
    return extractFeatureData.apply(void 0, tslib_1.__spread([field], features.filter((/**
     * @param {?} feature
     * @return {?}
     */
    function (feature) { return feature.layerId === layerId; }))));
}
/**
 * @template T
 * @param {?=} field
 * @param {...?} features
 * @return {?}
 */
export function extractFeatureData(field) {
    if (field === void 0) { field = ALL_FIELD_CRITERIA; }
    var features = [];
    for (var _i = 1; _i < arguments.length; _i++) {
        features[_i - 1] = arguments[_i];
    }
    return features.map((/**
     * @param {?} feature
     * @return {?}
     */
    function (feature) { return field === ALL_FIELD_CRITERIA
        ? feature.properties
        : feature.properties[field]; }));
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZXh0cmFjdC1mZWF0dXJlLWRhdGEuZnVuY3Rpb24uanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AdHNzL3Nkay8iLCJzb3VyY2VzIjpbImxpYi9scnMvZGF0YS9leHRyYWN0LWZlYXR1cmUtZGF0YS5mdW5jdGlvbi50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7QUFPQSxNQUFNLEtBQU8sa0JBQWtCLEdBQUcsR0FBRzs7Ozs7Ozs7QUFFckMsTUFBTSxVQUFVLHlCQUF5QixDQUFJLE9BQWUsRUFBRSxLQUFtQjtJQUFuQixzQkFBQSxFQUFBLFdBQW1CO0lBQUUsa0JBQXlCO1NBQXpCLFVBQXlCLEVBQXpCLHFCQUF5QixFQUF6QixJQUF5QjtRQUF6QixpQ0FBeUI7O0lBQzFHLE9BQU8sa0JBQWtCLGlDQUFJLEtBQUssR0FBSyxRQUFRLENBQUMsTUFBTTs7OztJQUFDLFVBQUEsT0FBTyxJQUFJLE9BQUEsT0FBTyxDQUFDLE9BQU8sS0FBSyxPQUFPLEVBQTNCLENBQTJCLEVBQUMsR0FBRTtBQUNsRyxDQUFDOzs7Ozs7O0FBRUQsTUFBTSxVQUFVLGtCQUFrQixDQUFJLEtBQWtDO0lBQWxDLHNCQUFBLEVBQUEsMEJBQWtDO0lBQUUsa0JBQXNCO1NBQXRCLFVBQXNCLEVBQXRCLHFCQUFzQixFQUF0QixJQUFzQjtRQUF0QixpQ0FBc0I7O0lBQzlGLE9BQU8sUUFBUSxDQUFDLEdBQUc7Ozs7SUFBQyxVQUFBLE9BQU8sSUFBSSxPQUFBLEtBQUssS0FBSyxrQkFBa0I7UUFDekQsQ0FBQyxDQUFDLE9BQU8sQ0FBQyxVQUFVO1FBQ3BCLENBQUMsQ0FBQyxPQUFPLENBQUMsVUFBVSxDQUFDLEtBQUssQ0FBQyxFQUZFLENBRUYsRUFBQyxDQUFDO0FBQ2pDLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyAzcmQgUGFydHkuXG5pbXBvcnQgeyBGZWF0dXJlIH0gZnJvbSAnZ2VvanNvbic7XG5cbi8vIFRTUy5cbmltcG9ydCB7IE1hcEZlYXR1cmUgfSBmcm9tICcuLi8uLi9tYXBzL21hcC1mZWF0dXJlJztcblxuXG5leHBvcnQgY29uc3QgQUxMX0ZJRUxEX0NSSVRFUklBID0gJyonO1xuXG5leHBvcnQgZnVuY3Rpb24gZXh0cmFjdEZlYXR1cmVEYXRhQnlMYXllcjxUPihsYXllcklkOiBudW1iZXIsIGZpZWxkOiBzdHJpbmcgPSAnKicsIC4uLmZlYXR1cmVzOiBNYXBGZWF0dXJlW10pOiBUW10ge1xuICByZXR1cm4gZXh0cmFjdEZlYXR1cmVEYXRhPFQ+KGZpZWxkLCAuLi5mZWF0dXJlcy5maWx0ZXIoZmVhdHVyZSA9PiBmZWF0dXJlLmxheWVySWQgPT09IGxheWVySWQpKTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGV4dHJhY3RGZWF0dXJlRGF0YTxUPihmaWVsZDogc3RyaW5nID0gQUxMX0ZJRUxEX0NSSVRFUklBLCAuLi5mZWF0dXJlczogRmVhdHVyZVtdKTogVFtdIHtcbiAgcmV0dXJuIGZlYXR1cmVzLm1hcChmZWF0dXJlID0+IGZpZWxkID09PSBBTExfRklFTERfQ1JJVEVSSUFcbiAgICA/IGZlYXR1cmUucHJvcGVydGllc1xuICAgIDogZmVhdHVyZS5wcm9wZXJ0aWVzW2ZpZWxkXSk7XG59XG4iXX0=