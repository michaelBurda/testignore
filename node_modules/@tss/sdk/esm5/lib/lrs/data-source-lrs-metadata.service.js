/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
// Angular.
import { HttpClient } from '@angular/common/http';
import { Injectable } from '@angular/core';
// TSS.
import { LrsConfig } from './lrs.config';
import { join } from '../core/url/join.function';
import { BaseResourceService } from '../core/resource/base-resource.service';
import * as i0 from "@angular/core";
import * as i1 from "@angular/common/http";
import * as i2 from "./lrs.config";
var DataSourceLrsMetadataService = /** @class */ (function (_super) {
    tslib_1.__extends(DataSourceLrsMetadataService, _super);
    function DataSourceLrsMetadataService(http, config) {
        var _this = _super.call(this, http, {
            url: join(config.serviceUrl, config.dataSourceLrsMetadataEndpoint),
            idFieldName: 'dataSourceId'
        }) || this;
        _this.http = http;
        return _this;
    }
    /**
     * @param {?} entity
     * @param {?=} routeTokens
     * @param {?=} params
     * @return {?}
     */
    DataSourceLrsMetadataService.prototype.create = /**
     * @param {?} entity
     * @param {?=} routeTokens
     * @param {?=} params
     * @return {?}
     */
    function (entity, routeTokens, params) {
        routeTokens = routeTokens || {};
        routeTokens.id = entity.dataSourceId;
        return _super.prototype.create.call(this, entity, routeTokens, params);
    };
    DataSourceLrsMetadataService.decorators = [
        { type: Injectable, args: [{
                    providedIn: 'root'
                },] }
    ];
    /** @nocollapse */
    DataSourceLrsMetadataService.ctorParameters = function () { return [
        { type: HttpClient },
        { type: LrsConfig }
    ]; };
    /** @nocollapse */ DataSourceLrsMetadataService.ngInjectableDef = i0.defineInjectable({ factory: function DataSourceLrsMetadataService_Factory() { return new DataSourceLrsMetadataService(i0.inject(i1.HttpClient), i0.inject(i2.LrsConfig)); }, token: DataSourceLrsMetadataService, providedIn: "root" });
    return DataSourceLrsMetadataService;
}(BaseResourceService));
export { DataSourceLrsMetadataService };
if (false) {
    /**
     * @type {?}
     * @protected
     */
    DataSourceLrsMetadataService.prototype.http;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGF0YS1zb3VyY2UtbHJzLW1ldGFkYXRhLnNlcnZpY2UuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AdHNzL3Nkay8iLCJzb3VyY2VzIjpbImxpYi9scnMvZGF0YS1zb3VyY2UtbHJzLW1ldGFkYXRhLnNlcnZpY2UudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQ0EsT0FBTyxFQUFFLFVBQVUsRUFBYyxNQUFNLHNCQUFzQixDQUFDO0FBQzlELE9BQU8sRUFBRSxVQUFVLEVBQUUsTUFBTSxlQUFlLENBQUM7O0FBTTNDLE9BQU8sRUFBRSxTQUFTLEVBQUUsTUFBTSxjQUFjLENBQUM7QUFFekMsT0FBTyxFQUFFLElBQUksRUFBRSxNQUFNLDJCQUEyQixDQUFDO0FBQ2pELE9BQU8sRUFBRSxtQkFBbUIsRUFBRSxNQUFNLHdDQUF3QyxDQUFDOzs7O0FBRzdFO0lBR2tELHdEQUFnQztJQUNoRixzQ0FBc0IsSUFBZ0IsRUFBRSxNQUFpQjtRQUF6RCxZQUNFLGtCQUFNLElBQUksRUFBRTtZQUNWLEdBQUcsRUFBRSxJQUFJLENBQUMsTUFBTSxDQUFDLFVBQVUsRUFBRSxNQUFNLENBQUMsNkJBQTZCLENBQUM7WUFDbEUsV0FBVyxFQUFFLGNBQWM7U0FDNUIsQ0FBQyxTQUNIO1FBTHFCLFVBQUksR0FBSixJQUFJLENBQVk7O0lBS3RDLENBQUM7Ozs7Ozs7SUFFRCw2Q0FBTTs7Ozs7O0lBQU4sVUFBTyxNQUFtQixFQUFFLFdBQWlCLEVBQUUsTUFBbUI7UUFDaEUsV0FBVyxHQUFHLFdBQVcsSUFBSSxFQUFFLENBQUM7UUFDaEMsV0FBVyxDQUFDLEVBQUUsR0FBRyxNQUFNLENBQUMsWUFBWSxDQUFDO1FBRXJDLE9BQU8saUJBQU0sTUFBTSxZQUFDLE1BQU0sRUFBRSxXQUFXLEVBQUUsTUFBTSxDQUFDLENBQUM7SUFDbkQsQ0FBQzs7Z0JBaEJGLFVBQVUsU0FBQztvQkFDVixVQUFVLEVBQUUsTUFBTTtpQkFDbkI7Ozs7Z0JBZlEsVUFBVTtnQkFPVixTQUFTOzs7dUNBUmxCO0NBK0JDLEFBakJELENBR2tELG1CQUFtQixHQWNwRTtTQWRZLDRCQUE0Qjs7Ozs7O0lBQzNCLDRDQUEwQiIsInNvdXJjZXNDb250ZW50IjpbIi8vIEFuZ3VsYXIuXG5pbXBvcnQgeyBIdHRwQ2xpZW50LCBIdHRwUGFyYW1zIH0gZnJvbSAnQGFuZ3VsYXIvY29tbW9uL2h0dHAnO1xuaW1wb3J0IHsgSW5qZWN0YWJsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuXG4vLyAzcmQgUGFydHkuXG5pbXBvcnQgeyBPYnNlcnZhYmxlIH0gZnJvbSAncnhqcyc7XG5cbi8vIFRTUy5cbmltcG9ydCB7IExyc0NvbmZpZyB9IGZyb20gJy4vbHJzLmNvbmZpZyc7XG5pbXBvcnQgeyBMcnNNZXRhZGF0YSB9IGZyb20gJy4vbHJzLW1ldGFkYXRhJztcbmltcG9ydCB7IGpvaW4gfSBmcm9tICcuLi9jb3JlL3VybC9qb2luLmZ1bmN0aW9uJztcbmltcG9ydCB7IEJhc2VSZXNvdXJjZVNlcnZpY2UgfSBmcm9tICcuLi9jb3JlL3Jlc291cmNlL2Jhc2UtcmVzb3VyY2Uuc2VydmljZSc7XG5cblxuQEluamVjdGFibGUoe1xuICBwcm92aWRlZEluOiAncm9vdCdcbn0pXG5leHBvcnQgY2xhc3MgRGF0YVNvdXJjZUxyc01ldGFkYXRhU2VydmljZSBleHRlbmRzIEJhc2VSZXNvdXJjZVNlcnZpY2U8THJzTWV0YWRhdGE+IHtcbiAgY29uc3RydWN0b3IocHJvdGVjdGVkIGh0dHA6IEh0dHBDbGllbnQsIGNvbmZpZzogTHJzQ29uZmlnKSB7XG4gICAgc3VwZXIoaHR0cCwge1xuICAgICAgdXJsOiBqb2luKGNvbmZpZy5zZXJ2aWNlVXJsLCBjb25maWcuZGF0YVNvdXJjZUxyc01ldGFkYXRhRW5kcG9pbnQpLFxuICAgICAgaWRGaWVsZE5hbWU6ICdkYXRhU291cmNlSWQnXG4gICAgfSk7XG4gIH1cblxuICBjcmVhdGUoZW50aXR5OiBMcnNNZXRhZGF0YSwgcm91dGVUb2tlbnM/OiBhbnksIHBhcmFtcz86IEh0dHBQYXJhbXMpOiBPYnNlcnZhYmxlPExyc01ldGFkYXRhPiB7XG4gICAgcm91dGVUb2tlbnMgPSByb3V0ZVRva2VucyB8fCB7fTtcbiAgICByb3V0ZVRva2Vucy5pZCA9IGVudGl0eS5kYXRhU291cmNlSWQ7XG5cbiAgICByZXR1cm4gc3VwZXIuY3JlYXRlKGVudGl0eSwgcm91dGVUb2tlbnMsIHBhcmFtcyk7XG4gIH1cbn1cbiJdfQ==