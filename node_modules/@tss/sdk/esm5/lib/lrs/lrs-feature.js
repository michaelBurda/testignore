/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { MapFeature } from '../maps/map-feature';
import { isLine } from '../geometry/geometry/is-line.function';
import { isPoint } from '../geometry/geometry/is-point.function';
import { WGS_84_SRID } from '../geometry/geometry.constants';
import { clone } from '../core/clone/clone.function';
var LrsFeature = /** @class */ (function (_super) {
    tslib_1.__extends(LrsFeature, _super);
    function LrsFeature(feature, layer, spatialReferenceId) {
        if (spatialReferenceId === void 0) { spatialReferenceId = WGS_84_SRID; }
        var _this = _super.call(this, feature, layer, spatialReferenceId) || this;
        if (_this.geometry && _this.isGeometryTypeInvalid()) {
            throw new Error("Unsupported geometry type of " + _this.geometry.type + " detected.");
        }
        return _this;
    }
    Object.defineProperty(LrsFeature.prototype, "layerId", {
        get: /**
         * @return {?}
         */
        function () {
            return this.layer ? this.layer.id : null;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(LrsFeature.prototype, "fromDate", {
        get: /**
         * @return {?}
         */
        function () {
            return this.getValue(this.layer.fromDateFieldName);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(LrsFeature.prototype, "toDate", {
        get: /**
         * @return {?}
         */
        function () {
            return this.getValue(this.layer.toDateFieldName);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(LrsFeature.prototype, "isRetired", {
        get: /**
         * @return {?}
         */
        function () {
            return Boolean(this.toDate);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(LrsFeature.prototype, "isActive", {
        get: /**
         * @return {?}
         */
        function () {
            return !this.isRetired;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * @template THIS
     * @this {THIS}
     * @param {?} date
     * @return {THIS}
     */
    LrsFeature.prototype.setFromDate = /**
     * @template THIS
     * @this {THIS}
     * @param {?} date
     * @return {THIS}
     */
    function (date) {
        return (/** @type {?} */ (this)).setValue((/** @type {?} */ (this)).layer.fromDateFieldName, date);
    };
    /**
     * @template THIS
     * @this {THIS}
     * @param {?} date
     * @return {THIS}
     */
    LrsFeature.prototype.setToDate = /**
     * @template THIS
     * @this {THIS}
     * @param {?} date
     * @return {THIS}
     */
    function (date) {
        return (/** @type {?} */ (this)).setValue((/** @type {?} */ (this)).layer.toDateFieldName, date);
    };
    /**
     * @template THIS
     * @this {THIS}
     * @return {THIS}
     */
    LrsFeature.prototype.retire = /**
     * @template THIS
     * @this {THIS}
     * @return {THIS}
     */
    function () {
        if ((/** @type {?} */ (this)).layer.toDateFieldName) {
            (/** @type {?} */ (this)).setValue((/** @type {?} */ (this)).layer.toDateFieldName, new Date());
        }
        return (/** @type {?} */ (this));
    };
    /**
     * @return {?}
     */
    LrsFeature.prototype.clone = /**
     * @return {?}
     */
    function () {
        /** @type {?} */
        var copyFeature = clone(this.toFeature());
        return new LrsFeature(copyFeature, this.layer);
    };
    /**
     * @protected
     * @return {?}
     */
    LrsFeature.prototype.isGeometryTypeValid = /**
     * @protected
     * @return {?}
     */
    function () {
        return isLine(this.geometry) || isPoint(this.geometry);
    };
    /**
     * @private
     * @return {?}
     */
    LrsFeature.prototype.isGeometryTypeInvalid = /**
     * @private
     * @return {?}
     */
    function () {
        return !this.isGeometryTypeValid();
    };
    return LrsFeature;
}(MapFeature));
export { LrsFeature };
if (false) {
    /** @type {?} */
    LrsFeature.prototype.routeId;
    /** @type {?} */
    LrsFeature.prototype.fromMeasure;
    /** @type {?} */
    LrsFeature.prototype.toMeasure;
    /** @type {?} */
    LrsFeature.prototype.layer;
    /** @type {?} */
    LrsFeature.prototype.displayValue;
    /** @type {?} */
    LrsFeature.prototype.styleValue;
    /** @type {?} */
    LrsFeature.prototype.viewDate;
    /** @type {?} */
    LrsFeature.prototype.gdbVersion;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibHJzLWZlYXR1cmUuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AdHNzL3Nkay8iLCJzb3VyY2VzIjpbImxpYi9scnMvbHJzLWZlYXR1cmUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFLQSxPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0scUJBQXFCLENBQUM7QUFDakQsT0FBTyxFQUFFLE1BQU0sRUFBRSxNQUFNLHVDQUF1QyxDQUFDO0FBQy9ELE9BQU8sRUFBRSxPQUFPLEVBQUUsTUFBTSx3Q0FBd0MsQ0FBQztBQUNqRSxPQUFPLEVBQUUsV0FBVyxFQUFFLE1BQU0sZ0NBQWdDLENBQUM7QUFFN0QsT0FBTyxFQUFFLEtBQUssRUFBRSxNQUFNLDhCQUE4QixDQUFDO0FBR3JEO0lBQWdDLHNDQUFVO0lBOEJ4QyxvQkFBWSxPQUFnQixFQUFFLEtBQWUsRUFBRSxrQkFBZ0M7UUFBaEMsbUNBQUEsRUFBQSxnQ0FBZ0M7UUFBL0UsWUFDRSxrQkFBTSxPQUFPLEVBQUUsS0FBSyxFQUFFLGtCQUFrQixDQUFDLFNBSzFDO1FBSEMsSUFBSSxLQUFJLENBQUMsUUFBUSxJQUFJLEtBQUksQ0FBQyxxQkFBcUIsRUFBRSxFQUFFO1lBQ2pELE1BQU0sSUFBSSxLQUFLLENBQUMsa0NBQWdDLEtBQUksQ0FBQyxRQUFRLENBQUMsSUFBSSxlQUFZLENBQUMsQ0FBQztTQUNqRjs7SUFDSCxDQUFDO0lBMUJELHNCQUFJLCtCQUFPOzs7O1FBQVg7WUFDRSxPQUFPLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUM7UUFDM0MsQ0FBQzs7O09BQUE7SUFFRCxzQkFBSSxnQ0FBUTs7OztRQUFaO1lBQ0UsT0FBTyxJQUFJLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsaUJBQWlCLENBQUMsQ0FBQztRQUNyRCxDQUFDOzs7T0FBQTtJQUVELHNCQUFJLDhCQUFNOzs7O1FBQVY7WUFDRSxPQUFPLElBQUksQ0FBQyxRQUFRLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxlQUFlLENBQUMsQ0FBQztRQUNuRCxDQUFDOzs7T0FBQTtJQUVELHNCQUFJLGlDQUFTOzs7O1FBQWI7WUFDRSxPQUFPLE9BQU8sQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUM7UUFDOUIsQ0FBQzs7O09BQUE7SUFFRCxzQkFBSSxnQ0FBUTs7OztRQUFaO1lBQ0UsT0FBTyxDQUFDLElBQUksQ0FBQyxTQUFTLENBQUM7UUFDekIsQ0FBQzs7O09BQUE7Ozs7Ozs7SUFVRCxnQ0FBVzs7Ozs7O0lBQVgsVUFBWSxJQUFVO1FBQ3BCLE9BQU8sbUJBQUEsSUFBSSxFQUFBLENBQUMsUUFBUSxDQUFDLG1CQUFBLElBQUksRUFBQSxDQUFDLEtBQUssQ0FBQyxpQkFBaUIsRUFBRSxJQUFJLENBQUMsQ0FBQztJQUMzRCxDQUFDOzs7Ozs7O0lBRUQsOEJBQVM7Ozs7OztJQUFULFVBQVUsSUFBVTtRQUNsQixPQUFPLG1CQUFBLElBQUksRUFBQSxDQUFDLFFBQVEsQ0FBQyxtQkFBQSxJQUFJLEVBQUEsQ0FBQyxLQUFLLENBQUMsZUFBZSxFQUFFLElBQUksQ0FBQyxDQUFDO0lBQ3pELENBQUM7Ozs7OztJQUVELDJCQUFNOzs7OztJQUFOO1FBQ0UsSUFBSSxtQkFBQSxJQUFJLEVBQUEsQ0FBQyxLQUFLLENBQUMsZUFBZSxFQUFFO1lBQzlCLG1CQUFBLElBQUksRUFBQSxDQUFDLFFBQVEsQ0FBQyxtQkFBQSxJQUFJLEVBQUEsQ0FBQyxLQUFLLENBQUMsZUFBZSxFQUFFLElBQUksSUFBSSxFQUFFLENBQUMsQ0FBQztTQUN2RDtRQUVELE9BQU8sbUJBQUEsSUFBSSxFQUFBLENBQUM7SUFDZCxDQUFDOzs7O0lBRUQsMEJBQUs7OztJQUFMOztZQUNRLFdBQVcsR0FBRyxLQUFLLENBQUMsSUFBSSxDQUFDLFNBQVMsRUFBRSxDQUFDO1FBQzNDLE9BQU8sSUFBSSxVQUFVLENBQUMsV0FBVyxFQUFFLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQztJQUNqRCxDQUFDOzs7OztJQUVTLHdDQUFtQjs7OztJQUE3QjtRQUNFLE9BQU8sTUFBTSxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsSUFBSSxPQUFPLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxDQUFDO0lBQ3pELENBQUM7Ozs7O0lBRU8sMENBQXFCOzs7O0lBQTdCO1FBQ0UsT0FBTyxDQUFDLElBQUksQ0FBQyxtQkFBbUIsRUFBRSxDQUFDO0lBQ3JDLENBQUM7SUFDSCxpQkFBQztBQUFELENBQUMsQUFsRUQsQ0FBZ0MsVUFBVSxHQWtFekM7Ozs7SUFqRUMsNkJBQWdCOztJQUNoQixpQ0FBb0I7O0lBQ3BCLCtCQUFrQjs7SUFDbEIsMkJBQWdCOztJQUNoQixrQ0FBa0I7O0lBQ2xCLGdDQUFnQjs7SUFDaEIsOEJBQWdCOztJQUNoQixnQ0FBb0IiLCJzb3VyY2VzQ29udGVudCI6WyIvLyAzcmQgUGFydHkuXG5pbXBvcnQgeyBGZWF0dXJlIH0gZnJvbSAnZ2VvanNvbic7XG5cbi8vIFRTUy5cbmltcG9ydCB7IExyc0xheWVyIH0gZnJvbSAnLi9scnMtbGF5ZXInO1xuaW1wb3J0IHsgTWFwRmVhdHVyZSB9IGZyb20gJy4uL21hcHMvbWFwLWZlYXR1cmUnO1xuaW1wb3J0IHsgaXNMaW5lIH0gZnJvbSAnLi4vZ2VvbWV0cnkvZ2VvbWV0cnkvaXMtbGluZS5mdW5jdGlvbic7XG5pbXBvcnQgeyBpc1BvaW50IH0gZnJvbSAnLi4vZ2VvbWV0cnkvZ2VvbWV0cnkvaXMtcG9pbnQuZnVuY3Rpb24nO1xuaW1wb3J0IHsgV0dTXzg0X1NSSUQgfSBmcm9tICcuLi9nZW9tZXRyeS9nZW9tZXRyeS5jb25zdGFudHMnO1xuaW1wb3J0IHsgQ2xvbmVhYmxlIH0gZnJvbSAnLi4vY29yZS9jbG9uZS9jbG9uZWFibGUnO1xuaW1wb3J0IHsgY2xvbmUgfSBmcm9tICcuLi9jb3JlL2Nsb25lL2Nsb25lLmZ1bmN0aW9uJztcblxuXG5leHBvcnQgY2xhc3MgTHJzRmVhdHVyZSBleHRlbmRzIE1hcEZlYXR1cmUgaW1wbGVtZW50cyBDbG9uZWFibGU8THJzRmVhdHVyZT4ge1xuICByb3V0ZUlkOiBzdHJpbmc7XG4gIGZyb21NZWFzdXJlOiBudW1iZXI7XG4gIHRvTWVhc3VyZTogbnVtYmVyO1xuICBsYXllcjogTHJzTGF5ZXI7XG4gIGRpc3BsYXlWYWx1ZTogYW55O1xuICBzdHlsZVZhbHVlOiBhbnk7XG4gIHZpZXdEYXRlPzogRGF0ZTtcbiAgZ2RiVmVyc2lvbj86IHN0cmluZztcblxuICBnZXQgbGF5ZXJJZCgpOiBudW1iZXIge1xuICAgIHJldHVybiB0aGlzLmxheWVyID8gdGhpcy5sYXllci5pZCA6IG51bGw7XG4gIH1cblxuICBnZXQgZnJvbURhdGUoKTogRGF0ZSB7XG4gICAgcmV0dXJuIHRoaXMuZ2V0VmFsdWUodGhpcy5sYXllci5mcm9tRGF0ZUZpZWxkTmFtZSk7XG4gIH1cblxuICBnZXQgdG9EYXRlKCk6IERhdGUge1xuICAgIHJldHVybiB0aGlzLmdldFZhbHVlKHRoaXMubGF5ZXIudG9EYXRlRmllbGROYW1lKTtcbiAgfVxuXG4gIGdldCBpc1JldGlyZWQoKTogYm9vbGVhbiB7XG4gICAgcmV0dXJuIEJvb2xlYW4odGhpcy50b0RhdGUpO1xuICB9XG5cbiAgZ2V0IGlzQWN0aXZlKCk6IGJvb2xlYW4ge1xuICAgIHJldHVybiAhdGhpcy5pc1JldGlyZWQ7XG4gIH1cblxuICBjb25zdHJ1Y3RvcihmZWF0dXJlOiBGZWF0dXJlLCBsYXllcjogTHJzTGF5ZXIsIHNwYXRpYWxSZWZlcmVuY2VJZCA9IFdHU184NF9TUklEKSB7XG4gICAgc3VwZXIoZmVhdHVyZSwgbGF5ZXIsIHNwYXRpYWxSZWZlcmVuY2VJZCk7XG5cbiAgICBpZiAodGhpcy5nZW9tZXRyeSAmJiB0aGlzLmlzR2VvbWV0cnlUeXBlSW52YWxpZCgpKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoYFVuc3VwcG9ydGVkIGdlb21ldHJ5IHR5cGUgb2YgJHt0aGlzLmdlb21ldHJ5LnR5cGV9IGRldGVjdGVkLmApO1xuICAgIH1cbiAgfVxuXG4gIHNldEZyb21EYXRlKGRhdGU6IERhdGUpOiB0aGlzIHtcbiAgICByZXR1cm4gdGhpcy5zZXRWYWx1ZSh0aGlzLmxheWVyLmZyb21EYXRlRmllbGROYW1lLCBkYXRlKTtcbiAgfVxuXG4gIHNldFRvRGF0ZShkYXRlOiBEYXRlKTogdGhpcyB7XG4gICAgcmV0dXJuIHRoaXMuc2V0VmFsdWUodGhpcy5sYXllci50b0RhdGVGaWVsZE5hbWUsIGRhdGUpO1xuICB9XG5cbiAgcmV0aXJlKCk6IHRoaXMge1xuICAgIGlmICh0aGlzLmxheWVyLnRvRGF0ZUZpZWxkTmFtZSkge1xuICAgICAgdGhpcy5zZXRWYWx1ZSh0aGlzLmxheWVyLnRvRGF0ZUZpZWxkTmFtZSwgbmV3IERhdGUoKSk7XG4gICAgfVxuXG4gICAgcmV0dXJuIHRoaXM7XG4gIH1cblxuICBjbG9uZSgpOiBMcnNGZWF0dXJlIHtcbiAgICBjb25zdCBjb3B5RmVhdHVyZSA9IGNsb25lKHRoaXMudG9GZWF0dXJlKCkpO1xuICAgIHJldHVybiBuZXcgTHJzRmVhdHVyZShjb3B5RmVhdHVyZSwgdGhpcy5sYXllcik7XG4gIH1cblxuICBwcm90ZWN0ZWQgaXNHZW9tZXRyeVR5cGVWYWxpZCgpOiBib29sZWFuIHtcbiAgICByZXR1cm4gaXNMaW5lKHRoaXMuZ2VvbWV0cnkpIHx8IGlzUG9pbnQodGhpcy5nZW9tZXRyeSk7XG4gIH1cblxuICBwcml2YXRlIGlzR2VvbWV0cnlUeXBlSW52YWxpZCgpOiBib29sZWFuIHtcbiAgICByZXR1cm4gIXRoaXMuaXNHZW9tZXRyeVR5cGVWYWxpZCgpO1xuICB9XG59XG4iXX0=