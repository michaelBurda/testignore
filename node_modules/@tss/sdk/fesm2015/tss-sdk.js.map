{"version":3,"file":"tss-sdk.js.map","sources":["ng://@tss/sdk/lib/core/resource.config.ts","ng://@tss/sdk/lib/core/logging/log-level.ts","ng://@tss/sdk/lib/core/units/measurement-unit.ts","ng://@tss/sdk/lib/core/core.config.ts","ng://@tss/sdk/lib/core/type-check/is-type.function.ts","ng://@tss/sdk/lib/core/type-check/is-string.function.ts","ng://@tss/sdk/lib/core/auto-config.decorator.ts","ng://@tss/sdk/lib/app/app.config.ts","ng://@tss/sdk/lib/core/url/join.function.ts","ng://@tss/sdk/lib/core/tokens/tokens.constants.ts","ng://@tss/sdk/lib/core/tokens/replace-tokens.function.ts","ng://@tss/sdk/lib/core/tokens/replace-token.function.ts","ng://@tss/sdk/lib/core/formatting/format.function.ts","ng://@tss/sdk/lib/core/url/clean.function.ts","ng://@tss/sdk/lib/core/resource/resource.constants.ts","ng://@tss/sdk/lib/core/resource/base-empty-resource.service.ts","ng://@tss/sdk/lib/app/api.service.ts","ng://@tss/sdk/lib/core/logging/logger.service.ts","ng://@tss/sdk/lib/core/storage/get-byte-size.function.ts","ng://@tss/sdk/lib/core/storage/storage.constants.ts","ng://@tss/sdk/lib/core/type-check/is-defined.function.ts","ng://@tss/sdk/lib/core/type-check/is-value.function.ts","ng://@tss/sdk/lib/core/storage/format-byte-size.function.ts","ng://@tss/sdk/lib/core/storage/base-storage.service.ts","ng://@tss/sdk/lib/core/storage/persistent-storage.service.ts","ng://@tss/sdk/lib/core/environment/has-window.function.ts","ng://@tss/sdk/lib/core/url/get-full-url.function.ts","ng://@tss/sdk/lib/core/url/get-query-params.function.ts","ng://@tss/sdk/lib/core/array/get-last-item.function.ts","ng://@tss/sdk/lib/core/url/get-post-hash-route-paths.function.ts","ng://@tss/sdk/lib/core/url/get-first-hash-route-path.function.ts","ng://@tss/sdk/lib/core/type-check/is-date.function.ts","ng://@tss/sdk/lib/core/type-check/is-not-value.function.ts","ng://@tss/sdk/lib/core/type-check/can-not-be-number.function.ts","ng://@tss/sdk/lib/core/type-check/can-be-number.function.ts","ng://@tss/sdk/lib/core/type-conversion/to-primitive-type.function.ts","ng://@tss/sdk/lib/core/formatting/lower-case-first.function.ts","ng://@tss/sdk/lib/core/object/set-value.function.ts","ng://@tss/sdk/lib/security/security-config.ts","ng://@tss/sdk/lib/core/type-check/is-array.function.ts","ng://@tss/sdk/lib/core/type-check/is-number.function.ts","ng://@tss/sdk/lib/security/role-manager.service.ts","ng://@tss/sdk/lib/security/auth.service.ts","ng://@tss/sdk/lib/core/resource/base-resource.service.ts","ng://@tss/sdk/lib/app/app-profile.service.ts","ng://@tss/sdk/lib/app/app-initializer.service.ts","ng://@tss/sdk/lib/app/app-profile.ts","ng://@tss/sdk/lib/core/keys.pipe.ts","ng://@tss/sdk/lib/core/storage/file-size.pipe.ts","ng://@tss/sdk/lib/core/date-time/date-time.constants.ts","ng://@tss/sdk/lib/core/date-time/conversion/to-milliseconds.function.ts","ng://@tss/sdk/lib/core/date-time/conversion/milliseconds-to-seconds.function.ts","ng://@tss/sdk/lib/core/date-time/conversion/milliseconds-to-minutes.function.ts","ng://@tss/sdk/lib/core/date-time/conversion/milliseconds-to-hours.function.ts","ng://@tss/sdk/lib/core/date-time/conversion/milliseconds-to-days.function.ts","ng://@tss/sdk/lib/core/date-time/readable/to-readable-time.function.ts","ng://@tss/sdk/lib/core/date-time/readable/readable-time.pipe.ts","ng://@tss/sdk/lib/core/safe-url.pipe.ts","ng://@tss/sdk/lib/core/core.module.ts","ng://@tss/sdk/lib/geometry/geometry.module.ts","ng://@tss/sdk/lib/data-source/data-source.module.ts","ng://@tss/sdk/lib/esri/esri.module.ts","ng://@tss/sdk/lib/maps/drawing/layer-renderer-type-definition.ts","ng://@tss/sdk/lib/maps/drawing/layer-renderer-type.pipe.ts","ng://@tss/sdk/lib/maps/map.module.ts","ng://@tss/sdk/lib/lrs/lrs.module.ts","ng://@tss/sdk/lib/security/token.interceptor.ts","ng://@tss/sdk/lib/security/has-roles.directive.ts","ng://@tss/sdk/lib/security/security.module.ts","ng://@tss/sdk/lib/polyfill/prevent-default-link.directive.ts","ng://@tss/sdk/lib/polyfill/polyfill.module.ts","ng://@tss/sdk/lib/queuing/queue.module.ts","ng://@tss/sdk/lib/core/type-check/is-function.function.ts","ng://@tss/sdk/lib/http/is-route-match.function.ts","ng://@tss/sdk/lib/http/http.config.ts","ng://@tss/sdk/lib/http/http-param.interceptor.ts","ng://@tss/sdk/lib/http/http.module.ts","ng://@tss/sdk/lib/app/app.module.ts","ng://@tss/sdk/lib/app/app-spatial.module.ts","ng://@tss/sdk/lib/app/settings/app-setting.ts","ng://@tss/sdk/lib/app/settings/app-setting.service.ts","ng://@tss/sdk/lib/cache/cache-persistance.ts","ng://@tss/sdk/lib/cache/cache-strategy.ts","ng://@tss/sdk/lib/cache/cache.config.ts","ng://@tss/sdk/lib/cache/cache.constants.ts","ng://@tss/sdk/lib/cache/cache.storage.ts","ng://@tss/sdk/lib/cache/cache.service.ts","ng://@tss/sdk/lib/core/tokens/has-tokens.function.ts","ng://@tss/sdk/lib/core/tokens/standardize-tokens.function.ts","ng://@tss/sdk/lib/core/tokens/strip-token-braces.function.ts","ng://@tss/sdk/lib/core/tokens/extract-token-values-from-template.function.ts","ng://@tss/sdk/lib/cache/cache.interceptor.ts","ng://@tss/sdk/lib/cache/cache.module.ts","ng://@tss/sdk/lib/core/array/add-if-not-exist.function.ts","ng://@tss/sdk/lib/core/array/add-range-to-beginning.function.ts","ng://@tss/sdk/lib/core/array/add-range.function.ts","ng://@tss/sdk/lib/core/array/remove-duplicates.function.ts","ng://@tss/sdk/lib/core/array/remove-item.function.ts","ng://@tss/sdk/lib/core/array/remove-where.function.ts","ng://@tss/sdk/lib/core/clone/clone.function.ts","ng://@tss/sdk/lib/core/color/hex-to-rgb.function.ts","ng://@tss/sdk/lib/core/color/is-hex-color.function.ts","ng://@tss/sdk/lib/core/color/rgb-to-hex.function.ts","ng://@tss/sdk/lib/core/color/transparency-to-opacity.function.ts","ng://@tss/sdk/lib/core/cookie/get-cookie.function.ts","ng://@tss/sdk/lib/core/date-time/add/add-milliseconds.function.ts","ng://@tss/sdk/lib/core/date-time/add/add-minutes.function.ts","ng://@tss/sdk/lib/core/date-time/add/add-days.function.ts","ng://@tss/sdk/lib/core/date-time/add/add-hours.function.ts","ng://@tss/sdk/lib/core/date-time/add/add-seconds.function.ts","ng://@tss/sdk/lib/core/date-time/conversion/to-utc-date.function.ts","ng://@tss/sdk/lib/core/date-time/format/format-date.function.ts","ng://@tss/sdk/lib/core/date-time/conversion/to-standardized-query-date-format.function.ts","ng://@tss/sdk/lib/core/date-time/conversion/to-utc-epoch-date.function.ts","ng://@tss/sdk/lib/core/date-time/format/format-date-for-query.function.ts","ng://@tss/sdk/lib/core/date-time/format/sql-date-format.ts","ng://@tss/sdk/lib/core/date-time/get-current-date-as-utc.function.ts","ng://@tss/sdk/lib/core/date-time/get-current-date-epoch-as-utc.ts","ng://@tss/sdk/lib/core/date-time/get-elapsed-milliseconds.function.ts","ng://@tss/sdk/lib/core/date-time/get-elapsed-seconds.function.ts","ng://@tss/sdk/lib/core/date-time/readable/seconds-to-readable-time.function.ts","ng://@tss/sdk/lib/core/date-time/set-date-to-beginning-of-date.function.ts","ng://@tss/sdk/lib/core/date-time/set-date-to-end-of-date.function.ts","ng://@tss/sdk/lib/core/date-time/subtract/subract-days.function.ts","ng://@tss/sdk/lib/core/date-time/subtract/subract-minutes.function.ts","ng://@tss/sdk/lib/core/date-time/subtract/subract-seconds.function.ts","ng://@tss/sdk/lib/core/date-time/subtract/subtract-hours.function.ts","ng://@tss/sdk/lib/core/date-time/subtract/subtract-milliseconds.function.ts","ng://@tss/sdk/lib/core/environment/has-local-storage.function.ts","ng://@tss/sdk/lib/core/environment/online-state.service.ts","ng://@tss/sdk/lib/core/equality/equality.constants.ts","ng://@tss/sdk/lib/core/equality/almost-equal.function.ts","ng://@tss/sdk/lib/core/equality/points-almost-equal.function.ts","ng://@tss/sdk/lib/core/error/error.constants.ts","ng://@tss/sdk/lib/core/error/error-msg.function.ts","ng://@tss/sdk/lib/core/formatting/format-number.function.ts","ng://@tss/sdk/lib/core/formatting/formatting.constants.ts","ng://@tss/sdk/lib/core/formatting/upper-case-each-word.function.ts","ng://@tss/sdk/lib/core/formatting/upper-case-first-letter.function.ts","ng://@tss/sdk/lib/core/formatting/humanize.function.ts","ng://@tss/sdk/lib/core/formatting/trim-end.function.ts","ng://@tss/sdk/lib/core/formatting/trip-start.function.ts","ng://@tss/sdk/lib/core/formatting/trim.function.ts","ng://@tss/sdk/lib/core/grouping/group-by.function.ts","ng://@tss/sdk/lib/core/media/media.constants.ts","ng://@tss/sdk/lib/core/media/base64-mime-type.function.ts","ng://@tss/sdk/lib/core/media/strip-base64-metadata.function.ts","ng://@tss/sdk/lib/core/media/base64-to-byte-array.function.ts","ng://@tss/sdk/lib/core/media/base64-to-blob.function.ts","ng://@tss/sdk/lib/core/type-check/is-object.function.ts","ng://@tss/sdk/lib/core/merge/merge-deep.function.ts","ng://@tss/sdk/lib/core/merge/merge-deep-array.function.ts","ng://@tss/sdk/lib/core/notify/base-notification-tracker.ts","ng://@tss/sdk/lib/core/notify/notification-promise-tracker.ts","ng://@tss/sdk/lib/core/notify/notification-subscription-tracker.ts","ng://@tss/sdk/lib/core/notify/notify-type.ts","ng://@tss/sdk/lib/core/notify/notify.service.ts","ng://@tss/sdk/lib/core/object/assign-valid-values.function.ts","ng://@tss/sdk/lib/core/object/get-value.function.ts","ng://@tss/sdk/lib/core/random/get-random-integer.function.ts","ng://@tss/sdk/lib/core/random/get-random-number.function.ts","ng://@tss/sdk/lib/core/rounding/round.function.ts","ng://@tss/sdk/lib/core/sort/sort-by-order.function.ts","ng://@tss/sdk/lib/core/sort/sort-and-reorder.function.ts","ng://@tss/sdk/lib/core/sort/sort-direction.ts","ng://@tss/sdk/lib/core/sort/sort.function.ts","ng://@tss/sdk/lib/core/stats/average.function.ts","ng://@tss/sdk/lib/core/stats/calculate-cross-product.function.ts","ng://@tss/sdk/lib/core/stats/calculate-percent-complete.function.ts","ng://@tss/sdk/lib/core/stats/calculate-remaining-seconds.function.ts","ng://@tss/sdk/lib/core/stats/is-number-between-or-equal.function.ts","ng://@tss/sdk/lib/core/stats/is-number-between.function.ts","ng://@tss/sdk/lib/core/stats/sum.function.ts","ng://@tss/sdk/lib/core/stats/stats-tracker.ts","ng://@tss/sdk/lib/core/stats/sum-property.function.ts","ng://@tss/sdk/lib/core/stats/sum-values.function.ts","ng://@tss/sdk/lib/core/storage/in-memory-storage.service.ts","ng://@tss/sdk/lib/core/tokens/extract-tokens.function.ts","ng://@tss/sdk/lib/core/tokens/extract-token-expressions.function.ts","ng://@tss/sdk/lib/core/type-check/is-boolean.function.ts","ng://@tss/sdk/lib/core/type-check/is-not-array.function.ts","ng://@tss/sdk/lib/core/type-check/is-not-boolean.function.ts","ng://@tss/sdk/lib/core/type-check/is-not-date.function.ts","ng://@tss/sdk/lib/core/type-check/is-not-defined.function.ts","ng://@tss/sdk/lib/core/type-check/is-not-function.function.ts","ng://@tss/sdk/lib/core/type-check/is-not-number.function.ts","ng://@tss/sdk/lib/core/type-check/is-not-object.function.ts","ng://@tss/sdk/lib/core/type-check/is-primitive.function.ts","ng://@tss/sdk/lib/core/type-check/is-not-primitive.function.ts","ng://@tss/sdk/lib/core/type-check/is-not-string.function.ts","ng://@tss/sdk/lib/core/type-check/is-not-type.function.ts","ng://@tss/sdk/lib/core/units/area-unit.ts","ng://@tss/sdk/lib/core/units/convert-area-units.function.ts","ng://@tss/sdk/lib/core/units/length-unit.ts","ng://@tss/sdk/lib/core/units/unit-conversion.constants.ts","ng://@tss/sdk/lib/core/units/to-meters.function.ts","ng://@tss/sdk/lib/core/units/from-meters.function.ts","ng://@tss/sdk/lib/core/units/convert-length-units.function.ts","ng://@tss/sdk/lib/core/units/meters-per-second-to-kilometers-per-hour.function.ts","ng://@tss/sdk/lib/core/units/meters-per-second-to-miles-per-hour.function.ts","ng://@tss/sdk/lib/core/url/ensure-protocol.function.ts","ng://@tss/sdk/lib/core/url/get-base-url.function.ts","ng://@tss/sdk/lib/core/url/join-and-format.function.ts","ng://@tss/sdk/lib/core/url/parameters-to-string.function.ts","ng://@tss/sdk/lib/core/url/url.constants.ts","ng://@tss/sdk/lib/core/url/remove-empty-params.function.ts","ng://@tss/sdk/lib/core/url/strip-trailing-slash.function.ts","ng://@tss/sdk/lib/core/using.function.ts","ng://@tss/sdk/lib/core/uuid/guid.constants.ts","ng://@tss/sdk/lib/core/uuid/uuid-value-replacer.function.ts","ng://@tss/sdk/lib/core/uuid/uuid.function.ts","ng://@tss/sdk/lib/core/uuid/guid.ts","ng://@tss/sdk/lib/core/validation/validation-results.ts","ng://@tss/sdk/lib/core/validation/validation-check.ts","ng://@tss/sdk/lib/csv/csv.config.ts","ng://@tss/sdk/lib/csv/csv.constants.ts","ng://@tss/sdk/lib/csv/csv.module.ts","ng://@tss/sdk/lib/csv/to-csv.function.ts","ng://@tss/sdk/lib/geometry/geometry/is-line.function.ts","ng://@tss/sdk/lib/geometry/line/is-multi-part.function.ts","ng://@tss/sdk/lib/geometry/line/to-multi-part-paths.function.ts","ng://@tss/sdk/lib/geometry/line/flatten-line.function.ts","ng://@tss/sdk/lib/geometry/geometry/is-point.function.ts","ng://@tss/sdk/lib/geometry/point/is-multi-part-point.function.ts","ng://@tss/sdk/lib/geometry/point/to-multi-part-point.function.ts","ng://@tss/sdk/lib/geometry/geometry/is-polygon.function.ts","ng://@tss/sdk/lib/csv/geometry-to-csv.function.ts","ng://@tss/sdk/lib/data-source/apply-edits-seed/apply-edits.constants.ts","ng://@tss/sdk/lib/data-source/data-source-config.ts","ng://@tss/sdk/lib/data-source/apply-edits-seed/data-source-edit.service.ts","ng://@tss/sdk/lib/data-source/attachments/attachment-type.ts","ng://@tss/sdk/lib/http/to-form-data-string.function.ts","ng://@tss/sdk/lib/data-source/attachments/attachments.constants.ts","ng://@tss/sdk/lib/data-source/attachments/attachment.service.ts","ng://@tss/sdk/lib/data-source/data-source-provider-type.ts","ng://@tss/sdk/lib/data-source/data-source.constants.ts","ng://@tss/sdk/lib/data-source/data-source.service.ts","ng://@tss/sdk/lib/data-source/data-table.ts","ng://@tss/sdk/lib/data-source/get-data-source-id.function.ts","ng://@tss/sdk/lib/data-source/is-oracle-provider.function.ts","ng://@tss/sdk/lib/data-source/get-date-format-for-provider.function.ts","ng://@tss/sdk/lib/data-source/is-enterprise-provider.function.ts","ng://@tss/sdk/lib/data-source/seed/seed-pod.constants.ts","ng://@tss/sdk/lib/maps/fields/layer-field.ts","ng://@tss/sdk/lib/maps/where-clause-builder.ts","ng://@tss/sdk/lib/lrs/lrs-where-clause-builder.ts","ng://@tss/sdk/lib/esri/base-esri.service.ts","ng://@tss/sdk/lib/esri/esri-config.ts","ng://@tss/sdk/lib/geometry/geometry.constants.ts","ng://@tss/sdk/lib/geometry/point/to-single-part-point.function.ts","ng://@tss/sdk/lib/geometry/point/sort-points.function.ts","ng://@tss/sdk/lib/geometry/line/single-line-to-coordinates.ts","ng://@tss/sdk/lib/geometry/line/multi-line-to-coordinates.ts","ng://@tss/sdk/lib/geometry/line/has-measure-values.function.ts","ng://@tss/sdk/lib/geometry/line/sort-line-by-measure.function.ts","ng://@tss/sdk/lib/geometry/point/get-measure-from-point.function.ts","ng://@tss/sdk/lib/geometry/line/get-measure-extent-from-line.function.ts","ng://@tss/sdk/lib/geometry/point/get-measure-extent-from-point.function.ts","ng://@tss/sdk/lib/geometry/geometry/get-measure-extent.function.ts","ng://@tss/sdk/lib/maps/fields/get-coded-value-domain.function.ts","ng://@tss/sdk/lib/maps/fields/get-coded-value-name.function.ts","ng://@tss/sdk/lib/maps/fields/get-coded-value-name-or-default.function.ts","ng://@tss/sdk/lib/lrs/data/is-dynamic-data-expression.function.ts","ng://@tss/sdk/lib/lrs/data/extract-feature-data.function.ts","ng://@tss/sdk/lib/lrs/data/evaluate-feature-data-expression.function.ts","ng://@tss/sdk/lib/maps/map-feature.ts","ng://@tss/sdk/lib/lrs/lrs-feature.ts","ng://@tss/sdk/lib/lrs/events/event-feature.ts","ng://@tss/sdk/lib/lrs/feature.ts","ng://@tss/sdk/lib/geometry/line/get-point.function.ts","ng://@tss/sdk/lib/geometry/line/to-multi-line-string.function.ts","ng://@tss/sdk/lib/geometry/line/to-line-string.function.ts","ng://@tss/sdk/lib/geometry/line/to-line-or-multi-line-string.function.ts","ng://@tss/sdk/lib/geometry/geometry/degrees-to-radians.function.ts","ng://@tss/sdk/lib/geometry/point/get-distance-between-points.function.ts","ng://@tss/sdk/lib/geometry/line/get-measure.function.ts","ng://@tss/sdk/lib/lrs/networks/network-feature.ts","ng://@tss/sdk/lib/lrs/lrs-feature-collection.ts","ng://@tss/sdk/lib/lrs/events/event-feature-collection.ts","ng://@tss/sdk/lib/lrs/networks/network-feature-collection.ts","ng://@tss/sdk/lib/esri/esri-map-service-request.ts","ng://@tss/sdk/lib/http/to-form-data.function.ts","ng://@tss/sdk/lib/esri/esri.constants.ts","ng://@tss/sdk/lib/esri/geometry-to-measure/geometry-to-measure.constants.ts","ng://@tss/sdk/lib/esri/geometry-to-measure/get-geometry-to-measure-options.function.ts","ng://@tss/sdk/lib/esri/query/esri-query.constants.ts","ng://@tss/sdk/lib/esri/query/get-map-query-options.function.ts","ng://@tss/sdk/lib/esri/query/to-http-query-params.function.ts","ng://@tss/sdk/lib/esri/try-strip-gdb-version.function.ts","ng://@tss/sdk/lib/maps/to-layer-id.function.ts","ng://@tss/sdk/lib/esri/join-and-format-with-layer.function.ts","ng://@tss/sdk/lib/maps/drawing/class-break-info.ts","ng://@tss/sdk/lib/maps/drawing/unique-value-info.ts","ng://@tss/sdk/lib/maps/drawing/layer-drawing-info-renderer.ts","ng://@tss/sdk/lib/maps/drawing/layer-drawing-info.ts","ng://@tss/sdk/lib/maps/feature-class-layer.ts","ng://@tss/sdk/lib/esri/esri-map-server.service.ts","ng://@tss/sdk/lib/esri/feature-server/is-feature-server-layer-url.function.ts","ng://@tss/sdk/lib/esri/feature-server/is-feature-server-service-url.ts","ng://@tss/sdk/lib/esri/map-server/is-map-server-service-url.ts","ng://@tss/sdk/lib/esri/lrs-server/is-lrs-server-service-url.function.ts","ng://@tss/sdk/lib/esri/lrs-server/is-lrs-server-layers-service-url.function.ts","ng://@tss/sdk/lib/esri/is-cacheable-esri-service-route.function.ts","ng://@tss/sdk/lib/esri/map-server/extract-map-server-layer-id.function.ts","ng://@tss/sdk/lib/esri/map-server/extract-map-server-url.function.ts","ng://@tss/sdk/lib/esri/map-server/is-map-server-layer-url.function.ts","ng://@tss/sdk/lib/esri/portal/does-path-include-portal-access-code.function.ts","ng://@tss/sdk/lib/esri/portal/does-path-include-portal-access-token.function.ts","ng://@tss/sdk/lib/esri/portal/get-portal-url.function.ts","ng://@tss/sdk/lib/esri/portal/to-esri-portal-access-token.function.ts","ng://@tss/sdk/lib/esri/to-esri-server-token.function.ts","ng://@tss/sdk/lib/esri/portal/remove-portal-access-token-from-hash.function.ts","ng://@tss/sdk/lib/esri/portal/esri-portal.service.ts","ng://@tss/sdk/lib/esri/portal/extract-portal-access-token.function.ts","ng://@tss/sdk/lib/esri/portal/get-portal-oauth-redirect-url.function.ts","ng://@tss/sdk/lib/esri/portal/get-portal-sharing-url.function.ts","ng://@tss/sdk/lib/export/export.config.ts","ng://@tss/sdk/lib/export/export.constants.ts","ng://@tss/sdk/lib/export/export.module.ts","ng://@tss/sdk/lib/export/export.service.ts","ng://@tss/sdk/lib/geolocation/geolocation.config.ts","ng://@tss/sdk/lib/geolocation/geolocation.constants.ts","ng://@tss/sdk/lib/geolocation/geolocator/geolocatable.decorator.ts","ng://@tss/sdk/lib/geolocation/geolocator/geolocator-accuracy-unit.ts","ng://@tss/sdk/lib/geolocation/geolocator/base-geolocator.service.ts","ng://@tss/sdk/lib/geolocation/gps-position/position-to-gps-position.function.ts","ng://@tss/sdk/lib/geolocation/geolocator/geolocator-capability.ts","ng://@tss/sdk/lib/geolocation/geolocator/geolocation-gps-locator.service.ts","ng://@tss/sdk/lib/geolocation/geolocation.module.ts","ng://@tss/sdk/lib/geolocation/is-position-acceptable.function.ts","ng://@tss/sdk/lib/geolocation/gps-position/is-position-error.function.ts","ng://@tss/sdk/lib/geolocation/gps-position/gps-position-to-point.ts","ng://@tss/sdk/lib/geolocation/gps-position/is-valid-latitude.function.ts","ng://@tss/sdk/lib/geolocation/gps-position/is-valid-longitude.function.ts","ng://@tss/sdk/lib/geolocation/gps-position/is-valid-location.function.ts","ng://@tss/sdk/lib/geolocation/gps-position/is-not-valid-location.function.ts","ng://@tss/sdk/lib/geolocation/gps-position/gps-positions-almost-equal.ts","ng://@tss/sdk/lib/geolocation/geolocation.service.ts","ng://@tss/sdk/lib/geolocation/geolocator/geolocator-source.service.ts","ng://@tss/sdk/lib/geolocation/gps-position/gps-positions-to-point.ts","ng://@tss/sdk/lib/geolocation/gps-position/is-not-valid-latitude.function.ts","ng://@tss/sdk/lib/geolocation/gps-position/is-not-valid-longitude.function.ts","ng://@tss/sdk/lib/geometry/geometry/set-measures-by-geometric-length.function.ts","ng://@tss/sdk/lib/geolocation/position-path-builder.ts","ng://@tss/sdk/lib/geometry/geometry/radians-to-degrees.function.ts","ng://@tss/sdk/lib/geometry/geometry.config.ts","ng://@tss/sdk/lib/geometry/line/extract-measures-from-line.function.ts","ng://@tss/sdk/lib/geometry/line/get-distance-to-line.function.ts","ng://@tss/sdk/lib/geometry/line/get-measure-from-flat-coordinate-system.function.ts","ng://@tss/sdk/lib/geometry/line/get-measure-from-lat-lng.function.ts","ng://@tss/sdk/lib/geometry/line/get-nearest-point-by-geometry.function.ts","ng://@tss/sdk/lib/geometry/point/bounds.function.ts","ng://@tss/sdk/lib/geometry/line/is-line-within-bounds.function.ts","ng://@tss/sdk/lib/geometry/line/is-point-on-line.function.ts","ng://@tss/sdk/lib/geometry/point/calculate-cross-product-by-points.function.ts","ng://@tss/sdk/lib/gps-gate/gps-gate.config.ts","ng://@tss/sdk/lib/gps-gate/gps-gate-geolocator.service.ts","ng://@tss/sdk/lib/gps-gate/gps-gate.module.ts","ng://@tss/sdk/lib/lrs/calibration-points/calibration-point-layer.ts","ng://@tss/sdk/lib/lrs/capture-position.ts","ng://@tss/sdk/lib/lrs/centerlines/centerline-layer.ts","ng://@tss/sdk/lib/lrs/data/lrs-data.service.ts","ng://@tss/sdk/lib/lrs/lrs.config.ts","ng://@tss/sdk/lib/lrs/data-source-lrs-metadata.service.ts","ng://@tss/sdk/lib/lrs/lrs-layer.ts","ng://@tss/sdk/lib/lrs/events/event-layer.ts","ng://@tss/sdk/lib/lrs/hierarchy/generate-hierarchy-filters.function.ts","ng://@tss/sdk/lib/lrs/intersections/intersection-layer.ts","ng://@tss/sdk/lib/lrs/layer-search.ts","ng://@tss/sdk/lib/lrs/networks/network-layer.ts","ng://@tss/sdk/lib/lrs/redlines/redline-layer.ts","ng://@tss/sdk/lib/maps/map-server-metadata.ts","ng://@tss/sdk/lib/lrs/lrs-metadata-validations.ts","ng://@tss/sdk/lib/lrs/non-lrs/non-lrs-layer.ts","ng://@tss/sdk/lib/lrs/lrs-metadata.ts","ng://@tss/sdk/lib/lrs/lrs-metadata-merge.ts","ng://@tss/sdk/lib/lrs/lrs-metadata-retriever.ts","ng://@tss/sdk/lib/lrs/lrs-metadata.service.ts","ng://@tss/sdk/lib/lrs/redlines/redline-feature.ts","ng://@tss/sdk/lib/maps/drawing/symbol-location-type-definition.ts","ng://@tss/sdk/lib/maps/map-table.ts","ng://@tss/sdk/lib/maps/maps.config.ts","ng://@tss/sdk/lib/motion/motion.config.ts","ng://@tss/sdk/lib/motion/device-motion.service.ts","ng://@tss/sdk/lib/motion/motion.module.ts","ng://@tss/sdk/lib/orientation/heading/get-heading-from-orientation.function.ts","ng://@tss/sdk/lib/orientation/orientation.config.ts","ng://@tss/sdk/lib/orientation/device-orientation.service.ts","ng://@tss/sdk/lib/orientation/orientation.module.ts","ng://@tss/sdk/lib/queuing/queue-worker-token.ts","ng://@tss/sdk/lib/queuing/work-queue-status-event-type.ts","ng://@tss/sdk/lib/queuing/work-queue-status-tracker.ts","ng://@tss/sdk/lib/queuing/work-queue-manager.ts","ng://@tss/sdk/lib/queuing/queuable-work-queue-manager.ts","ng://@tss/sdk/lib/queuing/queue-item-status.ts","ng://@tss/sdk/lib/queuing/queue.config.ts","ng://@tss/sdk/lib/security/privileges/privilege.service.ts","ng://@tss/sdk/lib/security/roles/role.ts","ng://@tss/sdk/lib/security/roles/role-privilege.service.ts","ng://@tss/sdk/lib/security/roles/role.service.ts","ng://@tss/sdk/lib/security/security.constants.ts","ng://@tss/sdk/lib/security/roles/user-role.service.ts","ng://@tss/sdk/lib/security/users/user.service.ts"],"sourcesContent":["export class ResourceConfig {\n  serviceUrl: string;\n\n  get hasServiceUrl(): boolean {\n    return Boolean(this.serviceUrl);\n  }\n}\n","export enum LogLevel {\n  Trace = 0,\n  Debug = 1,\n  Info = 2,\n  Warn = 3,\n  Error = 4,\n  Fatal = 5\n}\n\n\nexport type LogType = 'trace' | 'debug' | 'info' | 'warn' | 'error' | 'fatal';\n\n\nexport function typeToLevel(type: LogType): LogLevel {\n  if (type === 'trace') {\n    return LogLevel.Trace;\n  } else if (type === 'debug') {\n    return LogLevel.Debug;\n  } else if (type === 'info') {\n    return LogLevel.Info;\n  } else if (type === 'warn') {\n    return LogLevel.Warn;\n  } else if (type === 'error') {\n    return LogLevel.Error;\n  } else if (type === 'fatal') {\n    return LogLevel.Fatal;\n  } else {\n    throw new Error(`Unknown log type: '${type}'`);\n  }\n}\n\n\nexport function levelToType(level: LogLevel): LogType {\n  if (level === LogLevel.Trace) {\n    return 'trace';\n  } else if (level === LogLevel.Debug) {\n    return 'debug';\n  } else if (level === LogLevel.Info) {\n    return 'info';\n  } else if (level === LogLevel.Warn) {\n    return 'warn';\n  } else if (level === LogLevel.Error) {\n    return 'error';\n  } else if (level === LogLevel.Fatal) {\n    return 'fatal';\n  } else {\n    throw new Error(`Unknown log level: '${level}'`);\n  }\n}\n","export enum MeasurementUnit {\n  Imperial = 'imperial',\n  Metric = 'metric'\n}\n","import { Injectable } from '@angular/core';\nimport { LogLevel } from './logging/log-level';\nimport { AutoConfigData } from './auto-config-data';\nimport { MeasurementUnit } from './units/measurement-unit';\n\n\n/**\n * A simple settings/config class for storing key/value pairs with persistence.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class CoreConfig {\n  static readonly moduleConfigs: AutoConfigData[] = [{ className: 'CoreConfig', injectorToken: CoreConfig }];\n\n  autoConfig = true;\n  logEnabled = true;\n  logLevel = LogLevel.Info;\n  defaultNotifyInfoMsg = 'Info';\n  defaultNotifyWarnMsg = 'Warning';\n  defaultNotifyErrorMsg = 'Error';\n  defaultNotifySuccessMsg = 'Success';\n  defaultNotifyWaitMsg = 'Wait';\n  measurementUnit = MeasurementUnit.Imperial;\n}\n","export function isType(val: any, expectedType: string): boolean {\n  return typeof val === expectedType;\n}\n","import { isType } from './is-type.function';\n\n\nexport function isString(val: any): boolean {\n  return isType(val, 'string');\n}\n","import { CoreConfig } from './core.config';\nimport { AutoConfigData } from './auto-config-data';\nimport { isString } from './type-check/is-string.function';\n\n\nexport function AutoConfig(config: AutoConfigData | string): ClassDecorator {\n  return (constructor: any) => {\n    const autoConf: AutoConfigData = isString(config)\n      ? { className: config as string, injectorToken: constructor }\n      : config as AutoConfigData;\n\n    CoreConfig.moduleConfigs.push(autoConf);\n  };\n}\n","import { Injectable } from '@angular/core';\nimport { ResourceConfig } from '../core/resource.config';\nimport { AutoConfig } from '../core/auto-config.decorator';\nimport { AppProfile } from './app-profile';\n\n\nexport const DEFAULT_APP_ID = 'all';\nexport const DEFAULT_PROFILE_ID = 'default';\n\n\n/**\n * Application related configuration options. These settings are used to\n * drive all general \"global\" application related behaviour. The settings can be\n * overridden directly in the code, application module, or from the TDS server.\n */\n@Injectable({\n  providedIn: 'root'\n})\n@AutoConfig('AppConfig')\nexport class AppConfig extends ResourceConfig {\n  appId = DEFAULT_APP_ID;\n  queryProfile = true;\n  profileId: string = null;\n  profile: AppProfile = null;\n  defaultProfileId = DEFAULT_PROFILE_ID;\n  allowQueryParamInjections = true;\n  continueOnAppBootstrapError = false;\n  appSettingsEndpoint = 'api/apps/{appId}/settings/{id}';\n  appProfileEndpoint = 'api/apps/{appId}/profiles/{id}';\n  pingEndpoint = 'api/ping';\n  statusEndpoint = 'api/status';\n}\n","// Port from: https://github.com/jfromaniello/url-join\n// TODO: Refactor this to be cleaner - RG.\nexport function join(...parts): string {\n  const resultArray = [];\n  let str;\n\n  if (Array.isArray(parts[0])) {\n    parts = parts[0];\n  }\n\n  parts[0] = parts[0] || '';\n  // If the first part is a plain protocol, we combine it with the next part.\n  if (parts[0].match(/^[^/:]+:\\/*$/) && parts.length > 1) {\n    const first = parts.shift();\n    parts[0] = first + parts[0];\n  }\n\n  // There must be two or three slashes in the file protocol, two slashes in anything else.\n  if (parts[0].match(/^file:\\/\\/\\//)) {\n    parts[0] = parts[0].replace(/^([^/:]+):\\/*/, '$1:///');\n  } else {\n    parts[0] = parts[0].replace(/^([^/:]+):\\/*/, '$1://');\n  }\n\n  for (let i = 0; i < parts.length; i++) {\n    let component = parts[i];\n\n    if (typeof component !== 'string') {\n      throw new TypeError('Url must be a string. Received ' + component);\n    }\n\n    if (component === '') { continue; }\n\n    if (i > 0) {\n      // Removing the starting slashes for each component but the first.\n      component = component.replace(/^[\\/]+/, '');\n    }\n\n    if (i < parts.length - 1) {\n      // Removing the ending slashes for each component but the last.\n      component = component.replace(/[\\/]+$/, '');\n    } else {\n      // For the last component we will combine multiple slashes to a single one.\n      component = component.replace(/[\\/]+$/, '/');\n    }\n\n    resultArray.push(component);\n  }\n\n  str = resultArray.join('/');\n  // Each input component is now separated by a single slash except the possible first plain protocol part.\n\n  // Remove trailing slash before parameters or hash.\n  str = str.replace(/\\/(\\?|&|#[^!])/g, '$1');\n\n  // Replace ? in parameters with &.\n  const urlParts = str.split('?');\n  str = urlParts.shift() + (urlParts.length > 0 ? '?' : '') + urlParts.join('&');\n\n  return str;\n}\n","export const TOKEN_EXPRESSION = new RegExp('{(.*?)}', 'gi');\nexport const FULL_TOKEN_EXPRESSION = new RegExp('{{(.*?)}}', 'gi');\nexport const WILDCARD_EXPRESSION_VALUE = '(.*)';\n","import { FULL_TOKEN_EXPRESSION, TOKEN_EXPRESSION } from './tokens.constants';\n\n\nexport function replaceTokens(template: string, replaceValue = ''): string {\n  return (template || '')\n    .replace(FULL_TOKEN_EXPRESSION, replaceValue)\n    .replace(TOKEN_EXPRESSION, replaceValue);\n}\n","export function replaceToken(template: string, tokenKey: string, tokenValue: string): string {\n  return (template || '')\n    .replace(new RegExp(`{{${tokenKey}}}`, 'gi'), tokenValue)\n    .replace(new RegExp(`{${tokenKey}}`, 'gi'), tokenValue);\n}\n","import { replaceTokens } from '../tokens/replace-tokens.function';\nimport { replaceToken } from '../tokens/replace-token.function';\n\n\n// TODO: Expand this to have the full functionality of:\n// https://github.com/davidchambers/string-format\n// -RG.\nexport function format(template: string, tokens: any, removeEmptyTokens = false): string {\n  Object.keys(tokens || {})\n    .forEach(key => template = replaceToken(template, key, tokens[key]));\n\n  if (removeEmptyTokens) {\n    template = replaceTokens(template);\n  }\n\n  return template;\n}\n","import { isString } from '../type-check/is-string.function';\n\n\n/**\n * Cleans a URL:\n *  - Removes double-slashes\n */\nexport function clean(url: string): string {\n  return isString(url)\n    ? url.replace(/([^:]\\/)\\/+/g, '$1')\n    : url;\n}\n","export const NO_URL_ERROR_MSG = 'No URL configured for resource service.';\nexport const UNSUPPORTED_GET_EXCEPTION_MSG = `The 'Get' method is unsupported for this resource`;\nexport const UNSUPPORTED_CREATE_EXCEPTION_MSG = `The 'Create' method is unsupported for this resource`;\nexport const EMPTY_PARAM_VALUE = '';\n","// Angular.\nimport { HttpClient } from '@angular/common/http';\n\n// TSS.\nimport { join } from '../url/join.function';\nimport { format } from '../formatting/format.function';\nimport { clean } from '../url/clean.function';\nimport { isString } from '../type-check/is-string.function';\nimport { ResourceServiceConfig } from './resource-service-config';\nimport { NO_URL_ERROR_MSG } from './resource.constants';\n\n\nexport abstract class BaseEmptyResourceService<T> {\n  protected config: ResourceServiceConfig = {\n    url: null,\n    idFieldName: 'id',\n    cleanUrl: true,\n  };\n\n  constructor(protected http: HttpClient, paramsOrUrl: string | ResourceServiceConfig) {\n    if (isString(paramsOrUrl)) {\n      this.config.url = paramsOrUrl as string;\n    } else {\n      Object.assign(this.config, paramsOrUrl);\n    }\n\n    if (!this.config.url) {\n      throw NO_URL_ERROR_MSG;\n    }\n  }\n\n  protected getUrlWithEntity(entity: T, endpoint: string, tokens: any): string {\n    return this.getUrlWithId(entity ? entity[this.config.idFieldName] : null, endpoint, tokens);\n  }\n\n  protected getUrlWithId(id: string | number, endpoint: string, tokens: any): string {\n    const inferredRouteTokens = {};\n    inferredRouteTokens[this.config.idFieldName] = id;\n\n    return this.getUrl(endpoint, Object.assign(inferredRouteTokens, tokens));\n  }\n\n  protected getUrl(endpoint: string, tokens: any): string {\n    const url = endpoint\n      ? join(this.config.url, endpoint)\n      : this.config.url;\n\n    return this.replaceTokens(url, tokens);\n  }\n\n  protected replaceTokens(url: string, tokens: any): string {\n    tokens = tokens || {};\n    if (this.config.defaultRouteTokens) {\n      tokens = Object.assign({}, this.config.defaultRouteTokens, tokens);\n    }\n\n    url = format(url, tokens, true);\n    if (this.config.cleanUrl) {\n      url = clean(url);\n    }\n\n    return url;\n  }\n}\n","// Angular.\nimport { HttpClient, HttpParams } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\n// 3rd party.\nimport { Observable } from 'rxjs';\n\n// TSS.\nimport { AppConfig } from './app.config';\nimport { BaseEmptyResourceService } from '../core/resource/base-empty-resource.service';\n\n\nexport interface ApiStatus {\n  up: boolean;\n  down: boolean;\n  configStoreUp: boolean;\n  configStoreDown: boolean;\n  upSince: Date;\n  daysUp: number;\n  appCount: number;\n}\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApiService extends BaseEmptyResourceService<ApiStatus> {\n  constructor(http: HttpClient, private appConfig: AppConfig) {\n    super(http, appConfig.serviceUrl);\n  }\n\n  ping(routeTokens?: any, params?: HttpParams): Observable<void> {\n    const url = this.getUrl(this.appConfig.pingEndpoint, routeTokens);\n    return this.http.get<void>(url, { params });\n  }\n\n  status(routeTokens?: any, params?: HttpParams): Observable<ApiStatus> {\n    const url = this.getUrl(this.appConfig.pingEndpoint, routeTokens);\n    return this.http.get<ApiStatus>(url, { params });\n  }\n}\n","// Angular.\nimport { Injectable } from '@angular/core';\n\n// TSS.\nimport { LogEntry } from './log-entry';\nimport { LogLevel, LogType, typeToLevel } from './log-level';\nimport { CoreConfig } from '../core.config';\nimport { format } from '../formatting/format.function';\n\n\n/**\n * Console logger.\n */\n@Injectable({ providedIn: 'root' })\nexport class Logger {\n  public logs: Array<LogEntry> = [];\n\n  constructor(private config: CoreConfig) {\n  }\n\n  get level(): LogLevel {\n    return this.config.logLevel;\n  }\n\n  get enabled(): boolean {\n    return this.config.logEnabled;\n  }\n\n  get isTrace(): boolean {\n    return this.level >= LogLevel.Trace;\n  }\n\n  get isDebug(): boolean {\n    return this.level >= LogLevel.Debug;\n  }\n\n  get isWarn(): boolean {\n    return this.level >= LogLevel.Warn;\n  }\n\n  get isError(): boolean {\n    return this.level >= LogLevel.Error;\n  }\n\n  get isFatal(): boolean {\n    return this.level >= LogLevel.Fatal;\n  }\n\n  get traceCount(): number {\n    return this.count('trace');\n  }\n\n  get debugCount(): number {\n    return this.count('debug');\n  }\n\n  get warnCount(): number {\n    return this.count('warn');\n  }\n\n  get errorCount(): number {\n    return this.count('error');\n  }\n\n  get fatalCount(): number {\n    return this.count('fatal');\n  }\n\n  count(logType: LogType): number {\n    return this.logsByType(logType).length;\n  }\n\n  logsByType(logType: LogType): LogEntry[] {\n    return this.logsByLevel(typeToLevel(logType));\n  }\n\n  logsByLevel(logLevel: LogLevel) {\n    return this.logs.filter(l => l.level === logLevel);\n  }\n\n  logEntry(log: LogEntry): LogEntry {\n    if (this.config.logEnabled && log.level >= this.config.logLevel) {\n      this.logs.push(log);\n\n      if (this.isDebug) {\n        console.log(`${LogLevel[log.level]}: ${log.msg} ${log.error || ''}`);\n      }\n    }\n\n    return log;\n  }\n\n  log(msg: string, level: LogLevel, error: Error = null): LogEntry {\n    return this.logEntry({\n      msg: format(msg, { error }),\n      level,\n      error,\n      created: new Date()\n    });\n  }\n\n  trace(msg: string): LogEntry {\n    return this.log(msg, LogLevel.Trace);\n  }\n\n  debug(msg: string): LogEntry {\n    return this.log(msg, LogLevel.Debug);\n  }\n\n  info(msg: string): LogEntry {\n    return this.log(msg, LogLevel.Info);\n  }\n\n  warn(msg: string, error: Error = null): LogEntry {\n    return this.log(msg, LogLevel.Warn, error);\n  }\n\n  error(msg: string, error: Error = null): LogEntry {\n    return this.log(msg, LogLevel.Error, error);\n  }\n\n  fatal(msg: string, error: Error = null): LogEntry {\n    return this.log(msg, LogLevel.Fatal, error);\n  }\n\n  clear(): void {\n    this.logs.length = 0;\n  }\n}\n","export function getByteSize(value: string): number {\n  value = value || '';\n\n  // Matches only the 10.. bytes that are non-initial characters in a multi-byte sequence.\n  const match = encodeURIComponent(value).match(/%[89ABab]/g);\n  return value.length + (match ? match.length : 0);\n}\n","export const STORAGE_FORMAT_UNITS = ['Bytes', 'KB', 'MB', 'GB', 'TB'];\nexport const NO_BYTES_FORMATTED = '0 KB';\n","import { isType } from './is-type.function';\n\n\nexport function isDefined(val: any): boolean {\n  return !isType(val, 'undefined');\n}\n","import { isDefined } from './is-defined.function';\n\nexport function isValue(val: any): boolean {\n  return isDefined(val) && val !== null && val !== '';\n}\n","import { NO_BYTES_FORMATTED, STORAGE_FORMAT_UNITS } from './storage.constants';\nimport { isValue } from '../type-check/is-value.function';\n\n\nexport function formatByteSize(numberOfBytes: number, decimalPlaces?: number, lowerCaseUnits = false): string {\n  let len = 0;\n\n  if (!numberOfBytes) {\n    return NO_BYTES_FORMATTED;\n  }\n\n  while (numberOfBytes >= 1024 && ++len) {\n    numberOfBytes = numberOfBytes / 1024;\n  }\n\n  if (!isValue(decimalPlaces)) {\n    decimalPlaces = numberOfBytes >= 10 || len < 1 ? 0 : 1;\n  }\n\n  const fixedNum: string = numberOfBytes.toFixed(decimalPlaces);\n  const unit = lowerCaseUnits\n    ? STORAGE_FORMAT_UNITS[len].toLowerCase()\n    : STORAGE_FORMAT_UNITS[len];\n\n  return `${fixedNum} ${unit}`;\n}\n","// Angular.\nimport { Injectable } from '@angular/core';\nimport { getByteSize } from './get-byte-size.function';\nimport { formatByteSize } from './format-byte-size.function';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport abstract class BaseStorage {\n  protected keyPrefix = '';\n  protected keySuffix = '';\n\n  abstract length: number;\n  abstract get(key: string): string;\n  abstract set(key: string, value: string): void;\n  abstract remove(key: string): void;\n  abstract clear(): void;\n\n  has(key: string): boolean {\n    return Boolean(this.get(key));\n  }\n\n  /**\n   * Returns the number of bytes for this storage key.\n   */\n  size(key: string): number {\n    const value = this.get(key);\n    return getByteSize(value) + getByteSize(key);\n  }\n\n  sizeFormatted(key: string): string {\n    return formatByteSize(this.size(key));\n  }\n\n  getObject(key: string): any {\n    const value = this.get(key);\n    return value ? JSON.parse(value) : null;\n  }\n\n  setObject(key: string, value: any): void {\n    this.set(key, JSON.stringify(value));\n  }\n\n  protected formatKey(key: string): string {\n    return `${this.keyPrefix}${key}${this.keySuffix}`;\n  }\n}\n","// Angular.\nimport { Injectable } from '@angular/core';\nimport { BaseStorage } from './base-storage.service';\n\n\n@Injectable({ providedIn: 'root' })\nexport class PersistentStorage extends BaseStorage {\n  get length(): number {\n    return localStorage.length;\n  }\n\n  get(key: string): string {\n    return localStorage.getItem(this.formatKey(key));\n  }\n\n  set(key: string, value: string): void {\n    localStorage.setItem(this.formatKey(key), value);\n  }\n\n  remove(key: string): void {\n    localStorage.removeItem(this.formatKey(key));\n  }\n\n  clear(): void {\n    localStorage.clear();\n  }\n}\n","export function hasWindow(): boolean {\n  return typeof window !== 'undefined';\n}\n","import { hasWindow } from '../environment/has-window.function';\n\n\nexport function getFullUrl(): string | '' {\n  return hasWindow() ? location.href : '';\n}\n","import { getFullUrl } from './get-full-url.function';\n\n\nexport function getQueryParams(search?: string): any {\n  let hashes;\n  search = search || getFullUrl();\n\n  if (!search) {\n    return {};\n  }\n\n  hashes = search.slice(search.indexOf('?') + 1).split('&');\n  if (!hashes || !hashes.length || !hashes[0] || hashes.length === 1 && !String(hashes[0]).includes('=')) {\n    return {};\n  }\n\n  return hashes.reduce((params, hash) => {\n    const [key, val] = hash.split('=');\n    return Object.assign(params, { [key]: decodeURIComponent(val) });\n  }, {});\n}\n","export function getLastItem<T>(list: T[]): T {\n  return list[list.length - 1];\n}\n","import { clean } from './clean.function';\nimport { getLastItem } from '../array/get-last-item.function';\n\n\nexport function getPostHashRoutePaths(url: string): string[] {\n  const parts = clean(url).split('#');\n  const hashPart = parts.length > 1\n    ? getLastItem(parts)\n    : null;\n\n  return hashPart && hashPart !== '/'\n    ? hashPart\n      .split('/')\n      .filter(part => Boolean(part) && !part.includes('='))\n    : [];\n}\n","import { getPostHashRoutePaths } from './get-post-hash-route-paths.function';\n\n\nexport function getFirstHashRoutePath(url: string): string | null {\n  const [postHashParts] = getPostHashRoutePaths(url);\n  return postHashParts || null;\n}\n","export function isDate(val: any): boolean {\n  return val instanceof Date;\n}\n","import { isValue } from './is-value.function';\n\n\nexport function isNotValue(val: any): boolean {\n  return !isValue(val);\n}\n","export function canNotBeNumber(val: any): boolean {\n  return isNaN(Number(val));\n}\n","import { canNotBeNumber } from './can-not-be-number.function';\n\n\nexport function canBeNumber(val: any): boolean {\n  return !canNotBeNumber(val);\n}\n","import { isNotValue } from '../type-check/is-not-value.function';\nimport { canBeNumber } from '../type-check/can-be-number.function';\n\n\nexport function toPrimitiveType(value: string): any {\n  if (isNotValue(value)) {\n    return value;\n  } else if (value === 'true' || value === 'false') {\n    return Boolean(value);\n  } else if (canBeNumber(value)) {\n    return Number(value);\n  } else {\n    return value;\n  }\n}\n","export function lowerCaseFirst(value: string): string {\n  return String(value).charAt(0).toLowerCase() + value.slice(1);\n}\n","// TODO: Refactor this method and give it proper names.\n// This was a copy/paste from online - RG.\nexport function setValue(target: any, key: string, val: any): void {\n  if (!target) {\n    return;\n  }\n\n  const ka = key.split(/\\./);\n  if (ka.length < 2) {\n    target[ka[0]] = val;\n  } else {\n    if (!target[ka[0]]) {\n      target[ka[0]] = {};\n    }\n    target = target[ka.shift()];\n    setValue(target, ka.join('.'), val);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { ResourceConfig } from '../core/resource.config';\nimport { AutoConfig } from '../core/auto-config.decorator';\n\n\nexport type AuthorizationTypes = 'Bearer';\n\n/**\n * Security related configuration options. These settings are used to drive all\n * security related behaviour throughout the application. The settings can be\n * overridden directly in the code, application module, or from the TDS server.\n */\n@Injectable({\n  providedIn: 'root'\n})\n@AutoConfig('SecurityConfig')\nexport class SecurityConfig extends ResourceConfig {\n  rolesEnabled = true;\n  storeToken = true;\n  autoSignIn = true;\n  authorizationType: AuthorizationTypes = 'Bearer';\n  tokenEndpoint = 'token';\n  signOutEndpoint = 'api/account/signout';\n  userInfoEndpoint = 'api/account/userinfo';\n  usersEndpoint = 'api/users/{id}';\n  rolesEndpoint = 'api/roles/{id}';\n  privilegesEndpoint = 'api/privileges/{id}';\n  userRolesEndpoint = 'api/users/{userId}/roles/{roleName}';\n  rolesPrivilegesEndpoint = 'api/roles/{roleId}/privileges/{privilegeId}';\n  tokenStorageKey = '__tss_token';\n  tokenInvalidationDateLookup = '__tss_token_invalidate_date';\n  tdsTokenInclusionExpression = '/api/';\n  withCredentialsInclusionExpression = '(.*?)';\n  setWithCredentials = false;\n  accessToken: string = null;\n  defaultUserName: string = null;\n  defaultPassword: string = null;\n  roleSplitterExp = '[,|]+';\n  tokenBody = (userName, password) => `grant_type=password&username=${userName}&password=${password}`;\n}\n","export function isArray(val: any): boolean {\n  return Array.isArray(val);\n}\n","import { isType } from './is-type.function';\n\n\nexport function isNumber(val: any): boolean {\n  return isType(val, 'number');\n}\n","import { Injectable } from '@angular/core';\nimport { SecurityConfig } from './security-config';\nimport { isString } from '../core/type-check/is-string.function';\nimport { isArray } from '../core/type-check/is-array.function';\nimport { isValue } from '../core/type-check/is-value.function';\nimport { isNumber } from '../core/type-check/is-number.function';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RoleManagerService {\n  private readonly roles = new Set();\n  private readonly roleSplitterExpr: RegExp;\n\n  constructor(private config: SecurityConfig) {\n    this.roleSplitterExpr = new RegExp(this.config.roleSplitterExp);\n  }\n\n  get enabled(): boolean {\n    return this.config.rolesEnabled;\n  }\n\n  get roleCount(): number {\n    return this.roles.size;\n  }\n\n  getRoles(): string[] {\n    return Array.from(this.roles);\n  }\n\n  setRoles(roles: string | string[] | number | number[]): void {\n    this.clearRoles();\n    this.addRoles(roles);\n  }\n\n  addRoles(roles: string | string[] | number | number[]): void {\n    if (isString(roles) && (roles as string).includes(',')) {\n      roles = this.toArray((roles as string));\n    }\n\n    if (isArray(roles)) {\n      (roles as string[]).forEach(this.addRole, this);\n    } else {\n      this.addRole(roles as string);\n    }\n  }\n\n  addRole(role: string | number): void {\n    this.roles.add(String(role).trim());\n  }\n\n  clearRoles(): void {\n    this.roles.clear();\n  }\n\n  hasRole(role: string | number): boolean {\n    if (!this.enabled) {\n      return true;\n    }\n\n    if (!isValue(role)) {\n      return false;\n    }\n\n    return this.hasRoles(String(role));\n  }\n\n  hasRoles(roles: string | number): boolean {\n    let splitRoles;\n\n    if (!this.enabled) {\n      return true;\n    }\n\n    if (!isValue(roles)) {\n      return false;\n    }\n\n    splitRoles = this.toArray(roles);\n    return String(roles).includes(',')\n      ? this.hasAllRoles(splitRoles)\n      : this.hasAnyRoles(splitRoles);\n  }\n\n  hasAllRoles(roles: string | string[] | number | number[]): boolean {\n    if (!this.enabled) {\n      return true;\n    }\n\n    if (!isValue(roles)) {\n      return false;\n    }\n\n    const roleList: string[] = this.toStringArray(roles);\n    return roleList.every(this.forRealHasRole.bind(this));\n  }\n\n  hasAnyRoles(roles: string | string[] | number | number[]): boolean {\n    if (!this.enabled) {\n      return true;\n    }\n\n    if (!isValue(roles)) {\n      return false;\n    }\n\n    const roleList: string[] = this.toStringArray(roles);\n    return roleList.some(this.forRealHasRole.bind(this));\n  }\n\n  private forRealHasRole(role: string | number): boolean {\n    return this.roles.has(String(role).trim());\n  }\n\n  private toStringArray(roles: string | string[] | number | number[]): string[] {\n    let rolesList: string[] = [];\n    if (isString(roles)) {\n      rolesList = this.toArray(roles as string);\n    } else if (isNumber(roles)) {\n      rolesList.push(String(roles));\n    } else {\n      rolesList = roles as string[];\n    }\n\n    return rolesList;\n  }\n\n  private toArray(roles: string | number): string[] {\n    return String(roles).split(this.roleSplitterExpr);\n  }\n}\n\n","// Angular.\nimport { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n// 3rd party.\nimport { Observable, Subject } from 'rxjs';\nimport { publishReplay } from 'rxjs/operators';\n\n// TSS.\nimport { UserAccount } from './user-account';\nimport { RoleManagerService } from './role-manager.service';\nimport { SecurityConfig } from './security-config';\nimport { Logger } from '../core/logging/logger.service';\nimport { PersistentStorage } from '../core/storage/persistent-storage.service';\nimport { isString } from '../core/type-check/is-string.function';\n\n\nexport enum SignInState {\n  SignedIn,\n  SignedOut,\n  SignInFailed,\n  SignOutFailed,\n}\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  rememberMe: boolean;\n  account: UserAccount;\n  isAuthenticated: boolean;\n  isDomainAccount: boolean;\n  isFederatedAccount: boolean;\n\n  readonly stateChange: Observable<SignInState>;\n  private readonly stateChangeSubject = new Subject<SignInState>();\n\n  constructor(\n    private http: HttpClient,\n    private roleMgr: RoleManagerService,\n    private config: SecurityConfig,\n    private storage: PersistentStorage,\n    private log: Logger\n  ) {\n    this.rememberMe = config.storeToken;\n    this.stateChange = this.stateChangeSubject.asObservable();\n\n    if (config.autoSignIn && !this.isAuthenticated) {\n      this.loadStoredToken();\n    }\n  }\n\n  signIn(userName: string, password: string, rememberMe: boolean = this.rememberMe): Observable<UserAccount> {\n    const observable = this.http.post<UserAccount>(\n      `${this.config.serviceUrl}/${this.config.tokenEndpoint}`,\n      this.config.tokenBody(userName, password)\n    )\n      .pipe(\n        publishReplay(1)\n      );\n\n    this.rememberMe = rememberMe;\n    observable.subscribe(this.onSignedIn.bind(this), this.onSignInFailed.bind(this));\n\n    return observable;\n  }\n\n  signOut(): Observable<any> {\n    const signOutUrl = `${this.config.serviceUrl}/${this.config.signOutEndpoint}`;\n    if (this.isFederatedAccount) {\n      this.log.info(`Signing out. Authentication Type: STS. Forwarded to: ${signOutUrl}`);\n      this.onSignedOut();\n\n      if (typeof location !== 'undefined') {\n        location.href = signOutUrl;\n      }\n    } else {\n      // The only reason this \"Account\" method is abstracted here is because there is additional stuff that\n      // has to happen when you sign out - like removing the user information cache, etc.\n      const obserable = this.http.get(signOutUrl)\n        .pipe(\n          publishReplay(1)\n        );\n\n      obserable\n        .subscribe(this.onSignedOut.bind(this), this.onSignedOutFailed.bind(this));\n\n      return obserable;\n    }\n  }\n\n  getUserInfo(): Observable<UserAccount> {\n    return this.http.get<UserAccount>(`${this.config.serviceUrl}/${this.config.userInfoEndpoint}`);\n  }\n\n  getToken(): string {\n    return this.isAuthenticated\n      ? this.account.access_token || null\n      : null;\n  }\n\n  loadStoredToken(): boolean {\n    const token = this.getLocalToken();\n    let loaded = false;\n\n    if (token && token['.expires']) {\n      const expiresDate = token['.expires'];\n      if (expiresDate > new Date()) {\n        this.onSignedIn(token, true);\n        loaded = true;\n      }\n    }\n\n    return loaded;\n  }\n\n  onSignedIn(account: UserAccount, skipLocalStorage: boolean = false) {\n    this.account = account;\n    this.isAuthenticated = true;\n    this.isDomainAccount = (account.foundContextType || '').toLowerCase() === 'domain';\n    this.isFederatedAccount = (account.authenticationType || '').toLowerCase() === 'federation';\n\n    // Note, we are exposing the access token through the security config because the token intercepter\n    // can not use this auth service - it will result in a cyclic dpendency injection error.\n    // See Angular issue: https://github.com/angular/angular/issues/18224\n    // TODO: Deprecate \"accessToken\" property on \"SecurityConfig\" once this is resolved - RG.\n    this.config.accessToken = account.access_token;\n    this.roleMgr.setRoles(account.privileges || account.roles);\n\n    if (!skipLocalStorage && this.rememberMe) {\n      account.lastSignIn = new Date();\n      this.setLocalToken(account);\n    }\n\n    this.log.debug('User signed in succesfully');\n    this.stateChangeSubject.next(SignInState.SignedIn);\n  }\n\n  onSignedOut() {\n    // We set the \"authenticated\" flag state to false so that anyone watching this can see the new state and\n    // get rid of the account information that was cached, because it is no longer applicable.\n    this.isAuthenticated = false;\n    this.isDomainAccount = false;\n    this.isFederatedAccount = false;\n    this.account = null;\n    this.roleMgr.clearRoles();\n    this.setLocalToken(null);\n    this.log.debug('User signed out succesfully');\n    this.stateChangeSubject.next(SignInState.SignedOut);\n  }\n\n  private onSignInFailed(err: any) {\n    this.log.error('Failed to sign in', err);\n    this.stateChangeSubject.next(SignInState.SignInFailed);\n  }\n\n  private onSignedOutFailed(err: any) {\n    this.log.error('Failed to sign out', err);\n    this.stateChangeSubject.next(SignInState.SignOutFailed);\n  }\n\n  private getLocalToken(): UserAccount {\n    try {\n      const token: UserAccount = this.storage.getObject(this.config.tokenStorageKey);\n\n      if (token && token.lastSignIn && isString(token.lastSignIn)) {\n        token.lastSignIn = new Date(token.lastSignIn);\n      }\n\n      if (token && token['.expires'] && isString(token['.expires'])) {\n        token['.expires'] = new Date(Date.parse(token['.expires']));\n      }\n\n      return token;\n    } finally {\n      // We don't need to do anything bbecause this is not critical path.\n    }\n  }\n\n  private setLocalToken(token): void {\n    try {\n      if (token) {\n        this.storage.setObject(this.config.tokenStorageKey, token);\n      } else {\n        this.storage.remove(this.config.tokenStorageKey);\n      }\n    } finally {\n      // We don't need to do anything as this is not a core workflow.\n    }\n  }\n}\n","// Angular.\nimport { HttpClient, HttpParams } from '@angular/common/http';\n\n// 3rd party.\nimport { Observable } from 'rxjs';\n\n// TSS.\nimport { BaseEmptyResourceService } from './base-empty-resource.service';\nimport { ResourceServiceConfig } from './resource-service-config';\n\n\nexport abstract class BaseResourceService<T> extends BaseEmptyResourceService<T> implements BaseEmptyResourceService<T> {\n  constructor(protected http: HttpClient, paramsOrUrl: string | ResourceServiceConfig) {\n    super(http, paramsOrUrl);\n  }\n\n  query(routeTokens?: any, params?: HttpParams): Observable<T[]> {\n    const url = this.getUrl(this.config.queryEndpoint, routeTokens);\n    return this.http.get<T[]>(url, { params });\n  }\n\n  get(id: string | number, routeTokens?: any, params?: HttpParams): Observable<T> {\n    const url = this.getUrlWithId(id, this.config.getEndpoint, routeTokens);\n    return this.http.get<T>(url, { params });\n  }\n\n  create(entity: T, routeTokens?: any, params?: HttpParams): Observable<T> {\n    const url = this.getUrl(this.config.createEndpoint, routeTokens);\n    return this.http.post<T>(url, entity, { params });\n  }\n\n  update(entity: T, routeTokens?: any, params?: HttpParams): Observable<any> {\n    const url = this.getUrlWithEntity(entity, this.config.updateEndpoint, routeTokens);\n    return this.http.put(url, entity, { params });\n  }\n\n  delete(id: string | number, routeTokens?: any, params?: HttpParams): Observable<T> {\n    const url = this.getUrlWithId(id, this.config.deleteEndpoint, routeTokens);\n    return this.http.delete<T>(url, { params });\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\nimport { AppConfig } from './app.config';\nimport { AppProfile } from './app-profile';\nimport { BaseResourceService } from '../core/resource/base-resource.service';\nimport { join } from '../core/url/join.function';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AppProfileService extends BaseResourceService<AppProfile> {\n  constructor(protected http: HttpClient, config: AppConfig) {\n    super(http, {\n      url: join(config.serviceUrl, config.appProfileEndpoint),\n      defaultRouteTokens: {\n        appId: config.appId\n      }\n    });\n  }\n}\n\n","// Angular.\nimport { Router } from '@angular/router';\nimport { Injector, Injectable } from '@angular/core';\n\n// TSS.\nimport { AutoConfigData } from '../core/auto-config-data';\nimport { CoreConfig } from '../core/core.config';\nimport { Logger } from '../core/logging/logger.service';\nimport { PersistentStorage } from '../core/storage/persistent-storage.service';\nimport { getQueryParams } from '../core/url/get-query-params.function';\nimport { getFirstHashRoutePath } from '../core/url/get-first-hash-route-path.function';\nimport { getFullUrl } from '../core/url/get-full-url.function';\nimport { isDate } from '../core/type-check/is-date.function';\nimport { toPrimitiveType } from '../core/type-conversion/to-primitive-type.function';\nimport { lowerCaseFirst } from '../core/formatting/lower-case-first.function';\nimport { isValue } from '../core/type-check/is-value.function';\nimport { setValue } from '../core/object/set-value.function';\n\nimport { AuthService } from '../security/auth.service';\nimport { SecurityConfig } from '../security/security-config';\nimport { RoleManagerService } from '../security/role-manager.service';\nimport { UserAccount } from '../security/user-account';\n\nimport { AppProfileService } from './app-profile.service';\nimport { AppConfig } from './app.config';\nimport { AppProfile } from './app-profile';\n\n\ninterface ModuleConfigInstanceMap {\n  instance: any;\n  config: AutoConfigData;\n}\n\n\n/**\n * Application initialization service that is responsible for bootstrapping\n * the application.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class AppInitializerService {\n  private static readonly tokenExpireDateKey = 'token-expire-date';\n\n  ready = false;\n  loading = false;\n  onReady: Promise<AppProfile>;\n\n  private readonly moduleConfigInstances = new Map<string, ModuleConfigInstanceMap>();\n  private readonly queryParameters: any;\n  private resolveFn: (value?: AppProfile | PromiseLike<AppProfile>) => void;\n  private rejectFn: (reason?: any) => void;\n\n  constructor(\n    private router: Router,\n    private auth: AuthService,\n    private appProfiles: AppProfileService,\n    private log: Logger,\n    private config: AppConfig,\n    private storage: PersistentStorage,\n    private securityConfig: SecurityConfig,\n    private roleMgr: RoleManagerService,\n    private injector: Injector\n  ) {\n    this.queryParameters = getQueryParams();\n    this.onReady = new Promise<AppProfile>((resolve, reject) => {\n      this.resolveFn = resolve;\n      this.rejectFn = reject;\n    });\n  }\n\n  /**\n   * Initializes/bootstraps a standard TSS application.\n   */\n  initialize(): void {\n    const appId: string = this.config.appId;\n    const [firstRoutePath] = this.router.url.split('/');\n    const profileId: string = this.queryParameters.profileId\n      || firstRoutePath\n      || getFirstHashRoutePath(getFullUrl())\n      || this.config.defaultProfileId;\n\n    // We override module configurations here because the user may be trying to debug the session. The\n    // override has to happen again at the end of the process to override any settings that may have\n    // been set through the app initialization process.\n    this.overrideModuleConfigurationsFromQueryParams();\n\n    this.log.debug(`Initializing application with profile ID: ${profileId}`);\n\n    // We need to try and read any stored security token before we make\n    // a request to get profile info, so that the request is authenticated.\n    this.auth.loadStoredToken();\n    this.populateModuleConfigInstances();\n\n    if (!this.config.queryProfile || !this.config.hasServiceUrl) {\n      this.config.profile = {\n        name: '',\n        appId,\n        id: profileId,\n      };\n\n      this.log.debug(this.config.hasServiceUrl\n        ? `Profile query skipped due to configuration option`\n        : `No service URL configured, can't retrieve profile details - skipping profile retrieval`);\n\n      this.overrideModuleConfigurationsFromQueryParams();\n      this.ready = true;\n      this.resolveFn(this.config.profile);\n    } else {\n      this.loading = true;\n\n      // We need to try and read any stored security token before we make\n      // a request to get profile info, so that the request is authenticated.\n      this.queryProfile(profileId)\n        .then((profile: AppProfile) => this.resolveFn(profile))\n        .catch((err) => {\n          if (this.config.continueOnAppBootstrapError) {\n            this.resolveFn(this.config.profile);\n          } else {\n            this.rejectFn(err);\n          }\n        });\n    }\n  }\n\n  private queryProfile(profileId: string): Promise<AppProfile> {\n    return new Promise((resolve, reject) => {\n      this.appProfiles.get(profileId)\n        .subscribe((profile) => {\n          if (!profile) {\n            return reject(`No profile found with ID '${profileId}'`);\n          }\n\n          this.config.profileId = profile.id;\n          this.config.profile = profile;\n\n          this.checkTokenInvalidationDate();\n          this.applyModuleConfigurations();\n          this.overrideModuleConfigurationsFromQueryParams();\n          this.retrieveUserAccount()\n            .then(() => {\n              this.configureRoleManager();\n              this.ready = true;\n              this.loading = false;\n              resolve(profile);\n            })\n            .catch((err) => {\n              this.loading = false;\n              reject(err);\n            });\n        }, (err) => {\n          this.loading = false;\n          this.log.error(`Failed to retrieve application profile with app ID '${this.config.appId}' and ID '${profileId}'`);\n          reject(err);\n        });\n    });\n  }\n\n  /**\n   * Gets the date of the cached \"invalidation\" date.\n   * The invalidation date is used to let the server force users to re-authenticate.\n   */\n  private getCachedTokenInvalidationDate(): Date {\n    return new Date(this.storage.get(this.securityConfig.tokenInvalidationDateLookup));\n  }\n\n  /**\n   * Caches the \"invalidation\" date.\n   * The invalidation date is used to let the server force users to re-authenticate.\n   */\n  private setCachedTokenExpireDate(setDate?: string): void {\n    this.log.debug(`Setting cached token invalidation date: ${setDate}`);\n\n    if (setDate) {\n      this.log.debug(`Setting token invalidation date to: ${setDate}`);\n      this.storage.set(this.securityConfig.tokenInvalidationDateLookup, setDate);\n    } else {\n      this.storage.remove(this.securityConfig.tokenInvalidationDateLookup);\n    }\n  }\n\n  /**\n   * Compares the cached token validation data with the invalidation date from the server.\n   * If the invalidation date from the server is new than the cached date, then the user\n   * must be forcibly signed out.\n   */\n  private checkTokenInvalidationDate(): void {\n    let tokenExpireDate;\n    const siteInfo = this.config.profile && this.config.profile.app && this.config.profile.app.siteInfo\n      ? this.config.profile.app.siteInfo\n      : null;\n\n    if (siteInfo && siteInfo[AppInitializerService.tokenExpireDateKey]) {\n      const lastTokenInvalidateDate = this.getCachedTokenInvalidationDate();\n      tokenExpireDate = new Date(siteInfo[AppInitializerService.tokenExpireDateKey]);\n\n      // Note, we are setting milliseconds to 0 because we don't care about that level of accuracy.\n      // Also, the \"setMilliseconds\" method returns the \"timestamp\" so we can just compare those two results.\n      const lastTokenValidationDatesMatch = isDate(lastTokenInvalidateDate) && isDate(tokenExpireDate)\n        ? lastTokenInvalidateDate.setMilliseconds(0) === tokenExpireDate.setMilliseconds(0)\n        : lastTokenInvalidateDate === tokenExpireDate;\n\n      if (this.auth.account && this.auth.account.lastSignIn < tokenExpireDate && !lastTokenValidationDatesMatch) {\n        this.log.info('Signing out user due to token invalidation date from security configuration');\n        this.auth.onSignedOut();\n      } else if (this.auth.account) {\n        this.log.debug('User has been authenticated after the token invalidation date');\n      }\n\n      if (tokenExpireDate) {\n        this.setCachedTokenExpireDate(tokenExpireDate);\n      }\n    }\n  }\n\n  /**\n   * Retrieves the user account if the user is already signed in, logs the user out if\n   * the token is expired, or refreshes the user account information - depending on\n   * the configured authentication provider.\n   */\n  private retrieveUserAccount(): Promise<UserAccount> {\n    return new Promise((resolve, reject) => {\n      try {\n        let queryingInfo = false;\n        const app = this.config.profile && this.config.profile.app\n          ? this.config.profile.app : null;\n\n        // If the local auth status says that no one is logged in, but the service is recognizing that someone is\n        // logged in, then this means that authentication is happening through windows via Active Directory or some\n        // other means. We need to get the user info so we can set the app \"state\" as \"logged in\".\n        if (app && app.security && !this.auth.isAuthenticated && app.security.isAuthenticated) {\n          this.log.debug('Retrieving additional user info do to authentication state');\n          queryingInfo = true;\n          this.auth.getUserInfo().subscribe(info => {\n            const expiresDate = new Date();\n            expiresDate.setDate(expiresDate.getDate() + app.security.accessTokenExpireDays);\n            this.auth.onSignedIn(Object.assign({ '.expires': expiresDate }, info));\n            resolve(info);\n          }, err => {\n            reject(err);\n          });\n        } else if (this.auth.isAuthenticated && app.security && !app.security.isAuthenticated) {\n          this.log.debug(`Signing out user do to out of sync authentication state`);\n          // Sign out/clear the auth cache because the server says they don't know who this is, but\n          // the client side code thinks it knows who it is.\n          this.auth.onSignedOut();\n        }\n\n        if (!queryingInfo) {\n          this.log.debug(`No request made for additional user account info`);\n          resolve(this.auth.account);\n        }\n      } catch (e) {\n        this.log.error('Failed to do pre-verification of user on app load. {0}', e);\n        reject(e);\n      }\n    });\n  }\n\n  /**\n   * Set module configuration properties based on overrides from an object.\n   * This object can come from multiple places - such as the server or query params.\n   * See: the \"applyModuleConfigurations\" and \"overrideModuleConfigurations\" methods.\n   */\n  private applyModuleConfigurationsFromObject(sourceMapping: any) {\n    sourceMapping = sourceMapping || {};\n    this.moduleConfigInstances\n      .forEach(config => {\n        const moduleConfigName = config.config.className;\n        const configInstance = config.instance;\n\n        Object.keys(sourceMapping)\n          .forEach((key) => {\n            const value = toPrimitiveType(sourceMapping[key]);\n            const modulePrefix = lowerCaseFirst(moduleConfigName + '.');\n            const rootKey = key.replace(modulePrefix, ''); // Turn appConfig.foo.bar --> foo.bar\n\n            if (isValue(value) && key.toLowerCase().startsWith(modulePrefix.toLowerCase())) {\n              // A config object has properties in our siteInfo object.\n              this.log.debug(`Setting ${moduleConfigName} property '${rootKey}' to ${value}`);\n              setValue(configInstance, rootKey, value);\n            }\n          });\n      });\n  }\n\n  /**\n   * Set module configuration properties based on overrides from the server.\n   * This functionality lets us dynamically override client side configuration\n   * through the use of \"App Settings\" from the server.\n   */\n  private applyModuleConfigurations(): void {\n    const profile = this.config.profile;\n    if (!profile || !profile.app || !profile.app.siteInfo) {\n      return;\n    }\n\n    this.applyModuleConfigurationsFromObject(profile.app.siteInfo);\n  }\n\n  /**\n   * Set module configuration properties based on overrides from the URL query parameters.\n   * This functionality lets us dynamically override client side and server side configurations\n   * by passing explicit settings through query parameters. A good use case for this is to pass\n   * \"coreConfig.logLevel=1\" as a query parameter in production to debug an issue in a production\n   * environment.\n   */\n  private overrideModuleConfigurationsFromQueryParams() {\n    if (this.config.allowQueryParamInjections) {\n      this.applyModuleConfigurationsFromObject(this.queryParameters);\n    }\n  }\n\n  /**\n   * Instantiates instances of each configured module configuration object. Properties of\n   * these module config instances will later be set based on server-side overides.\n   */\n  private populateModuleConfigInstances(): void {\n    CoreConfig.moduleConfigs\n      .forEach(moduleAutoConfig => {\n        try {\n          // Reason: https://github.com/angular/angular/issues/22063\n          // tslint:disable-next-line\n          const configInstance = this.injector.get(moduleAutoConfig.injectorToken);\n          this.moduleConfigInstances.set(moduleAutoConfig.injectorToken, {\n            instance: configInstance,\n            config: moduleAutoConfig\n          });\n          this.log.debug(`Created module configuration instance for: ${moduleAutoConfig.className}`);\n\n          if ('serviceUrl' in configInstance || 'hasServiceUrl' in configInstance) {\n            configInstance.serviceUrl = this.config.serviceUrl;\n          }\n        } catch (err) {\n          this.log.error(`Failed to get module config: ${moduleAutoConfig.className}`, err);\n        }\n      });\n  }\n\n  /**\n   * Updates security options based on information retrieved form the application profile.\n   * For example, security may be enabled or disabled, guest roles will be set, etc.\n   */\n  private configureRoleManager(): void {\n    const security = this.config.profile && this.config.profile.app && this.config.profile.app.security\n      ? this.config.profile.app.security : null;\n\n    if (!security) {\n      return;\n    }\n\n    // We want to explicitly\n    if (security.hasOwnProperty('enabled')) {\n      this.securityConfig.rolesEnabled = !!security.enabled;\n    }\n\n    if (!this.roleMgr.enabled) {\n      this.log.warn('Security is disabled');\n    }\n\n    security.guestPrivileges = security.guestPrivileges || [];\n    this.roleMgr.addRoles(security.guestPrivileges);\n    this.log.info(`Configured default roles (guest roles) - total of ${security.guestPrivileges.length}`);\n    this.log.info(`User has a total of ${this.roleMgr.roleCount} roles assigned to them`);\n  }\n}\n\n/**\n * Application initialization factory that provides a hook into\n * the Angular bootstrapping process.\n */\nexport function AppInitializerFactory(injector: Injector): () => Promise<any> {\n  return (): Promise<AppProfile> => {\n    const initializer: AppInitializerService = injector.get(AppInitializerService);\n    initializer.initialize();\n\n    return initializer.onReady;\n  };\n}\n","export const ALL_APPS_QUERY_ID = 'all';\n\nexport interface AppProfile {\n  id: string;\n  appId: string;\n  name: string;\n  logo?: string;\n  theme?: string;\n  cssPath?: string;\n  jsPath?: string;\n  app?: any;\n  portalAppId?: string;\n}\n","import { PipeTransform, Pipe } from '@angular/core';\n\n@Pipe({ name: 'keys' })\nexport class KeysPipe implements PipeTransform {\n  transform(value: any): any {\n    const keys = [];\n    Object.keys(value)\n      .forEach(key => keys.push({ key, value: value[key] }));\n\n    return keys;\n  }\n}\n","import { PipeTransform, Pipe } from '@angular/core';\nimport { formatByteSize } from './format-byte-size.function';\n\n\n@Pipe({ name: 'fileSize' })\nexport class FileSizePipe implements PipeTransform {\n  transform(bytes: number = 0): string {\n    return formatByteSize(bytes);\n  }\n}\n","export const STANDARDIZED_QUERY_DATE_FORMAT = `timestamp '{date}'`;\nexport const ORACLE_DATE_FORMAT = `TO_DATE('{date}','YYYY-MM-DD HH24:MI:SS')`;\nexport const DEFAULT_DATE_FORMAT = 'yyyy-MM-dd HH:mm:ss';\nexport const HOURS_PER_DAY = 24;\nexport const MINUTES_PER_HOUR = 60;\nexport const SECONDS_PER_MINUTE = 60;\nexport const MILLISECONDS_PER_SECOND = 1000;\nexport const MILLISECONDS_PER_MINUTE = 60000;\nexport const MILLISECONDS_PER_HOUR = 3600000;\nexport const MILLISECONDS_PER_DAY = 86400000;\nexport const READABLE_TIME_SUFFIX_MAP = {\n  ms: 'ms',\n  msDecimalPlaces: 0,\n  sec: 'sec',\n  secDecimalPlaces: 0,\n  min: 'min',\n  minDecimalPlaces: 2,\n  hr: 'hr',\n  hrDecimalPlaces: 2,\n  days: 'days',\n  daysDecimalPlaces: 2,\n};\n","import { MILLISECONDS_PER_SECOND, MILLISECONDS_PER_MINUTE, MILLISECONDS_PER_HOUR, MILLISECONDS_PER_DAY } from '../date-time.constants';\nimport { TimeUnit } from '../time-unit';\n\n\nexport function toMilliseconds(value: number, unitOfTime: TimeUnit): number {\n  let conversionFactor: number;\n\n  if (unitOfTime === 'milliseconds') {\n    conversionFactor = 1;\n  } else if (unitOfTime === 'seconds') {\n    conversionFactor = MILLISECONDS_PER_SECOND;\n  } else if (unitOfTime === 'minutes') {\n    conversionFactor = MILLISECONDS_PER_MINUTE;\n  } else if (unitOfTime === 'hours') {\n    conversionFactor = MILLISECONDS_PER_HOUR;\n  } else if (unitOfTime === 'days') {\n    conversionFactor = MILLISECONDS_PER_DAY;\n  } else {\n    throw new Error(`Unsuported unit of time supplied: '${unitOfTime}'`);\n  }\n\n  return (value || 0) * conversionFactor;\n}\n","import { MILLISECONDS_PER_SECOND } from '../date-time.constants';\n\n\nexport function millisecondsToSeconds(milliseconds: number): number {\n  return milliseconds / MILLISECONDS_PER_SECOND;\n}\n","import { MILLISECONDS_PER_MINUTE } from '../date-time.constants';\n\n\nexport function millisecondsToMinutes(milliseconds: number): number {\n  return milliseconds / MILLISECONDS_PER_MINUTE;\n}\n","import { MILLISECONDS_PER_HOUR } from '../date-time.constants';\n\n\nexport function millisecondsToHours(milliseconds: number): number {\n  return milliseconds / MILLISECONDS_PER_HOUR;\n}\n","import { MILLISECONDS_PER_DAY } from '../date-time.constants';\n\n\nexport function millisecondsToDays(milliseconds: number): number {\n  return milliseconds / MILLISECONDS_PER_DAY;\n}\n","import { millisecondsToSeconds } from '../conversion/milliseconds-to-seconds.function';\nimport { millisecondsToMinutes } from '../conversion/milliseconds-to-minutes.function';\nimport { millisecondsToHours } from '../conversion/milliseconds-to-hours.function';\nimport { millisecondsToDays } from '../conversion/milliseconds-to-days.function';\nimport {\n  MILLISECONDS_PER_SECOND,\n  MILLISECONDS_PER_MINUTE,\n  MILLISECONDS_PER_HOUR,\n  MILLISECONDS_PER_DAY,\n  READABLE_TIME_SUFFIX_MAP\n} from '../date-time.constants';\n\n\nexport function toReadableTime(milliseconds: number, suffixMap: any = {}): string {\n  // TODO: Get rid of magic numbers below - RG.\n  const formatAsMilliseconds = milliseconds < MILLISECONDS_PER_SECOND;\n  const formatAsSeconds = milliseconds < (MILLISECONDS_PER_MINUTE - 1);\n  const formatAsMinutes = milliseconds < (MILLISECONDS_PER_HOUR - 299);\n  const formatAsHours = milliseconds < (MILLISECONDS_PER_DAY - 18000);\n  let value: number = milliseconds;\n  let unit: string;\n  let decimalPlaces: number;\n\n  suffixMap = suffixMap\n    ? Object.assign({}, READABLE_TIME_SUFFIX_MAP, suffixMap)\n    : READABLE_TIME_SUFFIX_MAP;\n\n  // We assume the milliseconds was passed in.\n  if (formatAsMilliseconds) {\n    // The time should be shown in milliseconds.\n    unit = suffixMap.ms;\n    value = milliseconds;\n    decimalPlaces = suffixMap.msDecimalPlaces;\n  } else if (formatAsSeconds) {\n    // The time should be shown in seconds.\n    const seconds = millisecondsToSeconds(milliseconds);\n    unit = suffixMap.sec;\n    value = seconds;\n    decimalPlaces = suffixMap.secDecimalPlaces;\n  } else if (formatAsMinutes) {\n    // The time should be shown in in minutes.\n    const minutes = millisecondsToMinutes(milliseconds);\n    unit = suffixMap.min;\n    value = minutes;\n    decimalPlaces = suffixMap.minDecimalPlaces;\n  } else if (formatAsHours) {\n    // The time should be shown in hours.\n    const hours = millisecondsToHours(milliseconds);\n    unit = suffixMap.hr;\n    value = hours;\n    decimalPlaces = suffixMap.hrDecimalPlaces;\n  } else {\n    // The time should be shown in days.\n    const days = millisecondsToDays(milliseconds);\n    unit = suffixMap.days;\n    value = days;\n    decimalPlaces = suffixMap.daysDecimalPlaces;\n  }\n\n  const numberWithStrippedZeros = Number(value.toFixed(decimalPlaces));\n  return `${numberWithStrippedZeros} ${unit}`;\n}\n","import { PipeTransform, Pipe } from '@angular/core';\nimport { TimeUnit } from '../time-unit';\nimport { toMilliseconds } from '../conversion/to-milliseconds.function';\nimport { toReadableTime } from './to-readable-time.function';\n\n\n@Pipe({ name: 'readableTime' })\nexport class ReadableTimePipe implements PipeTransform {\n  transform(time: number, unit: TimeUnit = 'milliseconds'): any {\n    const millis = toMilliseconds(time, unit);\n    return toReadableTime(millis);\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { DomSanitizer } from '@angular/platform-browser';\n\n\n@Pipe({ name: 'safeUrl' })\nexport class SafeUrlPipe implements PipeTransform {\n  constructor(private readonly sanitizer: DomSanitizer) { }\n  transform(url) {\n    return this.sanitizer.bypassSecurityTrustResourceUrl(url);\n  }\n}\n","import { NgModule, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\n\nimport { KeysPipe } from './keys.pipe';\nimport { FileSizePipe } from './storage/file-size.pipe';\nimport { ReadableTimePipe } from './date-time/readable/readable-time.pipe';\nimport { SafeUrlPipe } from './safe-url.pipe';\n\n\n@NgModule({\n  imports: [\n  ],\n  declarations: [\n    FileSizePipe,\n    KeysPipe,\n    ReadableTimePipe,\n    SafeUrlPipe,\n  ],\n  exports: [\n    FileSizePipe,\n    KeysPipe,\n    ReadableTimePipe,\n    SafeUrlPipe\n  ],\n  providers: [\n  ],\n  schemas: [CUSTOM_ELEMENTS_SCHEMA]\n})\nexport class TssCoreModule { }\n","import { NgModule, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { TssCoreModule } from '../core/core.module';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    TssCoreModule,\n  ],\n  declarations: [\n  ],\n  exports: [\n  ],\n  providers: [\n  ],\n  schemas: [CUSTOM_ELEMENTS_SCHEMA]\n})\nexport class TssGeometryModule { }\n","import { NgModule, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { TssCoreModule } from '../core/core.module';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    TssCoreModule,\n    HttpClientModule,\n  ],\n  declarations: [\n  ],\n  exports: [\n  ],\n  providers: [\n  ],\n  schemas: [CUSTOM_ELEMENTS_SCHEMA]\n})\nexport class TssDataSourceModule { }\n","import { NgModule, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\nimport { TssCoreModule } from '../core/core.module';\nimport { TssDataSourceModule } from '../data-source/data-source.module';\n\n\n@NgModule({\n  imports: [\n    TssCoreModule,\n    TssDataSourceModule,\n  ],\n  declarations: [\n  ],\n  exports: [\n  ],\n  providers: [\n  ],\n  schemas: [CUSTOM_ELEMENTS_SCHEMA]\n})\nexport class TssEsriModule { }\n","import { LayerRendererType } from './types';\n\n\nexport const LAYER_RENDER_TYPES: LayerRendererTypeDefinition[] = [\n  { alias: 'Single Value', renderType: 'simple', description: 'Displays a single symbology, regardless of values' },\n  { alias: 'Unique Value', renderType: 'uniqueValue', description: 'Displays different symbologies based on a unique value' },\n  { alias: 'Class Break', renderType: 'classBreaks', description: 'Displays different symbologies based on a classification of values' },\n];\n\nexport interface LayerRendererTypeDefinition {\n  alias: string;\n  renderType: LayerRendererType;\n  description: string;\n}\n","import { PipeTransform, Pipe } from '@angular/core';\nimport { LayerRendererType } from './types';\nimport { LAYER_RENDER_TYPES, LayerRendererTypeDefinition } from './layer-renderer-type-definition';\nimport { LayerDrawingInfoRenderer } from './layer-drawing-info-renderer';\nimport { isString } from '../../core/type-check/is-string.function';\n\n\n@Pipe({ name: 'layerRendererType' })\nexport class LayerRendererTypePipe implements PipeTransform {\n  transform(input: LayerRendererType | LayerDrawingInfoRenderer): string {\n    const renderType: LayerRendererType = isString(input)\n      ? input as LayerRendererType\n      : (input as LayerDrawingInfoRenderer).type;\n\n    const definition: LayerRendererTypeDefinition = LAYER_RENDER_TYPES\n      .find(t => t.renderType === renderType);\n\n    return definition.alias;\n  }\n}\n","import { NgModule, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { TssCoreModule } from '../core/core.module';\nimport { LayerRendererTypePipe } from './drawing/layer-renderer-type.pipe';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    TssCoreModule,\n  ],\n  declarations: [\n    LayerRendererTypePipe\n  ],\n  exports: [\n    LayerRendererTypePipe\n  ],\n  providers: [\n  ],\n  schemas: [CUSTOM_ELEMENTS_SCHEMA]\n})\nexport class TssMapsModule { }\n","import { CommonModule } from '@angular/common';\nimport { NgModule, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { TssCoreModule } from '../core/core.module';\nimport { TssDataSourceModule } from '../data-source/data-source.module';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    TssCoreModule,\n    TssDataSourceModule,\n    HttpClientModule,\n  ],\n  declarations: [\n  ],\n  exports: [\n  ],\n  providers: [\n  ],\n  schemas: [CUSTOM_ELEMENTS_SCHEMA]\n})\nexport class TssLrsModule { }\n","// Angular.\nimport { Injectable } from '@angular/core';\nimport { HttpRequest, HttpHandler, HttpEvent, HttpInterceptor } from '@angular/common/http';\n\n// 3rd party.\nimport { Observable } from 'rxjs';\n\n// TSS.\nimport { SecurityConfig } from './security-config';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TokenInterceptor implements HttpInterceptor {\n  constructor(private config: SecurityConfig) {\n\n  }\n\n  intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    const withCredsExpr = new RegExp(this.config.withCredentialsInclusionExpression);\n    if (this.config.accessToken && new RegExp(this.config.tdsTokenInclusionExpression).test(request.url)) {\n      request = request.clone({\n        withCredentials: this.config.setWithCredentials && withCredsExpr.test(request.url),\n        setHeaders: {\n          Authorization: `${this.config.authorizationType} ${this.config.accessToken}`\n        }\n      });\n    } else if (this.config.setWithCredentials && withCredsExpr.test(request.url)) {\n      request = request.clone({\n        withCredentials: true\n      });\n    }\n\n    return next.handle(request);\n  }\n}\n","import { Directive, Input, TemplateRef, ViewContainerRef } from '@angular/core';\nimport { RoleManagerService } from './role-manager.service';\nimport { Logger } from '../core/logging/logger.service';\n\n\n@Directive({\n  // TODO: remove this once this is moved to it's own package - RG.\n  // tslint:disable-next-line\n  selector: '[hasRoles]'\n})\nexport class HasRolesDirective {\n\n  constructor(\n    private templateRef: TemplateRef<any>,\n    private viewContainer: ViewContainerRef,\n    private roleMgr: RoleManagerService,\n    private log: Logger) {\n  }\n\n  @Input() set hasRoles(roles: string | number) {\n    if (this.roleMgr.hasRoles(roles)) {\n      // If condition is true add template to DOM\n      this.viewContainer.createEmbeddedView(this.templateRef);\n      this.log.trace(`Granted access: ${roles}`);\n    } else {\n      // Else remove template from DOM\n      this.viewContainer.clear();\n      this.log.trace(`Denied access: ${roles}`);\n    }\n  }\n}\n","import { NgModule, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { HTTP_INTERCEPTORS, HttpClientModule } from '@angular/common/http';\n\nimport { TssCoreModule } from '../core/core.module';\nimport { TokenInterceptor } from './token.interceptor';\nimport { HasRolesDirective } from './has-roles.directive';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    HttpClientModule,\n    FormsModule,\n    TssCoreModule\n  ],\n  declarations: [\n    HasRolesDirective,\n  ],\n  exports: [\n    HasRolesDirective,\n  ],\n  providers: [\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: TokenInterceptor,\n      multi: true\n    }\n  ],\n  schemas: [CUSTOM_ELEMENTS_SCHEMA]\n})\nexport class TssSecurityModule { }\n","import { Input, Directive, HostListener } from '@angular/core';\n\n\n@Directive({\n  // TODO: remove this once this is moved to it's own package - RG.\n  // tslint:disable-next-line\n  selector: '[href]'\n})\nexport class PreventDefaultLinkDirective {\n  @Input() href;\n\n  @HostListener('click', ['$event'])\n  preventDefault(event) {\n    if (!this.href.length) {\n      event.preventDefault();\n    }\n  }\n}\n","import { NgModule, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\nimport { PreventDefaultLinkDirective } from './prevent-default-link.directive';\n\n\n@NgModule({\n  imports: [\n  ],\n  declarations: [\n    PreventDefaultLinkDirective,\n  ],\n  exports: [\n    PreventDefaultLinkDirective,\n  ],\n  providers: [\n  ],\n  schemas: [CUSTOM_ELEMENTS_SCHEMA]\n})\nexport class TssPolyfillModule { }\n","// Angular.\nimport { NgModule, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n\n/**\n * Queue module provides data queueing and core unit of work queue functionality.\n */\n@NgModule({\n  imports: [\n    CommonModule,\n  ],\n  declarations: [\n  ],\n  exports: [\n  ],\n  providers: [\n  ],\n  schemas: [CUSTOM_ELEMENTS_SCHEMA]\n})\nexport class TssQueueModule { }\n","import { isType } from './is-type.function';\n\n\nexport function isFunction(val: any): boolean {\n  return isType(val, 'function');\n}\n","import { RouteExpression } from './route-expression';\nimport { isFunction } from '../core/type-check/is-function.function';\nimport { isString } from '../core/type-check/is-string.function';\nimport { replaceTokens } from '../core/tokens/replace-tokens.function';\n\n\nexport function isRouteMatch(route: string, routeExpression: RouteExpression): boolean {\n  let exp: RegExp;\n\n  if (isFunction(routeExpression)) {\n    return Boolean((routeExpression as (url: string) => boolean)(route));\n  }\n\n  if (isString(routeExpression)) {\n    // NOTE: We are replacing the friendly route matching with real regex.\n    const wildcardExp = new RegExp('[*]', 'gi');\n    const routeAsString = routeExpression as string;\n    const resolvedRoute = replaceTokens(routeAsString, '*')\n      .replace(wildcardExp, '.*');\n\n    exp = new RegExp(resolvedRoute, 'i');\n  } else {\n    exp = routeExpression as RegExp;\n  }\n\n  return exp.test(route);\n}\n","// Angular.\nimport { Injectable } from '@angular/core';\n\n// TSS.\nimport { AutoConfig } from '../core/auto-config.decorator';\nimport { HttpParamInjectionDefinition } from './http-param-injection-definition';\nimport { isRouteMatch } from './is-route-match.function';\nimport { RouteExpression } from './route-expression';\n\n\n/**\n * Configuration class for storing global data caching settings.\n */\n@Injectable({\n  providedIn: 'root'\n})\n@AutoConfig('HttpConfig')\nexport class HttpConfig {\n  get hasInjections(): boolean {\n    return Boolean(this.paramInjectionDefitions.length);\n  }\n\n  paramInjectionsEnabled = true;\n  paramInjectionDefitions: HttpParamInjectionDefinition[] = [];\n\n  addOrUpdateParameterInjection(route: RouteExpression, paramName: string, paramValue: string): HttpParamInjectionDefinition {\n    const definition: HttpParamInjectionDefinition = {\n      route,\n      paramName,\n      paramValue\n    };\n\n    const existingDefinition = this.paramInjectionDefitions.find(def => def.route === route && def.paramName === paramName);\n    if (existingDefinition) {\n      Object.assign(existingDefinition, definition);\n      return existingDefinition;\n    } else {\n      this.paramInjectionDefitions.push(definition);\n      return definition;\n    }\n  }\n\n  addParameterInjection(route: RouteExpression, paramName: string, paramValue: string): HttpParamInjectionDefinition {\n    const definition = {\n      route,\n      paramName,\n      paramValue\n    };\n\n    this.paramInjectionDefitions.push(definition);\n    return definition;\n  }\n\n  getInjectionDefinitions(route: string): HttpParamInjectionDefinition[] {\n    return this.paramInjectionDefitions.filter(def => isRouteMatch(route, def.route));\n  }\n\n  getFirstInjectionDefinition(route: string): HttpParamInjectionDefinition {\n    return this.paramInjectionDefitions.find(def => isRouteMatch(route, def.route));\n  }\n}\n","// Angular.\nimport { Injectable } from '@angular/core';\nimport { HttpRequest, HttpHandler, HttpEvent, HttpInterceptor } from '@angular/common/http';\n\n// 3rd Party.\nimport { Observable } from 'rxjs';\n\n// TSS.\nimport { Logger } from '../core/logging/logger.service';\nimport { HttpConfig } from './http.config';\nimport { HttpParamInjectionDefinition } from './http-param-injection-definition';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HttpParamInterceptor implements HttpInterceptor {\n  constructor(private config: HttpConfig, private log: Logger) {\n  }\n\n  intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    const httpParamInjections: HttpParamInjectionDefinition[] = this.config.paramInjectionsEnabled\n      ? this.config.getInjectionDefinitions(request.urlWithParams)\n      : [];\n\n    if (httpParamInjections.length) {\n      request = this.generateRequestWithParams(request, httpParamInjections);\n    }\n\n    return next.handle(request);\n  }\n\n  generateRequestWithParams(request: HttpRequest<any>, httpParamInjections: HttpParamInjectionDefinition[]): HttpRequest<any> {\n    let params = request.params;\n    httpParamInjections\n      .forEach(paramInjection => {\n        this.log.debug(`Injecting URL '${request.url}' with parameter value (name: '${paramInjection.paramName}')`);\n        params = params.set(paramInjection.paramName, paramInjection.paramValue);\n      });\n\n    return request.clone({ params });\n  }\n}\n","// Angular.\nimport { CommonModule } from '@angular/common';\nimport { NgModule, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\n\n// TSS\nimport { TssCoreModule } from '../core/core.module';\nimport { HttpParamInterceptor } from './http-param.interceptor';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    HttpClientModule,\n    TssCoreModule,\n  ],\n  declarations: [\n  ],\n  exports: [\n  ],\n  providers: [\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: HttpParamInterceptor,\n      multi: true\n    }\n  ],\n  schemas: [CUSTOM_ELEMENTS_SCHEMA]\n})\nexport class TssHttpModule { }\n","import { NgModule, Injector, CUSTOM_ELEMENTS_SCHEMA, APP_INITIALIZER } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { RouterModule } from '@angular/router';\n\nimport { TssCoreModule } from '../core/core.module';\nimport { TssSecurityModule } from '../security/security.module';\nimport { TssDataSourceModule } from '../data-source/data-source.module';\nimport { TssPolyfillModule } from '../polyfill/polyfill.module';\nimport { AppConfig } from './app.config';\nimport { AppInitializerFactory, AppInitializerService } from './app-initializer.service';\nimport { AppProfileService } from './app-profile.service';\nimport { ApiService } from './api.service';\nimport { TssQueueModule } from '../queuing/queue.module';\nimport { TssHttpModule } from '../http/http.module';\n\n\n@NgModule({\n  imports: [\n    HttpClientModule,\n    RouterModule,\n    TssCoreModule,\n    TssPolyfillModule,\n    TssHttpModule,\n    TssDataSourceModule,\n    TssQueueModule,\n    TssSecurityModule,\n  ],\n  declarations: [\n  ],\n  exports: [\n  ],\n  providers: [\n    AppProfileService,\n    ApiService,\n    AppInitializerService,\n    {\n      provide: APP_INITIALIZER,\n      useFactory: AppInitializerFactory,\n      multi: true,\n      deps: [Injector]\n    }\n  ],\n  schemas: [CUSTOM_ELEMENTS_SCHEMA]\n})\nexport class TssAppModule {\n}\n","// Angular.\nimport { NgModule, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\n\n// TSS.\nimport { TssGeometryModule } from '../geometry/geometry.module';\nimport { TssEsriModule } from '../esri/esri.module';\nimport { TssMapsModule } from '../maps/map.module';\nimport { TssLrsModule } from '../lrs/lrs.module';\nimport { TssAppModule } from './app.module';\n\n\n@NgModule({\n  imports: [\n    TssAppModule,\n    TssEsriModule,\n    TssGeometryModule,\n    TssMapsModule,\n    TssLrsModule,\n  ],\n  declarations: [\n  ],\n  exports: [\n  ],\n  providers: [\n  ],\n  schemas: [CUSTOM_ELEMENTS_SCHEMA]\n})\nexport class TssAppSpatialModule {\n}\n","export const ALL_APP_SETTINGS_QUERY_ID = 'all';\n\n\nexport interface AppSetting {\n  id: string;\n  name: string;\n  value: string;\n  description?: string;\n  appId?: string;\n  placeholderText?: string;\n  order?: string;\n  isPublic?: boolean;\n  isEncrypted?: boolean;\n  preventEdit?: boolean;\n  inputType?: string;\n}\n","// Angular.\nimport { Injectable } from '@angular/core';\nimport { HttpClient, HttpParams } from '@angular/common/http';\n\n// 3rd party.\nimport { Observable } from 'rxjs';\n\n// TSS.\nimport { BaseResourceService } from '../../core/resource/base-resource.service';\nimport { AppSetting, ALL_APP_SETTINGS_QUERY_ID } from './app-setting';\nimport { AppConfig } from '../app.config';\nimport { join } from '../../core/url/join.function';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AppSettingService extends BaseResourceService<AppSetting> {\n  constructor(protected http: HttpClient, config: AppConfig) {\n    super(http, {\n      url: join(config.serviceUrl, config.appSettingsEndpoint),\n      defaultRouteTokens: {\n        appId: config.appId\n      }\n    });\n  }\n\n  /**\n   * Retrieves a list of application settings.\n   */\n  queryAllApps(routeTokens?: any, params?: HttpParams): Observable<AppSetting[]> {\n    routeTokens = routeTokens || {};\n    routeTokens.appId = ALL_APP_SETTINGS_QUERY_ID;\n    return super.query(routeTokens, params);\n  }\n}\n","/**\n * The storage persistance mechanism to use when storing cached data.\n * * inMemory: Only caches data in the users immediate session. Closing and re-opening\n *             the browser window will not keep the cached data.\n * * persistent: Persists the cache data across sessions. This can resolve to any\n *               number of storage mechasims (such as local storage, indexDb, etc).\n */\nexport enum CachePersistence {\n  Persistent = 'persistent',\n  InMemory = 'in-memory',\n}\n","/**\n * The Strategy to use when retrieving and caching data.\n * * networkFirst: Go to the network then go to the cache.\n * * cacheFirst: Go to the cache first and then go to the network for data.\n * * fastest: Use whichever strategy comes back first (a race).\n * * cacheOnly: Only look into the cache for data, never make network request.\n */\nexport enum CacheStrategy {\n  NetworkFirst = 'network-first',\n  CacheFirst = 'cache-first',\n  Fastest = 'fastest',\n  CacheOnly = 'cache-only',\n}\n","// Angular.\nimport { Injectable } from '@angular/core';\n\n// TSS.\nimport { AutoConfig } from '../core/auto-config.decorator';\nimport { isRouteMatch } from '../http/is-route-match.function';\nimport { CacheDefinition } from './cache-definition';\nimport { CacheStrategy } from './cache-strategy';\nimport { CacheConfigOptions } from './cache-config-options';\n\n\n/**\n * Configuration class for storing global data caching settings.\n */\n@Injectable({\n  providedIn: 'root'\n})\n@AutoConfig('CacheConfig')\nexport class CacheConfig {\n  /**\n   * Determines whether caching should be used or not. When disabled, all\n   * caching-related functionality is ignored (not used).\n   */\n  cacheEnabled = false;\n\n  /**\n   * List of configurations that describe what to cache and how to cache it.\n   * The main parts of this configuration include the \"route\" (how to match what\n   * to cache) and the \"strategy\" (whether to look for content in the cache first\n   * or try to make the HTTP request first).\n   */\n  cacheDefitions: CacheDefinition[] = [];\n\n  /**\n   * When set, this strategy will trump all strategies defined in the \"Cache Defintions\".\n   * WARNING: This is a global setting and can have adverse affects when used improperly.\n   * The main use case for this setting is to allow for the global cache strategy of\n   * 'cacheOnly', which will allow an application to force an \"offline\" state (forcing\n   * requests to pull from cache only).\n   */\n  forcedGlobalCacheStrategy: CacheStrategy = null;\n\n  static create(config: CacheConfigOptions): CacheConfig {\n    return Object.assign(new CacheConfig(), config);\n  }\n\n  static enable(...defs: CacheDefinition[]): CacheConfig {\n    return CacheConfig.create({\n      cacheEnabled: true,\n      cacheDefitions: defs,\n    });\n  }\n\n  getCacheDefinition(route: string): CacheDefinition {\n    return this.cacheDefitions.find(def => isRouteMatch(route, def.route));\n  }\n}\n","export const CACHE_ONLY_NO_DATA_EXC_MSG = 'No cache available';\n","// Angular.\nimport { Injectable } from '@angular/core';\n\n// TSS.\nimport { PersistentStorage } from '../core/storage/persistent-storage.service';\n\n\nexport const CACHE_STORAGE_KEY_PREFIX = 'http-cache:';\n\n\n/**\n * Configuration class for storing global data caching settings.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class PersistentCacheStorage extends PersistentStorage {\n  constructor() {\n    super();\n    this.keyPrefix = CACHE_STORAGE_KEY_PREFIX;\n  }\n}\n","// Angular.\nimport { Injectable } from '@angular/core';\nimport { HttpResponse } from '@angular/common/http';\n\n// 3rd Party.\nimport { PersistentCacheStorage } from './cache.storage';\nimport { CacheContent } from './cache-content';\n\n\n/**\n * Cache Service is an observables based in-memory cache implementation\n * Keeps track of in-flight observables and sets a default expiry for cached values\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class CacheService {\n  constructor(private cache: PersistentCacheStorage) {\n  }\n\n  get(key: string): HttpResponse<any> {\n    const cacheItem: CacheContent = this.cache.getObject(key);\n    const now = new Date();\n    let cacheData: HttpResponse<any>;\n\n    if (cacheItem && cacheItem.expires && cacheItem.expires.getTime() < now.getTime()) {\n      this.cache.remove(key);\n    } else if (cacheItem) {\n      // NOTE: We can't just pull the serialized data, because\n      // we need an actual instance of the HttpResponse class.\n      cacheData = Object.assign(new HttpResponse<any>(), cacheItem.value);\n    } else {\n      cacheData = null;\n    }\n\n    return cacheData;\n  }\n\n  set(key: string, value: HttpResponse<any>, timeToLive: number = null) {\n    const expires = timeToLive ? this.getExpireDate(timeToLive) : null;\n    const cacheData: CacheContent = { expires, value };\n\n    this.cache.setObject(key, cacheData);\n  }\n\n  has(key: string): boolean {\n    return this.cache.has(key);\n  }\n\n  private getExpireDate(timeToLive: number = null): Date {\n    const expires = new Date();\n    expires.setSeconds(expires.getSeconds() + timeToLive);\n\n    return expires;\n  }\n}\n","import { TOKEN_EXPRESSION } from './tokens.constants';\n\n\nexport function hasTokens(template: string): boolean {\n  return TOKEN_EXPRESSION.test(template);\n}\n","export function standardizeTokens(template: string): string {\n  return (template || '').replace(/{{/gi, '{').replace(/}}/gi, '}');\n}\n","export function stripTokenBraces(value: string): string {\n  return (value || '')\n    .replace(new RegExp('{', 'gi'), '')\n    .replace(new RegExp('}', 'gi'), '');\n}\n","import { standardizeTokens } from './standardize-tokens.function';\nimport { replaceTokens } from './replace-tokens.function';\nimport { WILDCARD_EXPRESSION_VALUE, TOKEN_EXPRESSION } from './tokens.constants';\nimport { stripTokenBraces } from './strip-token-braces.function';\n\n\nexport function extractTokenValuesFromTemplate(template: string, resolvedPath: string): {} {\n  const tokens = {};\n  template = standardizeTokens(template);\n  const wildcardTemplate = replaceTokens(template, WILDCARD_EXPRESSION_VALUE);\n  const parts = new RegExp(wildcardTemplate).exec(resolvedPath);\n\n  if (parts && parts.length) {\n    const tokensList = template.match(TOKEN_EXPRESSION);\n\n    // Get rid of the full match.\n    parts.shift();\n\n    parts.forEach((templateValue: string, index: number) => {\n      if (tokensList[index]) {\n        const key = stripTokenBraces(tokensList[index]);\n        tokens[key] = (templateValue || '').replace(new RegExp('/', 'gi'), '');\n      }\n    });\n  }\n\n  return tokens;\n}\n","// Angualr.\nimport { Injectable } from '@angular/core';\nimport { HttpRequest, HttpHandler, HttpEvent, HttpInterceptor, HttpResponse } from '@angular/common/http';\n\n// 3rd Party.\nimport { Observable, of, throwError } from 'rxjs';\nimport { tap, catchError } from 'rxjs/operators';\n\n// TSS.\nimport { CacheService } from './cache.service';\nimport { CacheConfig } from './cache.config';\nimport { Logger } from '../core/logging/logger.service';\nimport { CacheStrategy } from './cache-strategy';\nimport { CacheDefinition } from './cache-definition';\nimport { hasTokens } from '../core/tokens/has-tokens.function';\nimport { isString } from '../core/type-check/is-string.function';\nimport { extractTokenValuesFromTemplate } from '../core/tokens/extract-token-values-from-template.function';\nimport { format } from '../core/formatting/format.function';\nimport { CACHE_ONLY_NO_DATA_EXC_MSG } from './cache.constants';\n\n\nfunction shouldCheckCacheFirst(strategy: CacheStrategy) {\n  return strategy === CacheStrategy.CacheFirst\n    || strategy === CacheStrategy.Fastest\n    || strategy === CacheStrategy.CacheOnly;\n}\n\nfunction getCacheKey(definition: CacheDefinition, requestUrl: string): string {\n  let cacheKey = definition.cacheId || requestUrl;\n  if (hasTokens(cacheKey) && isString(definition.route)) {\n    const tokenValues = extractTokenValuesFromTemplate(definition.route as string, requestUrl);\n    cacheKey = format(cacheKey, tokenValues, true);\n  }\n\n  return cacheKey;\n}\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CacheInterceptor implements HttpInterceptor {\n  constructor(private config: CacheConfig, private cache: CacheService, private log: Logger) {\n  }\n\n  intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    const allowCaching = request.method === 'GET' && this.config.cacheEnabled;\n    let matchingCacheDefinition: CacheDefinition;\n\n    // TODO: Handle request method type.\n    // TDOO: Handle global use cache only.\n\n    if (allowCaching) {\n      matchingCacheDefinition = this.config.getCacheDefinition(request.urlWithParams);\n      const strategy: CacheStrategy = matchingCacheDefinition\n        ? this.config.forcedGlobalCacheStrategy || matchingCacheDefinition.strategy\n        : null;\n\n      if (matchingCacheDefinition && shouldCheckCacheFirst(strategy)) {\n        const cacheKey = getCacheKey(matchingCacheDefinition, request.url);\n        const isCacheOnly = strategy === CacheStrategy.CacheOnly;\n        const cachedResponse: HttpResponse<any> = this.cache.get(cacheKey);\n\n        if (cachedResponse) {\n          this.log.debug(`Resolving HTTP request from cache: '${request.url}'`);\n          return of(cachedResponse);\n        } else if (isCacheOnly) {\n          return throwError(new Error(CACHE_ONLY_NO_DATA_EXC_MSG));\n        }\n      }\n    }\n\n    this.log.trace(`Making HTTP request: '${request.url}'`);\n    let continuedResponse: Observable<HttpEvent<any>> = next.handle(request);\n\n    // If a matched cache definition is found, then we need to handle caching when the request when it is complete.\n    if (allowCaching && matchingCacheDefinition) {\n      continuedResponse = this.cacheResponse(continuedResponse, request, matchingCacheDefinition);\n    }\n\n    return continuedResponse;\n  }\n\n  private cacheResponse(\n    source: Observable<HttpEvent<any>>,\n    request: HttpRequest<any>,\n    cacheDefinition: CacheDefinition\n  ): Observable<HttpEvent<any>> {\n    const cacheKey = getCacheKey(cacheDefinition, request.url);\n    return source.pipe(\n      tap(event => {\n        if (cacheDefinition && event instanceof HttpResponse) {\n          this.log.debug(`Caching HTTP request: '${request.url}'`);\n          this.cache.set(cacheKey, event, cacheDefinition.expires);\n        }\n      }),\n      catchError((error: any) => {\n        const cachedData = this.cache.get(cacheKey);\n        if (cachedData) {\n          this.log.debug(`Failed to resolve cacheable HTTP request from URL '${request.url}', fallingback to cache`);\n          return of(cachedData);\n        } else {\n          this.log.debug(`Failed to resolve cacheable HTTP request from URL '${request.url}' and no cached data available`);\n          throw error;\n        }\n      })\n    );\n  }\n}\n","// Angular.\nimport { CommonModule } from '@angular/common';\nimport { NgModule, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\n\n// TSS\nimport { CacheService } from './cache.service';\nimport { CacheInterceptor } from './cache.interceptor';\nimport { CacheConfig } from './cache.config';\nimport { PersistentCacheStorage } from './cache.storage';\nimport { TssCoreModule } from '../core/core.module';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    HttpClientModule,\n    TssCoreModule,\n  ],\n  declarations: [\n  ],\n  exports: [\n  ],\n  providers: [\n    CacheConfig,\n    PersistentCacheStorage,\n    CacheService,\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: CacheInterceptor,\n      multi: true\n    }\n  ],\n  schemas: [CUSTOM_ELEMENTS_SCHEMA]\n})\nexport class TssCacheModule { }\n","export function addIfNotExist<T>(list: T[], ...itemsToAdd: T[]): void {\n  itemsToAdd.forEach(item => {\n    if (list.indexOf(item) === -1) {\n      list.push(item);\n    }\n  });\n}\n","export function addRangeToBeginning<T>(list: T[], itemsToAdd: T[]): void {\n  list.unshift(...itemsToAdd);\n}\n","export function addRange<T>(list: T[], itemsToAdd: T[]): void {\n  list.push(...itemsToAdd);\n}\n","export function removeDuplicates<T>(list: T[]): T[] {\n  return list\n    .filter((element: T, position: number, filteredList: T[]) =>\n      filteredList.indexOf(element) === position);\n}\n","export function removeItem<T>(list: T[], ...itemsToDelete: T[]): void {\n  itemsToDelete.forEach(itemToDelete => {\n    const index = list.indexOf(itemToDelete);\n    const numberOfItemsToRemove = 1;\n    if (index > -1) {\n      list.splice(index, numberOfItemsToRemove);\n    }\n  });\n}\n","import { removeItem } from './remove-item.function';\n\n\nexport function removeWhere<T>(list: T[], predicate: (item: T) => boolean): void {\n  const itemsToRemove = list.filter(t => predicate(t));\n  removeItem(list, ...itemsToRemove);\n}\n","export function clone<T>(objectToClone: T): T {\n  return JSON.parse(JSON.stringify(objectToClone));\n}\n","export function hexToRgb(hex: string): [number, number, number] {\n  // Expand shorthand form (e.g. \"03F\") to full form (e.g. \"0033FF\")\n  const shorthandRegex = /^#?([a-f\\d])([a-f\\d])([a-f\\d])$/i;\n  let result = null;\n  hex = hex.replace(shorthandRegex, (_, red, green, blue) => {\n    return red + red + green + green + blue + blue;\n  });\n\n  const matchResult = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n  if (matchResult) {\n    const red = parseInt(matchResult[1], 16);\n    const blue = parseInt(matchResult[2], 16);\n    const green = parseInt(matchResult[3], 16);\n    result = [red, blue, green];\n  }\n\n  return result;\n}\n","export function isHexColor(colorTest: string) {\n  return /(^#[0-9A-F]{6}$)|(^#[0-9A-F]{3}$)/i.test(colorTest);\n}\n","export function rgbToHex(rgb: [number, number, number]): string {\n  const red = rgb[0];\n  const green = rgb[1];\n  const blue = rgb[2];\n\n  // tslint:disable-next-line\n  return `#${((1 << 24) + (red << 16) + (green << 8) + blue).toString(16).slice(1)}`;\n}\n","export function transparencyToOpacity(transparency: number) {\n  return 1 - (transparency * 0.01);\n}\n","/**\n * Given a cookie key `name`, returns the value of\n * the cookie or `null`, if the key is not found.\n */\nexport function getCookie(name: string): string {\n  const nameMatchLength = name.length + 1;\n  return document.cookie\n    .split(';')\n    .map(c => c.trim())\n    .filter(cookie =>\n      cookie.substring(0, nameMatchLength) === `${name}=`\n    )\n    .map(cookie =>\n      decodeURIComponent(cookie.substring(nameMatchLength))\n    )[0] || null;\n}\n","export function addMilliseconds(milliseconds: number, date?: Date): Date {\n  date = date || new Date();\n  const time = date.getTime();\n  const newTime = time + milliseconds;\n  date.setTime(newTime);\n\n  return date;\n}\n","import { addMilliseconds } from './add-milliseconds.function';\nimport { MILLISECONDS_PER_MINUTE } from '../date-time.constants';\n\n\nexport function addMinutes(minutes: number, date?: Date): Date {\n  return addMilliseconds(minutes * MILLISECONDS_PER_MINUTE, date);\n}\n","import { addMinutes } from './add-minutes.function';\nimport { HOURS_PER_DAY } from '../date-time.constants';\n\n\nexport function addDays(days: number, date?: Date): Date {\n  return addMinutes(days * HOURS_PER_DAY, date);\n}\n","import { addMinutes } from './add-minutes.function';\nimport { MINUTES_PER_HOUR } from '../date-time.constants';\n\n\nexport function addHours(hours: number, date?: Date): Date {\n  return addMinutes(hours * MINUTES_PER_HOUR, date);\n}\n","import { MILLISECONDS_PER_SECOND } from '../date-time.constants';\nimport { addMilliseconds } from './add-milliseconds.function';\n\n\nexport function addSeconds(seconds: number, date?: Date): Date {\n  return addMilliseconds(seconds * MILLISECONDS_PER_SECOND, date);\n}\n","export function toUtcDate(date: Date): Date {\n  return new Date(\n    date.getUTCFullYear(),\n    date.getUTCMonth(),\n    date.getUTCDate(),\n    date.getUTCHours(),\n    date.getUTCMinutes(),\n    date.getUTCSeconds()\n  );\n}\n","// Angular.\nimport { DatePipe } from '@angular/common';\n\n// TSS.\nimport { DEFAULT_DATE_FORMAT, STANDARDIZED_QUERY_DATE_FORMAT, ORACLE_DATE_FORMAT } from '../date-time.constants';\nimport { format } from '../../formatting/format.function';\n\n\nexport function formatDate(date: Date, dateFormat: string = DEFAULT_DATE_FORMAT): string {\n  const dateTransformer = new DatePipe('en-US');\n\n  if (dateFormat === STANDARDIZED_QUERY_DATE_FORMAT || dateFormat === ORACLE_DATE_FORMAT) {\n    return format(dateFormat, {\n      date: dateTransformer.transform(date, DEFAULT_DATE_FORMAT)\n    });\n  }\n\n  const formattedDate = dateTransformer.transform(date, dateFormat);\n  return `${formattedDate}`;\n}\n","import { STANDARDIZED_QUERY_DATE_FORMAT } from '../date-time.constants';\nimport { toUtcDate } from './to-utc-date.function';\nimport { formatDate } from '../format/format-date.function';\n\n\nexport function toStandardizedQueryDateFormat(date: Date): string {\n  // Attribute query expects UTC time, so convert from local time.\n  // The date formatter uses local time, so create a new Date object\n  // whose local time is set to UTC time from the input date.\n  date = toUtcDate(date);\n  return formatDate(date, STANDARDIZED_QUERY_DATE_FORMAT);\n}\n","import { toUtcDate } from './to-utc-date.function';\n\n\nexport function toUtcEpochDate(date: Date): number {\n  return toUtcDate(date).getTime();\n}\n","import { STANDARDIZED_QUERY_DATE_FORMAT, ORACLE_DATE_FORMAT, DEFAULT_DATE_FORMAT } from '../date-time.constants';\nimport { formatDate } from './format-date.function';\n\n\nexport function formatDateForQuery(date: Date, dateFormat: string = DEFAULT_DATE_FORMAT): string {\n  let quoteDate = true;\n  if (dateFormat === STANDARDIZED_QUERY_DATE_FORMAT || dateFormat === ORACLE_DATE_FORMAT) {\n    quoteDate = false;\n  }\n\n  const formattedDate = formatDate(date, dateFormat);\n  return quoteDate ? `'${formattedDate}'` : `${formattedDate}`;\n}\n","export enum SqlDateFormat {\n  Standardized,\n  Literal,\n  Oracle\n}\n","import { toUtcDate } from './conversion/to-utc-date.function';\n\n\nexport function getCurrentDateAsUtc(): Date {\n  return toUtcDate(new Date());\n}\n","import { toUtcDate } from './conversion/to-utc-date.function';\n\n\nexport function getCurrentDateEpochAsUtc(): number {\n  return toUtcDate(new Date()).getTime();\n}\n","export function getElapsedMilliseconds(start: Date, end?: Date) {\n  end = end || new Date();\n  return Math.abs(start.getTime() - end.getTime());\n}\n","import { getElapsedMilliseconds } from './get-elapsed-milliseconds.function';\n\n\nexport function getElapsedSeconds(start: Date, end?: Date) {\n  return getElapsedMilliseconds(start, end) / 1000;\n}\n","import { toReadableTime } from './to-readable-time.function';\nimport { MILLISECONDS_PER_SECOND } from '../date-time.constants';\n\n\nexport function secondsToReadableTime(seconds: number, suffixMap: any = {}): string {\n  return toReadableTime(seconds * MILLISECONDS_PER_SECOND, suffixMap);\n}\n","export function setDateToBeginningOfDay(date: Date): void {\n  date.setHours(0, 0, 0, 0);\n}\n","export function setDateToEndOfDay(date: Date): void {\n  date.setHours(23, 59, 59);\n}\n","import { addDays } from '../add/add-days.function';\n\n\nexport function subtractDays(days: number, date?: Date): Date {\n  return addDays(days * -1, date);\n}\n","import { addMinutes } from '../add/add-minutes.function';\n\n\nexport function subtractMinutes(minutes: number, date?: Date): Date {\n  return addMinutes(minutes * -1, date);\n}\n","import { addSeconds } from '../add/add-seconds.function';\n\n\nexport function subtractSeconds(minutes: number, date?: Date): Date {\n  return addSeconds(minutes * -1, date);\n}\n","import { addHours } from '../add/add-hours.function';\n\n\nexport function subtractHours(hours: number, date?: Date): Date {\n  return addHours(hours * -1, date);\n}\n","import { addMilliseconds } from '../add/add-milliseconds.function';\n\n\nexport function subtractMilliseconds(milliseconds: number, date?: Date): Date {\n  return addMilliseconds(milliseconds * -1, date);\n}\n","import { hasWindow } from './has-window.function';\n\n\nexport function hasLocalStorage(): boolean {\n  return hasWindow() && Boolean(window.localStorage);\n}\n","// Angular.\nimport { Injectable } from '@angular/core';\n\n// 3rd party.\nimport { Subject, Observable } from 'rxjs';\n\n\ndeclare const window: any;\n\n@Injectable({ providedIn: 'root' })\nexport class OnlineOfflineService {\n  readonly connectionChanged: Observable<boolean>;\n  private readonly internalConnectionChanged: Subject<boolean>;\n\n  get isOnline() {\n    return !!window.navigator.onLine;\n  }\n\n  constructor() {\n    this.internalConnectionChanged = new Subject<boolean>();\n    this.connectionChanged = this.internalConnectionChanged.asObservable();\n\n    window.addEventListener('online', () => this.updateOnlineStatus());\n    window.addEventListener('offline', () => this.updateOnlineStatus());\n  }\n\n  private updateOnlineStatus() {\n    this.internalConnectionChanged.next(window.navigator.onLine);\n  }\n}\n","export const DEFAULT_POINT_EQUALITY_PRECISION = 7;\n","import { DEFAULT_POINT_EQUALITY_PRECISION } from './equality.constants';\n\n/**\n * Returns true if the two arguments are equal within the given precision.\n */\nexport function almostEqual(number1: number, number2: number, precision = DEFAULT_POINT_EQUALITY_PRECISION): boolean {\n  const tolerance = 0.5 * Math.pow(10, -precision);\n  return Math.abs(number1 - number2) < tolerance;\n}\n\n","import { almostEqual } from './almost-equal.function';\nimport { DEFAULT_POINT_EQUALITY_PRECISION } from './equality.constants';\n\n\nexport function pointsAlmostEqual(x1: number, y1: number, x2: number, y2: number, precision = DEFAULT_POINT_EQUALITY_PRECISION): boolean {\n  return almostEqual(x1, x2, precision) && almostEqual(y1, y2, precision);\n}\n","export const DEFAULT_ERROR_MSG = 'An error occurred';\n","import { DEFAULT_ERROR_MSG } from './error.constants';\nimport { format } from '../formatting/format.function';\nimport { isString } from '../type-check/is-string.function';\n\n\nexport function errorMsg(errorOrMsg: any, error?: any): string {\n  let exceptionDetails;\n\n  errorOrMsg = errorOrMsg || DEFAULT_ERROR_MSG;\n  if (isString(errorOrMsg)) {\n    exceptionDetails = error ? errorMsg(error) : '';\n\n    return format(errorOrMsg, { error: exceptionDetails });\n  }\n\n  return errorMsg(\n    errorOrMsg.innerException\n    || errorOrMsg.InnerException\n    || errorOrMsg.exceptionMessage\n    || errorOrMsg.ExceptionMessage\n    || errorOrMsg.message\n    || errorOrMsg.Message\n    || errorOrMsg.msg\n    || errorOrMsg.Msg\n    || errorOrMsg.error_description\n    || errorOrMsg.error\n    || errorOrMsg.Error\n    || errorOrMsg.data\n    || errorOrMsg.Data\n    || errorOrMsg.exception\n    || errorOrMsg.Exception);\n}\n","import { DecimalPipe } from '@angular/common';\n\n\nexport function formatNumber(value: any, digits?: string, locale?: string): string | null {\n  return new DecimalPipe('en-US').transform(value, digits, locale);\n}\n","export const FIRST_LETTER_SEPERATED_BY_SPACE_MATCH_REGEX = /^[a-z]|\\s[a-z]/gm;\nexport const PASCAL_CASE_FIRST_LETTER_MATCH_REGEX = /(?=[A-Z])/;\nexport const LEADING_AND_TRAILING_UNDERSCORE_MATCH_REGEX = /^[\\s_]+|[\\s_]+$/gm;\nexport const LEADING_AND_TRAILING_HYPHEN_MATCH_REGEX = /^[\\s-]+|[\\s-]+$/gm;\nexport const UNDERSCORE_MATCH_REGEX = /[_\\s]+/gm;\nexport const HYPHEN_MATCH_REGEX = /[-\\s]+/gm;\n\n","import { FIRST_LETTER_SEPERATED_BY_SPACE_MATCH_REGEX } from './formatting.constants';\n\n\nexport function upperCaseEachWord(text: string): string {\n  return (text || '')\n    .replace(FIRST_LETTER_SEPERATED_BY_SPACE_MATCH_REGEX, match =>\n      match.toUpperCase()\n    );\n}\n","export function upperCaseFirstLetter(value: string): string {\n  return String(value).charAt(0).toUpperCase() + value.slice(1);\n}\n","import { upperCaseEachWord } from './upper-case-each-word.function';\nimport { upperCaseFirstLetter } from './upper-case-first-letter.function';\nimport {\n  PASCAL_CASE_FIRST_LETTER_MATCH_REGEX,\n  LEADING_AND_TRAILING_UNDERSCORE_MATCH_REGEX,\n  LEADING_AND_TRAILING_HYPHEN_MATCH_REGEX,\n  UNDERSCORE_MATCH_REGEX,\n  HYPHEN_MATCH_REGEX\n} from './formatting.constants';\n\n\nexport function humanize(text: string, upperCaseAllWords = true) {\n  const result = (text || '')\n    .split(PASCAL_CASE_FIRST_LETTER_MATCH_REGEX)\n    .join(' ')\n    .replace(LEADING_AND_TRAILING_UNDERSCORE_MATCH_REGEX, '')\n    .replace(LEADING_AND_TRAILING_HYPHEN_MATCH_REGEX, '')\n    .replace(UNDERSCORE_MATCH_REGEX, ' ')\n    .replace(HYPHEN_MATCH_REGEX, ' ')\n    .toLowerCase();\n\n  return upperCaseAllWords\n    ? upperCaseEachWord(result)\n    : upperCaseFirstLetter(result);\n}\n","export function trimEnd(value: string, trimCharacter = ' '): string {\n  if (value.endsWith(trimCharacter)) {\n    value = value.substr(0, value.length - 1);\n  }\n\n  return value;\n}\n","export function trimStart(value: string, trimCharacter = ' '): string {\n  if (value.startsWith(trimCharacter)) {\n    value = value.substr(1);\n  }\n\n  return value;\n}\n","import { trimStart } from './trip-start.function';\nimport { trimEnd } from './trim-end.function';\n\n\nexport function trim(value: string, trimCharacter = ' '): string {\n  value = trimStart(value, trimCharacter);\n  value = trimEnd(value, trimCharacter);\n\n  return value;\n}\n","export function groupBy<Key, Value>(list: Value[], keyGetter: ((item: Value) => Key)): Map<Key, Value[]> {\n  const map = new Map();\n\n  list.forEach((item: Value) => {\n    const key: Key = keyGetter(item);\n    const collection: Value[] = map.get(key);\n\n    if (!collection) {\n      map.set(key, [item]);\n    } else {\n      collection.push(item);\n    }\n  });\n\n  return map;\n}\n","export const BASE_64_METADATA_REGEX = /data:([a-zA-Z0-9]+\\/[a-zA-Z0-9-.+]+).*,.*/;\nexport const JSON_MIME_TYPE = 'application/json';\n\n// Text files.\nexport const TEXT_MIME_TYPE = 'text/plain';\nexport const TEXT_FILE_EXTENSION = '.txt';\n\n// Audio.\nexport const AUDIO_WEBM_MIME_TYPE = 'audio/webm';\nexport const AUDIO_MP3_MIME_TYPE = 'audio/mpeg-3';\nexport const AUDIO_MP3_FILE_EXTENSION = '.mp3';\n\n// Video.\nexport const VIDEO_WEBM_MIME_TYPE = 'video/webm;codecs=h264';\nexport const VIDEO_MP4_MIME_TYPE = 'video/mp4';\nexport const VIDEO_MP4_FILE_EXTENSION = '.mp4';\n\n// Images.\nexport const IMAGE_PNG_FILE_EXTENSION = '.png';\nexport const IMAGE_PNG_MIME_TYPE = 'image/png';\nexport const IMAGE_JPEG_FILE_EXTENSION = '.jpeg';\nexport const IMAGE_JPEG_MIME_TYPE = 'image/jpeg';\n","import { BASE_64_METADATA_REGEX } from './media.constants';\n\n\nexport function base64MimeType(encoded: string): string {\n  let result = null;\n  const mime = encoded.match(BASE_64_METADATA_REGEX);\n\n  if (mime && mime.length) {\n    result = mime[1];\n  }\n\n  return result;\n}\n","import { getLastItem } from '../array/get-last-item.function';\n\n\nexport function stripBase64Metadata(base64: string): string {\n  const result = base64.split(',');\n  return getLastItem(result).trim();\n}\n","import { stripBase64Metadata } from './strip-base64-metadata.function';\n\n\nexport function base64toByteArray(base64Data: string): Uint8Array[] {\n  const sliceSize = 1024;\n  const strippedBase64Data = stripBase64Metadata(base64Data);\n  const byteCharacters = atob(strippedBase64Data);\n  const bytesLength = byteCharacters.length;\n  const slicesCount = Math.ceil(bytesLength / sliceSize);\n  const byteArrays = new Array(slicesCount);\n  let sliceIndex: number;\n\n  for (sliceIndex = 0; sliceIndex < slicesCount; ++sliceIndex) {\n    const begin = sliceIndex * sliceSize;\n    const end = Math.min(begin + sliceSize, bytesLength);\n\n    const bytes = new Array(end - begin);\n    let offset: number;\n    let i: number;\n\n    for (offset = begin, i = 0; offset < end; ++i, ++offset) {\n      bytes[i] = byteCharacters[offset].charCodeAt(0);\n    }\n\n    byteArrays[sliceIndex] = new Uint8Array(bytes);\n  }\n\n  return byteArrays;\n}\n","import { base64MimeType } from './base64-mime-type.function';\nimport { base64toByteArray } from './base64-to-byte-array.function';\n\n\nexport function base64toBlob(base64Data: string, contentType: string = null) {\n  contentType = contentType || base64MimeType(base64Data);\n  return new Blob(base64toByteArray(base64Data), { type: contentType });\n}\n","import { isType } from './is-type.function';\nimport { isValue } from './is-value.function';\n\n\nexport function isObject(val: any): boolean {\n  return isType(val, 'object') && !Array.isArray(val) && isValue(val);\n}\n","import { isObject } from '../type-check/is-object.function';\nimport { isFunction } from '../type-check/is-function.function';\n\n\n/**\n * Deep merge two objects.\n */\nexport function mergeDeep(target: any, source: any, options: { ignoreArrays?: boolean, copyFunctions?: boolean } = {}): any {\n  if (isObject(target) && isObject(source)) {\n    Object.keys(source).forEach(key => {\n      const value = source[key];\n      if (isObject(value)) {\n        if (!target[key]) {\n          target[key] = {};\n        }\n\n        mergeDeep(target[key], value, options);\n      } else {\n        let doCopy = true;\n\n        if (options.ignoreArrays && Array.isArray(value)\n          || isFunction(value) && !options.copyFunctions) {\n          doCopy = false;\n        }\n\n        if (doCopy) {\n          Object.assign(target, { [key]: value });\n        }\n      }\n    });\n  }\n\n  return target;\n}\n","import { MergeDeepArrayOptions } from './merge-deep-array-options';\nimport { mergeDeep } from './merge-deep.function';\n\n\nexport function mergeDeepArray(target: any[], source: any[], options?: MergeDeepArrayOptions): void {\n  if (!target || !source) {\n    return;\n  }\n\n  options = Object.assign({}, {\n    identifier: 'id',\n    addMissing: true,\n    beforeMerge: () => undefined,\n    afterMerge: () => undefined,\n  }, options);\n\n  target.forEach(targetItem => {\n    const targetId = targetItem[options.identifier];\n    const match = source.find(s => targetId && s[options.identifier] === targetId);\n    if (match) {\n      const continueWithMerge = options.beforeMerge(targetItem, match);\n      if (continueWithMerge !== false) {\n        mergeDeep(targetItem, match);\n      }\n\n      options.afterMerge(targetItem, match);\n    }\n  });\n\n  if (options.addMissing) {\n    source\n      .filter(src => !target.find(x => src[options.identifier] && src[options.identifier] === x[options.identifier]))\n      .forEach(missing => target.push(missing));\n  }\n}\n","import { NotificationTracker } from './notification-tracker';\nimport { NotifyResponse } from './notify-response';\nimport { NotifyEventType } from './notify-event-type';\nimport { NotifyService } from './notify.service';\nimport { Logger } from '../logging/logger.service';\nimport { NotificationConfig } from './notification-config';\nimport { isFunction } from '../type-check/is-function.function';\nimport { errorMsg } from '../error/error-msg.function';\n\n\nexport abstract class BaseNotificationTracker<T> implements NotificationTracker<T> {\n  protected onDone: (value: T | undefined | null | PromiseLike<T>) => void;\n  protected waitResponse: NotifyResponse;\n  protected eventWatchers: {\n    eventType: NotifyEventType,\n    callback: ((e?: any) => void)\n  }[] = [];\n\n  constructor(protected notify: NotifyService, protected log?: Logger, protected config: NotificationConfig = { logErrors: true }) {\n  }\n\n  wait(message: string, title?: string, config?: any): NotificationTracker<T> {\n    this.waitResponse = this.notify.wait(message, title, config);\n\n    // This method needs implemented in each implementation.\n    this.emit('wait');\n    return this;\n  }\n\n  waitIf(predicate: boolean | (() => boolean), message: string, title?: string, config?: any): NotificationTracker<T> {\n    const doWait = isFunction(predicate)\n      ? (predicate as () => boolean)()\n      : Boolean(predicate);\n\n    return doWait ? this.wait(message, title, config) : this;\n  }\n\n  success(message: string, title?: string, config?: any): NotificationTracker<T> {\n    this.config.showSuccess = true;\n    this.config.successMsg = message;\n    this.config.successTitle = title;\n    this.config.successConfiguration = config;\n    this.emit('success');\n    return this;\n  }\n\n  error(message: string, title?: string, config?: any): NotificationTracker<T> {\n    this.config.showError = true;\n    this.config.errorMsg = message;\n    this.config.errorTitle = title;\n    this.config.errorConfiguration = config;\n    this.emit('error');\n    return this;\n  }\n\n  warn(message: string, title?: string, config?: any): NotificationTracker<T> {\n    this.config.showWarn = true;\n    this.config.warnMsg = message;\n    this.config.warnTitle = title;\n    this.config.warnConfiguration = config;\n    this.emit('warn');\n    return this;\n  }\n\n  info(message: string, title?: string, config?: any): NotificationTracker<T> {\n    this.config.showInfo = true;\n    this.config.infoMsg = message;\n    this.config.infoTitle = title;\n    this.config.infoConfiguration = config;\n    this.emit('info');\n    return this;\n  }\n\n  finally(onDone: (value: T | undefined | null | PromiseLike<T>) => void): NotificationTracker<T> {\n    this.onDone = onDone;\n    this.emit('finally');\n    return this;\n  }\n\n  on(eventType: NotifyEventType, callback: (e?: any) => void) {\n    this.eventWatchers.push({ eventType, callback });\n  }\n\n  protected emit(eventType: NotifyEventType, event?: any) {\n    this.eventWatchers\n      .filter(watcher => watcher.eventType === eventType)\n      .forEach(watcher => watcher.callback(event));\n  }\n\n  protected done(response?: any) {\n    if (this.waitResponse) {\n      this.notify.clear(this.waitResponse.notifyId, this.waitResponse.containerId);\n    }\n\n    if (this.onDone) {\n      this.onDone(response);\n    }\n  }\n\n  protected onSuccess(response: any): void {\n    if (this.config.showSuccess) {\n      this.notify.success(this.config.successMsg, this.config.successTitle, this.config.successConfiguration);\n    }\n\n    if (this.config.showInfo) {\n      this.notify.info(this.config.infoMsg, this.config.infoTitle, this.config.infoConfiguration);\n    }\n\n    this.done(response);\n  }\n\n  protected onFail(error: any): void {\n    const responseError = (error.error || error) || error;\n    const msg: string = errorMsg(this.config.errorMsg, responseError);\n\n    if (this.log && this.config.logErrors) {\n      this.log.error(msg);\n    }\n\n    if (this.config.showError) {\n      this.notify.error(msg, this.config.errorTitle, responseError, this.config.errorConfiguration);\n    }\n\n    if (this.config.showWarn) {\n      this.notify.warn(msg, this.config.infoTitle, this.config.warnConfiguration);\n    }\n\n    this.done();\n  }\n}\n","import { NotifyService } from './notify.service';\nimport { Logger } from '../logging/logger.service';\nimport { BaseNotificationTracker } from './base-notification-tracker';\nimport { NotificationConfig } from './notification-config';\n\n\nexport class NotificationPromiseTracker<T> extends BaseNotificationTracker<T> {\n  constructor(public source: Promise<T>, notify: NotifyService, log?: Logger, config: NotificationConfig = {}) {\n    super(notify, log, config);\n  }\n\n  wait(message: string, title?: string): NotificationPromiseTracker<T> {\n    super.wait(message, title);\n    this.source = this.source\n      .then((result: T) => {\n        this.onSuccess(result);\n        return result;\n      })\n      .catch((error: any) => {\n        this.onFail(error);\n        throw error;\n      });\n    return this;\n  }\n\n  waitIf(predicate: boolean | (() => boolean), message: string, title?: string): NotificationPromiseTracker<T> {\n    return super.waitIf(predicate, message, title) as NotificationPromiseTracker<T>;\n  }\n\n  success(message: string, title?: string): NotificationPromiseTracker<T> {\n    return super.success(message, title) as NotificationPromiseTracker<T>;\n  }\n\n  error(message: string, title?: string): NotificationPromiseTracker<T> {\n    return super.error(message, title) as NotificationPromiseTracker<T>;\n  }\n\n  warn(message: string, title?: string): NotificationPromiseTracker<T> {\n    return super.warn(message, title) as NotificationPromiseTracker<T>;\n  }\n\n  info(message: string, title?: string): NotificationPromiseTracker<T> {\n    return super.info(message, title) as NotificationPromiseTracker<T>;\n  }\n\n  finally(onDone: (value: T | undefined | null | PromiseLike<T>) => void): NotificationPromiseTracker<T> {\n    return super.finally(onDone) as NotificationPromiseTracker<T>;\n  }\n\n  then(onfulfilled?: ((value: T) => T | PromiseLike<T>) | undefined | null): Promise<T> {\n    return this.source.then(onfulfilled);\n  }\n\n  catch(onrejected?: ((reason: any) => T | PromiseLike<T>) | undefined | null): Promise<T> {\n    return this.source.catch(onrejected);\n  }\n}\n","import { Observable, Subscription } from 'rxjs';\nimport { tap, publishReplay } from 'rxjs/operators';\n\nimport { NotifyService } from './notify.service';\nimport { Logger } from '../logging/logger.service';\nimport { BaseNotificationTracker } from './base-notification-tracker';\nimport { NotificationConfig } from './notification-config';\n\n\nexport class NotificationSubscriptionTracker<T> extends BaseNotificationTracker<T> {\n  constructor(public source: Observable<T>, notify: NotifyService, log?: Logger, config: NotificationConfig = {}) {\n    super(notify, log, config);\n\n    // We need to do a timeout here so that the chained events coming in after this method will be fired\n    // before this subscription is added - this is necessary for any synchronous/immediate observables.\n    this.source = this.source.pipe(\n      tap((x: T) => {\n        setTimeout(() => this.onSuccess(x));\n      }, (error: any) => {\n        setTimeout(() => this.onFail(error));\n      })\n    );\n\n    if (this.config.useSingletonSubscriptionEmission) {\n      this.source = this.source.pipe(publishReplay());\n    }\n  }\n\n  wait(message: string, title?: string, config?: any): NotificationSubscriptionTracker<T> {\n    return super.wait(message, title, config) as NotificationSubscriptionTracker<T>;\n  }\n\n  waitIf(predicate: boolean | (() => boolean), message: string, title?: string, config?: any): NotificationSubscriptionTracker<T> {\n    return super.waitIf(predicate, message, title, config) as NotificationSubscriptionTracker<T>;\n  }\n\n  success(message: string, title?: string, config?: any): NotificationSubscriptionTracker<T> {\n    return super.success(message, title, config) as NotificationSubscriptionTracker<T>;\n  }\n\n  error(message: string, title?: string, config?: any): NotificationSubscriptionTracker<T> {\n    return super.error(message, title, config) as NotificationSubscriptionTracker<T>;\n  }\n\n  warn(message: string, title?: string, config?: any): NotificationSubscriptionTracker<T> {\n    return super.warn(message, title, config) as NotificationSubscriptionTracker<T>;\n  }\n\n  info(message: string, title?: string, config?: any): NotificationSubscriptionTracker<T> {\n    return super.info(message, title, config) as NotificationSubscriptionTracker<T>;\n  }\n\n  finally(onDone: (value: T | undefined | null | PromiseLike<T>) => void): NotificationSubscriptionTracker<T> {\n    return super.finally(onDone) as NotificationSubscriptionTracker<T>;\n  }\n\n  subscribe(next?: (value: T) => void, error?: (error: any) => void, complete?: () => void): Subscription {\n    return this.source.subscribe(next, error, complete);\n  }\n}\n","export enum NotifyType {\n  Wait = 0,\n  Success = 1,\n  Info = 2,\n  Warn = 3,\n  Error = 4,\n}\n","// Angular.\nimport { Injectable } from '@angular/core';\n\n// 3rd party.\nimport { Observable } from 'rxjs';\n\n// TSS.\nimport { CoreConfig } from '../core.config';\nimport { NotifyType } from './notify-type';\nimport { Notify } from './notify';\nimport { Logger } from '../logging/logger.service';\nimport { NotificationSubscriptionTracker } from './notification-subscription-tracker';\nimport { NotificationPromiseTracker } from './notification-promise-tracker';\nimport { NotifyResponse } from './notify-response';\nimport { format } from '../formatting/format.function';\n\n\n/**\n * Notification service.\n */\n@Injectable({ providedIn: 'root' })\nexport class NotifyService implements Notify {\n  constructor(protected config: CoreConfig, protected log: Logger) {\n  }\n\n  notify(type: NotifyType, message: string, title: string, config?: any): NotifyResponse {\n    // Add actual notification implementation here.\n    return {};\n  }\n\n  clear(notifyId?: string, containerId?: string): void {\n  }\n\n  with<T>(source: Observable<T>): NotificationSubscriptionTracker<T> {\n    return new NotificationSubscriptionTracker<T>(source, this, this.log);\n  }\n\n  promise<T>(source: Promise<T>): NotificationPromiseTracker<T> {\n    return new NotificationPromiseTracker<T>(source, this, this.log);\n  }\n\n  wait(message: string, title = this.config.defaultNotifyWaitMsg, config?: any): NotifyResponse {\n    return this.notify(NotifyType.Wait, message, title, config);\n  }\n\n  success(message: string, title = this.config.defaultNotifySuccessMsg, config?: any): NotifyResponse {\n    return this.notify(NotifyType.Success, message, title, config);\n  }\n\n  error(message: string, title = this.config.defaultNotifyErrorMsg, error: any = null, config?: any): NotifyResponse {\n    return this.notify(NotifyType.Error, format(message, { error }), title, config);\n  }\n\n  warn(message: string, title = this.config.defaultNotifyWarnMsg, error: any = null, config?: any): NotifyResponse {\n    return this.notify(NotifyType.Warn, format(message, { error }), title, config);\n  }\n\n  info(message: string, title = this.config.defaultNotifyInfoMsg, config?: any): NotifyResponse {\n    return this.notify(NotifyType.Info, message, title, config);\n  }\n}\n","import { isValue } from '../type-check/is-value.function';\n\n\n/**\n * Assigns values from one object to another, but only for values that are valid (not null, undefined, or empty string).\n * Restriction properties can be passed in to specificy explicitly which properties to assign (if valid).\n */\nexport function assignValidValues<T>(targetItem: T, sourceItem: any, ...restrictionProperties: string[]): T {\n  if (restrictionProperties.length === 0) {\n    restrictionProperties = Object.keys(sourceItem);\n  }\n\n  restrictionProperties\n    .filter(property => isValue(sourceItem[property]))\n    .forEach(property => targetItem[property] = sourceItem[property]);\n\n  return targetItem;\n}\n","// TODO: Refactor this method and give it proper names.\n// This was a copy/paste from online - RG.\nexport function getValue(obj: any, path: string): any {\n  const arr = path.split('.');\n  while (arr.length && obj) {\n    obj = obj[arr.shift()];\n  }\n\n  return obj;\n}\n","/**\n * Returns a random integer between min (inclusive) and max (inclusive)\n * Using Math.round() will give you a non-uniform distribution!\n */\nexport function getRandomInteger(min: number = 0, max: number = 1000) {\n  return Math.floor(Math.random() * (max - min + 1)) + min;\n}\n","/**\n * Returns a random number between min (inclusive) and max (exclusive)\n */\nexport function getRandomNumber(min: number = 0, max: number = 10) {\n  return Math.random() * (max - min) + min;\n}\n","import { isNumber } from '../type-check/is-number.function';\n\n\nexport function round(numberToRound: number, decimalPlaces = 3): number {\n  return isNumber(numberToRound)\n    ? Number(numberToRound.toFixed(decimalPlaces))\n    : numberToRound;\n}\n","import { Orderable } from './orderable';\nimport { isNumber } from '../type-check/is-number.function';\n\n\nexport function sortByOrder<T extends Orderable>(list: T[]) {\n  let compareResult = -1;\n  list\n    .sort((compare1: T, compare2: T) => {\n      if (!isNumber(compare2.order) || compare1.order < compare2.order) {\n        compareResult = -1;\n      } else if (!isNumber(compare1.order) || compare1.order > compare2.order) {\n        compareResult = 1;\n      } else if (compare1.order === compare2.order) {\n        compareResult = 0;\n      }\n\n      return compareResult;\n    });\n}\n","import { sortByOrder } from './sort-by-order.function';\nimport { Orderable } from './orderable';\n\n\nexport function sortAndReorder<T extends Orderable>(list: T[]) {\n  sortByOrder(list);\n  list\n    .forEach((item, index) => item.order = index + 1);\n}\n","export enum SortDirection {\n  Ascending,\n  Descending,\n}\n","import { SortDirection } from './sort-direction';\nimport { SortPropertyGetter } from './sort-property-getter';\nimport { isFunction } from '../type-check/is-function.function';\nimport { isString } from '../type-check/is-string.function';\n\n\nexport function sortAscending<T>(list: T[], ...sortProperties: SortPropertyGetter<T>[]): T[] {\n  return sort(list, SortDirection.Ascending, ...sortProperties);\n}\n\nexport function sortDescending<T>(list: T[], ...sortProperties: SortPropertyGetter<T>[]): T[] {\n  return sort(list, SortDirection.Descending, ...sortProperties);\n}\n\nexport function sort<T>(list: T[], direction: SortDirection = SortDirection.Ascending, ...sortProperties: SortPropertyGetter<T>[]): T[] {\n  list.sort((item1: T, item2: T) => {\n    let sortResponse = 0;\n\n    if (sortProperties && sortProperties.length) {\n      sortProperties.forEach(property => {\n        if (sortResponse === 0) {\n          const value1 = getPropertyValue(item1, property);\n          const value2 = getPropertyValue(item2, property);\n          sortResponse = getSortResultForString(value1, value2, direction);\n        }\n      });\n    } else {\n      sortResponse = getSortResultForString(item1, item2, direction);\n    }\n\n    return sortResponse;\n  });\n\n  return list;\n}\n\nfunction getPropertyValue<T>(item: T, property: SortPropertyGetter<T>): any {\n  return isFunction(property)\n    ? (property as (item: T) => string)(item)\n    : item[property as string];\n}\n\nfunction getSortResultForString(value1: any, value2: any, direction: SortDirection): number {\n  return direction === SortDirection.Ascending\n    ? getSortResultForStringAscending(value1, value2)\n    : getSortResultForStringDescending(value1, value2);\n}\n\nfunction ensureValue(value: any): any {\n  return value === null || value === undefined ? '' : value;\n}\n\nfunction getSortResultForStringAscending(value1: any, value2: any): number {\n  value1 = ensureValue(value1);\n  value2 = ensureValue(value2);\n  const compare1 = isString(value1) ? value1.toUpperCase() : value1;\n  const compare2 = isString(value2) ? value2.toUpperCase() : value2;\n  let compareResult = 0;\n\n  if (compare1 < compare2) {\n    compareResult = -1;\n  } else if (compare1 > compare2) {\n    compareResult = 1;\n  }\n\n  // NOTE: 0 = equals, 1 = greater, -1 less than.\n  return compareResult;\n}\n\nfunction getSortResultForStringDescending(value1: string, value2: string): number {\n  const compare1 = isString(value1) ? value1.toUpperCase() : value1;\n  const compare2 = isString(value2) ? value2.toUpperCase() : value2;\n  let compareResult = 0;\n\n  if (compare1 > compare2) {\n    compareResult = -1;\n  } else if (compare1 < compare2) {\n    compareResult = 1;\n  }\n\n  // NOTE: 0 = equals, 1 = greater, -1 less than.\n  return compareResult;\n}\n","import { isNumber } from '../type-check/is-number.function';\n\n\nexport function average(list: number[]): number {\n  list = list.filter(value => isNumber(value));\n  const total = list.reduce((current, accumulating) => current + accumulating, 0);\n\n  return total / list.length;\n}\n","export function calculateCrossProduct(x1: number, y1: number, x2: number, y2: number, testX: number, testY: number): number {\n  return (testX - x1) * (y2 - y1) - (testY - y1) * (x2 - x1);\n}\n","export function calculatePercentComplete(partialValue: number, totalValue: number): number {\n  return (100 * partialValue) / totalValue;\n}\n","export function calculateRemainingSeconds(totalProcessed: number, ellapsedSeconds: number, remainingCount: number): number {\n  let estimatedSecondsRemaining = -1;\n  if (totalProcessed > 0) {\n    estimatedSecondsRemaining = ellapsedSeconds / totalProcessed * remainingCount;\n  }\n\n  return estimatedSecondsRemaining;\n}\n","export function isNumberBetweenOrEqual(testNumber: number, rangeStart: number, rangeEnd: number): boolean {\n  const minRange = Math.min(rangeStart, rangeEnd);\n  const maxRange = Math.max(rangeStart, rangeEnd);\n\n  return testNumber >= minRange && testNumber <= maxRange;\n}\n","export function isNumberBetween(testNumber: number, rangeStart: number, rangeEnd: number): boolean {\n  const minRange = Math.min(rangeStart, rangeEnd);\n  const maxRange = Math.max(rangeStart, rangeEnd);\n\n  return testNumber > minRange && testNumber < maxRange;\n}\n","import { isNumber } from '../type-check/is-number.function';\n\n\nexport function sum<T>(list: T[], predicate: (item: T) => number): number {\n  return list\n    .reduce((a, b) => {\n      let value = predicate(b);\n      value = isNumber(value) ? value : 0;\n\n      return a + value;\n    }, 0);\n}\n","import { Progressable } from './progressable';\nimport { sum } from './sum.function';\n\n\nexport class StatsTracker {\n  progressables: Progressable[];\n\n  constructor(...progressables: Progressable[]) {\n    this.progressables = progressables || [];\n  }\n\n  add(progressable: Progressable): this {\n    this.progressables.push(progressable);\n    return this;\n  }\n\n  getPercentComplete(): number {\n    const totalPercentComplete = sum(this.progressables, p => p.percentComplete);\n    const overallComplete = totalPercentComplete / this.progressables.length;\n\n    return Math.round(overallComplete);\n  }\n}\n","import { sum } from './sum.function';\n\n\nexport function sumProperty<T>(list: T[], property: string): number {\n  return sum(list, (value: T) => value[property]);\n}\n","import { sum } from './sum.function';\n\n\nexport function sumValues(list: number[]): number {\n  return sum(list, value => value);\n}\n","// Angular.\nimport { Injectable } from '@angular/core';\nimport { BaseStorage } from './base-storage.service';\n\n\n@Injectable({ providedIn: 'root' })\nexport class InMemoryStorage extends BaseStorage {\n  cache = new Map<string, string>();\n\n  get length(): number {\n    return this.cache.size;\n  }\n\n  get(key: string): string {\n    return this.cache.get(this.formatKey(key));\n  }\n\n  set(key: string, value: string): void {\n    this.cache.set(this.formatKey(key), value);\n  }\n\n  remove(key: string): void {\n    this.cache.delete(this.formatKey(key));\n  }\n\n  clear(): void {\n    this.cache.clear();\n  }\n}\n","import { standardizeTokens } from './standardize-tokens.function';\nimport { TOKEN_EXPRESSION } from './tokens.constants';\n\n\nexport function extractTokens(template: string): string[] {\n  template = standardizeTokens(template);\n  return template.match(new RegExp(TOKEN_EXPRESSION));\n}\n","import { extractTokens } from './extract-tokens.function';\nimport { stripTokenBraces } from './strip-token-braces.function';\n\n\nexport function extractTokenExpressions(template: string): string[] {\n  return extractTokens(template)\n    .map(tokenDefinition => stripTokenBraces(tokenDefinition));\n}\n","import { isType } from './is-type.function';\n\n\nexport function isBoolean(val: any): boolean {\n  return isType(val, 'boolean');\n}\n","import { isArray } from './is-array.function';\n\n\nexport function isNotArray(val: any): boolean {\n  return !isArray(val);\n}\n","import { isBoolean } from './is-boolean.function';\n\n\nexport function isNotBoolean(val: any): boolean {\n  return !isBoolean(val);\n}\n","import { isDate } from './is-date.function';\n\n\nexport function isNotDate(val: any): boolean {\n  return !isDate(val);\n}\n","import { isDefined } from './is-defined.function';\n\n\nexport function isNotDefined(val: any): boolean {\n  return !isDefined(val);\n}\n","import { isFunction } from './is-function.function';\n\n\nexport function isNotFunction(val: any): boolean {\n  return !isFunction(val);\n}\n","import { isNumber } from './is-number.function';\n\n\nexport function isNotNumber(val: any): boolean {\n  return !isNumber(val);\n}\n","import { isObject } from './is-object.function';\n\n\nexport function isNotObject(val: any): boolean {\n  return !isObject(val);\n}\n","import { isNotFunction } from './is-not-function.function';\nimport { isNotArray } from './is-not-array.function';\n\n\nexport function isPrimitive(val: any): boolean {\n  return isNotFunction(val) && this.isNotObject(val) && isNotArray(val);\n}\n","import { isPrimitive } from './is-primitive.function';\n\n\nexport function isNotPrimitive(val: any): boolean {\n  return !isPrimitive(val);\n}\n","import { isString } from './is-string.function';\n\n\nexport function isNotString(val: any): boolean {\n  return !isString(val);\n}\n","import { isType } from './is-type.function';\n\n\nexport function isNotType(val: any, expectedType: string): boolean {\n  return !isType(val, expectedType);\n}\n","export enum AreaUnit {\n  Acres = 'acres',\n  Hectares = 'hectares',\n  SquareFeet = 'square-feet',\n  SquareMeters = 'square-meters',\n  SquareMiles = 'square-miles',\n}\n","import { AreaUnit } from './area-unit';\n\n\nexport function convertAreaUnits(fromUnit: AreaUnit, toUnit: AreaUnit): number {\n  throw new Error(`'convertAreaUnits' is not implemented yet`);\n}\n","export enum LengthUnit {\n  Foot = 'foot',\n  Degree = 'degree',\n  Radian = 'radian',\n  Mile = 'mile',\n  Meter = 'meter',\n  Kilometer = 'kilometer',\n}\n","import { LengthUnit } from './length-unit';\nimport { MeterToUnitConversionFactor } from './meter-to-unit-conversion-factor';\n\n\nfunction getMeterConversionFactors(): MeterToUnitConversionFactor {\n  const factors: MeterToUnitConversionFactor = {};\n  factors[LengthUnit.Foot] = 0.3048;\n  factors[LengthUnit.Kilometer] = 1000;\n  factors[LengthUnit.Meter] = 1;\n  factors[LengthUnit.Mile] = 1609.34;\n\n  return factors;\n}\n\nexport const LENGTH_UNIT_METER_CONVERSION_FACTOR = getMeterConversionFactors();\n\n","import { LengthUnit } from './length-unit';\nimport { LENGTH_UNIT_METER_CONVERSION_FACTOR } from './unit-conversion.constants';\nimport { isNotNumber } from '../type-check/is-not-number.function';\n\n\nexport function toMeters(value: number, fromUnit: LengthUnit): number {\n  const conversionFactor = LENGTH_UNIT_METER_CONVERSION_FACTOR[fromUnit];\n  if (isNotNumber(conversionFactor)) {\n    throw new Error(`Can not convert unsupported unit: '${fromUnit}'`);\n  }\n\n  return value * conversionFactor;\n}\n","import { LengthUnit } from './length-unit';\nimport { LENGTH_UNIT_METER_CONVERSION_FACTOR } from './unit-conversion.constants';\nimport { isNumber } from '../type-check/is-number.function';\n\n\nexport function fromMeters(value: number, toUnit: LengthUnit): number {\n  const conversionFactor = LENGTH_UNIT_METER_CONVERSION_FACTOR[toUnit];\n  if (!isNumber(conversionFactor)) {\n    throw new Error(`Can not convert unsupported unit: '${toUnit}'`);\n  }\n\n  return value / conversionFactor;\n}\n","import { LengthUnit } from './length-unit';\nimport { toMeters } from './to-meters.function';\nimport { fromMeters } from './from-meters.function';\n\n\nexport function convertLengthUnits(fromValue: number, fromUnit: LengthUnit, toUnit: LengthUnit): number {\n  const fromValueInMeters = toMeters(fromValue, fromUnit);\n\n  return fromMeters(fromValueInMeters, toUnit);\n}\n","export function metersPerSecondToKilometersPerHour(metersPerSecond: number) {\n  return metersPerSecond * 3.6;\n}\n","export function metersPerSecondToMilesPerHour(metersPerSecond: number) {\n  return metersPerSecond * 2.237;\n}\n","import { hasWindow } from '../environment/has-window.function';\n\n\nexport function ensureProtocol(url: string): string {\n  if (hasWindow() && String(url).startsWith('//')) {\n    url = `${window.location.protocol}${url}`;\n  }\n\n  return url;\n}\n","import { clean } from './clean.function';\n\n\nexport function getBaseUrl(url: string): string {\n  let [someUrl] = clean(url).split('#');\n  [someUrl] = someUrl.split('?');\n  return someUrl;\n}\n","import { join } from './join.function';\nimport { format } from '../formatting/format.function';\n\n\nexport function joinAndFomat(tokens: any, ...parts) {\n  const url = join(...parts);\n  return format(url, tokens);\n}\n","import { isValue } from '../type-check/is-value.function';\nimport { isObject } from '../type-check/is-object.function';\n\n\nexport function parametersToString(queryParameters: {}) {\n  return Object\n    .keys(queryParameters)\n    .filter(key => isValue(queryParameters[key]))\n    .map(key => {\n      const value = isObject(queryParameters[key])\n        ? JSON.stringify(queryParameters[key])\n        : queryParameters[key];\n\n      return `${key}=${value}`;\n    })\n    .join('&');\n}\n","export const EMPTY_PARAMS_REGEX = /(&?\\w+=((?=$)|(?=&)))/g;\n","import { EMPTY_PARAMS_REGEX } from './url.constants';\n\n\nexport function removeEmptyParams(url: string): string {\n  return url.replace(EMPTY_PARAMS_REGEX, '');\n}\n","import { trimEnd } from '../formatting/trim-end.function';\n\n\nexport function stripTrailingSlash(url: string): string {\n  return trimEnd(url, '/');\n}\n","import { Disposable } from './disposable';\n\n\n/**\n * Provides a syntax that ensures the correct use of Disposable objects.\n */\nexport async function using<T extends Disposable>(resource: T, func: (resource: T) => Promise<void> | void) {\n  try {\n    await func(resource);\n  } finally {\n    await resource.dispose();\n  }\n}\n","export const INVALID_GUID_ERROR_MSG = 'Invalid GUID value provided';\n","export function uuidValueReplacer(replaceValue: string): string {\n  // tslint:disable-next-line\n  const randomValue = Math.random() * 16 | 0;\n  // tslint:disable-next-line\n  const value = replaceValue === 'x' ? randomValue : (randomValue & 0x3 | 0x8);\n\n  return value.toString(16);\n}\n","import { uuidValueReplacer } from './uuid-value-replacer.function';\n\n\nexport function uuid(): string {\n  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'\n    .replace(new RegExp('[xy]', 'g'), uuidValueReplacer);\n}\n","import { uuid } from './uuid.function';\nimport { INVALID_GUID_ERROR_MSG } from './guid.constants';\n\n\n/**\n * Represents a Global Unique Identifier (GUID). GUID creation ported from:\n * https://stackoverflow.com/questions/105034/create-guid-uuid-in-javascript\n */\nexport class Guid {\n  public static readonly empty = '00000000-0000-0000-0000-000000000000';\n\n  readonly value: string;\n\n  get isEmpty(): boolean {\n    return this.value === Guid.empty;\n  }\n\n  public static newGuid(): Guid {\n    return new Guid(uuid());\n  }\n\n  public static isValid(str: string): boolean {\n    const validRegex = /^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$/i;\n    return validRegex.test(str);\n  }\n\n  constructor(value?: string) {\n    this.value = value || Guid.empty;\n\n    if (!Guid.isValid(value)) {\n      throw new Error(INVALID_GUID_ERROR_MSG);\n    }\n  }\n\n  equals(guid: Guid): boolean {\n    return guid.toString() === this.toString();\n  }\n\n  toString(): string {\n    return this.value;\n  }\n\n  toJSON(): string {\n    return this.value;\n  }\n}\n","export class ValidationResult {\n  private validationSkipped: boolean;\n\n  passed: boolean;\n  warned: boolean;\n  ran: boolean;\n  violaters: any[] = [];\n\n  get failed(): boolean {\n    return this.ran && !this.passed;\n  }\n\n  get skipped(): boolean {\n    return this.validationSkipped;\n  }\n\n  set skipped(value: boolean) {\n    this.validationSkipped = value;\n    this.ran = true;\n  }\n\n  add(inner: ValidationResult): ValidationResult {\n    if (inner.failed) {\n      this.passed = false;\n    }\n\n    if (inner.warned) {\n      this.warned = true;\n    }\n\n    return this;\n  }\n}\n","import { ValidationResult } from './validation-results';\n\n\nlet BASE_ID = 1;\n\nexport class ValidationCheck<T> {\n  id: number;\n  description: string;\n\n  private subChecks: ValidationCheck<T>[] = [];\n  private passCheck?: (value: T) => boolean;\n  private failCheck?: (value: T) => boolean;\n  private warnCheck?: (value: T) => boolean;\n  private onlyIfCheck?: (value: T) => boolean;\n\n  constructor(description: string, passCheck?: (value: any) => boolean) {\n    this.description = description;\n    this.passCheck = passCheck;\n    this.id = BASE_ID++;\n  }\n\n  hasId(id: number): ValidationCheck<T> {\n    this.id = id;\n    return this;\n  }\n\n  message(description: string): ValidationCheck<T> {\n    this.description = description;\n    return this;\n  }\n\n  pass(passCheck?: (value: T) => boolean): ValidationCheck<T> {\n    this.passCheck = passCheck;\n    return this;\n  }\n\n  fail(failCheck?: (value: T) => boolean): ValidationCheck<T> {\n    this.failCheck = failCheck;\n    return this;\n  }\n\n  warn(warnCheck?: (value: T) => boolean): ValidationCheck<T> {\n    this.warnCheck = warnCheck;\n    return this;\n  }\n\n  onlyIf(onlyIfCheck?: (value: T) => boolean): ValidationCheck<T> {\n    this.onlyIfCheck = onlyIfCheck;\n    return this;\n  }\n\n  add(...innerChecks: ValidationCheck<T>[]): ValidationCheck<T> {\n    innerChecks.forEach(inner => this.subChecks.push(inner));\n    return this;\n  }\n\n  check(target: T): ValidationResult {\n    const result = new ValidationResult();\n\n    if (this.onlyIfCheck && !this.onlyIfCheck(target)) {\n      result.skipped = true;\n      return result;\n    }\n\n    if (this.passCheck) {\n      result.passed = this.passCheck(target);\n    }\n\n    if (this.failCheck) {\n      result.passed = !this.failCheck(target);\n    }\n\n    if (this.warnCheck) {\n      result.warned = !this.warnCheck(target);\n    }\n\n    if (this.subChecks) {\n      this.subChecks.forEach(c => {\n        const innerResult = c.check(target);\n        result.add(innerResult);\n      });\n    }\n\n    return result;\n  }\n}\n","// Angular.\nimport { Injectable } from '@angular/core';\n\n// TSS.\nimport { AutoConfig } from '../core/auto-config.decorator';\n\n\n/**\n * Configuration class for storing csv-related settings.\n */\n@Injectable({\n  providedIn: 'root'\n})\n@AutoConfig('CsvConfig')\nexport class CsvConfig {\n}\n","export const CSV_NEW_LINE = '\\r';\nexport const CSV_SEPARATOR = ',';\n","// Angular.\nimport { NgModule, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n// TSS.\nimport { TssCoreModule } from '../core/core.module';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    TssCoreModule,\n  ],\n  declarations: [\n  ],\n  exports: [\n  ],\n  providers: [\n  ],\n  schemas: [CUSTOM_ELEMENTS_SCHEMA]\n})\nexport class TssCsvModule { }\n","// TSS.\nimport { CSV_NEW_LINE, CSV_SEPARATOR } from './csv.constants';\nimport { clone } from '../core/clone/clone.function';\nimport { isDefined } from '../core/type-check/is-defined.function';\n\n\nexport function toCsv(data: any[], ...properties: string[]): string {\n  const [firstItem] = data;\n  let csv = '';\n\n  if (firstItem) {\n    // NOTE: We need to clone the object here because we can't trust on Object.keys working\n    // on every object type. For example, a true \"coordinate\", object.keys doesn't work - RG.\n    properties = properties && properties.length\n      ? properties\n      : Object.keys(clone(firstItem));\n\n    const header = `${properties.join(CSV_SEPARATOR)}`;\n    const csvLines = data.map(point => {\n      const fields = properties.map(property => {\n        const value = point[property];\n        const hasPropertyValue = isDefined(value);\n        return hasPropertyValue ? value : '';\n      });\n\n      return fields.join(CSV_SEPARATOR);\n    });\n\n    csv = `${header}${CSV_NEW_LINE}${csvLines.join(CSV_NEW_LINE)}`;\n  }\n\n  return csv;\n}\n","import { Geometry } from 'geojson';\n\n\nexport function isLine(geometry: Geometry): boolean {\n  return Boolean(\n    geometry\n    && geometry.type\n    && String(geometry.type)\n      .toLowerCase()\n      .includes('linestring')\n  );\n}\n","import { isArray } from '../../core/type-check/is-array.function';\n\n\nexport function isMultiPartLine(line: number[][] | number[][][]): boolean {\n  return Boolean(\n    line\n    && line.length\n    && isArray(line[0])\n    && isArray(line[0][0])\n  );\n}\n","// 3rd Party.\nimport { MultiLineString, LineString } from 'geojson';\n\n// TSS.\nimport { isArray } from '../../core/type-check/is-array.function';\nimport { LineGeometry } from './line-geometry';\nimport { isMultiPartLine } from './is-multi-part.function';\n\n\nexport function toMultiPartPaths(line: LineGeometry): number[][][] {\n  if (isArray(line)) {\n    const lineAsArray = (line as any[]);\n    return isMultiPartLine(lineAsArray)\n      ? lineAsArray\n      : [lineAsArray];\n  } else {\n    const lineGeometry = line as LineString | MultiLineString;\n    return lineGeometry.type === 'LineString'\n      ? [lineGeometry.coordinates]\n      : lineGeometry.coordinates;\n  }\n}\n\n","// 3rd party.\nimport { Position } from 'geojson';\n\n// TSS.\nimport { LineGeometry } from './line-geometry';\nimport { toMultiPartPaths } from './to-multi-part-paths.function';\n\n\nexport function flattenLine(line: LineGeometry): Position[] {\n  const flattenedPoints: Position[] = [];\n  const multipParts: number[][][] = toMultiPartPaths(line);\n  multipParts.forEach((part: number[][]) => {\n    part.forEach((position: Position) => {\n      flattenedPoints.push(position);\n    });\n  });\n\n  return flattenedPoints;\n}\n","import { Geometry } from 'geojson';\n\n\nexport function isPoint(geometry: Geometry): boolean {\n  return geometry && geometry.type\n    ? geometry.type === 'Point' || geometry.type === 'MultiPoint'\n    : false;\n}\n","// 3rd Party.\nimport { Point, MultiPoint } from 'geojson';\n\n// TSS.\nimport { AnyPoint } from './any-point';\nimport { isArray } from '../../core/type-check/is-array.function';\n\n\nexport function isMultiPartPoint(point: AnyPoint): boolean {\n  const coordinates = isArray(point)\n    ? (point as number[])\n    : (point as Point | MultiPoint).coordinates;\n\n  return Boolean(\n    coordinates\n    && coordinates.length\n    && isArray(coordinates[0])\n  );\n}\n","// 3rd Party.\nimport { MultiPoint, Point } from 'geojson';\n\n// TSS.\nimport { AnyPoint } from './any-point';\nimport { isArray } from '../../core/type-check/is-array.function';\nimport { isMultiPartPoint } from './is-multi-part-point.function';\n\n\nexport function toMultiPartPoint(point: AnyPoint): number[][] {\n  const coordinates: number[] | number[][] = isArray(point)\n    ? (point as number[])\n    : (point as Point | MultiPoint).coordinates;\n\n  return isMultiPartPoint(coordinates)\n    ? coordinates as number[][]\n    : [coordinates as number[]];\n}\n","import { Geometry } from 'geojson';\n\n\nexport function isPolygon(geometry: Geometry): boolean {\n  return geometry && geometry.type\n    ? geometry.type === 'Polygon' || geometry.type === 'MultiPolygon'\n    : false;\n}\n","// 3rd party.\nimport { Geometry, Position, Point, Polygon, LineString } from 'geojson';\n\n// TSS.\nimport { toCsv } from './to-csv.function';\nimport { isLine } from '../geometry/geometry/is-line.function';\nimport { flattenLine } from '../geometry/line/flatten-line.function';\nimport { isPoint } from '../geometry/geometry/is-point.function';\nimport { toMultiPartPoint } from '../geometry/point/to-multi-part-point.function';\nimport { isPolygon } from '../geometry/geometry/is-polygon.function';\n\n\nexport function geometryToCsv(geometry: Geometry, ...verticeeOrdinalNames: string[]): string {\n  const pointInfos = [];\n  let verticees: Position[] = [];\n\n  if (isLine(geometry)) {\n    verticees = flattenLine(geometry as LineString);\n  } else if (isPoint(geometry)) {\n    verticees = toMultiPartPoint(geometry as Point);\n  } else if (isPolygon(geometry)) {\n    const polygon = geometry as Polygon;\n    verticees = flattenLine(polygon.coordinates);\n  } else {\n    throw new Error('Unknown or unsupported geometry type provided');\n  }\n\n  verticees.map(verticee => {\n    const info = {};\n    pointInfos.push(info);\n\n    if (!verticeeOrdinalNames || !verticeeOrdinalNames.length) {\n      verticeeOrdinalNames = ['x', 'y'];\n\n      if (verticee.length > 2) {\n        verticeeOrdinalNames.push('z');\n      }\n\n      if (verticee.length > 3) {\n        verticeeOrdinalNames.push('m');\n      }\n    }\n\n    verticeeOrdinalNames.forEach((name: string, index: number) => {\n      info[name] = verticee[index];\n    });\n  });\n\n  return toCsv(pointInfos);\n}\n","export const APPLY_EDITS_SEED_POD_FILE_EXTENSION = '.tssedits';\n","import { Injectable } from '@angular/core';\nimport { ResourceConfig } from '../core/resource.config';\nimport { AutoConfig } from '../core/auto-config.decorator';\n\n\n/**\n * Configuration class for storing global ESRI-related settings.\n */\n@Injectable({\n  providedIn: 'root'\n})\n@AutoConfig('DataSourceConfig')\nexport class DataSourceConfig extends ResourceConfig {\n  dataSourcesEndpoint = 'api/data/sources/{id}';\n  tablesEndpoint = 'api/data/sources/{id}/tables';\n  columnsEndpoint = 'api/data/sources/{id}/tables/{table}/columns/{column}/{action}';\n  tableActionEndpoint = 'api/data/sources/{id}/tables/{table}/{action}/{subaction}';\n  editDataEndpoint = 'api/data/sources/{id}/tables/{table}/edit';\n  applyEditsEndpoint = 'api/data/sources/{id}/applyedits';\n  attachmentsEndpoint = 'api/attachments/{id}/{action}';\n  skipColumnQuotes = false;\n}\n","// Angular.\nimport { Injectable } from '@angular/core';\nimport { HttpClient, HttpParams } from '@angular/common/http';\n\n// 3rd Party.\nimport { Feature } from 'geojson';\nimport { Observable } from 'rxjs';\n\n// TSS.\nimport { ApplyEditsSeed } from './apply-edits-seed';\nimport { DataSourceConfig } from '../data-source-config';\nimport { ApplyEditsResult } from './apply-edits-result';\nimport { ApplyEditsPod } from './apply-edits-pod';\nimport { BaseEmptyResourceService } from '../../core/resource/base-empty-resource.service';\nimport { EMPTY_PARAM_VALUE } from '../../core/resource/resource.constants';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DataSourceEditService extends BaseEmptyResourceService<ApplyEditsSeed> {\n  constructor(protected http: HttpClient, private dsConfig: DataSourceConfig) {\n    super(http, {\n      url: dsConfig.serviceUrl\n    });\n  }\n\n  applyEdits(data: ApplyEditsPod, params?: HttpParams): Observable<ApplyEditsResult> {\n    if (!data) {\n      throw new Error('Missing or invalid apply edits seed data provided');\n    } else if (!data.dataSourceId) {\n      throw new Error(`Missing 'dataSourceId' from the apply edits seed data`);\n    }\n\n    const url = this.getUrlWithId(data.dataSourceId, this.dsConfig.applyEditsEndpoint, {});\n    return this.http.post<ApplyEditsResult>(url, data, { params });\n  }\n\n  createRecord(\n    dataSourceId: string,\n    table: string,\n    feature: Feature,\n    version?: string,\n    params?: HttpParams\n  ): Observable<ApplyEditsResult> {\n    const url = this.getUrlWithId(dataSourceId, this.dsConfig.editDataEndpoint, { table });\n    params = (params || new HttpParams())\n      .set('version', version || EMPTY_PARAM_VALUE);\n\n    return this.http.post<ApplyEditsResult>(url, feature, { params });\n  }\n}\n","export enum AttachmentType {\n  Video = 'video',\n  Image = 'image',\n  Audio = 'audio',\n  Text = 'text',\n}\n","import { isArray } from '../core/type-check/is-array.function';\nimport { isObject } from '../core/type-check/is-object.function';\nimport { isNotValue } from '../core/type-check/is-not-value.function';\nimport { isValue } from '../core/type-check/is-value.function';\n\n\nexport function toFormDataString(value: {}, encodeData = true): string {\n  let stringValue;\n  if (isNotValue(value)) {\n    stringValue = '';\n  } else if (isObject(value) || isArray(value)) {\n    stringValue = JSON.stringify(value);\n  } else {\n    stringValue = value.toString();\n  }\n\n  return isValue(stringValue) && encodeData ?\n    encodeURIComponent(stringValue)\n    : stringValue;\n}\n","export const ATTACHMENT_FILE_FORM_KEY = 'file';\nexport const ATTACHMENT_DATA_FORM_KEY = 'attachment';\n","// Angular.\nimport { Injectable } from '@angular/core';\nimport { HttpClient, HttpParams } from '@angular/common/http';\n\n// 3rd Party.\nimport { Observable } from 'rxjs';\n\n// TSS.\nimport { Attachment } from './attachment';\nimport { DataSourceConfig } from '../data-source-config';\nimport { toFormDataString } from '../../http/to-form-data-string.function';\nimport { AttachmentType } from './attachment-type';\nimport { base64toBlob } from '../../core/media/base64-to-blob.function';\nimport { ATTACHMENT_FILE_FORM_KEY, ATTACHMENT_DATA_FORM_KEY } from './attachments.constants';\nimport { BaseResourceService } from '../../core/resource/base-resource.service';\nimport { isString } from '../../core/type-check/is-string.function';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AttachmentService extends BaseResourceService<Attachment> {\n  constructor(protected http: HttpClient, dsConfig: DataSourceConfig) {\n    super(http, {\n      url: dsConfig.serviceUrl,\n      queryEndpoint: dsConfig.attachmentsEndpoint,\n      getEndpoint: dsConfig.attachmentsEndpoint,\n      updateEndpoint: dsConfig.attachmentsEndpoint,\n      deleteEndpoint: dsConfig.attachmentsEndpoint,\n      createEndpoint: dsConfig.attachmentsEndpoint,\n    });\n  }\n\n  create(attachment: Attachment, routeTokens?: any, params?: HttpParams): Observable<Attachment> {\n    const url = this.getUrl(this.config.createEndpoint, routeTokens);\n    const formData: FormData = new FormData();\n    let fileData: string | Blob;\n\n    if (attachment.type === AttachmentType.Image && isString(attachment.data)) {\n      fileData = base64toBlob(attachment.data as string);\n    } else if (attachment.type === AttachmentType.Text) {\n      fileData = new Blob([attachment.data]);\n    } else {\n      fileData = attachment.data as Blob;\n    }\n\n    delete attachment.data;\n    formData.append(ATTACHMENT_FILE_FORM_KEY, fileData);\n    formData.append(ATTACHMENT_DATA_FORM_KEY, toFormDataString(attachment));\n\n    return this.http.post<Attachment>(url, formData, { params, reportProgress: true });\n  }\n\n  download(attachmentId: string, routeTokens?: any, params?: HttpParams) {\n    // TODO: Complete - RG.\n    // const url = this.getUrl(this.config.getEndpoint, Object.assign({ action: 'download' }, routeTokens));\n    throw new Error('Not implemented yet');\n  }\n}\n","export enum DataSourceProviderType {\n  SqlServer = 'System.Data.SqlClient',\n  SqlLite = 'System.Data.SQLite',\n  SqlCompactEdition = 'System.Data.SqlServerCe.4.0',\n  Oracle = 'Oracle.ManagedDataAccess.Client',\n  OracleDevArt = 'Devart.Data.Oracle',\n}\n","import { DataSourceProviderType } from './data-source-provider-type';\nimport { DataSourceProvider } from './data-source-provider';\n\n\nexport const SELECT_ALL_WHERE_CLAUSE = '1=1';\nexport const DATA_SOURCE_PROVIDERS: DataSourceProvider[] = [\n  { alias: 'SQL Server', provider: DataSourceProviderType.SqlServer, canUseEF: true, schedulingCompatible: true },\n  { alias: 'SQLite', provider: DataSourceProviderType.SqlLite, canUseEF: false, schedulingCompatible: true },\n  {\n    alias: 'SQL Server Compact Edition',\n    provider: DataSourceProviderType.SqlCompactEdition,\n    canUseEF: true,\n    schedulingCompatible: false\n  },\n  { alias: 'Oracle', provider: DataSourceProviderType.Oracle, canUseEF: false, schedulingCompatible: false },\n  { alias: 'Oracle', provider: DataSourceProviderType.OracleDevArt, canUseEF: true, efOnly: true, schedulingCompatible: false }\n];\n\nexport const DATA_SOURCE_EXAMPLES: { name: string, providerName: DataSourceProviderType, connectionString: string }[] = [\n  {\n    name: 'SQL Server Connection',\n    providerName: DataSourceProviderType.SqlServer,\n    connectionString: 'data source=YOUR_HOST, 1433;initial catalog=YOUR_DB;persist security info=True;'\n      + 'user id=YOUR_USER;password=YOUR_PASSWORD;MultipleActiveResultSets=true;'\n  },\n  {\n    name: 'SQL Server Compact (SQL CE) Connection',\n    providerName: DataSourceProviderType.SqlCompactEdition,\n    connectionString: 'Data Source=|DataDirectory|\\\\YOUR_DB_NAME.sdf;Max Database Size=4091'\n  },\n  {\n    name: 'SQLite',\n    providerName: DataSourceProviderType.SqlLite,\n    connectionString: 'Data Source=|DataDirectory|\\\\YOUR_DB_NAME.sqlite;Version=3'\n  },\n  {\n    name: 'Oracle Connection (without TNS names entry)',\n    providerName: DataSourceProviderType.Oracle,\n    connectionString: 'Data Source=(DESCRIPTION=(ADDRESS_LIST=(ADDRESS=(PROTOCOL=TCP)'\n      + '(HOST=YOUR_HOST)(PORT=1522)))(CONNECT_DATA=(SERVER=DEDICATED)(SERVICE_NAME=YOUR_SERVICE)));'\n      + 'User Id=YOUR_USER;Password=YOUR_PASSWORD;'\n  },\n  {\n    name: 'Oracle Connection (with TNS names entry)',\n    providerName: DataSourceProviderType.Oracle,\n    connectionString: 'Data Source=YOUR_SOURCE;User Id=YOUR_USER;Password=YOUR_PASSWORD;'\n  },\n  {\n    name: 'Oracle Connection (without TNS names entry)',\n    providerName: DataSourceProviderType.OracleDevArt,\n    connectionString: 'Data Source=(DESCRIPTION=(ADDRESS_LIST=(ADDRESS=(PROTOCOL=TCP)'\n      + '(HOST=YOUR_HOST)(PORT=1522)))(CONNECT_DATA=(SERVER=DEDICATED)(SERVICE_NAME=YOUR_SERVICE)));'\n      + 'User Id=YOUR_USER;Password=YOUR_PASSWORD;'\n  },\n  {\n    name: 'Oracle Connection (with TNS names entry)',\n    providerName: DataSourceProviderType.OracleDevArt,\n    connectionString: 'Data Source=YOUR_SOURCE;User Id=YOUR_USER;Password=YOUR_PASSWORD;'\n  }\n];\n","// Angular.\nimport { HttpClient, HttpParams } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\n// 3rd Party.\nimport { FeatureCollection } from 'geojson';\nimport { Observable } from 'rxjs';\n\n// TSS.\nimport { DataSourceConfig } from './data-source-config';\nimport { DataSource } from './data-source';\nimport { DataTableInfo } from './data-table-info';\nimport { DataColumn } from './data-column';\nimport { DataTable } from './data-table';\nimport { DataSourceSpatialExportFormat } from './data-source-spatial-export-format';\nimport { BaseResourceService } from '../core/resource/base-resource.service';\nimport { EMPTY_PARAM_VALUE } from '../core/resource/resource.constants';\nimport { isValue } from '../core/type-check/is-value.function';\nimport { SELECT_ALL_WHERE_CLAUSE } from './data-source.constants';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DataSourceService extends BaseResourceService<DataSource> {\n  constructor(protected http: HttpClient, private dsConfig: DataSourceConfig) {\n    super(http, {\n      url: dsConfig.serviceUrl,\n      queryEndpoint: dsConfig.dataSourcesEndpoint,\n      getEndpoint: dsConfig.dataSourcesEndpoint,\n      updateEndpoint: dsConfig.dataSourcesEndpoint,\n      deleteEndpoint: dsConfig.dataSourcesEndpoint,\n      createEndpoint: dsConfig.dataSourcesEndpoint,\n    });\n  }\n\n  testConnection(entity: DataSource, useEntityFramework: boolean, params?: HttpParams): Observable<DataTable> {\n    throw new Error('Not implemented yet');\n  }\n\n  testExistingConnection(id: string, params?: HttpParams): Observable<DataTable> {\n    throw new Error('Not implemented yet');\n  }\n\n  // 'http:' + this.appConfig.serviceUrl + '/api/data/sources/:id/tables'\n  getTables(dataSourceId: string, params?: HttpParams): Observable<DataTableInfo[]> {\n    const url = this.getUrlWithId(dataSourceId, this.dsConfig.tablesEndpoint, {});\n    return this.http.get<DataTableInfo[]>(url, { params });\n  }\n\n  // 'http:' + this.appConfig.serviceUrl + '/api/data/sources/:id/tables/details'\n  getTableDetails(dataSourceId: string, params?: HttpParams): Observable<DataTable> {\n    const url = this.getUrlWithId(dataSourceId, this.dsConfig.tableActionEndpoint, {\n      action: 'details'\n    });\n\n    return this.http.get<DataTable>(url, { params });\n  }\n\n  // 'http:' + this.appConfig.serviceUrl + '/api/data/sources/:id/tables/:table/columns/:column/:action',\n  getColumns(dataSourceId: string, table: string, params?: HttpParams): Observable<DataColumn[]> {\n    const url = this.getUrlWithId(dataSourceId, this.dsConfig.columnsEndpoint, { table });\n\n    return this.http.get<DataColumn[]>(url, { params });\n  }\n\n  // api/data/sources/test_1051_sql/tables/RH.DIVIDED_ROADS/columns/SurveyDirection/values?unique=false\n  getColumnValues<T>(dataSourceId: string, table: string, column: string, unique: boolean = false, params?: HttpParams): Observable<T[]> {\n    const url = this.getUrlWithId(dataSourceId, this.dsConfig.columnsEndpoint, {\n      table,\n      column,\n      action: 'values'\n    });\n    params = (params || new HttpParams()).set('unique', String(unique));\n\n    return this.http.get<T[]>(url, { params });\n  }\n\n  // api/data/sources/test_1051_sql/tables/RH.DIVIDED_ROADS/columns/SurveyDirection/values?unique=true\n  getUniqueColumnValues<T>(dataSourceId: string, table: string, column: string, params?: HttpParams): Observable<T[]> {\n    return this.getColumnValues<T>(dataSourceId, table, column, true, params);\n  }\n\n  // 'http:' + this.appConfig.serviceUrl + '/api/data/sources/:id/tables/:count'\n  getRecordCount(\n    dataSourceId: string,\n    table: string,\n    whereClause: string = SELECT_ALL_WHERE_CLAUSE,\n    version?: string,\n    params?: HttpParams\n  ): Observable<number> {\n    const url = this.getUrlWithId(dataSourceId, this.dsConfig.tableActionEndpoint, {\n      table,\n      action: 'count'\n    });\n\n    params = (params || new HttpParams())\n      .set('where', whereClause)\n      .set('version', version || EMPTY_PARAM_VALUE);\n\n    return this.http.get<number>(url, { params });\n  }\n\n  // api/data/sources/test_1051_sql/tables/RH.DIVIDED_ROADS/query/details?page=1&pageSize=25&where=1%3D1\n  queryData(\n    dataSourceId: string,\n    table: string,\n    whereClause: string,\n    version?: string,\n    page?: number,\n    pageSize?: number,\n    includeGeometry?: boolean,\n    shapeField?: string,\n    params?: HttpParams\n  ): Observable<DataTable> {\n    return this.querySpatialData<DataTable>(\n      dataSourceId,\n      table,\n      whereClause,\n      version,\n      page,\n      pageSize,\n      includeGeometry,\n      shapeField,\n      'json',\n      params,\n    );\n  }\n\n  queryGeoJsonData(\n    dataSourceId: string,\n    table: string,\n    whereClause: string,\n    version?: string,\n    page?: number,\n    pageSize?: number,\n    includeGeometry?: boolean,\n    shapeField?: string,\n    params?: HttpParams\n  ): Observable<FeatureCollection> {\n    return this.querySpatialData<FeatureCollection>(\n      dataSourceId,\n      table,\n      whereClause,\n      version,\n      page,\n      pageSize,\n      includeGeometry,\n      shapeField,\n      'geojson',\n      params,\n    );\n  }\n\n  querySpatialData<T extends DataTable | FeatureCollection>(\n    dataSourceId: string,\n    table: string,\n    whereClause: string,\n    version?: string,\n    page?: number,\n    pageSize?: number,\n    includeGeometry?: boolean,\n    shapeField?: string,\n    format?: DataSourceSpatialExportFormat,\n    params?: HttpParams\n  ): Observable<T> {\n    const url = this.getUrlWithId(dataSourceId, this.dsConfig.tableActionEndpoint, {\n      table,\n      action: 'query/details'\n    });\n\n    params = (params || new HttpParams())\n      .set('where', whereClause || EMPTY_PARAM_VALUE)\n      .set('version', version || EMPTY_PARAM_VALUE)\n      .set('page', isValue(page) ? String(page) : EMPTY_PARAM_VALUE)\n      .set('pageSize', isValue(pageSize) ? String(pageSize) : EMPTY_PARAM_VALUE)\n      .set('includeGeometry', isValue(includeGeometry) ? String(includeGeometry) : EMPTY_PARAM_VALUE)\n      .set('shapeField', shapeField || EMPTY_PARAM_VALUE)\n      .set('format', format || EMPTY_PARAM_VALUE);\n\n    return this.http.get<T>(url, { params });\n  }\n}\n","import { DataColumn } from './data-column';\n\n\nexport function stripTableName(tableName: string): string {\n  return (tableName || '').split('.').slice(-1)[0];\n}\n\n\nexport interface DataTable {\n  columns: DataColumn[];\n  dataSourceId: string;\n  page: number;\n  pageSize: number;\n  primaryKeys: string[];\n  records: any[];\n  table: string;\n}\n","import { DataSource } from './data-source';\nimport { isString } from '../core/type-check/is-string.function';\n\n\nexport function getDataSourceId(dataSource: string | DataSource): string {\n  let dataSourceId;\n  if (isString(dataSource)) {\n    dataSourceId = dataSource as string;\n  } else {\n    const src = dataSource as DataSource;\n    if (src) {\n      dataSourceId = src.id;\n    }\n  }\n\n  return dataSourceId;\n}\n","import { DataSourceProviderType } from './data-source-provider-type';\n\n\nexport function isOracleProvider(providerType: DataSourceProviderType) {\n  return providerType === DataSourceProviderType.Oracle || providerType === DataSourceProviderType.OracleDevArt;\n}\n","import { STANDARDIZED_QUERY_DATE_FORMAT, ORACLE_DATE_FORMAT, DEFAULT_DATE_FORMAT } from '../core/date-time/date-time.constants';\nimport { isOracleProvider } from './is-oracle-provider.function';\nimport { DataSourceProviderType } from './data-source-provider-type';\n\n\nexport function getDateFormatForProvider(providerType: DataSourceProviderType): string {\n  if (!providerType) {\n    return STANDARDIZED_QUERY_DATE_FORMAT;\n  } else if (isOracleProvider(providerType)) {\n    return ORACLE_DATE_FORMAT;\n  } else {\n    return DEFAULT_DATE_FORMAT;\n  }\n}\n","import { DataSourceProviderType } from './data-source-provider-type';\n\n\nexport function isEnterpriseProvider(providerType: DataSourceProviderType) {\n  return providerType === DataSourceProviderType.SqlServer\n    || providerType === DataSourceProviderType.Oracle\n    || providerType === DataSourceProviderType.OracleDevArt;\n}\n","export const SEED_POD_FILE_EXTENSION = '.tss';\n","import { hasTokens } from '../../core/tokens/has-tokens.function';\nimport { isString } from '../../core/type-check/is-string.function';\nimport { canNotBeNumber } from '../../core/type-check/can-not-be-number.function';\nimport { Orderable } from '../../core/sort/orderable';\n\n\nexport type DomainType = 'codedValue';\nexport type MergePolicyType = 'esriMPTDefaultValue' | 'esriMPTAreaWeighted' | 'esriMPTSumValues';\nexport type SplitPolicyType = 'esriSPTDefaultValue' | 'esriSPTDuplicate' | 'esriSPTGeometryRatio';\n\nexport type FieldType = 'id' | 'esriFieldTypeOID' | 'id-string'\n  | 'string' | 'esriFieldTypeString'\n  | 'number' | 'esriFieldTypeNumber'\n  | 'double' | 'esriFieldTypeDouble'\n  | 'int' | 'esriFieldTypeSmallInteger'\n  | 'date' | 'esriFieldTypeDate'\n  | 'geometry' | 'esriFieldTypeGeometry'\n  | 'xml' | 'esriFieldTypeXML'\n  | 'blob' | 'esriFieldTypeBlob'\n  | 'guid' | 'esriFieldTypeGUID'\n  | 'globalId' | 'esriFieldTypeGlobalID'\n  | 'integer' | 'esriFieldTypeInteger'\n  | 'raster' | 'esriFieldTypeRaster'\n  | 'single' | 'esriFieldTypeSingle';\n\nexport type FieldRole = 'identity'\n  | 'latitude'\n  | 'longitude'\n  | 'x'\n  | 'y'\n  | 'accuracy'\n  | 'altitude'\n  | 'altitude-accuracy'\n  | 'heading'\n  | 'speed'\n  | 'username'\n  | 'user-email'\n  | 'user-firstname'\n  | 'user-lastname'\n  | 'date-now'\n  | 'measure'\n  | 'from-measure'\n  | 'to-measure';\n\nexport type LayerFieldCodedValueCode = string | number;\n\nexport const FIELD_TYPE_OID: FieldType = 'id';\nexport const FIELD_TYPE_OID_STRING: FieldType = 'id-string';\nexport const FIELD_TYPE_STRING: FieldType = 'string';\nexport const FIELD_TYPE_NUMBER: FieldType = 'number';\nexport const FIELD_TYPE_XML: FieldType = 'xml';\nexport const FIELD_TYPE_BLOB: FieldType = 'blob';\nexport const FIELD_TYPE_DATE: FieldType = 'date';\nexport const FIELD_TYPE_DOUBLE: FieldType = 'double';\nexport const FIELD_TYPE_GUID: FieldType = 'guid';\nexport const FIELD_TYPE_GEOMETRY: FieldType = 'geometry';\nexport const FIELD_TYPE_GLOBALID: FieldType = 'globalId';\nexport const FIELD_TYPE_INTEGER: FieldType = 'integer';\nexport const FIELD_TYPE_RASTER: FieldType = 'raster';\nexport const FIELD_TYPE_SINGLE: FieldType = 'single';\nexport const FIELD_TYPE_SMALL_INTEGER: FieldType = 'int';\n\nexport const ESRI_FIELD_TYPE_OID: FieldType = 'esriFieldTypeOID';\nexport const ESRI_FIELD_TYPE_STRING: FieldType = 'esriFieldTypeString';\nexport const ESRI_FIELD_TYPE_NUMBER: FieldType = 'esriFieldTypeNumber';\nexport const ESRI_FIELD_TYPE_XML: FieldType = 'esriFieldTypeXML';\nexport const ESRI_FIELD_TYPE_BLOB: FieldType = 'esriFieldTypeBlob';\nexport const ESRI_FIELD_TYPE_DATE: FieldType = 'esriFieldTypeDate';\nexport const ESRI_FIELD_TYPE_DOUBLE: FieldType = 'esriFieldTypeDouble';\nexport const ESRI_FIELD_TYPE_GUID: FieldType = 'esriFieldTypeGUID';\nexport const ESRI_FIELD_TYPE_GEOMETRY: FieldType = 'esriFieldTypeGeometry';\nexport const ESRI_FIELD_TYPE_GLOBALID: FieldType = 'esriFieldTypeGlobalID';\nexport const ESRI_FIELD_TYPE_INTEGER: FieldType = 'esriFieldTypeInteger';\nexport const ESRI_FIELD_TYPE_RASTER: FieldType = 'esriFieldTypeRaster';\nexport const ESRI_FIELD_TYPE_SINGLE: FieldType = 'esriFieldTypeSingle';\nexport const ESRI_FIELD_TYPE_SMALL_INTEGER: FieldType = 'esriFieldTypeSmallInteger';\n\nexport const FIELD_METADATA: FieldMetadata[] = [\n  { alias: 'ID', isNumeric: true, types: [FIELD_TYPE_OID, ESRI_FIELD_TYPE_OID] },\n  { alias: 'ID', isNumeric: false, types: [FIELD_TYPE_OID_STRING] },\n  { alias: 'string', isNumeric: false, types: [FIELD_TYPE_STRING, ESRI_FIELD_TYPE_STRING] },\n  { alias: 'number', isNumeric: true, types: [FIELD_TYPE_NUMBER, ESRI_FIELD_TYPE_NUMBER] },\n  { alias: 'double', isNumeric: true, types: [FIELD_TYPE_DOUBLE, ESRI_FIELD_TYPE_DOUBLE] },\n  { alias: 'int', isNumeric: true, types: [FIELD_TYPE_INTEGER, ESRI_FIELD_TYPE_INTEGER, ESRI_FIELD_TYPE_SMALL_INTEGER] },\n  { alias: 'date', isNumeric: false, types: [FIELD_TYPE_DATE, ESRI_FIELD_TYPE_DATE] },\n  { alias: 'geometry', isNumeric: false, types: [FIELD_TYPE_GEOMETRY, ESRI_FIELD_TYPE_GEOMETRY] },\n  { alias: 'xml', isNumeric: false, types: [FIELD_TYPE_XML, ESRI_FIELD_TYPE_XML] },\n  { alias: 'blob', isNumeric: false, types: [FIELD_TYPE_BLOB, ESRI_FIELD_TYPE_BLOB] },\n  { alias: 'guid', isNumeric: false, types: [FIELD_TYPE_GUID, ESRI_FIELD_TYPE_GUID] },\n  { alias: 'globalId', isNumeric: false, types: [FIELD_TYPE_GLOBALID, ESRI_FIELD_TYPE_GLOBALID] },\n  { alias: 'integer', isNumeric: true, types: [FIELD_TYPE_INTEGER, ESRI_FIELD_TYPE_INTEGER] },\n  { alias: 'raster', isNumeric: false, types: [FIELD_TYPE_RASTER, ESRI_FIELD_TYPE_RASTER] },\n  { alias: 'single', isNumeric: false, types: [FIELD_TYPE_SINGLE, ESRI_FIELD_TYPE_SINGLE] },\n];\n\nexport interface FieldMetadata {\n  alias: string;\n  isNumeric: boolean;\n  types: FieldType[];\n}\n\nexport function isFieldGeometryType(fieldType: FieldType): boolean {\n  return fieldType === 'esriFieldTypeGeometry' || fieldType === 'geometry';\n}\n\nexport function isObjectIdType(fieldType: FieldType): boolean {\n  return fieldType === 'esriFieldTypeOID' || fieldType === 'id';\n}\n\nexport function getGeometryField(fields: LayerField[]): LayerField {\n  return (fields || []).find(f => isFieldGeometryType(f.type));\n}\n\nexport function getGeometryFieldName(fields: LayerField[]): string {\n  const field = getGeometryField(fields);\n  return field ? field.name : null;\n}\n\nexport function getIdField(fields: LayerField[]): LayerField {\n  return (fields || []).find(f => isObjectIdType(f.type));\n}\n\nexport function getIdFieldFieldName(fields: LayerField[]): string {\n  const field = getIdField(fields);\n  return field ? field.name : null;\n}\n\nexport function isFieldExpression(fieldNameOrExpression: string): boolean {\n  return hasTokens(fieldNameOrExpression);\n}\n\nexport function toFieldType(field: FieldType | LayerField): FieldType {\n  return isString(field)\n    ? field as FieldType\n    : (field as LayerField).type;\n}\n\nexport function toFieldName(field: string | LayerField): string {\n  return isString(field) ? field as string : (field as LayerField).name;\n}\n\nexport function getField(fieldName: string, fields: LayerField[]): LayerField | null {\n  return fields.find(f => f.name === fieldName) || null;\n}\n\nexport function getFieldAlias(fieldName: string, fields: LayerField[]): string | null {\n  let fieldAlias = null;\n  const field = getField(fieldName, fields);\n  if (field && field.alias) {\n    fieldAlias = field.alias;\n  }\n\n  return fieldAlias;\n}\n\nexport function isFieldNumeric(field: FieldType | LayerField): boolean {\n  const fieldType = toFieldType(field);\n  const match = FIELD_METADATA\n    .filter(f => f.isNumeric)\n    .find(f => f.types.indexOf(fieldType) > -1);\n\n  return Boolean(match);\n}\n\nexport function isFieldValueNumeric(field: FieldType | LayerField, value: any): boolean {\n  const fieldType = toFieldType(field);\n  if (isObjectIdType(fieldType) && canNotBeNumber(value)) {\n    return false;\n  }\n\n  return isFieldNumeric(field);\n}\n\nexport interface LayerFieldCodedValue {\n  name: string;\n  code: LayerFieldCodedValueCode;\n  order?: number;\n}\n\nexport interface LayerFieldDomain {\n  type: DomainType;\n  name: string;\n  codedValues: LayerFieldCodedValue[];\n  mergePolicy: MergePolicyType;\n  splitPolicy: SplitPolicyType;\n}\n\nexport interface LayerField extends Orderable {\n  name: string;\n  type: FieldType;\n  alias?: string;\n  length?: number;\n  editable?: boolean;\n  nullable?: boolean;\n  defaultValue?: any;\n  domain?: LayerFieldDomain;\n  domainName?: string;\n  hidden?: boolean;\n  order?: number;\n  role?: FieldRole;\n  placeholder?: string;\n  min?: number;\n  max?: number;\n}\n","import { LayerField, isFieldValueNumeric } from './fields/layer-field';\n\n\nexport const FIELD_QUOTE = '\"';\nexport enum CriteriaOperator {\n  Equals = '=',\n  DoesNotEqual = '<>',\n  // In = 'IN',\n  // OneOf, NotOneOf, Between, NotBetween, Contains...\n  GreaterThan = '>',\n  LessThan = '<',\n  GreaterOrEqualTo = '>=',\n  LessThanOrEqualTo = '<=',\n}\n\nexport enum TargetOperator {\n  Is = 'IS',\n  Not = 'NOT',\n  In = 'IN',\n  Like = 'LIKE',\n  Between = 'BETWEEN',\n}\n\nexport enum ValueOperator {\n  Wildcard = '%',\n  Null = 'NULL',\n}\n\nexport enum GroupingOperator {\n  OpenParenthesis = '(',\n  ClosedParenthesis = ')',\n  Parenthesis = '()',\n}\n\nexport enum CombiningOperator {\n  And = 'AND',\n  Or = 'OR',\n}\n\nexport interface WhereClauseBuilderOptions {\n  quoteFields?: boolean;\n}\n\nexport const DefaultWhereClauseBuilderOptions = {\n  quoteFields: true\n};\n\nexport class WhereClauseBuilder {\n  private readonly statements: string[] = [];\n  private readonly options: WhereClauseBuilderOptions;\n\n  constructor(options?: WhereClauseBuilderOptions) {\n    this.options = Object.assign({}, DefaultWhereClauseBuilderOptions, options);\n  }\n\n  get criteriaCount(): number {\n    return this.statements.length;\n  }\n\n  add(statement: string): this {\n    this.statements.push(statement);\n    return this;\n  }\n\n  whereEqual(field: LayerField, value: any): this {\n    return value === null\n      ? this.whereIsNull(field.name)\n      : this.where(field.name, CriteriaOperator.Equals, value, isFieldValueNumeric(field, value));\n  }\n\n  whereLike(field: string, value: any): this {\n    return this.add(`${this.formatField(field)} ${TargetOperator.Like} '%${value}%'`);\n  }\n\n  whereStartsWith(field: string, value: any): this {\n    return this.add(`${this.formatField(field)} ${TargetOperator.Like} '${value}%'`);\n  }\n\n  whereEndsWith(field: string, value: any): this {\n    return this.add(`${this.formatField(field)} ${TargetOperator.Like} '%${value}'`);\n  }\n\n  whereNotEqual(field: LayerField, value: any): this {\n    return value === null\n      ? this.whereIsNotNull(field.name)\n      : this.where(field.name, CriteriaOperator.DoesNotEqual, value, isFieldValueNumeric(field, value));\n  }\n\n  whereIsNull(field: string): this {\n    return this.add(`${this.formatField(field)} ${TargetOperator.Is} ${ValueOperator.Null}`);\n  }\n\n  whereIsNotNull(field: string): this {\n    return this.add(`${this.formatField(field)} ${TargetOperator.Is} ${TargetOperator.Not} ${ValueOperator.Null}`);\n  }\n\n  where(field: string, operator: CriteriaOperator | TargetOperator, value: any, isNumeric = false): this {\n    value = isNumeric ? value : `'${value}'`;\n    this.add(`${this.formatField(field)}${operator}${value}`);\n    return this;\n  }\n\n  whereNumeric(field: string, value: any): this {\n    this.where(field, value, true);\n    return this;\n  }\n\n  toWhereClause(): string {\n    return this.statements.join(` ${CombiningOperator.And} `);\n  }\n\n  toString(): string {\n    return this.toWhereClause();\n  }\n\n  clear() {\n    this.statements.length = 0;\n  }\n\n  protected formatField(field: string) {\n    field = field || '';\n    const addQuotes = this.options.quoteFields;\n\n    if (addQuotes) {\n      if (!field.startsWith(FIELD_QUOTE)) {\n        field = `${FIELD_QUOTE}${field}`;\n      }\n\n      if (!field.endsWith(FIELD_QUOTE)) {\n        field = `${field}${FIELD_QUOTE}`;\n      }\n    } else {\n      const quoteRegex = new RegExp(FIELD_QUOTE, 'i');\n      return field.replace(quoteRegex, '');\n    }\n\n    return field;\n  }\n}\n","import { WhereClauseBuilder, CriteriaOperator, WhereClauseBuilderOptions } from '../maps/where-clause-builder';\nimport { LrsReferenceLayer, TemporalLayer } from './lrs-layer';\nimport { NetworkLayer } from './networks/network-layer';\nimport { EventLayer } from './events/event-layer';\nimport { DataSource } from '../data-source/data-source';\nimport { toUtcDate } from '../core/date-time/conversion/to-utc-date.function';\nimport { setDateToBeginningOfDay } from '../core/date-time/set-date-to-beginning-of-date.function';\nimport { DataSourceProviderType } from '../data-source/data-source-provider-type';\nimport { getDateFormatForProvider } from '../data-source/get-date-format-for-provider.function';\nimport { format } from '../core/formatting/format.function';\nimport { formatDateForQuery } from '../core/date-time/format/format-date-for-query.function';\n\n\nexport const NO_TEMPORAL_LAYER_SUPPLIED_ERROR_MSG = 'No LRS temporal layers supplied';\nexport const NO_REFERENCE_LAYER_SUPPLIED_ERROR_MSG = 'No LRS reference layer supplied';\nexport const LRS_DATE_WHERE_CLAUSE_TEMPLATE = '(({fromDateFieldName} IS NULL OR {fromDateFieldName} <= {dateEndOfDay})'\n  + ' AND ({toDateFieldName} IS NULL OR {toDateFieldName} > {date}))';\nexport const LRS_POINT_EVENT_WHERE_CLAUSE_TEMPLATE = `({fromMeasureFieldName} between {fromMeasure} and {toMeasure})`;\nexport const LRS_LINEAR_EVENT_WHERE_CLAUSE_TEMPLATE = `(({fromMeasureFieldName} between {fromMeasure} AND {toMeasure})`\n  + ` OR ({toMeasureFieldName} between {fromMeasure} AND {toMeasure}) OR ({fromMeasureFieldName} < {fromMeasure}`\n  + ` AND {toMeasureFieldName} > {toMeasure})) AND NOT (({fromMeasureFieldName} < {fromMeasure}`\n  + ` AND {toMeasureFieldName} <= {fromMeasure}) OR ({toMeasureFieldName} > {toMeasure} AND {fromMeasureFieldName} >= {toMeasure}))`;\n\n\nexport function getLrsViewDateWhereStatement(\n  fromDateFieldName: string,\n  toDateFieldName: string,\n  dbType?: DataSourceProviderType,\n  viewDate?: Date\n): string {\n  viewDate = toUtcDate(viewDate || new Date());\n  setDateToBeginningOfDay(viewDate);\n\n  // TODO: Look into whether we need to actually use end of day or not\n  // Currently we are just setting it to same as 'date' - RG.\n  const dateFormat = getDateFormatForProvider(dbType);\n\n  return format(LRS_DATE_WHERE_CLAUSE_TEMPLATE, {\n    fromDateFieldName,\n    toDateFieldName,\n    date: formatDateForQuery(viewDate, dateFormat),\n    dateEndOfDay: formatDateForQuery(viewDate, dateFormat),\n  });\n}\n\nexport class LrsWhereClauseBuilder extends WhereClauseBuilder {\n  // private networkLayer: NetworkLayer;\n  // private eventLayer: EventLayer;\n  private temporalLayer: TemporalLayer;\n  private referenceLayer: LrsReferenceLayer;\n  private sourceDbType: DataSourceProviderType;\n\n  constructor(options?: WhereClauseBuilderOptions) {\n    super(options);\n  }\n\n  withDataSource(sourceData: DataSource): this {\n    return this.withDataProvider(sourceData.providerName);\n  }\n\n  withDataProvider(sourceDbType: DataSourceProviderType): this {\n    this.sourceDbType = sourceDbType;\n    return this;\n  }\n\n  withEventLayer(eventLayer: EventLayer): this {\n    return this\n      .withTemporalLayer(eventLayer)\n      .withReferenceLayer(eventLayer);\n  }\n\n  withReferenceLayer(referenceLayer: LrsReferenceLayer): this {\n    this.referenceLayer = referenceLayer;\n    return this;\n  }\n\n  withNetworkLayer(networkLayer: NetworkLayer): this {\n    return this.withTemporalLayer(networkLayer);\n  }\n\n  withTemporalLayer(temporalLayer: TemporalLayer): this {\n    this.temporalLayer = temporalLayer;\n    return this;\n  }\n\n  withRouteId(routeId: string | number, routeIdFieldName?: string): this {\n    return this.where(routeIdFieldName || this.referenceLayer.routeIdFieldName, CriteriaOperator.Equals, routeId);\n  }\n\n  withViewDate(viewDate?: Date, fromDateFieldName?: string, toDateFieldName?: string): this {\n    if (this.temporalLayer) {\n      fromDateFieldName = fromDateFieldName || this.temporalLayer.fromDateFieldName;\n      toDateFieldName = toDateFieldName || this.temporalLayer.toDateFieldName;\n    }\n\n    const hasDateFieldInfo = Boolean(this.temporalLayer || fromDateFieldName && toDateFieldName);\n    if (!hasDateFieldInfo) {\n      throw new Error(NO_TEMPORAL_LAYER_SUPPLIED_ERROR_MSG);\n    }\n\n    if (fromDateFieldName && toDateFieldName) {\n      const dateClause = getLrsViewDateWhereStatement(\n        this.formatField(fromDateFieldName),\n        this.formatField(toDateFieldName),\n        this.sourceDbType,\n        viewDate\n      );\n\n      this.add(dateClause);\n    }\n\n    return this;\n  }\n\n  betweenMeasures(fromMeasure: number, toMeasure: number, fromMeasureFieldName?: string, toMeasureFieldName?: string): this {\n    if (this.referenceLayer) {\n      fromMeasureFieldName = fromMeasureFieldName || this.referenceLayer.fromMeasureFieldName;\n      toMeasureFieldName = toMeasureFieldName || this.referenceLayer.toMeasureFieldName;\n    }\n\n    const hasMeasureFieldInfo = Boolean(this.referenceLayer || fromMeasureFieldName);\n    if (!hasMeasureFieldInfo) {\n      throw new Error(NO_REFERENCE_LAYER_SUPPLIED_ERROR_MSG);\n    }\n\n    const whereTemplate = toMeasureFieldName\n      ? LRS_LINEAR_EVENT_WHERE_CLAUSE_TEMPLATE\n      : LRS_POINT_EVENT_WHERE_CLAUSE_TEMPLATE;\n\n    const measureClause = format(whereTemplate, {\n      fromMeasureFieldName: this.formatField(fromMeasureFieldName),\n      toMeasureFieldName: this.formatField(toMeasureFieldName),\n      fromMeasure,\n      toMeasure,\n    });\n\n    return this.add(measureClause);\n  }\n}\n","// Angular.\nimport { HttpClient } from '@angular/common/http';\n\n// TSS.\nimport { Logger } from '../core/logging/logger.service';\nimport { LrsWhereClauseBuilder } from '../lrs/lrs-where-clause-builder';\nimport { EsriConfig } from './esri-config';\nimport { EsriMapServiceErrorResponse } from './esri-map-server-error-response';\nimport { DataSourceConfig } from '../data-source/data-source-config';\n\n\nexport abstract class BaseEsriService {\n  constructor(protected http: HttpClient, protected config: EsriConfig, protected dataConfig: DataSourceConfig, protected log: Logger) {\n  }\n\n  protected shouldUsePostMethod(payload: string | {}): boolean {\n    return this.config.arcgisQueryMethodStrategy === 'force-post'\n      || JSON.stringify(payload || '').length > this.config.arcgisMaxWhereLengthGetThreshold;\n  }\n\n  protected handleEsriResponseError<T>(response: T | EsriMapServiceErrorResponse, url: string) {\n    const error = response as EsriMapServiceErrorResponse;\n    if (error && error.error) {\n      const returnError = new Error(`Failed to query map service: ${error.error.message}`);\n      this.log.error(`Failed to execute map service request: ${url}`, returnError);\n      throw returnError;\n    }\n  }\n\n  protected getWhereBuilder(): LrsWhereClauseBuilder {\n    return new LrsWhereClauseBuilder({ quoteFields: !this.dataConfig.skipColumnQuotes });\n  }\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","import { Injectable } from '@angular/core';\nimport { AutoConfig } from '../core/auto-config.decorator';\n\n\nexport type ArcgisQueryMethodStrategy = 'prefer-get' | 'force-get' | 'force-post';\n\n\n/**\n * Configuration class for storing global ESRI-related settings.\n */\n@Injectable({\n  providedIn: 'root'\n})\n@AutoConfig('EsriConfig')\nexport class EsriConfig {\n  arcgis: { geometryUrl?: string } = {};\n  arcgisQueryMethodStrategy: ArcgisQueryMethodStrategy = 'prefer-get';\n  arcgisMaxWhereLengthGetThreshold = 3500;\n  arcgisPortalUrl: string;\n  arcgisPortalClientId: string;\n\n  get hasGeometryUrl(): boolean {\n    return Boolean(this.arcgis && this.arcgis.geometryUrl);\n  }\n\n  get arcGisGeometryUrl(): string {\n    return this.hasGeometryUrl ? this.arcgis.geometryUrl : null;\n  }\n}\n","export const SORTED_BY_MEASURE_PROPERTY_FLAG = '$$$sorted';\nexport const EARTH_RADIUS_IN_KILOMETERS = 6371;\nexport const EARTH_RADIUS_IN_METERS = 6371008.8;\nexport const WGS_84_SRID = 4326;\n","// 3rd Party.\nimport { Point } from 'geojson';\n\n// TSS.\nimport { SinglePoint } from './single-point';\nimport { isArray } from '../../core/type-check/is-array.function';\n\n\nexport function toSinglePartPointArray(point: SinglePoint): number[] {\n  return isArray(point)\n    ? (point as number[])\n    : (point as Point).coordinates;\n}\n","import { toSinglePartPointArray } from './to-single-part-point.function';\nimport { SinglePoint } from './single-point';\nimport { getLastItem } from '../../core/array/get-last-item.function';\nimport { AnyPoint } from './any-point';\nimport { SORTED_BY_MEASURE_PROPERTY_FLAG } from '../geometry.constants';\nimport { toMultiPartPoint } from './to-multi-part-point.function';\n\n\nexport function getSortResultForPoints(firstPoint: SinglePoint, secondPoint: SinglePoint): number {\n  const first: number[] = toSinglePartPointArray(firstPoint);\n  const second: number[] = toSinglePartPointArray(secondPoint);\n  const firstCoordinateMeasure: number = getLastItem(first);\n  const secondCoordinateMeasure: number = getLastItem(second);\n\n  return firstCoordinateMeasure - secondCoordinateMeasure;\n}\n\nexport function sortPointsByMeasure(points: AnyPoint, cacheSort = false): void {\n  if (points[SORTED_BY_MEASURE_PROPERTY_FLAG]) {\n    return;\n  }\n\n  const coordinates: number[][] = toMultiPartPoint(points);\n  const coordinatesHaveMeasureValue = Boolean(\n    coordinates.length\n    && coordinates[0].length > 2\n  );\n\n  if (coordinatesHaveMeasureValue) {\n    coordinates.sort(getSortResultForPoints);\n    if (cacheSort) {\n      points[SORTED_BY_MEASURE_PROPERTY_FLAG] = true;\n    }\n  }\n}\n","import { isArray } from '../../core/type-check/is-array.function';\nimport { SingleLine } from './line-geometry';\nimport { LineString } from 'geojson';\n\n\nexport function singleLineToCoordinates(line: SingleLine): number[][] {\n  return isArray(line)\n    ? line as number[][]\n    : (line as LineString).coordinates;\n}\n","import { isArray } from '../../core/type-check/is-array.function';\nimport { MultiLine } from './line-geometry';\nimport { MultiLineString } from 'geojson';\n\n\nexport function multiLineToCoordinates(line: MultiLine): number[][][] {\n  return isArray(line)\n    ? line as number[][][]\n    : (line as MultiLineString).coordinates;\n}\n","import { LineGeometry, SingleLine, MultiLine } from './line-geometry';\nimport { toMultiPartPaths } from './to-multi-part-paths.function';\nimport { singleLineToCoordinates } from './single-line-to-coordinates';\nimport { multiLineToCoordinates } from './multi-line-to-coordinates';\n\n\nexport function hasMeasureValues(line: LineGeometry): boolean {\n  const paths: number[][][] = toMultiPartPaths(line);\n  return multiLineHasMeasureValues(paths);\n}\n\nexport function singleLineHasMeasureValues(line: SingleLine): boolean {\n  const coordinates = singleLineToCoordinates(line);\n  return Boolean(\n    coordinates\n    && coordinates.length\n    && coordinates[0].length > 2\n  );\n}\n\nexport function multiLineHasMeasureValues(line: MultiLine): boolean {\n  const coordinates = multiLineToCoordinates(line);\n  return Boolean(\n    coordinates.length\n    && singleLineHasMeasureValues(coordinates[0])\n  );\n}\n","import { toMultiPartPaths } from './to-multi-part-paths.function';\nimport { LineGeometry } from './line-geometry';\nimport { SORTED_BY_MEASURE_PROPERTY_FLAG } from '../geometry.constants';\nimport { sortPointsByMeasure, getSortResultForPoints } from '../point/sort-points.function';\nimport { multiLineHasMeasureValues } from './has-measure-values.function';\n\n\nexport function sortLineByMeasure(line: LineGeometry): void {\n  if (line[SORTED_BY_MEASURE_PROPERTY_FLAG]) {\n    // There's no need to waste time sorting this geometry if it's already been done.\n    return;\n  }\n\n  const paths: number[][][] = toMultiPartPaths(line);\n  if (!multiLineHasMeasureValues(paths)) {\n    // We can not continue sorting if the coordinates do not have measure values in them.\n    return;\n  }\n\n  // We need to sort all of the inner coordinates first, and then the outer paths\n  // because we don't know the min/max of the inner coordinates until this is done.\n  paths.forEach((coordinates: number[][]) => sortPointsByMeasure(coordinates));\n\n  paths.sort((firstCoordinate: number[][], secondCoordinate: number[][]) => {\n    const firstCoordinateFirstPoint = firstCoordinate[0];\n    const secondCoordinateFirstPoint = secondCoordinate[0];\n\n    return getSortResultForPoints(firstCoordinateFirstPoint, secondCoordinateFirstPoint);\n  });\n\n  line[SORTED_BY_MEASURE_PROPERTY_FLAG] = true;\n}\n","import { SinglePoint } from './single-point';\nimport { toSinglePartPointArray } from './to-single-part-point.function';\nimport { getLastItem } from '../../core/array/get-last-item.function';\n\n\nexport function getMeasureFromPoint(point: SinglePoint): number | null {\n  const coordinate: number[] = toSinglePartPointArray(point);\n  const hasMeasureValues = Boolean(\n    coordinate\n    && coordinate.length\n    && coordinate.length > 2\n  );\n\n  return hasMeasureValues\n    ? getLastItem(coordinate)\n    : null;\n}\n","import { LineGeometry } from './line-geometry';\nimport { MeasureExtent } from './measure-extent';\nimport { toMultiPartPaths } from './to-multi-part-paths.function';\nimport { sortLineByMeasure } from './sort-line-by-measure.function';\nimport { getMeasureFromPoint } from '../point/get-measure-from-point.function';\nimport { getLastItem } from '../../core/array/get-last-item.function';\n\n\nexport function getMeasureExtentFromLine(line: LineGeometry): MeasureExtent {\n  const paths = toMultiPartPaths(line);\n  let min: number;\n  let max: number;\n  if (paths.length) {\n    sortLineByMeasure(line);\n    const firstPath: number[][] = paths[0];\n    const lastPath: number[][] = getLastItem(paths);\n    const firstCoordinate: number[] = firstPath[0];\n    const lastCoordinate: number[] = getLastItem(lastPath);\n\n    min = getMeasureFromPoint(firstCoordinate);\n    max = getMeasureFromPoint(lastCoordinate);\n  }\n\n  return {\n    min,\n    max\n  };\n}\n\n","import { getLastItem } from '../../core/array/get-last-item.function';\nimport { toMultiPartPoint } from './to-multi-part-point.function';\nimport { AnyPoint } from './any-point';\nimport { MeasureExtent } from '../line/measure-extent';\nimport { sortPointsByMeasure } from './sort-points.function';\nimport { getMeasureFromPoint } from './get-measure-from-point.function';\n\n\nexport function getMeasureExtentFromPoint(point: AnyPoint): MeasureExtent {\n  const points: number[][] = toMultiPartPoint(point);\n  const firstPoint = points[0];\n  const lastPoint = getLastItem(points);\n  let min;\n  let max;\n\n  sortPointsByMeasure(points);\n\n  min = getMeasureFromPoint(firstPoint);\n  max = getMeasureFromPoint(lastPoint);\n\n  return { min, max };\n}\n","// 3rd Party.\nimport { Geometry, MultiLineString, LineString, MultiPoint, Point } from 'geojson';\n\n// TSS.\nimport { MeasureExtent } from '../line/measure-extent';\nimport { getMeasureExtentFromLine } from '../line/get-measure-extent-from-line.function';\nimport { isLine } from './is-line.function';\nimport { getMeasureExtentFromPoint } from '../point/get-measure-extent-from-point.function';\n\n\nexport function getMeasureExtent(geometry: Geometry): MeasureExtent {\n  let extent: MeasureExtent;\n  if (isLine(geometry)) {\n    const lineGeometry = geometry as LineString | MultiLineString;\n    extent = getMeasureExtentFromLine(lineGeometry);\n  } else {\n    const point = geometry as Point | MultiPoint;\n    extent = getMeasureExtentFromPoint(point);\n  }\n\n  return extent;\n}\n","import { LayerField, LayerFieldCodedValue, LayerFieldCodedValueCode } from './layer-field';\n\n\nexport function getCodedValue(field: LayerField, value: LayerFieldCodedValueCode): LayerFieldCodedValue {\n  return field.domain\n    ? field.domain.codedValues.find(codedValue => codedValue.code === value)\n    : undefined;\n}\n","import { LayerField, LayerFieldCodedValueCode } from './layer-field';\nimport { getCodedValue } from './get-coded-value-domain.function';\n\n\nexport function getCodedValueName(field: LayerField, value: LayerFieldCodedValueCode): string {\n  const codedValue = getCodedValue(field, value);\n  return codedValue\n    ? codedValue.name\n    : undefined;\n}\n","import { LayerField, LayerFieldCodedValueCode } from './layer-field';\nimport { getCodedValueName } from './get-coded-value-name.function';\nimport { isValue } from '../../core/type-check/is-value.function';\n\n\nexport function getCodedValueNameOrDefault(field: LayerField, value: LayerFieldCodedValueCode): string {\n  const name = getCodedValueName(field, value);\n\n  return isValue(name)\n    ? name\n    : String(value);\n}\n","export const DYNAMIC_DATA_REGEX = new RegExp('^layer_(\\\\d+)_field_(\\\\w+|\\\\*):?(\\\\w+)?', 'i');\n\nexport function isDynamicDataExpression(expression: string): boolean {\n  return DYNAMIC_DATA_REGEX.test(expression);\n}\n","// 3rd Party.\nimport { Feature } from 'geojson';\n\n// TSS.\nimport { MapFeature } from '../../maps/map-feature';\n\n\nexport const ALL_FIELD_CRITERIA = '*';\n\nexport function extractFeatureDataByLayer<T>(layerId: number, field: string = '*', ...features: MapFeature[]): T[] {\n  return extractFeatureData<T>(field, ...features.filter(feature => feature.layerId === layerId));\n}\n\nexport function extractFeatureData<T>(field: string = ALL_FIELD_CRITERIA, ...features: Feature[]): T[] {\n  return features.map(feature => field === ALL_FIELD_CRITERIA\n    ? feature.properties\n    : feature.properties[field]);\n}\n","import { isDynamicDataExpression, DYNAMIC_DATA_REGEX } from './is-dynamic-data-expression.function';\nimport { extractFeatureDataByLayer } from './extract-feature-data.function';\nimport { isNumber } from 'util';\nimport { MapFeature } from '../../maps/map-feature';\nimport { sumValues } from '../../core/stats/sum-values.function';\nimport { average } from '../../core/stats/average.function';\nimport { isObject } from '../../core/type-check/is-object.function';\nimport { extractTokenExpressions } from '../../core/tokens/extract-token-expressions.function';\nimport { replaceToken } from '../../core/tokens/replace-token.function';\nimport { format } from '../../core/formatting/format.function';\n\nexport type DynamicDataSubsetKeyword = 'first' | 'last' | 'sum' | 'add' | 'avg' | 'average' | 'concat';\n\nfunction dataValuesToNumbers(dataValues: any[]): number[] {\n  return dataValues\n    .filter(value => isNumber(value))\n    .map(value => Number(value));\n}\n\nfunction evaluateSingleDynamicDataExpression(expression: string, ...features: MapFeature[]): string | '' {\n  const parsedValue = expression.match(DYNAMIC_DATA_REGEX);\n  let expressionValue: {};\n\n  if (parsedValue && parsedValue.length > 2) {\n    const layerId = Number(parsedValue[1]);\n    const field = parsedValue[2];\n    const subsetKeyword: DynamicDataSubsetKeyword = (parsedValue[3] || 'first').toLocaleLowerCase() as DynamicDataSubsetKeyword;\n    const dataValues = extractFeatureDataByLayer(layerId, field, ...features);\n\n    if (subsetKeyword === 'first') {\n      expressionValue = dataValues[0];\n    } else if (subsetKeyword === 'last') {\n      expressionValue = dataValues[dataValues.length - 1];\n    } else if (subsetKeyword === 'sum' || subsetKeyword === 'add') {\n      const numberValues = dataValuesToNumbers(dataValues);\n      expressionValue = sumValues(numberValues);\n    } else if (subsetKeyword === 'avg' || subsetKeyword === 'average') {\n      const numberValues = dataValuesToNumbers(dataValues);\n      expressionValue = average(numberValues);\n    } else if (subsetKeyword === 'concat') {\n      expressionValue = dataValues.join(', ');\n    } else if (subsetKeyword === 'min') {\n      const numberValues = dataValuesToNumbers(dataValues);\n      expressionValue = Math.min(...numberValues);\n    } else if (subsetKeyword === 'max') {\n      const numberValues = dataValuesToNumbers(dataValues);\n      expressionValue = Math.max(...numberValues);\n    } else {\n      throw new Error(`Unsupported dynamic data expression subset keyword '${subsetKeyword}'`);\n    }\n\n    return isObject(expressionValue)\n      ? JSON.stringify(expressionValue)\n      : String(expressionValue);\n  }\n}\n\nfunction evaluateDynamicDataExpression(expression: string, ...features: MapFeature[]): string | '' {\n  const tokenExpressions = extractTokenExpressions(expression);\n  let evaluationResult = expression;\n\n  tokenExpressions\n    .filter(tokenExpression => isDynamicDataExpression(tokenExpression))\n    .forEach(tokenExpression => {\n      const value = evaluateSingleDynamicDataExpression(tokenExpression, ...features);\n      evaluationResult = replaceToken(evaluationResult, tokenExpression, value);\n    });\n\n  return evaluationResult;\n}\n\nexport function evaluteFeatureDataExpression(expression: string, ...features: MapFeature[]): string {\n  const evaluationResult = evaluateDynamicDataExpression(expression, ...features);\n  const firstFeatureProperties = features && features.length\n    ? features[0].properties\n    : {};\n\n  const replaceTokens = Object.assign({}, firstFeatureProperties, {\n    RecordCount: features.length,\n  });\n\n  return format(evaluationResult, replaceTokens);\n}\n","// 3rd Party.\nimport { Feature, Geometry, GeoJsonProperties, BBox } from 'geojson';\n\n// TSS.\nimport { getMeasureExtent } from '../geometry/geometry/get-measure-extent.function';\nimport { isLine } from '../geometry/geometry/is-line.function';\nimport { getIdFieldFieldName, isFieldExpression } from './fields/layer-field';\nimport { getCodedValueNameOrDefault } from './fields/get-coded-value-name-or-default.function';\nimport { evaluteFeatureDataExpression } from '../lrs/data/evaluate-feature-data-expression.function';\nimport { FeatureClassLayer } from './feature-class-layer';\nimport { isPoint } from '../geometry/geometry/is-point.function';\nimport { isPolygon } from '../geometry/geometry/is-polygon.function';\nimport { WGS_84_SRID } from '../geometry/geometry.constants';\nimport { Cloneable } from '../core/clone/cloneable';\nimport { clone } from '../core/clone/clone.function';\n\n\nexport class MapFeature implements Feature, Cloneable<MapFeature> {\n  id?: string | number;\n  geometry: Geometry;\n  properties: GeoJsonProperties;\n  bbox: BBox;\n  type: 'Feature';\n\n  routeId: string;\n  fromMeasure: number;\n  toMeasure: number;\n  layer: FeatureClassLayer;\n  displayValue: any;\n  styleValue: any;\n  isLinear: boolean;\n  isPoint: boolean;\n  isPolygon: boolean;\n  viewDate?: Date;\n  gdbVersion?: string;\n  spatialReferenceId?: number;\n\n  get layerId(): number {\n    return this.layer ? this.layer.id : null;\n  }\n\n  get hasZ(): boolean {\n    return this.layer.hasZ;\n  }\n\n  get hasM(): boolean {\n    return this.layer.hasM;\n  }\n\n  constructor(feature: Feature, layer: FeatureClassLayer, spatialReferenceId = WGS_84_SRID) {\n    this.id = feature.id;\n    this.properties = feature.properties;\n    this.type = feature.type;\n    this.bbox = feature.bbox;\n    this.layer = layer;\n    this.spatialReferenceId = spatialReferenceId;\n\n    const idFieldName = this.getIdFieldName();\n\n    this.id = this.id || this.getValue(idFieldName);\n    this.displayValue = this.getValue(layer.displayField);\n    this.setGeometry(feature.geometry);\n  }\n\n  getIdFieldName(): string {\n    return getIdFieldFieldName(this.layer.fields);\n  }\n\n  getValue(fieldNameOrExpression: string): any {\n    return isFieldExpression(fieldNameOrExpression)\n      ? evaluteFeatureDataExpression(fieldNameOrExpression, this)\n      : this.properties && this.properties[fieldNameOrExpression];\n  }\n\n  getCodedValueNameOrDefault(fieldName: string): any {\n    const value = this.getValue(fieldName);\n    const field = this.layer.getField(fieldName);\n    return getCodedValueNameOrDefault(field, value);\n  }\n\n  setValue(fieldName: string, value: any): this {\n    this.properties[fieldName] = value;\n    return this;\n  }\n\n  setId(id: string | number): this {\n    this.id = id;\n    this.setValue(getIdFieldFieldName(this.layer.fields), id);\n    return this;\n  }\n\n  setGeometry(geometry: Geometry): this {\n    this.geometry = geometry;\n    return this.setGeometryTypeProperties();\n  }\n\n  setMeasureFromGeometry(): this {\n    if (this.geometry) {\n      const extent = getMeasureExtent(this.geometry);\n      this.fromMeasure = extent.min;\n      this.toMeasure = extent.max;\n    }\n    return this;\n  }\n\n  isSpatialReferenceWgs84(): boolean {\n    return this.spatialReferenceId === WGS_84_SRID;\n  }\n\n  clone(): MapFeature {\n    const copyFeature = clone(this.toFeature());\n    return new MapFeature(copyFeature, this.layer);\n  }\n\n  toFeature(): Feature {\n    const feature: Feature = {\n      type: 'Feature',\n      geometry: this.geometry,\n      properties: this.properties,\n      id: this.id,\n      bbox: this.bbox,\n    };\n\n    return feature;\n  }\n\n  toGeoJson(): Feature {\n    return this.toFeature();\n  }\n\n  protected setGeometryTypeProperties(): this {\n    this.isLinear = isLine(this.geometry);\n    this.isPoint = isPoint(this.geometry);\n    this.isPolygon = isPolygon(this.geometry);\n    return this;\n  }\n}\n","// 3rd Party.\nimport { Feature } from 'geojson';\n\n// TSS.\nimport { LrsLayer } from './lrs-layer';\nimport { MapFeature } from '../maps/map-feature';\nimport { isLine } from '../geometry/geometry/is-line.function';\nimport { isPoint } from '../geometry/geometry/is-point.function';\nimport { WGS_84_SRID } from '../geometry/geometry.constants';\nimport { Cloneable } from '../core/clone/cloneable';\nimport { clone } from '../core/clone/clone.function';\n\n\nexport class LrsFeature extends MapFeature implements Cloneable<LrsFeature> {\n  routeId: string;\n  fromMeasure: number;\n  toMeasure: number;\n  layer: LrsLayer;\n  displayValue: any;\n  styleValue: any;\n  viewDate?: Date;\n  gdbVersion?: string;\n\n  get layerId(): number {\n    return this.layer ? this.layer.id : null;\n  }\n\n  get fromDate(): Date {\n    return this.getValue(this.layer.fromDateFieldName);\n  }\n\n  get toDate(): Date {\n    return this.getValue(this.layer.toDateFieldName);\n  }\n\n  get isRetired(): boolean {\n    return Boolean(this.toDate);\n  }\n\n  get isActive(): boolean {\n    return !this.isRetired;\n  }\n\n  constructor(feature: Feature, layer: LrsLayer, spatialReferenceId = WGS_84_SRID) {\n    super(feature, layer, spatialReferenceId);\n\n    if (this.geometry && this.isGeometryTypeInvalid()) {\n      throw new Error(`Unsupported geometry type of ${this.geometry.type} detected.`);\n    }\n  }\n\n  setFromDate(date: Date): this {\n    return this.setValue(this.layer.fromDateFieldName, date);\n  }\n\n  setToDate(date: Date): this {\n    return this.setValue(this.layer.toDateFieldName, date);\n  }\n\n  retire(): this {\n    if (this.layer.toDateFieldName) {\n      this.setValue(this.layer.toDateFieldName, new Date());\n    }\n\n    return this;\n  }\n\n  clone(): LrsFeature {\n    const copyFeature = clone(this.toFeature());\n    return new LrsFeature(copyFeature, this.layer);\n  }\n\n  protected isGeometryTypeValid(): boolean {\n    return isLine(this.geometry) || isPoint(this.geometry);\n  }\n\n  private isGeometryTypeInvalid(): boolean {\n    return !this.isGeometryTypeValid();\n  }\n}\n","// 3rd Party.\nimport { Feature, Geometry, LineString, Point, MultiLineString } from 'geojson';\n\n// TSS.\nimport { LrsFeature } from '../lrs-feature';\nimport { EventLayer } from './event-layer';\nimport { LrsReferenceFeature } from '../lrs-reference-feature';\nimport { toFeature } from '../feature';\nimport { WGS_84_SRID } from '../../geometry/geometry.constants';\nimport { Cloneable } from '../../core/clone/cloneable';\nimport { clone } from '../../core/clone/clone.function';\n\n\nexport class EventFeature extends LrsFeature implements LrsReferenceFeature, Cloneable<EventFeature> {\n  layer: EventLayer;\n\n  constructor(feature: Feature, layer: EventLayer, spatialReferenceId = WGS_84_SRID) {\n    super(feature, layer, spatialReferenceId);\n\n    this.routeId = this.getValue(layer.routeIdFieldName);\n    this.fromMeasure = this.getValue(layer.fromMeasureFieldName);\n    this.toMeasure = this.getValue(layer.toMeasureFieldName);\n  }\n\n  static create(\n    layer: EventLayer,\n    properties: { [name: string]: any; } = {},\n    geometry: Point | LineString | MultiLineString = null\n  ): EventFeature {\n    const feature: Feature = toFeature(properties, geometry as Geometry);\n    return new EventFeature(feature, layer);\n  }\n\n  setRouteId(routeId: string): this {\n    this.routeId = routeId;\n    return this.setValue(routeId, this.layer.routeIdFieldName);\n  }\n\n  setFromMeasure(measure: number): this {\n    this.fromMeasure = measure;\n    return this.setValue(this.layer.fromMeasureFieldName, measure);\n  }\n\n  setToMeasure(measure: number): this {\n    if (!this.isLinear) {\n      throw new Error('Cannot set to measure for a point-based feature');\n    }\n\n    this.toMeasure = measure;\n    return this.setValue(this.layer.toMeasureFieldName, measure);\n  }\n\n  setMeasureExtent(fromMeasure: number, toMeasure: number): this {\n    return this\n      .setFromMeasure(fromMeasure)\n      .setToMeasure(toMeasure);\n  }\n\n  clone(): EventFeature {\n    const copyFeature = clone(this.toFeature());\n    return new EventFeature(copyFeature, this.layer);\n  }\n\n  protected setGeometryTypeProperties(): this {\n    this.isLinear = Boolean(this.layer.toMeasureFieldName);\n    this.isPoint = !this.isLinear;\n    this.isPolygon = false;\n    return this;\n  }\n}\n","// 3rd Party.\nimport { Feature, Geometry } from 'geojson';\n\n// TSS.\nimport { LrsMetadata } from './lrs-metadata';\nimport { LrsFeature } from './lrs-feature';\nimport { NetworkFeature } from './networks/network-feature';\nimport { EventLayer } from './events/event-layer';\nimport { NetworkLayer } from './networks/network-layer';\nimport { EventFeature } from './events/event-feature';\n\n\nexport function toLrsFeature(feature: Feature, layerId: number, lrsMeta: LrsMetadata) {\n  const layerInfo = lrsMeta.getLayerDetail(layerId);\n  let lrsFeature: LrsFeature;\n\n  if (layerInfo.isNetworkLayer) {\n    lrsFeature = new NetworkFeature(feature, layerInfo.layer as NetworkLayer);\n  } else if (layerInfo.isEventLayer) {\n    lrsFeature = new EventFeature(feature, layerInfo.layer as EventLayer);\n  }\n\n  return lrsFeature;\n}\n\n// Feature<G extends GeometryObject | null = Geometry, P = GeoJsonProperties> extends GeoJsonObject\nexport function toFeature(properties: { [name: string]: any; } = {}, geometry: Geometry = null): Feature {\n  return {\n    type: 'Feature',\n    geometry,\n    properties\n  };\n}\n","import { toMultiPartPaths } from './to-multi-part-paths.function';\nimport { LineGeometry } from './line-geometry';\nimport { addRange } from '../../core/array/add-range.function';\nimport { PointComparisonDetails } from '../point/point-comparison-details';\nimport { getMeasureFromPoint } from '../point/get-measure-from-point.function';\n\n\nexport function getPoint(line: LineGeometry, measure: number): number[] {\n  const pointComparisionDetails: PointComparisonDetails[] = [];\n  const paths: number[][][] = toMultiPartPaths(line);\n\n  paths.forEach((coordinates: number[][]) => {\n    const details = comparePathWithMeasure(coordinates, measure);\n    addRange(pointComparisionDetails, details);\n  });\n\n  const minPoint = pointComparisionDetails.reduce((accumulator, value) => minPointCloserToMeasure(accumulator, value, measure));\n  const maxPoint = pointComparisionDetails.reduce((accumulator, value) => maxPointCloserToMeasure(accumulator, value, measure));\n  const measureDeltaPercent = calculateMeasureDelta(minPoint.pointMeasure, maxPoint.pointMeasure, measure);\n  const x = interpolateX(minPoint.pointCoordinate, maxPoint.pointCoordinate, measureDeltaPercent);\n  const y = interpolateY(minPoint.pointCoordinate, maxPoint.pointCoordinate, measureDeltaPercent);\n\n  return [x, y, 0, measure];\n}\n\nfunction interpolateX([minX]: number[], [maxX]: number[], delta: number): number {\n  return minX + delta * (maxX - minX);\n}\n\nfunction interpolateY([, minY]: number[], [, maxY]: number[], delta: number): number {\n  return minY + delta * (maxY - minY);\n}\n\nfunction calculateMeasureDelta(minMeasure: number, maxMeasure: number, measure: number): number {\n  if (maxMeasure === minMeasure) {\n    return 0;\n  }\n\n  return (measure - minMeasure) / (maxMeasure - minMeasure);\n}\n\nfunction comparePathWithMeasure(coordinates: number[][], measureToCompare: number): PointComparisonDetails[] {\n  const pointComparisionDetailsFromPath: PointComparisonDetails[] = coordinates\n    .map(\n      (coordinate: number[], index: number) => compareCoordinateWithMeasure(coordinate, measureToCompare, index)\n    );\n\n  return pointComparisionDetailsFromPath;\n}\n\nfunction compareCoordinateWithMeasure(coordinate: number[], measureToCompare: number, index: number): PointComparisonDetails {\n  const measureFromCoordinate = getMeasureFromPoint(coordinate);\n  const pointDetails: PointComparisonDetails = {\n    pointCoordinate: coordinate,\n    distance: Math.abs(measureFromCoordinate - measureToCompare),\n    pointMeasure: measureFromCoordinate,\n    index\n  };\n\n  return pointDetails;\n}\n\nfunction minPointCloserToMeasure(\n  accumulator: PointComparisonDetails,\n  value: PointComparisonDetails,\n  measureToCompare: number\n): PointComparisonDetails {\n  const isPointCloserToMeasure = value.distance <= accumulator.distance;\n  const isPointLessThanMeasure = value.pointMeasure <= measureToCompare;\n\n  return isPointCloserToMeasure && isPointLessThanMeasure\n    ? value\n    : accumulator;\n}\n\nfunction maxPointCloserToMeasure(\n  point1: PointComparisonDetails,\n  point2: PointComparisonDetails,\n  measureToCompare: number\n): PointComparisonDetails {\n  const isPointCloserToMeasure = point1.distance <= point2.distance;\n  const isPointGreaterThanMeasure = point1.pointMeasure >= measureToCompare;\n\n  return isPointCloserToMeasure && isPointGreaterThanMeasure\n    ? point1\n    : point2;\n}\n","// 3rd Party.\nimport { MultiLineString } from 'geojson';\n\n// TSS.\nimport { LineGeometry } from './line-geometry';\nimport { toMultiPartPaths } from './to-multi-part-paths.function';\n\n\nexport function toMultiLineString(line: LineGeometry): MultiLineString {\n  const coordinates = toMultiPartPaths(line);\n\n  return {\n    bbox: null,\n    type: 'MultiLineString',\n    coordinates\n  };\n}\n","// 3rd Party.\nimport { LineString } from 'geojson';\n\n// TSS.\nimport { SingleLine } from './line-geometry';\nimport { isArray } from '../../core/type-check/is-array.function';\n\n\nexport function toLineString(line: SingleLine): LineString {\n  return isArray(line)\n    ? {\n      bbox: null,\n      type: 'LineString',\n      coordinates: line as number[][]\n    }\n    : line as LineString;\n}\n","// 3rd Party.\nimport { LineString, MultiLineString } from 'geojson';\n\n// TSS.\nimport { LineGeometry } from './line-geometry';\nimport { isArray } from '../../core/type-check/is-array.function';\nimport { isMultiPartLine } from './is-multi-part.function';\nimport { toMultiLineString } from './to-multi-line-string.function';\nimport { toLineString } from './to-line-string.function';\n\n\nexport function toLineOrMultiLineString(line: LineGeometry): LineString | MultiLineString {\n  const isCoordinatesArray = isArray(line);\n  if (!isCoordinatesArray) {\n    return line as (LineString | MultiLineString);\n  }\n\n  const coordinates = line as (number[][] | number[][][]);\n  return isMultiPartLine(coordinates)\n    ? toMultiLineString(coordinates)\n    : toLineString(coordinates as number[][]);\n}\n","export function degreesToRadians(degrees) {\n  return degrees * Math.PI / 180;\n}\n","import { toSinglePartPointArray } from './to-single-part-point.function';\nimport { SinglePoint } from './single-point';\nimport { EARTH_RADIUS_IN_KILOMETERS } from '../geometry.constants';\nimport { degreesToRadians } from '../geometry/degrees-to-radians.function';\nimport { convertLengthUnits } from '../../core/units/convert-length-units.function';\nimport { LengthUnit } from '../../core/units/length-unit';\n\n\nexport function getDistanceBetweenPoints(point1: SinglePoint, point2: SinglePoint): number {\n  const coordinate1: number[] = toSinglePartPointArray(point1);\n  const coordinate2: number[] = toSinglePartPointArray(point2);\n\n  const x1: number = coordinate1[0];\n  const y1: number = coordinate1[1];\n  const x2: number = coordinate2[0];\n  const y2: number = coordinate2[1];\n\n  return getDistanceBetweenPointValues(x1, y1, x2, y2);\n}\n\nexport function getDistanceBetweenPointValues(x1: number, y1: number, x2: number, y2: number): number {\n  // NOTE: This is using the pythagorean theorem (a^2 + b^2 = c^2).\n  const xLength = Math.pow(x2 - x1, 2);\n  const yLength = Math.pow(y2 - y1, 2);\n  const distance = Math.sqrt(xLength + yLength);\n\n  if (isNaN(distance)) {\n    throw new Error(`Unable to calculate distance between points (${x1},${x2} and ${y1},${y2}). Invalid or missing data was provided`);\n  }\n\n  return distance;\n}\n\nexport function getKilometersBetweenLatLng(lat1: number, lng1: number, lat2: number, lng2: number): number {\n  // Modified from: https://stackoverflow.com/questions/365826/calculate-distance-between-2-gps-coordinates - RG.\n  const dLat = degreesToRadians(lat2 - lat1);\n  const dLon = degreesToRadians(lng2 - lng1);\n\n  lat1 = degreesToRadians(lat1);\n  lat2 = degreesToRadians(lat2);\n\n  const a = Math.sin(dLat / 2) * Math.sin(dLat / 2) +\n    Math.sin(dLon / 2) * Math.sin(dLon / 2) * Math.cos(lat1) * Math.cos(lat2);\n\n  const circumference = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n\n  return EARTH_RADIUS_IN_KILOMETERS * circumference;\n}\n\nexport function getMetersBetweenLatLng(lat1: number, lng1: number, lat2: number, lng2: number): number {\n  return getDistanceBetweenLatLng(lat1, lng1, lat2, lng2, LengthUnit.Meter);\n}\n\nexport function getFeetBetweenLatLng(lat1: number, lng1: number, lat2: number, lng2: number): number {\n  return getDistanceBetweenLatLng(lat1, lng1, lat2, lng2, LengthUnit.Foot);\n}\n\nexport function getMilesBetweenLatLng(lat1: number, lng1: number, lat2: number, lng2: number): number {\n  return getDistanceBetweenLatLng(lat1, lng1, lat2, lng2, LengthUnit.Mile);\n}\n\nexport function getDistanceBetweenLatLng(lat1: number, lon1: number, lat2: number, lon2: number, outputUnit: LengthUnit): number {\n  const distanceInKilometers = getKilometersBetweenLatLng(lat1, lon1, lat2, lon2);\n  return convertLengthUnits(distanceInKilometers, LengthUnit.Kilometer, outputUnit);\n}\n","// 3rd Party.\nimport { Feature, Point, LineString } from 'geojson';\nimport { lineString } from '@turf/helpers';\nimport nearestPointOnLine from '@turf/nearest-point-on-line';\nimport lineSplit from '@turf/line-split';\nimport length from '@turf/length';\n\n// TSS.\nimport { LineGeometry } from './line-geometry';\nimport { SinglePoint } from '../point/single-point';\nimport { getMeasureFromPoint } from '../point/get-measure-from-point.function';\nimport { toSinglePartPointArray } from '../point/to-single-part-point.function';\nimport { isMultiPartLine } from './is-multi-part.function';\nimport { toLineOrMultiLineString } from './to-line-or-multi-line-string.function';\nimport { getDistanceBetweenPoints } from '../point/get-distance-between-points.function';\nimport { GetMeasureOptions } from './get-measure-options';\nimport { getLastItem } from '../../core/array/get-last-item.function';\n\n\nexport function getMeasure(line: LineGeometry, point: SinglePoint, options?: GetMeasureOptions): number {\n  options = Object.assign({\n    lengthUnit: 'miles',\n    coordinateSystem: 'wgs84'\n  }, options);\n\n  const closestPointFeature: Feature<Point> = nearestPointOnLine(line, point);\n  if (!closestPointFeature || !closestPointFeature.geometry) {\n    throw new Error('Unable to get measure for geometry');\n  }\n\n  const foundPointMeasure = getMeasureFromPoint(closestPointFeature.geometry);\n\n  // If the point happens to land on a verticee, then it will already have a measure.\n  if (foundPointMeasure !== null) {\n    return foundPointMeasure;\n  }\n\n  const lineGeometry = toLineOrMultiLineString(line);\n  if (isMultiPartLine(lineGeometry.coordinates)) {\n    throw new Error('MultiLineString is not supported in getMeasure function yet.');\n  }\n\n  return interpolateMeasure(lineGeometry as LineString, closestPointFeature.geometry, options);\n}\n\nfunction interpolateMeasure(line: LineString, pointOnLine: SinglePoint, options: GetMeasureOptions): number {\n  const pointCoordinates = toSinglePartPointArray(pointOnLine);\n  const pointGeometry: Point = { type: 'Point', coordinates: pointCoordinates };\n  const pointFeature: Feature<Point> = { type: 'Feature', geometry: pointGeometry, properties: {} };\n  const lineFeature: Feature<LineString> = {\n    type: 'Feature',\n    geometry: line,\n    properties: {}\n  };\n\n  const splitResult = lineSplit(lineFeature, pointFeature);\n  const firstFeature = splitResult.features[0];\n  const splitVertex = getLastItem(firstFeature.geometry.coordinates);\n  const lastVertexWithMeasureIndex = firstFeature.geometry.coordinates.length - 2;\n  const lastVertexWithMeasure = firstFeature.geometry.coordinates[lastVertexWithMeasureIndex];\n  const newLineSegment = lineString([lastVertexWithMeasure, splitVertex]);\n\n  const measureOffset = options.coordinateSystem === 'flat'\n    ? getDistanceBetweenPoints(lastVertexWithMeasure, splitVertex)\n    : length(newLineSegment, { units: options.lengthUnit as any });\n  const lastVertexMeasure = getMeasureFromPoint(lastVertexWithMeasure);\n\n  return lastVertexMeasure + measureOffset;\n}\n","// 3rd Party.\nimport { Feature, LineString, MultiLineString, Geometry } from 'geojson';\n\n// TSS.\nimport { LrsFeature } from '../lrs-feature';\nimport { NetworkLayer } from './network-layer';\nimport { toFeature } from '../feature';\nimport { SinglePoint } from '../../geometry/point/single-point';\nimport { LineGeometry } from '../../geometry/line/line-geometry';\nimport { getPoint } from '../../geometry/line/get-point.function';\nimport { getMeasure } from '../../geometry/line/get-measure.function';\nimport { WGS_84_SRID } from '../../geometry/geometry.constants';\nimport { Cloneable } from '../../core/clone/cloneable';\nimport { clone } from '../../core/clone/clone.function';\n\n\nexport class NetworkFeature extends LrsFeature implements Cloneable<NetworkFeature> {\n  layer: NetworkLayer;\n\n  constructor(feature: Feature, layer: NetworkLayer, spatialReferenceId = WGS_84_SRID) {\n    super(feature, layer, spatialReferenceId);\n\n    this.routeId = this.getValue(layer.compositeRouteIdFieldName);\n    this.displayValue = this.displayValue || this.routeId;\n    this.setMeasureFromGeometry();\n  }\n\n  static create(\n    layer: NetworkLayer,\n    properties: { [name: string]: any; } = {},\n    geometry: LineString | MultiLineString = null\n  ): NetworkFeature {\n    const feature: Feature = toFeature(properties, geometry as Geometry);\n    return new NetworkFeature(feature, layer);\n  }\n\n  getMeasure(point: SinglePoint): number {\n    return getMeasure(this.geometry as LineGeometry, point);\n  }\n\n  getPoint(measure: number): SinglePoint {\n    return getPoint(this.geometry as LineGeometry, measure);\n  }\n\n  clone(): NetworkFeature {\n    const copyFeature = clone(this.toFeature());\n    return new NetworkFeature(copyFeature, this.layer);\n  }\n}\n","// 3rd Party.\nimport { FeatureCollection, BBox } from 'geojson';\n\n// TSS>\nimport { LrsFeature } from './lrs-feature';\n\n\nexport class LrsFeatureCollection implements FeatureCollection {\n  type: 'FeatureCollection';\n  features: Array<LrsFeature>;\n  bbox?: BBox;\n\n  constructor(collection: FeatureCollection) {\n    this.bbox = collection.bbox;\n    this.type = collection.type;\n  }\n\n  static create(features: LrsFeature[], bbox?: BBox): LrsFeatureCollection {\n    return new LrsFeatureCollection({\n      type: 'FeatureCollection',\n      features,\n      bbox\n    });\n  }\n\n  toGeoJson(): FeatureCollection {\n    return {\n      type: 'FeatureCollection',\n      bbox: this.bbox,\n      features: this.features.map(feature => feature.toGeoJson())\n    };\n  }\n}\n","// 3rd Party.\nimport { FeatureCollection } from 'geojson';\n\n// TSS>\nimport { LrsFeatureCollection } from '../lrs-feature-collection';\nimport { EventFeature } from './event-feature';\nimport { EventLayer } from './event-layer';\nimport { WGS_84_SRID } from '../../geometry/geometry.constants';\n\n\nexport class EventFeatureCollection extends LrsFeatureCollection {\n  type: 'FeatureCollection';\n  features: Array<EventFeature>;\n\n  constructor(collection: FeatureCollection, layer: EventLayer, spatialReferenceId = WGS_84_SRID) {\n    super(collection);\n    this.features = collection.features\n      .map(f => new EventFeature(f, layer, spatialReferenceId));\n  }\n\n  static fromFeatures(layer: EventLayer, ...features: EventFeature[]): EventFeatureCollection {\n    return new EventFeatureCollection({\n      type: 'FeatureCollection',\n      features\n    }, layer);\n  }\n}\n","import { FeatureCollection } from 'geojson';\nimport { NetworkFeature } from './network-feature';\nimport { LrsFeatureCollection } from '../lrs-feature-collection';\nimport { NetworkLayer } from './network-layer';\nimport { WGS_84_SRID } from '../../geometry/geometry.constants';\n\n\nexport class NetworkFeatureCollection extends LrsFeatureCollection {\n  type: 'FeatureCollection';\n  features: Array<NetworkFeature>;\n\n  constructor(collection: FeatureCollection, layer: NetworkLayer, spatialReferenceId = WGS_84_SRID) {\n    super(collection);\n    this.features = collection.features\n      .map(f => new NetworkFeature(f, layer, spatialReferenceId));\n  }\n}\n","import { HttpHeaders, HttpParams } from '@angular/common/http';\nimport { EsriQueryResponseFormat } from './esri-response-format';\nimport { toFormDataString } from '../http/to-form-data-string.function';\nimport { isValue } from '../core/type-check/is-value.function';\n\n\nexport interface AngularHttpOption {\n  headers?: HttpHeaders;\n  observe?: 'body';\n  params?: HttpParams;\n  reportProgress?: boolean;\n  responseType?: 'json';\n  withCredentials?: boolean;\n}\n\nexport function getEsriMapServiceHttOptions(params?: HttpParams, format: EsriQueryResponseFormat = 'json'): AngularHttpOption {\n  const headers = new HttpHeaders();\n  params = params || new HttpParams();\n\n  if (format) {\n    params = params.set('f', format);\n  }\n\n  headers.append('Content-Type', 'application/json');\n  headers.append('Access-Control-Allow-Origin', '*');\n\n  const httpOptions = {\n    withCredentials: true,\n    headers,\n    params,\n  };\n\n  return httpOptions;\n}\n\nexport function addParamsToHttpOptions(httpOption: AngularHttpOption, params: {}): void {\n  Object\n    .keys(params)\n    .filter(key => isValue(params[key]))\n    .forEach(key => {\n      const value = params[key];\n      httpOption.params = httpOption.params.set(key, toFormDataString(value, false));\n    });\n}\n","import { toFormDataString } from './to-form-data-string.function';\n\n\nexport function toFormData(queryParameters: {}): FormData {\n  const formData: FormData = new FormData();\n  Object.keys(queryParameters)\n    .map(key => ({\n      key,\n      value: toFormDataString(queryParameters[key])\n    }))\n    .forEach(keyValue => formData.append(keyValue.key, keyValue.value));\n\n  return formData;\n}\n","import { EsriPortalAuthRedirectOptions } from './portal/esri-portal-auth-redirect-options';\n\n\n// Server identifiers.\nexport const MAP_SERVER_SERVICE_MATCH_IDENTIFIER = /(\\/MapServer$|\\/MapServer\\/)/;\nexport const MAP_SERVER_SERVICE_IDENTIFIER = /(MapServer|MapServer\\/)$/;\nexport const FEATURE_SERVER_SERVICE_IDENTIFIER = /(FeatureServer|FeatureServer\\/)$/;\nexport const IMAGE_SERVER_SERVICE_IDENTIFIER = /(ImageServer|ImageServer\\/)$'/;\n\nexport const FEATURE_SERVER_LAYER_SERVICE_IDENTIFIER = /FeatureServer\\/(\\d+|\\d+\\/)$/;\nexport const MAP_SERVER_LAYER_SERVICE_MATCH_IDENTIFIER = /(\\/MapServer\\/(\\d+|\\d+\\/)|\\/MapServer\\/(\\d+|\\d+\\/)\\/)/;\nexport const MAP_SERVER_LAYER_SERVICE_IDENTIFIER = /MapServer\\/(\\d+|\\d+\\/)$/;\n\nexport const LRS_SERVER_SERVICE_IDENTIFIER = /(MapServer\\/exts\\/LRSServer|MapServer\\/exts\\/LRSServer\\/)$/;\nexport const LRS_SERVER_LAYERS_SERVICE_IDENTIFIER = /(MapServer\\/exts\\/LRSServer\\/layers|MapServer\\/exts\\/LRSServer\\/layers\\/)$/;\n\n// Map endpoints.\nexport const MAP_LAYERS_SERVICE_ENDPOINT = 'layers';\nexport const MAP_LAYER_SERVICE_ENDPOINT = '{layerId}';\nexport const MAP_LAYER_QUERY_SERVICE_ENDPOINT = '{layerId}/query';\nexport const MAP_LAYER_QUERY_RELATED_RECORDS_SERVICE_ENDPOINT = 'layers/{layerId}/queryRelatedRecords';\n\n// LRS endpoints.\nexport const LRS_SERVER_META_ENDPOINT = 'exts/LRSServer';\nexport const LRS_LAYERS_SERVICE_ENDPOINT = 'exts/LRSServer/layers';\nexport const LRS_SERVER_APPLY_EDITS_ENDPOINT = 'exts/LRSServer/applyEdits';\n\n// Network endpoints.\nexport const LRS_GEOMETRY_TO_MEASURE = 'exts/LRSServer/networkLayers/{layerId}/geometryToMeasure';\n\n// Portal.\nexport const PORTAL_SHARING_ENDPOINT = 'sharing';\nexport const PORTAL_OAUTH_AUTHORIZE_ENDPOINT = 'sharing/oauth2/authorize';\nexport const PORTAL_OAUTH_TOKEN_ENDPOINT = 'sharing/rest/oauth2/token';\nexport const PORTAL_GENERATE_TOKEN_ENDPOINT = 'sharing/generateToken';\n\nexport const PORTAL_REDIRECT_URL_PARAMS_BREAK_CHARACTER = '#';\nexport const DEFAULT_PORTAL_OAUTH_REDIRECT_OPTIONS: EsriPortalAuthRedirectOptions = {\n  responseType: 'token',\n  urlParamsBreak: PORTAL_REDIRECT_URL_PARAMS_BREAK_CHARACTER,\n  redirectUrl: window.location.href\n};\n","import { EsriMapServiceGeometryToMeasureOptions } from './esri-geometry-to-measure-options';\n\nexport const DEFAULT_GEOMETRY_TO_MEASURE_OPTIONS: EsriMapServiceGeometryToMeasureOptions = {\n  locations: [],\n  inSR: 4326,\n  outSR: 4326,\n  f: 'json'\n};\n","import { EsriMapServiceGeometryToMeasureOptions } from './esri-geometry-to-measure-options';\nimport { DEFAULT_GEOMETRY_TO_MEASURE_OPTIONS } from './geometry-to-measure.constants';\nimport { isDate } from 'util';\nimport { toUtcEpochDate } from '../../core/date-time/conversion/to-utc-epoch-date.function';\n\n\nexport function getGeometryToMeasureOptions(...options: EsriMapServiceGeometryToMeasureOptions[]) {\n  const mergedOption = Object.assign({}, DEFAULT_GEOMETRY_TO_MEASURE_OPTIONS);\n  (options || [])\n    .forEach(option => Object.assign(mergedOption, option));\n\n  if (isDate(mergedOption.temporalViewDate)) {\n    mergedOption.temporalViewDate = toUtcEpochDate(mergedOption.temporalViewDate as Date);\n  }\n\n  return mergedOption;\n}\n","import { EsriMapServiceQueryOptions } from './esi-map-service-query-options';\nimport { WGS_84_SRID } from '../../geometry/geometry.constants';\n\n\nexport const DEFAULT_MAP_QUERY_OPTIONS: EsriMapServiceQueryOptions = {\n  // mapServiceUrl: '',\n  // layerId: '',\n  where: '1=1',\n  text: '',\n  objectIds: '',\n  time: '',\n  geometry: '',\n  geometryType: 'esriGeometryEnvelope',\n  spatialRel: 'esriSpatialRelIntersects',\n  relationParam: '',\n  outFields: '*',\n  returnGeometry: true,\n  returnTrueCurves: false,\n  maxAllowableOffset: '',\n  geometryPrecision: '',\n  inSR: WGS_84_SRID,\n  outSR: WGS_84_SRID,\n  returnIdsOnly: false,\n  returnCountOnly: false,\n  orderByFields: '',\n  groupByFieldsForStatistics: '',\n  outStatistics: '',\n  returnZ: false,\n  returnM: true,\n  gdbVersion: '',\n  returnDistinctValues: false,\n  resultOffset: '',\n  resultRecordCount: '',\n  queryByDistance: '',\n  returnExtentsOnly: false,\n  datumTransformation: '',\n  parameterValues: '',\n  rangeValues: '',\n  f: 'geojson'\n};\n","import { DEFAULT_MAP_QUERY_OPTIONS } from './esri-query.constants';\nimport { EsriMapServiceQueryOptions } from './esi-map-service-query-options';\n\n\nexport function getMapQueryOptions(...options: EsriMapServiceQueryOptions[]) {\n  const mergedOption = Object.assign({}, DEFAULT_MAP_QUERY_OPTIONS);\n  (options || [])\n    .forEach(option => Object.assign(mergedOption, option));\n\n  return mergedOption;\n}\n","// Angular.\nimport { HttpParams } from '@angular/common/http';\n\n// TSS.\nimport { EsriMapServiceQueryOptions } from './esi-map-service-query-options';\nimport { isValue } from '../../core/type-check/is-value.function';\n\n\nexport function toHttpQueryParams(options: EsriMapServiceQueryOptions, httpParams?: HttpParams) {\n  httpParams = httpParams || new HttpParams();\n  Object.keys(options)\n    .forEach(k => {\n      const value = options[k];\n      if (isValue(value)) {\n        httpParams = httpParams.set(k, value);\n      }\n    });\n\n  return httpParams;\n}\n","import { EsriMapServiceQueryOptions } from './query/esi-map-service-query-options';\nimport { LrsLayer } from '../lrs/lrs-layer';\n\n/**\n * NOTE: There is a bug in ArcGIS Server < v10.5.0 which requies that you do not pass a\n * 'gdbVersion' if that version name is the same version that the layer is published in.\n * We need to strip that GDB version when this occurs.\n */\nexport function tryStripGdbVersion(layer: LrsLayer, options?: EsriMapServiceQueryOptions) {\n  if (layer\n    && options\n    && layer.versionName\n    && options.gdbVersion\n    && layer.versionName.toLowerCase() === options.gdbVersion.toLowerCase()) {\n    options.gdbVersion = undefined;\n  }\n}\n","import { MapLayer } from './map-layer';\nimport { isNumber } from '../core/type-check/is-number.function';\n\n\nexport function toLayerId(layer: MapLayer | number): number {\n  return isNumber(layer) ? layer as number : (layer as MapLayer).id;\n}\n","import { MapLayer } from '../maps/map-layer';\nimport { toLayerId } from '../maps/to-layer-id.function';\nimport { joinAndFomat } from '../core/url/join-and-format.function';\n\n\nexport function joinAndFomatWithLayer(layer: number | MapLayer, tokens: any, ...parts): string {\n  const layerId = toLayerId(layer);\n  return joinAndFomat(Object.assign({}, tokens, {\n    layerId\n  }), ...parts);\n}\n","import { LayerRendererSymbol } from './layer-renderer-symbol';\n\n\nexport function isClassBreakInfoEmpty(info: ClassBreakInfo): boolean {\n  return !info\n    || !info.classMaxValue\n    && !info.label\n    && !info.description\n    && !Object.keys(info.symbol || {}).length;\n}\n\n\nexport interface ClassBreakInfo {\n  symbol: LayerRendererSymbol;\n  label: string;\n  classMaxValue: number;\n  description?: string;\n}\n","import { LayerRendererSymbol } from './layer-renderer-symbol';\n\n\nexport function isUniqueValueInfoEmpty(info: UniqueValueInfo): boolean {\n  return !info\n    || !info.value\n    && !info.label\n    && !info.description\n    && !Object.keys(info.symbol || {}).length;\n}\n\nexport interface UniqueValueInfo {\n  symbol: LayerRendererSymbol;\n  value: string;\n  label: string;\n  description?: string;\n}\n","import { LayerRendererClassificationMethod, LayerRendererType } from './types';\nimport { ClassBreakInfo, isClassBreakInfoEmpty } from './class-break-info';\nimport { UniqueValueInfo, isUniqueValueInfoEmpty } from './unique-value-info';\nimport { LayerRendererSymbol } from './layer-renderer-symbol';\nimport { isArray } from '../../core/type-check/is-array.function';\nimport { rgbToHex } from '../../core/color/rgb-to-hex.function';\nimport { removeWhere } from '../../core/array/remove-where.function';\n\n\nexport const DEFAULT_UNIQUE_VALUE_INFO = null;\nexport const DEFAULT_CLASS_BREAK_VALUE_INFO = null;\nexport const DEFAULT_RENDERER_SYMBOL = {\n  type: 'esriSLS',\n  style: 'esriSLSSolid',\n  color: '#000000',\n  width: 2\n};\n\nexport function isRendererSymbolDefault(symbol: LayerRendererSymbol): boolean {\n  return Object.keys(symbol).length === Object.keys(DEFAULT_RENDERER_SYMBOL).length\n    && symbol.type === DEFAULT_RENDERER_SYMBOL.type\n    && symbol.style === DEFAULT_RENDERER_SYMBOL.style\n    && symbol.color === DEFAULT_RENDERER_SYMBOL.color\n    && symbol.width === DEFAULT_RENDERER_SYMBOL.width;\n}\n\nexport class LayerDrawingInfoRenderer {\n  type: LayerRendererType;\n  field1?: string;\n  field2?: string;\n  field3?: string;\n  fieldDelimiter?: string;\n  valueExpression?: string;\n  classificationMethod?: LayerRendererClassificationMethod;\n  minValue?: number;\n  classBreakInfos?: ClassBreakInfo[];\n  uniqueValueInfos?: UniqueValueInfo[];\n  label?: string;\n  defaultLabel?: string;\n  description?: string;\n  defaultSymbol?: LayerRendererSymbol;\n  symbol?: LayerRendererSymbol;\n\n  get isSimple(): boolean {\n    return this.type === 'simple';\n  }\n\n  get isUniqueValue(): boolean {\n    return this.type === 'uniqueValue';\n  }\n\n  get isClassBreak(): boolean {\n    return this.type === 'classBreaks';\n  }\n\n  get isEmpty(): boolean {\n    return !this.minValue\n      && !this.classBreakInfos.length\n      && !this.uniqueValueInfos.length\n      && isRendererSymbolDefault(this.symbol);\n  }\n\n  get field(): string {\n    return this.field1;\n  }\n\n  set field(value: string) {\n    this.field1 = value;\n  }\n\n  constructor(base?: LayerDrawingInfoRenderer) {\n    Object.assign(this, base);\n    this.type = this.type || 'simple';\n    this.minValue = this.minValue || 0;\n    this.classBreakInfos = this.classBreakInfos || [];\n    this.uniqueValueInfos = this.uniqueValueInfos || [];\n    this.symbol = Object.assign({}, DEFAULT_RENDERER_SYMBOL, this.symbol);\n    this.label = this.label || '';\n    this.description = this.description || '';\n\n    this.standardizeRenderSymbols();\n  }\n\n  getSymbol(value: string | number): LayerRendererSymbol | null {\n    let symbol = this.symbol || this.defaultSymbol;\n\n    if (this.isUniqueValue) {\n      const uniqueValueInfo = this.getUniqueValueInfoOrDefault(value);\n      symbol = isUniqueValueInfoEmpty(uniqueValueInfo) ? null : uniqueValueInfo.symbol;\n    } else if (this.isClassBreak) {\n      const classBreakInfo = this.getClassBreakInfoOrDefault(value);\n      symbol = isClassBreakInfoEmpty(classBreakInfo) ? null : classBreakInfo.symbol;\n    }\n\n    return symbol || this.defaultSymbol || null;\n  }\n\n  getUniqueValueInfo(value: string | number): UniqueValueInfo {\n    if (!this.uniqueValueInfos || !this.uniqueValueInfos.length) {\n      return null;\n    }\n\n    return this.uniqueValueInfos.find(info =>\n      info.value === value || String(info.value) === String(value)\n    );\n  }\n\n  getUniqueValueInfoOrDefault(value: string | number): UniqueValueInfo {\n    return this.getUniqueValueInfo(value) || DEFAULT_UNIQUE_VALUE_INFO;\n  }\n\n  getClassBreakInfo(classValue: string | number): ClassBreakInfo {\n    if (!this.classBreakInfos || !this.classBreakInfos.length) {\n      return null;\n    }\n\n    return this.classBreakInfos.find((value, index) => this.isValueInClassBreakRange(value, classValue, index));\n  }\n\n  getClassBreakInfoOrDefault(value: string | number): ClassBreakInfo {\n    return this.getClassBreakInfo(value) || DEFAULT_CLASS_BREAK_VALUE_INFO;\n  }\n\n  isValueInClassBreakRange(classBreakInfo: ClassBreakInfo, value: string | number, index: number): boolean {\n    const rangeMin = index === 0 ? this.minValue : this.classBreakInfos[index - 1].classMaxValue;\n    const rangeMax = classBreakInfo.classMaxValue;\n    return rangeMin < value && rangeMax > value;\n  }\n\n  clearEmptyInfos(): void {\n    removeWhere(this.uniqueValueInfos, info => isUniqueValueInfoEmpty(info));\n    removeWhere(this.classBreakInfos, info => isClassBreakInfoEmpty(info));\n  }\n\n  getBestRepresentativeColor(value?: string | number): string {\n    let symbol = this.defaultSymbol || this.symbol;\n    if (this.isUniqueValue && this.uniqueValueInfos.length) {\n      const foundInfo = this.getUniqueValueInfo(value);\n      symbol = foundInfo ? foundInfo.symbol : this.uniqueValueInfos[0].symbol;\n    } else if (this.isClassBreak && this.classBreakInfos.length) {\n      const foundInfo = this.getClassBreakInfo(value);\n      symbol = foundInfo ? foundInfo.symbol : this.classBreakInfos[0].symbol;\n    }\n\n    return symbol.color as string;\n  }\n\n  standardizeRenderSymbols(): void {\n    standardizeRenderSymbol(this.defaultSymbol);\n    standardizeRenderSymbol(this.symbol);\n    this.uniqueValueInfos.forEach(info => standardizeRenderSymbol(info.symbol));\n    this.classBreakInfos.forEach(info => standardizeRenderSymbol(info.symbol));\n  }\n}\n\nfunction standardizeRenderSymbol(symbol: LayerRendererSymbol): void {\n  if (!symbol) {\n    return;\n  }\n\n  if (isArray(symbol.color)) {\n    symbol.color = rgbToHex(symbol.color as [number, number, number]);\n  }\n\n  if (symbol.outline && isArray(symbol.outline.color)) {\n    symbol.outline.color = rgbToHex(symbol.outline.color as [number, number, number]);\n  }\n}\n","import { LayerDrawingInfoRenderer } from './layer-drawing-info-renderer';\nimport { LayerRendererSymbol } from './layer-renderer-symbol';\nimport { transparencyToOpacity } from '../../core/color/transparency-to-opacity.function';\n\nexport interface DrawingInfoProperties {\n  renderer?: LayerDrawingInfoRenderer;\n  transparency?: number;\n  positionRenderer?: LayerDrawingInfoRenderer;\n  labelingInfo?: any; // TODO: Add type for labeling info - RG.\n}\n\nexport class LayerDrawingInfo implements DrawingInfoProperties {\n  renderer: LayerDrawingInfoRenderer;\n  transparency: number;\n  zIndex: number | null;\n  positionRenderer: LayerDrawingInfoRenderer;\n  labelingInfo: any;\n\n  get isEmpty(): boolean {\n    return !this.transparency\n      && !this.zIndex\n      && this.renderer.isEmpty\n      && this.positionRenderer.isEmpty\n      && !Object.keys(this.labelingInfo || {}).length;\n  }\n\n  get opacity(): number {\n    return transparencyToOpacity(this.transparency);\n  }\n\n  constructor(...baseDrawingInfos: (LayerDrawingInfo | DrawingInfoProperties)[]) {\n    this.merge(...baseDrawingInfos);\n    this.transparency = this.transparency || 0;\n    this.zIndex = this.zIndex || null;\n    this.renderer = new LayerDrawingInfoRenderer(this.renderer);\n    this.positionRenderer = new LayerDrawingInfoRenderer(this.positionRenderer);\n    this.labelingInfo = this.labelingInfo || null;\n  }\n\n  merge(...targetDrawingInfos: (LayerDrawingInfo | DrawingInfoProperties)[]): this {\n    const properties = targetDrawingInfos.map(info =>\n      info && (info as LayerDrawingInfo).toProperties\n        ? (info as LayerDrawingInfo).toProperties()\n        : info\n    );\n\n    Object.assign(this, ...properties);\n    return this;\n  }\n\n  getRendererSymbol(value?: string | number): LayerRendererSymbol {\n    return this.renderer.getSymbol(value);\n  }\n\n  getPositionRendererSymbol(value?: string | number): LayerRendererSymbol {\n    return this.positionRenderer.getSymbol(value);\n  }\n\n  getBestRepresentativeColor(value?: string | number): string {\n    return this.renderer.getBestRepresentativeColor(value);\n  }\n\n  toProperties(): DrawingInfoProperties {\n    const infoProperties: DrawingInfoProperties = {};\n    if (this.labelingInfo) {\n      infoProperties.labelingInfo = this.labelingInfo;\n    }\n\n    if (this.positionRenderer && !this.positionRenderer.isEmpty) {\n      infoProperties.positionRenderer = this.positionRenderer;\n    }\n\n    if (this.renderer && !this.renderer.isEmpty) {\n      infoProperties.renderer = this.renderer;\n    }\n\n    if (this.transparency) {\n      infoProperties.transparency = this.transparency;\n    }\n\n    return infoProperties;\n  }\n}\n","import { MapLayerType, QueryType, MapLayer } from './map-layer';\nimport { LayerRelationship } from './layer-relationship';\nimport { LayerField, getFieldAlias, getField, LayerFieldDomain } from './fields/layer-field';\nimport { LayerIndex } from './layer-index';\nimport { GeometryExtent } from './geometry-extent';\nimport { LayerDrawingInfo } from './drawing/layer-drawing-info';\nimport { StyleableLayer } from './drawing/styleable-layer';\nimport { Cloneable } from '../core/clone/cloneable';\nimport { clone } from '../core/clone/clone.function';\n\n\nexport type GeometryType = 'point' | 'esriGeometryPoint'\n  | 'line' | 'esriGeometryPolyline'\n  | 'polygon' | 'esriGeometryPolygon';\n\nexport const POINT_GEOMETRY_TYPES: GeometryType[] = ['point', 'esriGeometryPoint'];\nexport const LINEAR_GEOMETRY_TYPES: GeometryType[] = ['line', 'esriGeometryPolyline'];\nexport const POLYGON_GEOMETRY_TYPES: GeometryType[] = ['polygon', 'esriGeometryPolygon'];\n\nexport function isPointGeometryType(geometryType: GeometryType) {\n  return POINT_GEOMETRY_TYPES.indexOf(geometryType) > -1;\n}\n\nexport function isLinearGeometryType(geometryType: GeometryType) {\n  return LINEAR_GEOMETRY_TYPES.indexOf(geometryType) > -1;\n}\n\nexport function isPolygonGeometryType(geometryType: GeometryType) {\n  return POLYGON_GEOMETRY_TYPES.indexOf(geometryType) > -1;\n}\n\nexport class FeatureClassLayer implements MapLayer, StyleableLayer, Cloneable<FeatureClassLayer> {\n  id: number;\n  name?: string;\n  type?: MapLayerType;\n  parentLayer?: number;\n  subLayers?: { id: string, name: string }[];\n  description?: string;\n  hasAttachments?: boolean;\n  currentVersion?: number;\n  geometryType?: GeometryType;\n  sourceSpatialReference?: { wkid: number, latestWkid?: number };\n  minScale?: number;\n  maxScale?: number;\n  extent?: GeometryExtent;\n  displayField?: string;\n  typeIdField?: string;\n  fields?: LayerField[];\n  indexes?: LayerIndex[];\n  relationships?: LayerRelationship[];\n  maxRecordCount?: number;\n  supportsStatistics?: boolean;\n  supportsAdvancedQueries?: boolean;\n  hasZ?: boolean;\n  hasM?: boolean;\n  supportedQueryFormats?: QueryType[];\n  supportsDatumTransformation?: boolean;\n  isDataVersioned?: boolean;\n  drawingInfo?: LayerDrawingInfo;\n  order?: number;\n\n  get isPoint(): boolean {\n    return isPointGeometryType(this.geometryType);\n  }\n\n  get isLinear(): boolean {\n    return isLinearGeometryType(this.geometryType);\n  }\n\n  get isPolygon(): boolean {\n    return isPolygonGeometryType(this.geometryType);\n  }\n\n  get displayFieldAlias(): string {\n    return this.getFieldAlias(this.displayField);\n  }\n\n  constructor(...sources: MapLayer[]) {\n    Object.assign(this, ...sources);\n\n    this.subLayers = this.subLayers || [];\n    this.fields = this.fields || [];\n    this.indexes = this.indexes || [];\n    this.relationships = this.relationships || [];\n    this.supportedQueryFormats = this.supportedQueryFormats || [];\n    this.drawingInfo = new LayerDrawingInfo(this.drawingInfo);\n  }\n\n  getField(fieldName: string): LayerField | null {\n    return getField(fieldName, this.fields);\n  }\n\n  getFieldAlias(fieldName: string): string | null {\n    return getFieldAlias(fieldName, this.fields);\n  }\n\n  applyFieldDomains(domains: LayerFieldDomain[]): this {\n    if (domains.length) {\n      this.fields\n        .filter(f => f.domainName)\n        .forEach(field =>\n          field.domain = domains.find(domain => domain.name === field.domainName) || field.domain\n        );\n    }\n\n    return this;\n  }\n\n  clone(): FeatureClassLayer {\n    const copy = clone(this);\n    return new FeatureClassLayer(copy);\n  }\n}\n","// Angular.\nimport { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n// 3rd Party.\nimport { Observable } from 'rxjs';\nimport { map, tap } from 'rxjs/operators';\n\n// TSS.\nimport { Logger } from '../core/logging/logger.service';\n\nimport { NetworkFeature } from '../lrs/networks/network-feature';\nimport { NetworkLayer } from '../lrs/networks/network-layer';\nimport { EventLayer } from '../lrs/events/event-layer';\nimport { LrsMetadata } from '../lrs/lrs-metadata';\nimport { EventFeature } from '../lrs/events/event-feature';\nimport { EventFeatureCollection } from '../lrs/events/event-feature-collection';\nimport { NetworkFeatureCollection } from '../lrs/networks/network-feature-collection';\n\nimport { MapServerMetadata } from '../maps/map-server-metadata';\nimport { CriteriaOperator } from '../maps/where-clause-builder';\n\nimport { EsriMapServiceQueryOptions } from './query/esi-map-service-query-options';\nimport { EsriConfig } from './esri-config';\nimport { getEsriMapServiceHttOptions, AngularHttpOption, addParamsToHttpOptions } from './esri-map-service-request';\nimport { EsriMapServiceErrorResponse } from './esri-map-server-error-response';\nimport { FeatureCollection } from 'geojson';\n\nimport { MapLayer } from '../maps/map-layer';\nimport { LayerField, toFieldName } from '../maps/fields/layer-field';\nimport { DataSourceConfig } from '../data-source/data-source-config';\nimport { GeodatbaseVersion } from '../maps/geodatabase-version';\nimport { LrsInfo } from '../lrs/lrs-info';\nimport { EsriApplyEditsResponse } from './lrs-server/esri-apply-edits-response';\nimport { EsriEventEdits } from './lrs-server/esri-event-edits';\nimport { toFormData } from '../http/to-form-data.function';\nimport {\n  MAP_LAYERS_SERVICE_ENDPOINT,\n  LRS_LAYERS_SERVICE_ENDPOINT,\n  MAP_LAYER_QUERY_SERVICE_ENDPOINT,\n  LRS_SERVER_META_ENDPOINT,\n  LRS_SERVER_APPLY_EDITS_ENDPOINT,\n  LRS_GEOMETRY_TO_MEASURE,\n  MAP_LAYER_SERVICE_ENDPOINT\n} from './esri.constants';\nimport { EsriMapServiceGeometryToMeasureOptions } from './geometry-to-measure/esri-geometry-to-measure-options';\nimport { getGeometryToMeasureOptions } from './geometry-to-measure/get-geometry-to-measure-options.function';\nimport { EsriGeometryToMeasureResult } from './geometry-to-measure/esri-geometry-to-measure-result';\nimport { getMapQueryOptions } from './query/get-map-query-options.function';\nimport { toHttpQueryParams } from './query/to-http-query-params.function';\nimport { tryStripGdbVersion } from './try-strip-gdb-version.function';\nimport { toLayerId } from '../maps/to-layer-id.function';\nimport { BaseEsriService } from './base-esri.service';\nimport { joinAndFomatWithLayer } from './join-and-format-with-layer.function';\nimport { join } from '../core/url/join.function';\nimport { format } from '../core/formatting/format.function';\nimport { FeatureClassLayer } from '../maps/feature-class-layer';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EsriMapServerService extends BaseEsriService {\n  constructor(http: HttpClient, config: EsriConfig, dataConfig: DataSourceConfig, log: Logger) {\n    super(http, config, dataConfig, log);\n  }\n\n  /**\n   * Retrieves the map service metadata for all layers.\n   */\n  getMapLayers(serviceUrl: string): Observable<MapServerMetadata> {\n    const url = join(serviceUrl, MAP_LAYERS_SERVICE_ENDPOINT);\n    return this.http\n      .get<MapServerMetadata>(url, getEsriMapServiceHttOptions())\n      .pipe(\n        tap((response: any) => this.handleEsriResponseError(response, serviceUrl))\n      );\n  }\n\n  /**\n   * Retrieves the map service metadata for a given layer (by it's ID).\n   */\n  getMapLayer(serviceUrl: string, layerId: number): Observable<FeatureClassLayer> {\n    const url = joinAndFomatWithLayer(layerId, {}, serviceUrl, MAP_LAYER_SERVICE_ENDPOINT);\n    return this.http\n      .get<FeatureClassLayer>(url, getEsriMapServiceHttOptions())\n      .pipe(\n        tap((response: any) => this.handleEsriResponseError(response, serviceUrl)),\n        map(mapLayerMetadata => new FeatureClassLayer(mapLayerMetadata))\n      );\n  }\n\n  /**\n   * Retrieves the LRS Layers Metadata information from the map service\n   */\n  getLrsLayers(serviceUrl: string): Observable<LrsMetadata> {\n    const url = join(serviceUrl, LRS_LAYERS_SERVICE_ENDPOINT);\n    return this.http\n      .get<LrsMetadata>(url, getEsriMapServiceHttOptions())\n      .pipe(\n        tap((response: any) => this.handleEsriResponseError(response, serviceUrl))\n      );\n  }\n\n  /**\n   * Retrieves the LRS Server Metadata information from the map service\n   */\n  getLrsServer(serviceUrl: string): Observable<LrsMetadata> {\n    const url = join(serviceUrl, LRS_SERVER_META_ENDPOINT);\n    return this.http\n      .get<LrsMetadata>(url, getEsriMapServiceHttOptions())\n      .pipe(\n        tap((response: any) => this.handleEsriResponseError(response, serviceUrl))\n      );\n  }\n\n  getVersions(serviceUrl: string, lrsId?: string): Observable<GeodatbaseVersion[]> {\n    return this.getLrsServer(serviceUrl)\n      .pipe(\n        map((metadata: LrsMetadata) => {\n          let lrs: LrsInfo = metadata ? metadata.lrs[0] : null;\n          if (!lrs) {\n            throw new Error(`No LRS infos found`);\n          }\n\n          if (lrsId) {\n            lrs = metadata.lrs.find(lrsInfo => lrsInfo.id === lrsId);\n            if (!lrs) {\n              throw new Error(`No LRS info found with ID '${lrsId}'`);\n            }\n          }\n\n          return lrs.versions;\n        })\n      );\n  }\n\n  singleGeometryToMeasure(\n    serviceUrl: string,\n    networkLayerId: number,\n    routeId: string,\n    x: number,\n    y: number,\n    viewDate?: Date,\n    inSpatialReferenceId = 4326,\n    outputSpatialReferenceId = 4326\n  ): Observable<{ m: number, x: number, y: number, z?: number }> {\n    const locations = [\n      { routeId, geometry: { x, y } }\n    ];\n\n    return this.geometryToMeasure(serviceUrl, networkLayerId, {\n      locations,\n      temporalViewDate: viewDate,\n      inSR: inSpatialReferenceId,\n      outSR: outputSpatialReferenceId,\n    })\n      .pipe(\n        map(result => {\n          const match = { m: null, x: null, y: null, z: null };\n          if (result.locations.length && result.locations[0].results.length) {\n            const [found] = result.locations[0].results;\n            match.m = found.measure;\n            match.x = found.geometry.x;\n            match.y = found.geometry.y;\n          }\n\n          return match;\n        })\n      );\n  }\n\n  geometryToMeasure(\n    serviceUrl: string,\n    networkLayerId: number,\n    options: EsriMapServiceGeometryToMeasureOptions\n  ): Observable<EsriGeometryToMeasureResult> {\n    const endpoint = format(LRS_GEOMETRY_TO_MEASURE, { layerId: networkLayerId });\n    const url = join(serviceUrl, endpoint);\n    const httpOption: AngularHttpOption = getEsriMapServiceHttOptions();\n    const serviceOptions = getGeometryToMeasureOptions(options);\n    const useGetMethod = !this.shouldUsePostMethod(serviceOptions);\n\n    if (useGetMethod) {\n      addParamsToHttpOptions(httpOption, serviceOptions);\n    }\n\n    return (\n      useGetMethod\n        ? this.http.get<EsriGeometryToMeasureResult>(url, httpOption)\n        : this.http.post<EsriGeometryToMeasureResult>(url, toFormData(serviceOptions), httpOption)\n    )\n      .pipe(\n        tap(response => this.handleEsriResponseError(response, serviceUrl)),\n      );\n  }\n\n  applyEdits(serviceUrl: string, edits: EsriEventEdits[], gdbVersion?: string): Observable<EsriApplyEditsResponse> {\n    const url = join(serviceUrl, LRS_SERVER_APPLY_EDITS_ENDPOINT);\n    const options = getEsriMapServiceHttOptions();\n    const useGetMethod = !this.shouldUsePostMethod(edits);\n\n    if (useGetMethod) {\n      options.params = options.params\n        .set('edits', JSON.stringify(edits))\n        .set('gdbVersion', gdbVersion);\n    }\n\n    return (\n      useGetMethod\n        ? this.http.get<EsriApplyEditsResponse>(url, options)\n        : this.http.post<EsriApplyEditsResponse>(url, toFormData({ edits, gdbVersion }), options)\n    )\n      .pipe(\n        tap(response => this.handleEsriResponseError(response, serviceUrl)),\n      );\n  }\n\n  getUniqueValues<T>(\n    serviceUrl: string,\n    layer: MapLayer | number,\n    field: string | LayerField,\n    options?: EsriMapServiceQueryOptions\n  ): Observable<T[]> {\n    const fieldName = toFieldName(field);\n    const queryOptions: EsriMapServiceQueryOptions = getMapQueryOptions({\n      outFields: fieldName,\n      returnDistinctValues: true,\n      returnGeometry: false,\n    }, options);\n\n    return this.query(serviceUrl, toLayerId(layer), queryOptions)\n      .pipe(\n        map(collection => {\n          return collection.features.map(f => f.properties[fieldName]);\n        })\n      );\n  }\n\n  getQueryCount(\n    serviceUrl: string,\n    layer: MapLayer | number,\n    whereClause: string,\n    options?: EsriMapServiceQueryOptions\n  ): Observable<number> {\n    const queryOptions: EsriMapServiceQueryOptions = getMapQueryOptions({\n      returnCountOnly: true,\n      returnGeometry: false,\n      where: whereClause,\n    }, options);\n\n    return this.query(serviceUrl, toLayerId(layer), queryOptions)\n      .pipe(\n        map((result: any) => {\n          return (result || { count: 0 }).count;\n        })\n      );\n  }\n\n  getEvent(\n    serviceUrl: string,\n    layer: EventLayer,\n    eventId: string | number,\n    options?: EsriMapServiceQueryOptions\n  ): Observable<EventFeature> {\n    tryStripGdbVersion(layer, options);\n    throw new Error('Not implemented yet');\n  }\n\n  queryEvents(\n    serviceUrl: string,\n    layer: EventLayer,\n    routeId: string | number,\n    fromMeasure: number,\n    toMeasure: number,\n    viewDate?: Date,\n    options?: EsriMapServiceQueryOptions\n  ): Observable<EventFeatureCollection> {\n    tryStripGdbVersion(layer, options);\n    const where = this.getWhereBuilder()\n      .withEventLayer(layer)\n      .withRouteId(routeId)\n      .withViewDate(viewDate)\n      .betweenMeasures(fromMeasure, toMeasure)\n      .toWhereClause();\n\n    const queryOptions: EsriMapServiceQueryOptions = getMapQueryOptions({ where, returnGeometry: false }, options);\n\n    return this\n      .query(serviceUrl, layer.id, queryOptions)\n      .pipe(\n        map(featureCollection => new EventFeatureCollection(featureCollection, layer))\n      );\n  }\n\n  searchEventsByText(\n    serviceUrl: string,\n    layer: EventLayer,\n    searchText: string,\n    options?: EsriMapServiceQueryOptions\n  ): Observable<EventFeatureCollection> {\n    return this.searchByText(serviceUrl, layer.id, searchText, options)\n      .pipe(\n        tap(response => this.handleEsriResponseError(response, serviceUrl)),\n        map(featureCollection => new EventFeatureCollection(featureCollection, layer))\n      );\n  }\n\n  getRoute(\n    serviceUrl: string,\n    routeId: string | number,\n    layer: NetworkLayer,\n    viewDate?: Date,\n    options?: EsriMapServiceQueryOptions\n  ): Observable<NetworkFeature> {\n    tryStripGdbVersion(layer, options);\n    const where = this.getWhereBuilder()\n      .withNetworkLayer(layer)\n      .where(layer.compositeRouteIdFieldName, CriteriaOperator.Equals, routeId)\n      .withViewDate(viewDate)\n      .toWhereClause();\n\n    const queryOptions: EsriMapServiceQueryOptions = getMapQueryOptions({\n      where\n    }, options);\n\n    return this\n      .query(serviceUrl, layer.id, queryOptions)\n      .pipe(\n        map(x => {\n          return x && x.features && x.features.length\n            ? new NetworkFeature(x.features[0], layer)\n            : null;\n        })\n      );\n  }\n\n  queryRoutes(\n    serviceUrl: string,\n    layer: NetworkLayer,\n    whereClause: string,\n    options?: EsriMapServiceQueryOptions\n  ): Observable<NetworkFeatureCollection> {\n    const queryOptions: EsriMapServiceQueryOptions = getMapQueryOptions({\n      where: whereClause\n    }, options);\n\n    return this.query(serviceUrl, layer.id, queryOptions)\n      .pipe(\n        map(featureCollection => new NetworkFeatureCollection(featureCollection, layer, options.outSR))\n      );\n  }\n\n  searchRoutesByText(\n    serviceUrl: string,\n    layer: NetworkLayer,\n    searchText: string,\n    options?: EsriMapServiceQueryOptions\n  ): Observable<NetworkFeatureCollection> {\n    return this.searchByText(serviceUrl, layer.id, searchText, options)\n      .pipe(\n        map(featureCollection => new NetworkFeatureCollection(featureCollection, layer))\n      );\n  }\n\n  searchByText(\n    serviceUrl: string,\n    layerId: number | MapLayer,\n    searchText: string,\n    options?: EsriMapServiceQueryOptions\n  ): Observable<FeatureCollection> {\n    const queryOptions: EsriMapServiceQueryOptions = getMapQueryOptions({\n      text: searchText\n    }, options);\n\n    // The where clause must be deleted because if a where clause is specified it will override the search text.\n    delete queryOptions.where;\n\n    return this.query(serviceUrl, layerId, queryOptions);\n  }\n\n  query(serviceUrl: string, layerId: number | MapLayer, options: EsriMapServiceQueryOptions): Observable<FeatureCollection> {\n    const url = joinAndFomatWithLayer(layerId, options, serviceUrl, MAP_LAYER_QUERY_SERVICE_ENDPOINT);\n    const httpOption = getEsriMapServiceHttOptions();\n    const usePostMethod = this.shouldUsePostMethod(options.where);\n\n    if (!usePostMethod) {\n      httpOption.params = toHttpQueryParams(options, httpOption.params);\n    }\n\n    const source = usePostMethod\n      ? this.http.post<FeatureCollection>(url, options, httpOption)\n      : this.http.get<FeatureCollection>(url, httpOption);\n\n    return source.pipe(\n      map((response: FeatureCollection | EsriMapServiceErrorResponse) => {\n        this.handleEsriResponseError(response, url);\n        return response as FeatureCollection;\n      })\n    );\n  }\n}\n","import { FEATURE_SERVER_LAYER_SERVICE_IDENTIFIER } from '../esri.constants';\n\n\nexport function isFeatureServerLayerUrl(url: string): boolean {\n  return FEATURE_SERVER_LAYER_SERVICE_IDENTIFIER.test(url);\n}\n","import { FEATURE_SERVER_SERVICE_IDENTIFIER } from '../esri.constants';\n\n\nexport function isFeatureServerServiceUrl(url: string): boolean {\n  return FEATURE_SERVER_SERVICE_IDENTIFIER.test(url);\n}\n","import { MAP_SERVER_SERVICE_IDENTIFIER } from '../esri.constants';\n\n\nexport function isMapServerServiceUrl(url: string): boolean {\n  return MAP_SERVER_SERVICE_IDENTIFIER.test(url);\n}\n","import { LRS_SERVER_SERVICE_IDENTIFIER } from '../esri.constants';\n\n\nexport function isLrsServerServiceUrl(url: string): boolean {\n  return LRS_SERVER_SERVICE_IDENTIFIER.test(url);\n}\n","import { LRS_SERVER_LAYERS_SERVICE_IDENTIFIER } from '../esri.constants';\n\n\nexport function isLrsServerLayersServiceUrl(url: string): boolean {\n  return LRS_SERVER_LAYERS_SERVICE_IDENTIFIER.test(url);\n}\n","import { isMapServerServiceUrl } from './map-server/is-map-server-service-url';\nimport { isFeatureServerServiceUrl } from './feature-server/is-feature-server-service-url';\nimport { isLrsServerServiceUrl } from './lrs-server/is-lrs-server-service-url.function';\nimport { isLrsServerLayersServiceUrl } from './lrs-server/is-lrs-server-layers-service-url.function';\n\n\nexport function isCacheableEsriServiceRoute(urlPattern: string, testUrl: string): boolean {\n  [testUrl] = (testUrl || '').split('?');\n  return Boolean(urlPattern\n    && testUrl\n    && new RegExp(urlPattern, 'gi').test(testUrl)\n    && isMapServerServiceUrl(testUrl)\n    || isFeatureServerServiceUrl(testUrl)\n    || isLrsServerServiceUrl(testUrl)\n    || isLrsServerLayersServiceUrl(testUrl)\n  );\n}\n","import { MAP_SERVER_LAYER_SERVICE_MATCH_IDENTIFIER } from '../esri.constants';\n\n\n/**\n * Extracts the layer ID from an ESRI map service URL.\n * @example\n * extractMapServerLayerId('http://my-service/ags/MapServer/123') // --> 123\n */\nexport function extractMapServerLayerId(serviceUrl: string): number | null {\n  let layerId: number = null;\n  let [, , layerIdPart] = (serviceUrl || '').split(MAP_SERVER_LAYER_SERVICE_MATCH_IDENTIFIER);\n\n  if (layerIdPart) {\n    layerIdPart = layerIdPart.replace('/', '');\n    layerId = Number(layerIdPart);\n  }\n\n  return layerId;\n}\n","import { MAP_SERVER_SERVICE_MATCH_IDENTIFIER } from '../esri.constants';\nimport { join } from '../../core/url/join.function';\n\n\n/**\n * Extracts the service ID from an ESRI map layer service URL.\n * @example\n * extractMapServerUrl('http://my-service/ags/MapServer/123') // --> 'http://my-service/ags/MapServer'\n */\nexport function extractMapServerUrl(serviceUrl: string): string {\n  const [base] = (serviceUrl || '').split(MAP_SERVER_SERVICE_MATCH_IDENTIFIER);\n  return base === serviceUrl\n    ? null\n    : join(base, 'MapServer');\n}\n","import { MAP_SERVER_LAYER_SERVICE_IDENTIFIER } from '../esri.constants';\n\n\nexport function isMapServerLayerUrl(url: string): boolean {\n  return MAP_SERVER_LAYER_SERVICE_IDENTIFIER.test(url);\n}\n","export function doesPathIncludePortalAccessCode(urlPath: string): boolean {\n  return urlPath.includes('code=');\n}\n","export function doesPathIncludePortalAccessToken(urlPath: string): boolean {\n  return urlPath.includes('access_token=') && urlPath.includes('expires_in=');\n}\n","import { PORTAL_SHARING_ENDPOINT } from '../esri.constants';\nimport { stripTrailingSlash } from '../../core/url/strip-trailing-slash.function';\n\n\nexport function getPortalUrl(portalUrlComponent: string): string {\n  const [basePortalUrl] = (portalUrlComponent || '').split(PORTAL_SHARING_ENDPOINT);\n  return basePortalUrl.endsWith('/')\n    ? stripTrailingSlash(basePortalUrl)\n    : basePortalUrl;\n}\n","import { EsriPortalAccessToken } from './esri-portal-access-token';\nimport { getPortalUrl } from './get-portal-url.function';\nimport { addSeconds } from '../../core/date-time/add/add-seconds.function';\n\n\nexport function toEsriPortalAccessToken(token: any, portalUrl?: string): EsriPortalAccessToken {\n  const portalToken: EsriPortalAccessToken = {\n    accessToken: token.access_token || token.accessToken || token.token || null,\n    refreshToken: token.refresh_token || token.refreshToken || null,\n    expiresIn: token.expires_in || token.expiresIn || 0,\n    isSecure: token.ssl || token.isSecure || false,\n    server: token.server || portalUrl || null,\n    username: token.username || null,\n    expires: token.expires || null\n  };\n\n  if (portalToken.expires) {\n    portalToken.expires = new Date(portalToken.expires);\n  }\n\n  if (portalToken.server) {\n    getPortalUrl(portalToken.server);\n  }\n\n  if (!portalToken.expires) {\n    portalToken.expires = addSeconds(portalToken.expiresIn, new Date());\n  }\n\n  return portalToken;\n}\n","import { EsriServerToken } from './esri-server-token';\n\n\nexport function toEsriServerToken(token: any): EsriServerToken {\n  const serverToken: EsriServerToken = {\n    token: token.token || null,\n    isSecure: token.ssl || token.isSecure || false,\n    expires: token.expires || 0\n  };\n\n  if (serverToken.expires) {\n    serverToken.expires = new Date(serverToken.expires);\n  }\n\n  return serverToken;\n}\n","import { PORTAL_REDIRECT_URL_PARAMS_BREAK_CHARACTER } from '../esri.constants';\n\n\nexport function removePortalAccessTokenFromHash(urlHash: string = window.location.hash): string {\n  const portalParamsStartIndex = urlHash.lastIndexOf(PORTAL_REDIRECT_URL_PARAMS_BREAK_CHARACTER);\n  const portaAaccessTokenHash = urlHash.substr(portalParamsStartIndex);\n\n  return urlHash.replace(portaAaccessTokenHash, '');\n}\n","// Angular.\nimport { Injectable } from '@angular/core';\nimport { HttpClient, HttpParams } from '@angular/common/http';\n\n// 3rd Party.\nimport { Observable } from 'rxjs';\nimport { tap, map } from 'rxjs/operators';\n\n// TSS.\nimport { getPortalUrl } from './get-portal-url.function';\nimport { getEsriMapServiceHttOptions, AngularHttpOption, addParamsToHttpOptions } from '../esri-map-service-request';\nimport { EsriServerToken } from '../esri-server-token';\nimport { EsriConfig } from '../esri-config';\nimport { DataSourceConfig } from '../../data-source/data-source-config';\nimport { BaseEsriService } from '../base-esri.service';\nimport { Logger } from '../../core/logging/logger.service';\nimport { EsriPortalAccessToken } from './esri-portal-access-token';\nimport { toFormData } from '../../http/to-form-data.function';\nimport { toEsriPortalAccessToken } from './to-esri-portal-access-token.function';\nimport { toEsriServerToken } from '../to-esri-server-token.function';\nimport {\n  PORTAL_GENERATE_TOKEN_ENDPOINT,\n  PORTAL_OAUTH_TOKEN_ENDPOINT\n} from '../esri.constants';\nimport { removePortalAccessTokenFromHash } from './remove-portal-access-token-from-hash.function';\nimport { join } from '../../core/url/join.function';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EsriPortalService extends BaseEsriService {\n  constructor(http: HttpClient, config: EsriConfig, dataConfig: DataSourceConfig, log: Logger) {\n    super(http, config, dataConfig, log);\n  }\n\n  getTokenByCode(portalUrl: string, clientId: string, code: string, bodyData?: {}, params?: HttpParams): Observable<EsriPortalAccessToken> {\n    const data = Object.assign({\n      client_id: clientId,\n      code,\n      redirect_uri: removePortalAccessTokenFromHash(window.location.href),\n      grant_type: 'authorization_code'\n    }, bodyData);\n    const formData = toFormData(data);\n\n    return this.doPost(portalUrl, PORTAL_OAUTH_TOKEN_ENDPOINT, formData, params)\n      .pipe(\n        map(rawToken => toEsriPortalAccessToken(rawToken, portalUrl))\n      );\n  }\n\n  refreshToken(\n    portalUrl: string,\n    clientId: string,\n    refreshToken: string,\n    bodyData?: {},\n    params?: HttpParams\n  ): Observable<EsriPortalAccessToken> {\n    const data = Object.assign({\n      client_id: clientId,\n      refresh_token: refreshToken,\n      grant_type: 'refresh_token'\n    }, bodyData);\n    const formData = toFormData(data);\n\n    return this.doPost(portalUrl, PORTAL_OAUTH_TOKEN_ENDPOINT, formData, params)\n      .pipe(\n        map(rawToken => toEsriPortalAccessToken(rawToken, portalUrl))\n      );\n  }\n\n  getServerToken(portalUrl: string, portalAccessToken: string, serverUrl: string, params?: HttpParams): Observable<EsriServerToken> {\n    const additionalParams = {\n      request: 'getToken',\n      serverUrl,\n      token: portalAccessToken,\n      referer: window.location.host\n    };\n\n    return this.doGet(portalUrl, PORTAL_GENERATE_TOKEN_ENDPOINT, additionalParams, params)\n      .pipe(\n        map(token => toEsriServerToken(token))\n      );\n  }\n\n  protected doGet<T>(portalUrl: string, endpoint: string, queryParams: {}, params?: HttpParams): Observable<T> {\n    const basePortalUrl = getPortalUrl(portalUrl);\n    const url = join(basePortalUrl, endpoint);\n    const httpOption: AngularHttpOption = getEsriMapServiceHttOptions(params);\n\n    addParamsToHttpOptions(httpOption, queryParams);\n    return this.http\n      .get<T>(url, httpOption)\n      .pipe(\n        tap((response: T) => this.handleEsriResponseError(response, url))\n      );\n  }\n\n  protected doPost<T>(portalUrl: string, endpoint: string, formData: FormData, params?: HttpParams): Observable<T> {\n    const basePortalUrl = getPortalUrl(portalUrl);\n    const url = join(basePortalUrl, endpoint);\n    const httpOption: AngularHttpOption = getEsriMapServiceHttOptions(params);\n\n    return this.http\n      .post<T>(url, formData, httpOption)\n      .pipe(\n        tap((response: T) => this.handleEsriResponseError(response, url))\n      );\n  }\n}\n","import { EsriPortalAccessToken } from './esri-portal-access-token';\nimport { PORTAL_REDIRECT_URL_PARAMS_BREAK_CHARACTER } from '../esri.constants';\nimport { toEsriPortalAccessToken } from './to-esri-portal-access-token.function';\nimport { trimStart } from '../../core/formatting/trip-start.function';\nimport { getQueryParams } from '../../core/url/get-query-params.function';\n\n\nexport function extractPortalAccessToken(urlHash: string = window.location.hash): EsriPortalAccessToken {\n  const portalParamsStartIndex = urlHash.lastIndexOf(PORTAL_REDIRECT_URL_PARAMS_BREAK_CHARACTER);\n  const portalParamsHash = trimStart(\n    urlHash.substr(portalParamsStartIndex)\n  );\n\n  const portalParams = getQueryParams(portalParamsHash);\n  const accessToken = portalParams.access_token;\n  const username = portalParams.username;\n  const expiresIn = Number(portalParams.expires_in);\n  const isSecure = Boolean(portalParams.ssl);\n\n  return toEsriPortalAccessToken({\n    accessToken,\n    username,\n    expiresIn,\n    isSecure\n  });\n}\n","import { EsriPortalAuthRedirectOptions } from './esri-portal-auth-redirect-options';\nimport { PORTAL_OAUTH_AUTHORIZE_ENDPOINT, DEFAULT_PORTAL_OAUTH_REDIRECT_OPTIONS } from '../esri.constants';\nimport { getPortalUrl } from './get-portal-url.function';\nimport { join } from '../../core/url/join.function';\n\n\nexport function getPortalOAuthRedirectUrl(portalUrl: string, clientId: string, options: EsriPortalAuthRedirectOptions = {}): string {\n  options = Object.assign({}, DEFAULT_PORTAL_OAUTH_REDIRECT_OPTIONS, options);\n  portalUrl = getPortalUrl(portalUrl);\n\n  const redirectUrl = encodeURIComponent(`${options.redirectUrl}${options.urlParamsBreak}`);\n  const url = join(portalUrl, PORTAL_OAUTH_AUTHORIZE_ENDPOINT);\n\n  return `${url}?client_id=${clientId}&redirect_uri=${redirectUrl}&response_type=${options.responseType}`;\n}\n","import { PORTAL_SHARING_ENDPOINT } from '../esri.constants';\nimport { getPortalUrl } from './get-portal-url.function';\nimport { join } from '../../core/url/join.function';\n\n\nexport function getPortalSharingUrl(portalUrl: string): string {\n  const basePortalUrl = getPortalUrl(portalUrl);\n  return join(basePortalUrl, PORTAL_SHARING_ENDPOINT);\n}\n","// Angular.\nimport { Injectable } from '@angular/core';\n\n// TSS.\nimport { AutoConfig } from '../core/auto-config.decorator';\n\n\n/**\n * Configuration class for storing export-related settings.\n */\n@Injectable({\n  providedIn: 'root'\n})\n@AutoConfig('ExportConfig')\nexport class ExportConfig {\n}\n","export const DEFAULT_EXPORT_GEOJSON_FILE_NAME = 'export.geojson';\n","// Angular.\nimport { NgModule, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n// TSS.\nimport { TssCoreModule } from '../core/core.module';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    TssCoreModule,\n  ],\n  declarations: [\n  ],\n  exports: [\n  ],\n  providers: [\n  ],\n  schemas: [CUSTOM_ELEMENTS_SCHEMA]\n})\nexport class TssExportModule { }\n","// Angular.\nimport { Injectable } from '@angular/core';\n\n// 3rd party.\nimport { FeatureCollection, Feature } from 'geojson';\n\n\n// TSS.\nimport { JSON_MIME_TYPE, TEXT_MIME_TYPE } from '../core/media/media.constants';\nimport { base64MimeType } from '../core/media/base64-mime-type.function';\nimport { base64toBlob } from '../core/media/base64-to-blob.function';\nimport { DEFAULT_EXPORT_GEOJSON_FILE_NAME } from './export.constants';\nimport { format } from '../core/formatting/format.function';\nimport { isString } from '../core/type-check/is-string.function';\nimport { formatDate } from '../core/date-time/format/format-date.function';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ExportService {\n  constructor() {\n  }\n\n  replaceTokens(fileNameTemplate: string, tokens: any = {}, removeEmptyTokens?: boolean): string {\n    return format(fileNameTemplate, Object.assign(\n      this.getReplaceTokens(),\n      tokens\n    ), removeEmptyTokens);\n  }\n\n  exportFeatureCollection(fileNameTemplate = DEFAULT_EXPORT_GEOJSON_FILE_NAME, ...features: Feature[]): this {\n    const fileName = this.replaceTokens(fileNameTemplate, {\n      featureLength: features.length,\n    });\n\n    const featureCollection: FeatureCollection = {\n      type: 'FeatureCollection',\n      features\n    };\n\n    return this.exportFile(this.stringify(featureCollection), fileName, JSON_MIME_TYPE);\n  }\n\n  exportFeature(fileNameTemplate = DEFAULT_EXPORT_GEOJSON_FILE_NAME, feature: Feature): this {\n    return this.exportFile(this.stringify(feature), fileNameTemplate, JSON_MIME_TYPE);\n  }\n\n  stringify(data: any): string {\n    return JSON.stringify(data, (key, value) => {\n      return key.startsWith('$$') ? undefined : value;\n    }, 2);\n  }\n\n  exportJson(data: any, fileNameTemplate: string): this {\n    const jsonString: string = isString(data)\n      ? data as string\n      : this.stringify(data);\n\n    return this.exportFile(jsonString, fileNameTemplate, JSON_MIME_TYPE);\n  }\n\n  exportBase64(base64Data: string, fileNameTemplate: string, contentType?: string): this {\n    const fileName = this.replaceTokens(fileNameTemplate);\n    contentType = contentType || base64MimeType(base64Data);\n    const blob = base64toBlob(base64Data, contentType);\n\n    return this.exportFromUrl(URL.createObjectURL(blob), fileName);\n  }\n\n  exportFile(data: any, fileNameTemplate: string, contentType = TEXT_MIME_TYPE): this {\n    const blob = new Blob([data], { type: contentType });\n    const fileName = this.replaceTokens(fileNameTemplate);\n\n    return this.exportBlob(blob, fileName);\n  }\n\n  exportBlob(blob: Blob, fileNameTemplate: string): this {\n    const fileName = this.replaceTokens(fileNameTemplate);\n    return this.exportFromUrl(window.URL.createObjectURL(blob), fileName);\n  }\n\n  exportFromUrl(url: string, fileName: string): this {\n    const link = document.createElement('a');\n\n    link.href = url;\n    link.download = fileName;\n    link.click();\n\n    return this;\n  }\n\n  protected getReplaceTokens(): {} {\n    return {\n      date: new Date(),\n      shortDate: formatDate(new Date(), 'yyyy-MM-dd'),\n      year: new Date().getFullYear(),\n    };\n  }\n}\n","// Angular.\nimport { Injectable } from '@angular/core';\n\n// TSS.\nimport { AutoConfig } from '../core/auto-config.decorator';\nimport { DEFAULT_POINT_EQUALITY_PRECISION } from '../core/equality/equality.constants';\n\n\n/**\n * Configuration class for storing geolocation-related settings.\n */\n@Injectable({\n  providedIn: 'root'\n})\n@AutoConfig('GeolocationConfig')\nexport class GeolocationConfig {\n  gpsDisplayDecimalPlaces = 3;\n  gpsWarnableAccuracyMeters = 5;\n  gpsRequiredAccuracyMeters = 10;\n  gpsWarnableDilutionOfPrecision = 2;\n  gpsRequiredDilutionOfPrecision = 5;\n  gpsEnableHighAccuracy = true;\n  gpsNoAccuracyReading = '--';\n  allowGpsMocking = true;\n  emitDuplicateGpsPositions = false;\n  gpsPositionDuplicatePrecision = DEFAULT_POINT_EQUALITY_PRECISION;\n  gpsAntennaHeight = 0;\n  adjustForGpsAntennaHeight = true;\n  calculateMissingPositionValues = true;\n  geolocationGeolocatorName = 'Built-in (default)';\n  geolocationGeolocatorDescription = `Uses the device's built-in GPS sensor within the hardware. ` +\n    `Devices without a GPS sensor will defer the location retrieval to the Inernet Service Provider (ISP).`;\n}\n","export const PATH_BUILDER_EMPTY_CALIBRATION_MEASURE_VALUE = null;\nexport const PATH_BUILDER_CALCULATED_M_DEVICE_SOURCE = 'calculated-calibration-point';\nexport const GEOLOCATOR_REGISTRY: { id: string, constructor: any }[] = [];\nexport const GEOLOCATION_GEOLOCATOR_ID = 'built-in';\n","import { GEOLOCATOR_REGISTRY } from '../geolocation.constants';\n\nexport function Geolocatable(id: string): ClassDecorator {\n  return (constructor: any) => {\n    GEOLOCATOR_REGISTRY.push({ id, constructor });\n  };\n}\n","export enum GeolocatorAccuracyUnit {\n  /**\n   * The geolocation accuracy reading is in standard meters (default).\n   */\n  Meter = 'meters',\n\n  /**\n   * The geolocation accuracy reading indicates a Position Dilution of Precision (PDOP) value.\n   */\n  Pdop = 'pdop',\n\n  /**\n   * The geolocation accuracy reading indicates a Horizontal Dilution of Precision (HDOP) value.\n   */\n  Hdop = 'hdop',\n\n  /**\n   * The geolocation accuracy reading indicates a Vertical Dilution of Precision (VDOP) value.\n   */\n  Vdop = 'vdop',\n\n  /**\n   * The geolocation accuracy reading indicates a Time Dilution of Precision (TDOP) value.\n   */\n  Tdop = 'tdop',\n}\n","// Angular.\nimport { Injectable } from '@angular/core';\n\n// 3rd Party.\nimport { Observable } from 'rxjs';\nimport { GeolocatorAccuracyUnit } from './geolocator-accuracy-unit';\nimport { GpsPosition } from '../gps-position/gps-position';\nimport { GeolocatorCapability } from './geolocator-capability';\nimport { Logger } from '../../core/logging/logger.service';\nimport { Geolocator } from './geolocator';\n\n\n/**\n * Wrapper for geolocation service. The wrapper primarily exists to abstract the direct interaction with\n * the \"navigator\" object and to allow for injecting other implementations of geolocation functionality.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport abstract class BaseGeolocator implements Geolocator {\n  capabilities: GeolocatorCapability[] = [];\n  accuracyUnit: GeolocatorAccuracyUnit = GeolocatorAccuracyUnit.Meter;\n  abstract get name(): string;\n  abstract get description(): string;\n\n  constructor(protected readonly log: Logger) {\n  }\n\n  /**\n   * Get the device's current position.\n   */\n  abstract getCurrentPosition(options?: PositionOptions): Promise<GpsPosition>;\n\n  /**\n   * Watch the current device's position.  Clear the watch by unsubscribing from\n   * Observable changes.\n   *\n   * ```typescript\n   * const subscription = this.geolocation.watchPosition()\n   *                               .filter(p => Boolean(p.coords)) //Filter Out Errors\n   *                               .subscribe(position =>\n   *   console.log(position.coords.longitude + ' ' + position.coords.latitude)\n   * );\n   *\n   * // To stop notifications\n   * subscription.unsubscribe();\n   * ```\n   */\n  abstract watchPosition(options?: PositionOptions): Observable<GpsPosition>;\n  abstract isAvailable(): Observable<boolean>;\n\n  hasCapability(capability: GeolocatorCapability): boolean {\n    return this.capabilities.indexOf(capability) > -1;\n  }\n}\n","import { GpsPosition } from './gps-position';\n\n\nexport function positionToGpsPosition(position: Position): GpsPosition {\n  const gpsPosition: GpsPosition = {\n    timestamp: position.timestamp,\n    accuracy: position.coords.accuracy,\n    altitude: position.coords.altitude,\n    altitudeAccuracy: position.coords.altitudeAccuracy,\n    latitude: position.coords.latitude,\n    longitude: position.coords.longitude,\n    heading: position.coords.heading,\n    speed: position.coords.speed,\n  };\n\n  return gpsPosition;\n}\n","export enum GeolocatorCapability {\n  Accuracy = 'accuracy',\n  Altitude = 'altitude',\n  AltitudeAccuracy = 'altitude',\n  Heading = 'heading',\n  Speed = 'speed',\n  MagneticVariation = 'magneticVariation',\n  Satellites = 'satellites',\n  PDOP = 'pdop',\n  HDOP = 'hdop',\n  VDOP = 'vdop',\n  TDOP = 'tdop',\n}\n","// Angular.\nimport { Injectable } from '@angular/core';\n\n// 3rd Party.\nimport { Observable, Subject, of } from 'rxjs';\nimport { finalize } from 'rxjs/operators';\n\n// TSS.\nimport { Geolocatable } from './geolocatable.decorator';\nimport { BaseGeolocator } from './base-geolocator.service';\nimport { GpsPosition } from '../gps-position/gps-position';\nimport { positionToGpsPosition } from '../gps-position/position-to-gps-position.function';\nimport { GeolocatorCapability } from './geolocator-capability';\nimport { Logger } from '../../core/logging/logger.service';\nimport { GeolocationConfig } from '../geolocation.config';\nimport { GEOLOCATION_GEOLOCATOR_ID } from '../geolocation.constants';\n\n\n/**\n * Wrapper for geolocation service. The wrapper primarily exists to abstract the direct interaction with\n * the \"navigator\" object and to allow for injecting other implementations of geolocation functionality.\n */\n@Injectable({ providedIn: 'root' })\n@Geolocatable(GEOLOCATION_GEOLOCATOR_ID)\nexport class GeolocationGeolocator extends BaseGeolocator {\n  capabilities = [\n    GeolocatorCapability.Accuracy,\n    GeolocatorCapability.Altitude,\n    GeolocatorCapability.AltitudeAccuracy,\n    GeolocatorCapability.Heading,\n    GeolocatorCapability.Speed,\n  ];\n\n  get name(): string {\n    return this.config.geolocationGeolocatorName;\n  }\n\n  get description(): string {\n    return this.config.geolocationGeolocatorDescription;\n  }\n\n  constructor(log: Logger, private readonly config: GeolocationConfig) {\n    super(log);\n  }\n\n  getCurrentPosition(options?: PositionOptions): Promise<GpsPosition> {\n    return new Promise<GpsPosition>((resolve, reject) =>\n      navigator.geolocation\n        .getCurrentPosition((position: Position) => {\n          this.log.trace(`Received current position for ${this.name}`);\n          resolve(\n            positionToGpsPosition(position)\n          );\n        }, reject, options)\n    );\n  }\n\n  watchPosition(options?: PositionOptions): Observable<GpsPosition> {\n    const subject = new Subject<GpsPosition>();\n    const watchId = navigator.geolocation.watchPosition(\n      position => {\n        this.log.trace(`Received watch position for ${this.name}`);\n        subject.next(positionToGpsPosition(position));\n      },\n      error => subject.error(error),\n      options\n    );\n\n    return subject.pipe(\n      finalize(() => navigator.geolocation.clearWatch(watchId))\n    );\n  }\n\n  isAvailable(): Observable<boolean> {\n    return of('geolocation' in navigator);\n  }\n}\n","// Angular.\nimport { NgModule, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n// TSS.\nimport { TssCoreModule } from '../core/core.module';\nimport { GeolocationConfig } from './geolocation.config';\nimport { GeolocationService } from './geolocation.service';\nimport { GeolocationGeolocator } from './geolocator/geolocation-gps-locator.service';\nimport { BaseGeolocator } from './geolocator/base-geolocator.service';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    TssCoreModule,\n  ],\n  declarations: [\n  ],\n  exports: [\n  ],\n  providers: [\n    { provide: BaseGeolocator, useClass: GeolocationGeolocator }\n  ],\n  schemas: [CUSTOM_ELEMENTS_SCHEMA]\n})\nexport class TssGeolocationModule { }\n","export function isPositionAcceptable(position: Coordinates, acceptanceThreshold: number): boolean {\n  return position && position.accuracy <= acceptanceThreshold;\n}\n","import { GpsPosition } from './gps-position';\nimport { isNumber } from '../../core/type-check/is-number.function';\n\nexport function isPositionError(position: GpsPosition | PositionError): boolean {\n  const error = position as PositionError;\n  const isError = !error || isNumber(error.code);\n\n  return isError;\n}\n","import { GpsPosition } from './gps-position';\nimport { isDefined } from '../../core/type-check/is-defined.function';\n\n\nexport function gpsPositionToPoint(position: GpsPosition): number[] {\n  const point = [position.longitude, position.latitude];\n  if (isDefined(position.altitude)) {\n    point[2] = position.altitude;\n  }\n\n  return point;\n}\n","import { isNumberBetweenOrEqual } from '../../core/stats/is-number-between-or-equal.function';\nimport { isNumber } from '../../core/type-check/is-number.function';\n\n\nexport function isValidLatitude(latitide: number): boolean {\n  return isNumber(latitide) && isNumberBetweenOrEqual(latitide, -90, 90);\n}\n","import { isNumberBetweenOrEqual } from '../../core/stats/is-number-between-or-equal.function';\nimport { isNumber } from '../../core/type-check/is-number.function';\n\n\nexport function isValidLongitude(longitude: number): boolean {\n  return isNumber(longitude) && isNumberBetweenOrEqual(longitude, -180, 180);\n}\n","import { isValidLatitude } from './is-valid-latitude.function';\nimport { isValidLongitude } from './is-valid-longitude.function';\n\n\nexport function isValidLocation(location: { latitude: number, longitude: number }): boolean {\n  return isValidLatitude(location.latitude) && isValidLongitude(location.longitude);\n}\n","import { isValidLocation } from './is-valid-location.function';\n\n\nexport function isNotValidLocation(location: { latitude: number, longitude: number }): boolean {\n  return !isValidLocation(location);\n}\n","import { GpsPosition } from './gps-position';\nimport { DEFAULT_POINT_EQUALITY_PRECISION } from '../../core/equality/equality.constants';\nimport { pointsAlmostEqual } from '../../core/equality/points-almost-equal.function';\n\n\nexport function gpsPositionsAlmostEqual(\n  position1: GpsPosition,\n  position2: GpsPosition,\n  precision = DEFAULT_POINT_EQUALITY_PRECISION\n): boolean {\n  return pointsAlmostEqual(position1.longitude, position1.latitude, position2.longitude, position2.latitude, precision);\n}\n\n","// Angular.\nimport { Injectable } from '@angular/core';\n\n// 3rd Party.\nimport { Observable, ReplaySubject, Subscription, Subject } from 'rxjs';\nimport distance from '@turf/distance';\nimport bearing from '@turf/bearing';\n\n// App.\nimport { isPositionAcceptable } from './is-position-acceptable.function';\nimport { Logger } from '../core/logging/logger.service';\nimport { NotifyService } from '../core/notify/notify.service';\nimport { GeolocationConfig } from './geolocation.config';\nimport { GeolocatorAccuracyUnit } from './geolocator/geolocator-accuracy-unit';\nimport { GpsPosition } from './gps-position/gps-position';\nimport { GeolocatorCapability } from './geolocator/geolocator-capability';\nimport { isPositionError } from './gps-position/is-position-error.function';\nimport { toReadableTime } from '../core/date-time/readable/to-readable-time.function';\nimport { isNumber } from '../core/type-check/is-number.function';\nimport { isNotNumber } from '../core/type-check/is-not-number.function';\nimport { formatNumber } from '../core/formatting/format-number.function';\nimport { errorMsg } from '../core/error/error-msg.function';\nimport { isNotValue } from '../core/type-check/is-not-value.function';\nimport { gpsPositionToPoint } from './gps-position/gps-position-to-point';\nimport { millisecondsToSeconds } from '../core/date-time/conversion/milliseconds-to-seconds.function';\nimport { convertLengthUnits } from '../core/units/convert-length-units.function';\nimport { LengthUnit } from '../core/units/length-unit';\nimport { Geolocator } from './geolocator/geolocator';\nimport { BaseGeolocator } from './geolocator/base-geolocator.service';\nimport { isNotValidLocation } from './gps-position/is-not-valid-location.function';\nimport { gpsPositionsAlmostEqual } from './gps-position/gps-positions-almost-equal';\n\n\n/**\n * Geolocator service. Provides a single point of GPS interaction.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class GeolocationService {\n  position: GpsPosition;\n  positionRecievedTime: Date;\n  isTrackingPosition = false;\n  /**\n   * Fired when ever a new position is received and the value is different than the previous (unless the Geolocation config\n   * value \"emitDuplicateGpsPositions\" is set to true - in which case duplicates will be published).\n   * This value will alway emit the last recieved position (if you subscribe after it was emitted you will still receive it).\n   */\n  readonly positionChange: Observable<GpsPosition>;\n\n  /**\n   * Fired when ever a new position is received regardless of whether the position has changed since the last position was recieved.\n   */\n  readonly positionRecieved: Observable<GpsPosition>;\n\n  private positionChangeSubject: ReplaySubject<GpsPosition>;\n  private positionRecievedSubject: Subject<GpsPosition>;\n  private gpsLocatorSubscription: Subscription;\n  private geolocator: Geolocator;\n\n  get positionText(): string {\n    return this.position\n      ? `${this.position.longitude.toFixed(this.config.gpsDisplayDecimalPlaces)}\n       , ${this.position.latitude.toFixed(this.config.gpsDisplayDecimalPlaces)}`\n      : '';\n  }\n\n  get positionReceivedEllapsedTime(): string {\n    if (!this.positionRecievedTime) {\n      return '';\n    }\n\n    const differenceMilliseconds = Date.now() - this.positionRecievedTime.getTime();\n    return `${toReadableTime(differenceMilliseconds)} ago`;\n  }\n\n  get isPositionAcceptable(): boolean {\n    const accuracyThreshold = this.geolocator.accuracyUnit === GeolocatorAccuracyUnit.Meter\n      ? this.config.gpsRequiredAccuracyMeters\n      : this.config.gpsRequiredDilutionOfPrecision;\n\n    return isPositionAcceptable(this.position, accuracyThreshold);\n  }\n\n  get isPositionUnacceptable(): boolean {\n    return !this.isPositionAcceptable;\n  }\n\n  get isPositionWarnable(): boolean {\n    const accuracyThreshold = this.geolocator.accuracyUnit === GeolocatorAccuracyUnit.Meter\n      ? this.config.gpsWarnableAccuracyMeters\n      : this.config.gpsWarnableDilutionOfPrecision;\n\n    return !isPositionAcceptable(this.position, accuracyThreshold);\n  }\n\n  get hasAccuracyCapability(): boolean {\n    return this.geolocator.capabilities.indexOf(GeolocatorCapability.Accuracy) > -1;\n  }\n\n  get isPositionAccuracyKnown(): boolean {\n    return this.position && isNumber(this.position.accuracy);\n  }\n\n  get isPositionAccuracyUnknown(): boolean {\n    return !this.isPositionAccuracyKnown;\n  }\n\n  get isPositionAccuracyInMeters(): boolean {\n    return this.geolocator.accuracyUnit === GeolocatorAccuracyUnit.Meter;\n  }\n\n  get isPositionAccuracyInDilutionOfPrecision(): boolean {\n    return this.geolocator.accuracyUnit === GeolocatorAccuracyUnit.Pdop\n      || this.geolocator.accuracyUnit === GeolocatorAccuracyUnit.Hdop\n      || this.geolocator.accuracyUnit === GeolocatorAccuracyUnit.Vdop\n      || this.geolocator.accuracyUnit === GeolocatorAccuracyUnit.Tdop;\n  }\n\n  get geolocatorService(): Geolocator {\n    return this.geolocator;\n  }\n\n  get accuracyStatement(): string {\n    const noPosition = !this.position;\n\n    if (noPosition) {\n      return this.config.gpsNoAccuracyReading;\n    }\n\n    const isPositionAccuracyKnown = this.isPositionAccuracyKnown;\n    let accuracy: number = isPositionAccuracyKnown ? this.position.accuracy : null;\n    let suffix: string;\n\n    if (isPositionAccuracyKnown && this.geolocator.hasCapability(GeolocatorCapability.Accuracy)) {\n      suffix = this.geolocator.accuracyUnit === GeolocatorAccuracyUnit.Meter\n        ? 'm'\n        : String(this.geolocator.accuracyUnit).toUpperCase();\n    } else if (this.geolocator.hasCapability(GeolocatorCapability.PDOP)) {\n      accuracy = this.position.pdop;\n      suffix = String(GeolocatorCapability.PDOP).toUpperCase();\n    } else if (this.geolocator.hasCapability(GeolocatorCapability.HDOP)) {\n      accuracy = this.position.hdop;\n      suffix = String(GeolocatorCapability.HDOP).toUpperCase();\n    } else if (this.geolocator.hasCapability(GeolocatorCapability.VDOP)) {\n      accuracy = this.position.vdop;\n      suffix = String(GeolocatorCapability.VDOP).toUpperCase();\n    } else if (this.geolocator.hasCapability(GeolocatorCapability.TDOP)) {\n      accuracy = this.position.tdop;\n      suffix = String(GeolocatorCapability.TDOP).toUpperCase();\n    }\n\n    if (isNotNumber(accuracy)) {\n      return this.config.gpsNoAccuracyReading;\n    }\n\n    return `${formatNumber(accuracy)} ${suffix}`;\n  }\n\n  constructor(\n    geolocator: BaseGeolocator,\n    private readonly log: Logger,\n    private readonly notify: NotifyService,\n    protected readonly config: GeolocationConfig,\n  ) {\n    this.geolocator = geolocator;\n    this.positionChangeSubject = new ReplaySubject(1);\n    this.positionRecievedSubject = new Subject();\n\n    this.positionChange = this.positionChangeSubject.asObservable();\n    this.positionRecieved = this.positionRecievedSubject.asObservable();\n  }\n\n  enableGpsTracking(): this {\n    const geoOptions = {\n      enableHighAccuracy: this.config.gpsEnableHighAccuracy\n    };\n\n    this.position = null;\n    this.tryUnsubscribe();\n    this.log.debug(\n      `Subscribing to GPS watching for '${this.geolocator.name}' with high accuracy set to '${geoOptions.enableHighAccuracy}'`\n    );\n\n    this.gpsLocatorSubscription = this.geolocator.watchPosition(geoOptions)\n      .subscribe(\n        position => this.onPositionRecieved(position),\n        error => this.onLocationError(error)\n      );\n\n    return this;\n  }\n\n  disableGpsTracking(): this {\n    this.isTrackingPosition = false;\n    this.tryUnsubscribe();\n\n    return this;\n  }\n\n  setGeoLocator(geolocator: Geolocator): this {\n    this.tryUnsubscribe();\n    this.geolocator = geolocator;\n    if (this.isTrackingPosition) {\n      this.enableGpsTracking();\n    }\n\n    return this;\n  }\n\n  setGpsTracking(isTrackingLocation: boolean): this {\n    if (isTrackingLocation) {\n      this.enableGpsTracking();\n    } else {\n      this.disableGpsTracking();\n    }\n\n    return this;\n  }\n\n  toggleGpsTracking(): this {\n    this.setGpsTracking(!this.isTrackingPosition);\n    return this;\n  }\n\n  mockGpsPosition(position: GpsPosition | PositionError): this {\n    if (!this.config.allowGpsMocking) {\n      throw new Error('Permission denied to mock GPS location');\n    }\n\n    return this.onPositionRecieved(position);\n  }\n\n  protected onPositionRecieved(position: GpsPosition | PositionError): this {\n    if (isPositionError(position)) {\n      this.onLocationError(position as PositionError);\n      return this;\n    }\n\n    const gpsPosition = position as GpsPosition;\n    if (isNotValidLocation(gpsPosition)) {\n      return this;\n    }\n\n    const isPreviousPointSameAsNew = this.position\n      && gpsPositionsAlmostEqual(this.position, gpsPosition, this.config.gpsPositionDuplicatePrecision);\n\n    if (isPreviousPointSameAsNew && !this.config.emitDuplicateGpsPositions) {\n      this.positionRecievedSubject.next(gpsPosition);\n      return this;\n    }\n\n    this.log.trace(`Location recieved from '${this.geolocator.name}': ${gpsPosition.latitude}, ${gpsPosition.longitude}`);\n    this.adjustCoordinates(gpsPosition);\n    this.position = gpsPosition;\n    this.isTrackingPosition = true;\n    this.positionRecievedTime = new Date(this.position.timestamp || Date.now());\n    this.positionRecievedSubject.next(this.position);\n    this.positionChangeSubject.next(this.position);\n\n    return this;\n  }\n\n  protected onLocationError(error: PositionError): this {\n    const errorMessage = errorMsg('Failed to retrieve location position. {error}', error);\n    this.positionChangeSubject.error(error);\n    this.log.error(errorMessage);\n    this.notify.error(errorMessage);\n    return this;\n  }\n\n  private adjustCoordinates(position: GpsPosition): this {\n    this.tryAdjustMissingPositionValues(position);\n\n    if (this.config.adjustForGpsAntennaHeight && this.config.gpsAntennaHeight) {\n      let adjustedHeight = position.altitude - this.config.gpsAntennaHeight;\n      adjustedHeight = adjustedHeight < 0 ? 0 : adjustedHeight;\n\n      this.log.trace(`Adjusting coordinate altitude from ${position.altitude} to ${adjustedHeight}`);\n      Object.assign(position, {\n        altitude: adjustedHeight\n      });\n    }\n\n    return this;\n  }\n\n  private tryAdjustMissingPositionValues(newPosition: GpsPosition): void {\n    const missingSpeed = isNotValue(newPosition.speed);\n    const missingHeading = isNotValue(newPosition.heading);\n    const positionValuesMissing = missingSpeed || missingHeading;\n    const shouldAdjustPositionValues = this.position && positionValuesMissing && this.config.calculateMissingPositionValues;\n\n    if (shouldAdjustPositionValues) {\n      const fromPoint = gpsPositionToPoint(this.position);\n      const toPoint = gpsPositionToPoint(newPosition);\n\n      if (missingSpeed) {\n        // meters per second\n        const kilometersTraveled = distance(fromPoint, toPoint, { units: 'kilometers' });\n        if (kilometersTraveled) {\n          const metersTraveled = convertLengthUnits(kilometersTraveled, LengthUnit.Kilometer, LengthUnit.Meter);\n          const secondsDelta = millisecondsToSeconds(\n            Math.abs(newPosition.timestamp - this.position.timestamp)\n          );\n          const speed = metersTraveled / secondsDelta;\n          Object.assign(newPosition, { speed });\n        }\n      }\n\n      if (missingHeading) {\n        const heading = bearing(fromPoint, toPoint);\n        Object.assign(newPosition, { heading });\n      }\n    }\n  }\n\n  private tryUnsubscribe(): this {\n    if (this.gpsLocatorSubscription) {\n      this.log.debug(`Unsubscribing from watching GPS stream from '${this.geolocator.name}'`);\n      this.gpsLocatorSubscription.unsubscribe();\n    }\n\n    return this;\n  }\n}\n","// Angular.\nimport { Injectable, Injector } from '@angular/core';\n\n// 3rd party.\nimport { Observable, forkJoin, of } from 'rxjs';\nimport { map, tap } from 'rxjs/operators';\n\n// TSS.\nimport { GeolocatorSource } from './geolocator-source';\nimport { GEOLOCATOR_REGISTRY } from '../geolocation.constants';\nimport { Geolocator } from './geolocator';\n\n\n@Injectable({ providedIn: 'root' })\nexport class GeolocatorSourceService {\n\n  constructor(private readonly injector: Injector) {\n  }\n\n  getGeolocator(id: string): Geolocator {\n    const registry = GEOLOCATOR_REGISTRY.find(registedSource => registedSource.id === id);\n    return this.getLocatorFromRegistry(registry);\n  }\n\n  getGeolocators(): Geolocator[] {\n    return GEOLOCATOR_REGISTRY\n      .map(registry => this.getLocatorFromRegistry(registry));\n  }\n\n  getGeolocatorSource(id: string): Observable<GeolocatorSource> {\n    return this.getGeolocatorSources()\n      .pipe(\n        map(devices => devices.find(device => device.id === id))\n      );\n  }\n\n  getAvailableGeolocatorSources(): Observable<GeolocatorSource[]> {\n    return this.getGeolocatorSources()\n      .pipe(\n        map(devices => devices.filter(device => device.isAvailable))\n      );\n  }\n\n  getGeolocatorSources(): Observable<GeolocatorSource[]> {\n    const availableObservables = GEOLOCATOR_REGISTRY\n      .map(registry => {\n        const locator = this.getLocatorFromRegistry(registry);\n        const source: GeolocatorSource = {\n          id: registry.id,\n          name: locator.name,\n          description: locator.description,\n          accuracyUnit: locator.accuracyUnit,\n          capabilities: locator.capabilities,\n          isAvailable: false,\n        };\n\n        return locator.isAvailable()\n          .pipe(\n            tap(available => source.isAvailable = available),\n            map(() => source)\n          );\n      });\n\n    return availableObservables.length === 0\n      ? of([])\n      : forkJoin(availableObservables);\n  }\n\n  private getLocatorFromRegistry(registry: { id: string, constructor: any }): Geolocator {\n    const instance: Geolocator = this.injector.get(registry.constructor);\n    return instance;\n  }\n}\n","import { GpsPosition } from './gps-position';\nimport { gpsPositionToPoint } from './gps-position-to-point';\n\n\nexport function gpsPositionsToPoint(...positions: GpsPosition[]): number[][] {\n  return positions.map(position => gpsPositionToPoint(position));\n}\n","import { isValidLatitude } from './is-valid-latitude.function';\n\nexport function isNotValidLatitude(latitude: number): boolean {\n  return !isValidLatitude(latitude);\n}\n","import { isValidLongitude } from './is-valid-longitude.function';\n\n\nexport function isNotValidLongitude(longitude: number): boolean {\n  return !isValidLongitude(longitude);\n}\n","// 3rd party.\nimport distance from '@turf/distance';\n\n// TSS.\nimport { LineGeometry } from '../line/line-geometry';\nimport { toMultiPartPaths } from '../line/to-multi-part-paths.function';\nimport { getMeasureFromPoint } from '../point/get-measure-from-point.function';\nimport { SetMeasuresByGeometricLengthOptions } from './set-measures-by-geometric-length-options';\nimport { sortAscending } from '../../core/sort/sort.function';\nimport { isNotNumber } from '../../core/type-check/is-not-number.function';\n\n\nconst DEFAULT_EMPTY_Z_VALUE = 0;\nconst DEFAULT_OPTIONS: SetMeasuresByGeometricLengthOptions = {\n  units: 'miles',\n  hasZValues: true,\n  calibrationPositions: []\n};\n\nexport function setMeasuresByGeometricLength(line: LineGeometry, options?: SetMeasuresByGeometricLengthOptions): void {\n  const martiPart: number[][][] = toMultiPartPaths(line);\n  options = Object.assign({}, DEFAULT_OPTIONS, options);\n  let lastMeasure = 0;\n\n  martiPart.forEach((linePart, partIndex) => {\n    setMeasureForLine(linePart, lastMeasure, partIndex, options);\n    const lastCoordinateIndex = linePart.length - 1;\n    const lastCoordinate = linePart[lastCoordinateIndex];\n\n    lastMeasure += getMeasureFromPoint(lastCoordinate);\n  });\n}\n\nfunction setMeasureForLine(line: number[][], startMeasure: number, partIndex: number, options: SetMeasuresByGeometricLengthOptions): void {\n  const hasCalibrationPoints: boolean = options.calibrationPositions.some(\n    calibrationPosition =>\n      calibrationPosition.partIndex === partIndex\n  );\n\n  if (hasCalibrationPoints) {\n    calibrateLinePart(line, startMeasure, partIndex, options);\n  } else {\n    setLinePartMeasuresByGeometricLength(line, startMeasure, options);\n  }\n}\n\nfunction calibrateLinePart(line: number[][], startMeasure: number, partIndex: number, options: SetMeasuresByGeometricLengthOptions): void {\n  const calibrationPositions = options.calibrationPositions.filter(\n    position => position.partIndex === partIndex\n  );\n\n  let fromVertexIndex = 0;\n  sortAscending(calibrationPositions, calibration => calibration.measure);\n\n  calibrationPositions.forEach(calibration => {\n    const fromVertex = line[fromVertexIndex];\n    const toVertex = line[calibration.vertexIndex];\n    const numberOfVerticesInBetween = calibration.vertexIndex - fromVertexIndex;\n    const distanceForSection = Math.abs(calibration.measure - startMeasure);\n    const measureDistributionIncrement = distanceForSection / numberOfVerticesInBetween;\n\n    setMeasure(fromVertex, startMeasure, options.hasZValues);\n    setMeasure(toVertex, calibration.measure, options.hasZValues);\n    const inBetweenVertices = getVerticesBetween(line, fromVertexIndex, calibration.vertexIndex);\n\n    inBetweenVertices.forEach((vertice, index) => {\n      const partNumber = index + 1;\n      const verticeIncrement = partNumber * measureDistributionIncrement;\n      const measure = startMeasure + verticeIncrement;\n      setMeasure(vertice, measure, options.hasZValues);\n    });\n\n    fromVertexIndex = calibration.vertexIndex;\n    startMeasure = calibration.measure;\n  });\n\n  const areMoreVertices = fromVertexIndex < line.length - 1;\n  if (areMoreVertices) {\n    const remainingPoints: number[][] = getVerticesBetween(line, fromVertexIndex - 1, line.length);\n    setLinePartMeasuresByGeometricLength(remainingPoints, startMeasure, options);\n  }\n}\n\nfunction getVerticesBetween(line: number[][], startRangeIndex: number, endRangeIndex: number): number[][] {\n  let index = startRangeIndex + 1;\n  const vertices: number[][] = [];\n\n  for (; index < endRangeIndex; index++) {\n    const vertice = line[index];\n    vertices.push(vertice);\n  }\n\n  return vertices;\n}\n\nfunction setLinePartMeasuresByGeometricLength(line: number[][], startMeasure: number, options: SetMeasuresByGeometricLengthOptions): void {\n  let previousVertex;\n  let vertexMeasure = startMeasure;\n\n  line.forEach((vertex, index) => {\n    if (index !== 0) {\n      const distanceBetweenVerticees: number = distance(previousVertex, vertex, options);\n      vertexMeasure += distanceBetweenVerticees;\n    }\n\n    setMeasure(vertex, vertexMeasure, options.hasZValues);\n    previousVertex = vertex;\n  });\n}\n\nfunction setMeasure(coordinate: number[], measure: number, hasZValues: boolean): void {\n  const accountForZValue = hasZValues || coordinate.length > 3;\n  const measureIndex = accountForZValue ? 3 : 2;\n  coordinate[measureIndex] = measure;\n\n  if (accountForZValue) {\n    ensureZValue(coordinate);\n  }\n}\n\nfunction ensureZValue(coordinate: number[]): void {\n  if (isNotNumber(coordinate[2])) {\n    coordinate[2] = DEFAULT_EMPTY_Z_VALUE;\n  }\n}\n","// 3rd Party.\nimport { LineString, Feature, MultiPoint, Point, Polygon, MultiLineString, MultiPolygon } from 'geojson';\nimport { Observable, Subscription } from 'rxjs';\nimport destination from '@turf/destination';\nimport bearing from '@turf/bearing';\n\n// TSS.\nimport { PositionPathBuilderOptions } from './position-path-builder-options';\nimport { Disposable } from '../core/disposable';\nimport { isPositionAcceptable } from './is-position-acceptable.function';\nimport { GpsPosition } from './gps-position/gps-position';\nimport { PositionPathUnfilteredGpsPosition } from './position-path-unfiltered-gps-position';\nimport { setMeasuresByGeometricLength } from '../geometry/geometry/set-measures-by-geometric-length.function';\nimport { isMultiPartLine } from '../geometry/line/is-multi-part.function';\nimport { PositionPathCalibrationPosition } from './position-path-calibration-position';\nimport { CalibrationPosition } from '../geometry/line/calibration/calibration-point';\nimport { PositionPathBuilderSummaryPosition } from './positon-path-builder-position-summary';\nimport { getMeasureFromPoint } from '../geometry/point/get-measure-from-point.function';\nimport { PATH_BUILDER_EMPTY_CALIBRATION_MEASURE_VALUE, PATH_BUILDER_CALCULATED_M_DEVICE_SOURCE } from './geolocation.constants';\nimport { getDistanceBetweenLatLng } from '../geometry/point/get-distance-between-points.function';\nimport { convertLengthUnits } from '../core/units/convert-length-units.function';\nimport { LengthUnit } from '../core/units/length-unit';\nimport { sumValues } from '../core/stats/sum-values.function';\nimport { getLastItem } from '../core/array/get-last-item.function';\nimport { isNumber } from '../core/type-check/is-number.function';\nimport { pointsAlmostEqual } from '../core/equality/points-almost-equal.function';\n\n\nconst UNPLACED_CALIBRATION_MEASURE_KEY = 'pending';\n\nconst DEFAULT_OPTIONS: PositionPathBuilderOptions = {\n  gpsRequiredAccuracyMeters: 10,\n  requireAccuracy: true,\n  pointEquivalencyPrecision: 8,\n  returnZValues: true,\n  returnMValues: true,\n  mValueUnit: 'miles',\n  storeUnfilteredPath: false,\n  calibrationMeasureSnappingDistanceDelta: 2,\n  calibrationMeasureSnappingDistanceDeltaUnit: LengthUnit.Foot\n};\n\n\nexport class PositionPathBuilder implements Disposable {\n  readonly parts: GpsPosition[][];\n  readonly unfilteredPath: GpsPosition[];\n  readonly pathBreaks: {}[];\n  readonly calibratedMeasures: Map<string, PositionPathCalibrationPosition>;\n  private readonly options: PositionPathBuilderOptions;\n  private trackSubscription: Subscription;\n\n  get positionCount(): number {\n    const counts = this.parts.map(part => part.length);\n    return sumValues(counts);\n  }\n\n  get currentPartIndex(): number {\n    return this.parts.length - 1;\n  }\n\n  get currentPart(): GpsPosition[] {\n    return this.parts[this.currentPartIndex];\n  }\n\n  get lastPosition(): GpsPosition {\n    return getLastItem(this.currentPart);\n  }\n\n  get hasPosition(): boolean {\n    return Boolean(this.lastPosition);\n  }\n\n  get isEmpty(): boolean {\n    return this.currentPart.length === 0;\n  }\n\n  get isValidPath(): boolean {\n    return this.currentPart.length > 1;\n  }\n\n  get isSinglePoint(): boolean {\n    return this.parts.length === 1 && this.currentPart.length === 1;\n  }\n\n  constructor(options?: PositionPathBuilderOptions) {\n    this.parts = [[]];\n    this.unfilteredPath = [];\n    this.calibratedMeasures = new Map<string, PositionPathCalibrationPosition>();\n    this.options = Object.assign({}, DEFAULT_OPTIONS, options);\n  }\n\n  trackPosition(positionStream: Observable<GpsPosition>): this {\n    this.trackSubscription = positionStream.subscribe(position => this.addPosition(position));\n    return this;\n  }\n\n  addPosition(position: GpsPosition, calibrationMeasure?: number): this {\n    const accuracyCriteriaMet = !this.options.requireAccuracy\n      || isPositionAcceptable(position, this.options.gpsRequiredAccuracyMeters);\n    const positionNotAcceptable = !position || !accuracyCriteriaMet;\n\n    if (positionNotAcceptable) {\n      return this.tryStoreUnfilteredPath(position);\n    }\n\n    if (this.isEmpty) {\n      return this.forceAddPosition(position);\n    }\n\n    const pointsAtSameLocation = this.arePositionsEquivalent(this.lastPosition, position);\n    const bothPointsAtStandStill = this.lastPosition.speed === 0 && position.speed === 0 || pointsAtSameLocation;\n    if (bothPointsAtStandStill) {\n      this\n        .tryStoreUnfilteredPath(position)\n        .replaceLastPositionIfBetter(position);\n\n      return this;\n    }\n\n    this.forceAddPosition(position);\n    if (isNumber(calibrationMeasure)) {\n      this.addCalibrationMeasureToLastPosition(calibrationMeasure);\n    }\n\n    return this;\n  }\n\n  startNewPart(): this {\n    this.parts.push([]);\n    return this;\n  }\n\n  removePositionByIndex(vertexIndex: number, partIndex: number = 0): this {\n    const part = this.parts[partIndex];\n    if (!part) {\n      throw new Error(`Invalid part index\" ${partIndex}`);\n    }\n\n    part.splice(vertexIndex, 1);\n\n    const key = this.getCalibrationMeasureLookupKey(partIndex, vertexIndex);\n    if (this.calibratedMeasures.has(key)) {\n      this.calibratedMeasures.delete(key);\n    }\n\n    return this;\n  }\n\n  removePosition(position: GpsPosition): this {\n    let partIndex = -1;\n    let vertexIndex = -1;\n\n    this.parts.forEach((part, index) => {\n      const foundPositionIndex = part.indexOf(position);\n      if (foundPositionIndex > -1) {\n        partIndex = index;\n        vertexIndex = foundPositionIndex;\n      }\n    });\n\n    if (partIndex > -1 && vertexIndex > -1) {\n      return this.removePositionByIndex(vertexIndex, partIndex);\n    }\n\n    return this;\n  }\n\n  removeCalibrationMeasure(measure: number): this {\n    Array.from(this.calibratedMeasures.values())\n      .filter(calibration => calibration.measure === measure)\n      .forEach(calibration =>\n        this.removeCalibrationMeasureByIndex(calibration.vertexIndex, calibration.partIndex)\n      );\n\n    return this;\n  }\n\n  removeCalibrationMeasureByIndex(vertexIndex: number, partIndex: number = 0): this {\n    const key = this.getCalibrationMeasureLookupKey(partIndex, vertexIndex);\n    if (this.calibratedMeasures.has(key)) {\n      this.calibratedMeasures.delete(key);\n    }\n\n    return this;\n  }\n\n  addCalibrationMeasure(measure: number): this {\n    const timestamp = new Date().getTime();\n    const [lastVertex] = this.currentPart.slice(-1);\n    if (lastVertex && lastVertex.timestamp && lastVertex.timestamp === timestamp) {\n      return this.addCalibrationMeasureToLastPosition(measure);\n    }\n\n    const partIndex = this.currentPartIndex;\n    const key = UNPLACED_CALIBRATION_MEASURE_KEY;\n    this.calibratedMeasures.set(key, {\n      measure,\n      partIndex,\n      vertexIndex: null,\n      timestamp\n    });\n\n    return this;\n  }\n\n  addCalibrationMeasureToLastPosition(measure: number): this {\n    const partIndex = this.currentPartIndex;\n    const lastVertexIndex = this.currentPart.length - 1;\n    return this.addCalibrationMeasureAtIndex(measure, lastVertexIndex, partIndex);\n  }\n\n  addCalibrationMeasureAtIndex(measure: number, vertexIndex: number, partIndex = 0): this {\n    const key = this.getCalibrationMeasureLookupKey(partIndex, vertexIndex);\n    this.calibratedMeasures.set(key, {\n      measure,\n      partIndex,\n      vertexIndex,\n      timestamp: new Date().getTime()\n    });\n\n    return this;\n  }\n\n  forceAddPosition(position: GpsPosition): this {\n    this.tryStoreUnfilteredPath(position);\n    this.addPositionToPath(position);\n    return this;\n  }\n\n  toPointFeature(properties = {}): Feature<Point | MultiPoint> {\n    return {\n      type: 'Feature',\n      geometry: this.toPointGeometry(),\n      properties\n    };\n  }\n\n  toLineFeature(properties = {}): Feature<LineString | MultiLineString> {\n    return {\n      type: 'Feature',\n      geometry: this.toLineGeometry(),\n      properties\n    };\n  }\n\n  toSingleLineFeature(properties = {}): Feature<LineString> {\n    return {\n      type: 'Feature',\n      geometry: this.toSingleLineGeometry(),\n      properties\n    };\n  }\n\n  toMultiLineFeature(properties = {}): Feature<MultiLineString> {\n    return {\n      type: 'Feature',\n      geometry: this.toMultiLineGeometry(),\n      properties\n    };\n  }\n\n  toPolygonFeature(properties = {}): Feature<Polygon | MultiPolygon> {\n    return {\n      type: 'Feature',\n      geometry: this.toPolygonGeometry(),\n      properties\n    };\n  }\n\n  toMultiPolygonFeature(properties = {}): Feature<MultiPolygon> {\n    return {\n      type: 'Feature',\n      geometry: this.toMultiPolygonGeometry(),\n      properties\n    };\n  }\n\n  toSinglePolygonFeature(properties = {}): Feature<Polygon> {\n    return {\n      type: 'Feature',\n      geometry: this.toSinglePolygonGeometry(),\n      properties\n    };\n  }\n\n  toFeature(): Feature<LineString | MultiLineString | Point | MultiPoint> {\n    return this.isSinglePoint\n      ? this.toPointFeature() as Feature<Point>\n      : this.toLineFeature();\n  }\n\n  toGeometry(): LineString | MultiLineString | Point {\n    return this.isSinglePoint\n      ? this.toPointGeometry() as Point\n      : this.toLineGeometry();\n  }\n\n  toSingleLineGeometry(calibrateMeasures = true): LineString {\n    const line = this.toLineGeometry(calibrateMeasures);\n    if (isMultiPartLine(line.coordinates)) {\n      throw new Error('Cannot convert MultiLineString to LineString. Data would be lost');\n    }\n\n    return line as LineString;\n  }\n\n  toMultiLineGeometry(calibrateMeasures = true): MultiLineString {\n    let line = this.toLineGeometry(calibrateMeasures);\n    const isSinglePartLine = !isMultiPartLine(line.coordinates);\n    if (isSinglePartLine) {\n      line = {\n        type: 'MultiLineString',\n        bbox: line.bbox,\n        coordinates: [line.coordinates as number[][]]\n      };\n    }\n\n    return line as MultiLineString;\n  }\n\n  toLineGeometry(calibrateMeasures = true): LineString | MultiLineString {\n    const parts: number[][][] = this.toMultiPartArray();\n    const line: LineString | MultiLineString = parts.length > 1\n      ? {\n        type: 'MultiLineString',\n        coordinates: parts\n      }\n      : {\n        type: 'LineString',\n        coordinates: parts[0]\n      };\n\n    if (this.options.returnMValues) {\n      const calibrationPositions: CalibrationPosition[] = calibrateMeasures\n        ? Array.from(\n          this.calibratedMeasures.values()\n        )\n        : [];\n\n      setMeasuresByGeometricLength(line, {\n        units: this.options.mValueUnit,\n        hasZValues: this.options.returnZValues,\n        calibrationPositions\n      });\n    }\n\n    return line;\n  }\n\n  toMultiPolygonGeometry(): MultiPolygon {\n    let poly = this.toPolygonGeometry();\n    const isSinglePolygon = poly.type === 'Polygon';\n\n    if (isSinglePolygon) {\n      poly = {\n        type: 'MultiPolygon',\n        bbox: poly.bbox,\n        coordinates: [poly.coordinates as number[][][]]\n      };\n    }\n\n    return poly as MultiPolygon;\n  }\n\n  toSinglePolygonGeometry(): Polygon {\n    const poly = this.toPolygonGeometry();\n    const isMultiPart = poly.type === 'MultiPolygon';\n\n    if (isMultiPart) {\n      throw new Error('Cannot convert MultiPolygon to Polygon. Data would be lost');\n    }\n\n    return poly as Polygon;\n  }\n\n  toPolygonGeometry(): Polygon | MultiPolygon {\n    const parts: number[][][] = this.toMultiPartArray();\n    parts.forEach(part => this.ensurePolygonIsClosed(part));\n\n    return parts.length > 1\n      ? {\n        type: 'MultiPolygon',\n        coordinates: [parts]\n      }\n      : {\n        type: 'Polygon',\n        coordinates: parts\n      };\n  }\n\n  toPointGeometry(): Point | MultiPoint {\n    const parts: number[][][] = this.toMultiPartArray();\n\n    return parts.length > 1\n      ? { type: 'MultiPoint', coordinates: parts.map(part => part[0]) }\n      : { type: 'Point', coordinates: parts[0][0] };\n  }\n\n  replaceLastPositionIfBetter(position: GpsPosition): boolean {\n    let wasPositionAdded = true;\n    if (this.isEmpty) {\n      this.addPositionToPath(position);\n      return wasPositionAdded;\n    }\n\n    const newPositionHasBetterAccuracy = this.lastPosition.accuracy > position.accuracy;\n    if (newPositionHasBetterAccuracy) {\n      this.replaceLastPosition(position);\n    } else {\n      wasPositionAdded = false;\n    }\n\n    return wasPositionAdded;\n  }\n\n  replaceLastPosition(position: GpsPosition): this {\n    this.currentPart[this.currentPart.length - 1] = position;\n\n    return this;\n  }\n\n  getBestPosition(): GpsPosition {\n    throw new Error('Not implemented yet');\n  }\n\n  getUnfilteredPath(): PositionPathUnfilteredGpsPosition[] {\n    return this.unfilteredPath.map(position => {\n      const unfilteredGpsPosition: PositionPathUnfilteredGpsPosition = Object.assign({\n        included: this.pathContains(position)\n      }, position);\n\n      return unfilteredGpsPosition;\n    });\n  }\n\n  getGeometryPathSummary(): PositionPathBuilderSummaryPosition[][] {\n    const line = this.toMultiLineGeometry(false);\n\n    return line.coordinates.map(\n      (part: number[][], partIndex: number) => this.getGeometryLinePartSummary(part, partIndex)\n    );\n  }\n\n  pathContains(position: GpsPosition): boolean {\n    const found = this.parts.find(part =>\n      part.indexOf(position) > -1\n    );\n\n    return Boolean(found);\n  }\n\n  getPositionByIndex(partIndex: number, vertexIndex: number): GpsPosition {\n    return this.parts[partIndex][vertexIndex];\n  }\n\n  dispose(): void {\n    if (this.trackSubscription) {\n      this.trackSubscription.unsubscribe();\n    }\n\n    this.parts.length = 0;\n  }\n\n  private getGeometryLinePartSummary(linePart: number[][], partIndex: number): PositionPathBuilderSummaryPosition[] {\n    return linePart.map((vertex, vertexIndex) => {\n      const position = this.getPositionByIndex(partIndex, vertexIndex);\n      const calibrationKey = this.getCalibrationMeasureLookupKey(partIndex, vertexIndex);\n      const calibrationPointMeasureValue = this.calibratedMeasures.has(calibrationKey)\n        ? this.calibratedMeasures.get(calibrationKey).measure\n        : PATH_BUILDER_EMPTY_CALIBRATION_MEASURE_VALUE;\n\n      return Object.assign({\n        geometricMeasure: getMeasureFromPoint(vertex),\n        partIndex,\n        vertexIndex,\n        calibrationPointMeasureValue\n      }, position);\n    });\n  }\n\n  private getCalibrationMeasureLookupKey(partIndex: number, vertexIndex: number): string {\n    return `${partIndex}_${vertexIndex}`;\n  }\n\n  private toMultiPartArray(): number[][][] {\n    const parts: number[][][] = [];\n    this.parts.forEach(part => {\n      const coordinates: number[][] = part.map(\n        position => this.options.returnZValues\n          ? [position.longitude, position.latitude, position.altitude || 0]\n          : [position.longitude, position.latitude]\n      );\n\n      parts.push(coordinates);\n    });\n\n    return parts;\n  }\n\n  private ensurePolygonIsClosed(polygonPoints: number[][]): void {\n    if (polygonPoints.length > 1) {\n      const [first] = polygonPoints;\n      const last: number[] = getLastItem(polygonPoints);\n      const [firstLng, firstLat, firstZ] = first;\n      const [lastLng, lastLat] = last;\n      const doesPolygonNotClose = !this.arePointsEquivalent(firstLng, firstLat, lastLng, lastLat);\n\n      if (doesPolygonNotClose) {\n        const closingPoint = [firstLng, firstLat, firstZ || 0];\n        polygonPoints.push(closingPoint);\n      }\n    }\n  }\n\n  private addPositionToPath(position: GpsPosition): void {\n    this.currentPart.push(position);\n\n    if (this.calibratedMeasures.has(UNPLACED_CALIBRATION_MEASURE_KEY)) {\n      this.addPendingCalibrationPoint();\n    }\n  }\n\n  private addPendingCalibrationPoint(): void {\n    const calibratonPosition = this.calibratedMeasures.get(UNPLACED_CALIBRATION_MEASURE_KEY);\n    const calibrationTimestamp = calibratonPosition.timestamp;\n    const [secondToLastPosition, lastPosition] = this.currentPart.slice(-2);\n    const isTimestampBetweenVertices = calibrationTimestamp > secondToLastPosition.timestamp\n      && calibrationTimestamp < lastPosition.timestamp;\n\n    if (isTimestampBetweenVertices) {\n      const totalTimeDelta = Math.abs(lastPosition.timestamp - secondToLastPosition.timestamp);\n      const offsetTimeDelta = Math.abs(calibrationTimestamp - secondToLastPosition.timestamp);\n      const percentOfDistance = offsetTimeDelta / totalTimeDelta;\n      const distanceBetweenVerticesKilometers = getDistanceBetweenLatLng(\n        secondToLastPosition.latitude,\n        secondToLastPosition.longitude,\n        lastPosition.latitude,\n        lastPosition.longitude,\n        LengthUnit.Mile\n      );\n\n      const distanceToPreviousVertexKilometers = percentOfDistance * distanceBetweenVerticesKilometers;\n      const didSnapCalibrationMeasureToVertes = this.trySnapCalibrationMeasureToVertex(\n        calibratonPosition.measure,\n        distanceBetweenVerticesKilometers,\n        distanceToPreviousVertexKilometers);\n\n      if (didSnapCalibrationMeasureToVertes) {\n        return;\n      }\n\n      const heading = bearing(\n        [secondToLastPosition.longitude, secondToLastPosition.latitude],\n        [lastPosition.longitude, lastPosition.latitude]\n      );\n\n      const newPoint: Feature<Point> = destination(\n        [secondToLastPosition.longitude, secondToLastPosition.latitude],\n        distanceToPreviousVertexKilometers,\n        heading, { units: 'kilometers' }\n      );\n\n      const spliceIndexForSecondToLastPosition = this.currentPart.length - 1;\n      const newPosition: GpsPosition = Object.assign({}, lastPosition, {\n        longitude: newPoint.geometry.coordinates[0],\n        latitude: newPoint.geometry.coordinates[1],\n        deviceSource: PATH_BUILDER_CALCULATED_M_DEVICE_SOURCE\n      });\n\n      this.calibratedMeasures.delete(UNPLACED_CALIBRATION_MEASURE_KEY);\n      this.addCalibrationMeasureAtIndex(calibratonPosition.measure, spliceIndexForSecondToLastPosition, this.currentPartIndex);\n      this.currentPart.splice(spliceIndexForSecondToLastPosition, 0, newPosition);\n    } else if (calibrationTimestamp >= lastPosition.timestamp) {\n      this.addCalibrationMeasureToLastPosition(calibratonPosition.measure);\n    } else {\n      throw new Error(`Calibration measure timestamp '${calibratonPosition.timestamp}' can not be located between`\n        + ` '${secondToLastPosition.timestamp}' and '${lastPosition.timestamp}'`);\n    }\n  }\n\n  private trySnapCalibrationMeasureToVertex(\n    calibrationMeasure: number,\n    totalVerticeDistanceKilometers: number,\n    distanceToPreviousVertexKilometers: number\n  ): boolean {\n    const distanceToNextVertexKilometers = totalVerticeDistanceKilometers - distanceToPreviousVertexKilometers;\n    const distanceThresholdKilometers = convertLengthUnits(\n      this.options.calibrationMeasureSnappingDistanceDelta,\n      this.options.calibrationMeasureSnappingDistanceDeltaUnit,\n      LengthUnit.Kilometer\n    );\n\n    const isPointCloseEnoughToPrevious = distanceToPreviousVertexKilometers < distanceThresholdKilometers;\n    const isPointCloseEnoughToNext = distanceToNextVertexKilometers < distanceThresholdKilometers;\n\n    if (isPointCloseEnoughToPrevious || isPointCloseEnoughToNext) {\n      const previousVertexIndex = this.currentPart.length - 2;\n      const nextVertexIndex = this.currentPart.length - 1;\n      const vertexIndex = distanceToPreviousVertexKilometers < distanceToNextVertexKilometers\n        ? previousVertexIndex\n        : nextVertexIndex;\n\n      this.addCalibrationMeasureAtIndex(calibrationMeasure, vertexIndex, this.currentPartIndex);\n      this.calibratedMeasures.delete(UNPLACED_CALIBRATION_MEASURE_KEY);\n      return true;\n    }\n\n    return false;\n  }\n\n  private arePositionsEquivalent(position1: GpsPosition, position2: GpsPosition): boolean {\n    return this.arePointsEquivalent(\n      position1.longitude,\n      position1.latitude,\n      position2.longitude,\n      position2.latitude\n    );\n  }\n\n  private arePointsEquivalent(longitude1: number, latitude1: number, longitude2: number, latitude2: number): boolean {\n    return pointsAlmostEqual(\n      longitude1,\n      latitude1,\n      longitude2,\n      latitude2,\n      this.options.pointEquivalencyPrecision\n    );\n  }\n\n  private tryStoreUnfilteredPath(position: GpsPosition): this {\n    if (this.options.storeUnfilteredPath) {\n      this.unfilteredPath.push(position);\n    }\n\n    return this;\n  }\n}\n","export function radiansToDegrees(radians) {\n  return radians * 180 / Math.PI;\n}\n","import { Injectable } from '@angular/core';\nimport { AutoConfig } from '../core/auto-config.decorator';\n\n\n/**\n * Configuration class for storing geometry-related settings.\n */\n@Injectable({\n  providedIn: 'root'\n})\n@AutoConfig('GeometryConfig')\nexport class GeometryConfig {\n}\n","import { toMultiPartPaths } from './to-multi-part-paths.function';\nimport { LineGeometry } from './line-geometry';\nimport { getMeasureFromPoint } from '../point/get-measure-from-point.function';\nimport { addRange } from '../../core/array/add-range.function';\n\n\nexport function extractMeasuresFromLine(line: LineGeometry): number[] {\n  const measures = [];\n  const paths: number[][][] = toMultiPartPaths(line);\n  paths.forEach((coordinates: number[][]) => {\n    const pathMeasures = coordinates.map((coordinate: number[]) => getMeasureFromPoint(coordinate));\n    addRange(measures, pathMeasures);\n  });\n\n  return measures;\n}\n","import { SinglePoint } from '../point/single-point';\nimport { toSinglePartPointArray } from '../point/to-single-part-point.function';\n\n\ninterface Point {\n  x: number;\n  y: number;\n}\n\nfunction squareRoot(x) {\n  return x * x;\n}\n\nfunction squareRootDistance(v: Point, w: Point) {\n  return squareRoot(v.x - w.x) + squareRoot(v.y - w.y);\n}\n\nfunction distanceToSegmentSquared(testPoint: Point, lineStartPoint: Point, lineEndPoint: Point) {\n  const lengthSquared = squareRootDistance(lineStartPoint, lineEndPoint);\n\n  if (lengthSquared === 0) {\n    return squareRootDistance(testPoint, lineStartPoint);\n  }\n\n  const part1 = (testPoint.x - lineStartPoint.x) * (lineEndPoint.x - lineStartPoint.x);\n  const part2 = (testPoint.y - lineStartPoint.y) * (lineEndPoint.y - lineStartPoint.y);\n  const formulaPart1 = part1 + part2;\n  const delta = formulaPart1 / lengthSquared;\n\n  if (delta < 0) {\n    return squareRootDistance(testPoint, lineStartPoint);\n  }\n\n  if (delta > 1) {\n    return squareRootDistance(testPoint, lineEndPoint);\n  }\n\n  const xValue = lineStartPoint.x + delta * (lineEndPoint.x - lineStartPoint.x);\n  const yValue = lineStartPoint.y + delta * (lineEndPoint.y - lineStartPoint.y);\n\n  return squareRootDistance(testPoint, { x: xValue, y: yValue });\n}\n\nfunction distToSegment(testPoint: Point, lineStartPoint: Point, lineEndPoint: Point) {\n  return Math.sqrt(distanceToSegmentSquared(testPoint, lineStartPoint, lineEndPoint));\n}\n\nexport function getDistanceToLine(testPoint: SinglePoint, lineStartPoint: SinglePoint, lineEndPoint: SinglePoint): number {\n  const testPointArray: number[] = toSinglePartPointArray(testPoint);\n  const lineStartPointArray: number[] = toSinglePartPointArray(lineStartPoint);\n  const lineEndPointArray: number[] = toSinglePartPointArray(lineEndPoint);\n  const [testPointX, testPointY] = testPointArray;\n  const [lineStartX, lineStartY] = lineStartPointArray;\n  const [lineEndX, lineEndY] = lineEndPointArray;\n\n  return distToSegment(\n    { x: testPointX, y: testPointY },\n    { x: lineStartX, y: lineStartY },\n    { x: lineEndX, y: lineEndY },\n  );\n}\n","import { getMeasure } from './get-measure.function';\nimport { LineGeometry } from './line-geometry';\nimport { SinglePoint } from '../point/single-point';\nimport { GetMeasureOptions } from './get-measure-options';\n\n\nexport function getMeasureFromFlatCoordinateSystem(line: LineGeometry, point: SinglePoint, options?: GetMeasureOptions): number {\n  return getMeasure(line, point, Object.assign({ coordinateSystem: 'flat' }, options));\n}\n","import { LineGeometry } from './line-geometry';\nimport { GetMeasureOptions } from './get-measure-options';\n\n\nexport function getMeasureFromLatLng(line: LineGeometry, lat: number, lng: number, options: GetMeasureOptions): number {\n  return this.getMeasure(line, [lng, lat], options);\n}\n","import { LineGeometry } from './line-geometry';\nimport { toMultiPartPaths } from './to-multi-part-paths.function';\nimport { PointComparisonDetails } from '../point/point-comparison-details';\nimport { SinglePoint } from '../point/single-point';\nimport { getDistanceBetweenPoints, getMetersBetweenLatLng } from '../point/get-distance-between-points.function';\nimport { toSinglePartPointArray } from '../point/to-single-part-point.function';\nimport { getDistanceToLine } from './get-distance-to-line.function';\nimport { addRange } from '../../core/array/add-range.function';\n\n\nexport interface LineVerticeeSummary {\n  nearestPoint: PointComparisonDetails;\n  furthestPoint: PointComparisonDetails;\n  minPoint: PointComparisonDetails;\n  maxPoint: PointComparisonDetails;\n  nextPoint: PointComparisonDetails;\n  previousPoint: PointComparisonDetails;\n}\n\n\nexport function getVerticeeInfos(line: LineGeometry, point: SinglePoint, isPointDegrees: boolean = true): LineVerticeeSummary {\n  const pointComparisonDetails: PointComparisonDetails[] = [];\n  const paths: number[][][] = toMultiPartPaths(line);\n\n  paths.forEach((coordinates: number[][]) => {\n    const details = comparePathWithPoint(coordinates, point, isPointDegrees);\n    addRange(pointComparisonDetails, details);\n  });\n\n  let nearestPoint: PointComparisonDetails;\n  let furthestPoint: PointComparisonDetails;\n  let minPoint: PointComparisonDetails;\n  let maxPoint: PointComparisonDetails;\n\n  pointComparisonDetails.forEach(pointCandidate => {\n    if (!nearestPoint || pointCandidate.distance < nearestPoint.distance) {\n      nearestPoint = pointCandidate;\n    }\n\n    if (!furthestPoint || pointCandidate.distance > furthestPoint.distance) {\n      furthestPoint = pointCandidate;\n    }\n\n    if (!minPoint || pointCandidate.pointMeasure < minPoint.pointMeasure) {\n      minPoint = pointCandidate;\n    }\n\n    if (!maxPoint || pointCandidate.pointMeasure > maxPoint.pointMeasure) {\n      maxPoint = pointCandidate;\n    }\n  });\n\n  // const nearestPoint = pointComparisionDetails\n  //   .reduce((accumulator, value) => accumulator.distance > value.distance ? value : accumulator);\n\n  const pointBefore = pointComparisonDetails[nearestPoint.index - 1];\n  const pointAfter = pointComparisonDetails[nearestPoint.index + 1];\n  let nextPoint = pointAfter;\n  let previousPoint = pointBefore;\n\n  // NOTE: this logic handles the rare case where the distance of the test point matches both the next\n  // and previous verticee.\n  // 0-----4--------------------------100\n  //          5\n  if (pointBefore && pointAfter) {\n    const beforDistance = getDistanceToLine(point, nearestPoint.pointCoordinate, pointBefore.pointCoordinate);\n    const afterDistance = getDistanceToLine(point, nearestPoint.pointCoordinate, pointAfter.pointCoordinate);\n\n    if (beforDistance < afterDistance) {\n      nextPoint = pointBefore;\n      previousPoint = pointComparisonDetails[nextPoint.index - 2];\n    }\n  }\n\n  return {\n    nearestPoint,\n    furthestPoint,\n    nextPoint,\n    previousPoint,\n    minPoint,\n    maxPoint\n  };\n}\n\nexport function getClosestVerticees(\n  line: LineGeometry,\n  point: SinglePoint,\n  isPointDegrees: boolean = true\n): [SinglePoint | null, SinglePoint | null] {\n  const info = getVerticeeInfos(line, point, isPointDegrees);\n\n  return [\n    info.nearestPoint ? info.nearestPoint.pointCoordinate : null,\n    info.nextPoint ? info.nextPoint.pointCoordinate : null\n  ];\n}\n\nexport function getClosestVerticee(line: LineGeometry, point: SinglePoint, isPointDegrees: boolean = true): SinglePoint {\n  const [firstClosest] = getClosestVerticees(line, point, isPointDegrees);\n  return firstClosest;\n}\n\nfunction comparePathWithPoint(coordinates: number[][], pointToCompare: SinglePoint, isPointDegrees: boolean): PointComparisonDetails[] {\n  const pointComparisionDetailsFromPath: PointComparisonDetails[] = coordinates\n    .map(\n      (coordinate: number[], index: number) => compareCoordinateWithPoint(coordinate, pointToCompare, isPointDegrees, index)\n    );\n\n  return pointComparisionDetailsFromPath;\n}\n\nfunction getDegreeDistance(coordinate: number[], pointToCompare: SinglePoint): number {\n  const coordinate2: number[] = toSinglePartPointArray(pointToCompare);\n\n  return getMetersBetweenLatLng(coordinate[1], coordinate[0], coordinate2[1], coordinate2[0]);\n}\n\nfunction compareCoordinateWithPoint(\n  coordinate: number[],\n  pointToCompare: SinglePoint,\n  isPointDegrees: boolean,\n  index: number\n): PointComparisonDetails {\n  const distance = isPointDegrees\n    ? getDegreeDistance(coordinate, pointToCompare)\n    : getDistanceBetweenPoints(coordinate, pointToCompare);\n\n  const pointDetails: PointComparisonDetails = {\n    pointCoordinate: coordinate,\n    distance,\n    index\n  };\n\n  return pointDetails;\n}\n","/**\n * Determines if a point (value) is within a given bounds (line).\n * @param boundStart The start of the restrcting bounds.\n * @param boundEnd The end of the restricting bounds.\n * @param testValue The value to check against the restricting bounds.\n */\nexport function isPointWithinBounds(boundStart: number, boundEnd: number, testValue: number) {\n  return testValue >= boundStart && testValue <= boundEnd;\n}\n\n/**\n * Determines if a point (value) is within a given bounds (line), but will not match the start and end values.\n * @param boundStart The start of the restrcting bounds.\n * @param boundEnd The end of the restricting bounds.\n * @param testValue The value to check against the restricting bounds.\n */\nexport function isPointWithinButNotIncludingBounds(boundStart: number, boundEnd: number, testValue: number) {\n  return testValue > boundStart && testValue < boundEnd;\n}\n","import { isPointWithinButNotIncludingBounds } from '../point/bounds.function';\n\n\n/**\n * Determines if two points (a line) are within a given bounds (line).\n * @param boundStart The start of the restrcting bounds.\n * @param boundEnd The end of the restricting bounds.\n * @param testStartValue The start value of the line to check against the restricting bounds.\n * @param testEndValue The end value of the line to check against the restricting bounds.\n */\nexport function isLineWithinBounds(boundStart: number, boundEnd: number, testStartValue: number, testEndValue: number) {\n  /**\n   * Runs through:\n   * BOUNDS:   10---------15\n   * TEST:   8---------------18\n   *\n   * Starts and runs through:\n   * BOUNDS: 0---------15\n   * TEST:   0---------------18\n   *\n   * Ends and runs through:\n   * BOUNDS:       5---------18\n   * TEST:   0---------------18\n   */\n  const runsThrough = testStartValue < boundStart && testEndValue > boundEnd;\n  const isFullMatch = testStartValue === boundStart && testEndValue === boundEnd;\n  const isStartInBounds = isPointWithinButNotIncludingBounds(boundStart, boundEnd, testStartValue);\n  const isEndInBounds = isPointWithinButNotIncludingBounds(boundStart, boundEnd, testEndValue);\n\n  const isStartMatch = boundStart === testStartValue;\n  const isEndMatch = boundEnd === testEndValue;\n  const startsAndRunsThrough = isStartMatch && boundStart <= testEndValue;\n  const endsAndRunsThrough = isEndMatch && boundEnd >= testStartValue;\n\n  return runsThrough\n    || isFullMatch\n    || isStartInBounds\n    || isEndInBounds\n    || startsAndRunsThrough\n    || endsAndRunsThrough;\n}\n","// 3rd Party.\nimport { LineString } from 'geojson';\n\n// TSS.\nimport { SinglePoint } from '../point/single-point';\nimport { toSinglePartPointArray } from '../point/to-single-part-point.function';\nimport { getLastItem } from '../../core/array/get-last-item.function';\n\n\nexport function isPointOnLineString(line: LineString, point: SinglePoint): boolean {\n  return isPointOnLine(line.coordinates[0], getLastItem(line.coordinates), point);\n}\n\nexport function isLatLngOnLineString(line: LineString, lat: number, lng: number): boolean {\n  const [lineStartLng, lineStartLat] = line.coordinates[0];\n  const [lineEndLng, lineEndLat] = getLastItem(line.coordinates);\n\n  return isLatLngOnLine(lineStartLat, lineStartLng, lineEndLat, lineEndLng, lat, lng);\n}\n\nexport function isLatLngOnLine(\n  lineStartLat: number,\n  lineStartLng: number,\n  lineEndLat: number,\n  lineEndLng: number,\n  testPointLat: number,\n  testPointLng: number\n): boolean {\n  throw new Error('AHHH!');\n}\n\nexport function isPointOnLine(lineStartPoint: SinglePoint, lineEndPoint: SinglePoint, testPoint: SinglePoint, tolerance = 0): boolean {\n  const startPoint = toSinglePartPointArray(lineStartPoint);\n  const endPoint = toSinglePartPointArray(lineEndPoint);\n  const point = toSinglePartPointArray(testPoint);\n\n  const [startPointX, startPointY] = startPoint;\n  const [endPointX, endPointY] = endPoint;\n  const [testPointX, testPointY] = point;\n  const slope = (endPointY - startPointY) / (endPointX - startPointX);\n  const y = slope * testPointX + startPointY;\n\n  if ((y <= testPointY + tolerance && y >= testPointY - tolerance) && (testPointX >= startPointX && testPointX <= endPointX)) {\n    return true;\n  }\n\n  return false;\n}\n","import { SinglePoint } from './single-point';\nimport { toSinglePartPointArray } from './to-single-part-point.function';\nimport { calculateCrossProduct } from '../../core/stats/calculate-cross-product.function';\n\n\nexport function calculateCrossProductByPoints(startPoint: SinglePoint, endPoint: SinglePoint, testPoint: SinglePoint): number {\n  const [x1, y1] = toSinglePartPointArray(startPoint);\n  const [x2, y2] = toSinglePartPointArray(endPoint);\n  const [testX, testY] = toSinglePartPointArray(testPoint);\n\n  return calculateCrossProduct(x1, y1, x2, y2, testX, testY);\n}\n","// Angular.\nimport { Injectable } from '@angular/core';\n\n// TSS.\nimport { AutoConfig } from '../core/auto-config.decorator';\n\n\n/**\n * Configuration class for storing Gps Gate-related settings.\n */\n@Injectable({\n  providedIn: 'root'\n})\n@AutoConfig('GpsGateConfig')\nexport class GpsGateConfig {\n  refreshInterval = 1000;\n  urlTemplate = 'http://localhost:12175/gps/{endpoint}?noCache={cacheBuster}';\n  getInfoEndpoint = 'getGpsInfo';\n  getVersionEndpoint = 'getVersion';\n  jsonpParameterName = 'jsonp';\n  geolocatorName = 'GpsGate Client';\n  geolocatorDescription = 'GpsGate client that can connect to a variety of GPS data sources.';\n}\n","// Angular.\nimport { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n// 3rd Party.\nimport { Observable, Subject, of } from 'rxjs';\nimport { finalize, map, catchError } from 'rxjs/operators';\n\n// TSS.\nimport { GeolocatorCapability } from '../geolocation/geolocator/geolocator-capability';\nimport { BaseGeolocator } from '../geolocation/geolocator/base-geolocator.service';\nimport { GeolocatorAccuracyUnit } from '../geolocation/geolocator/geolocator-accuracy-unit';\nimport { Logger } from '../core/logging/logger.service';\nimport { GpsGateConfig } from './gps-gate.config';\nimport { GpsGateVersionInfo } from './gps-gate-version-info';\nimport { GpsPosition } from '../geolocation/gps-position/gps-position';\nimport { GpsGateGpsInfo } from './gps-gate-gps-info';\nimport { format } from '../core/formatting/format.function';\nimport { Geolocatable } from '../geolocation/geolocator/geolocatable.decorator';\n\n\n/**\n * Wrapper for geolocation service. The wrapper primarily exists to abstract the direct interaction with\n * the \"navigator\" object and to allow for injecting other implementations of geolocation functionality.\n */\n@Injectable({ providedIn: 'root' })\n@Geolocatable('gps-gate')\nexport class GpsGateGeolocator extends BaseGeolocator {\n  capabilities = [\n    GeolocatorCapability.Altitude,\n    GeolocatorCapability.AltitudeAccuracy,\n    GeolocatorCapability.Heading,\n    GeolocatorCapability.Speed,\n    GeolocatorCapability.HDOP,\n  ];\n\n  get name(): string {\n    return this.config.geolocatorName;\n  }\n\n  get description(): string {\n    return this.config.geolocatorDescription;\n  }\n\n  constructor(log: Logger, private readonly http: HttpClient, private readonly config: GpsGateConfig) {\n    super(log);\n    this.accuracyUnit = GeolocatorAccuracyUnit.Hdop;\n  }\n\n  getCurrentPosition(options?: PositionOptions): Promise<GpsPosition> {\n    const url = format(this.config.urlTemplate, {\n      endpoint: this.config.getInfoEndpoint,\n      cacheBuster: new Date().getTime()\n    });\n\n    return this.http.jsonp<GpsGateGpsInfo>(url, this.config.jsonpParameterName)\n      .pipe(\n        map((info: GpsGateGpsInfo) => {\n          const timestamp = new Date(info.trackPoint.utc).getTime();\n          const position: GpsPosition = Object.assign({\n            timestamp,\n            // NOTE: We are setting accuracy to HDOP because since this geolocator does not have\n            // accuracy capabilities (see capabilities property), accuracy will not be shown within\n            // the UI - rather fallback PDOP, HDOP, VDOP, etc will be used. However, we want to set\n            // the accuracy because this value is what will be used to do collection\n            // accuracy/precision acceptance (acceptable, warning, unaceptable, etc) - RG.\n            accuracy: info.trackPoint.precision.hdop,\n            altitudeAccuracy: null,\n            speed: info.trackPoint.velocity.groundSpeed,\n            heading: info.trackPoint.velocity.heading,\n            hdop: info.trackPoint.precision.hdop\n          }, info.trackPoint.position);\n\n          this.log.trace(`Received current position for ${this.name}`);\n          return position;\n        })\n      )\n      .toPromise();\n  }\n\n  watchPosition(options?: PositionOptions): Observable<GpsPosition> {\n    let lastPosition: GpsPosition;\n    const subject = new Subject<GpsPosition>();\n    const interval = setInterval(() => {\n      this.getCurrentPosition(options)\n        .then(position => {\n          if (notEqual(position, lastPosition)) {\n            subject.next(position);\n          }\n\n          this.log.trace(`Received watch position for ${this.name}`);\n          lastPosition = position;\n        })\n        .catch(error => subject.error(error));\n    }, this.config.refreshInterval);\n\n    return subject.pipe(\n      finalize(() => clearInterval(interval))\n    );\n  }\n\n  isAvailable(): Observable<boolean> {\n    return this.getVersion()\n      .pipe(\n        map(result => Boolean(result)),\n        catchError(() => of(false))\n      );\n  }\n\n  getVersion(): Observable<GpsGateVersionInfo> {\n    const url = format(this.config.urlTemplate, {\n      endpoint: this.config.getVersionEndpoint,\n      cacheBuster: new Date().getTime()\n    });\n\n    return this.http.jsonp<GpsGateVersionInfo>(url, this.config.jsonpParameterName);\n  }\n}\n\nfunction notEqual(position1: GpsPosition, position2: GpsPosition): boolean {\n  return !equal(position1, position2);\n}\n\nfunction equal(position1: GpsPosition, position2: GpsPosition): boolean {\n  return position1\n    && position2\n    && position1.timestamp === position2.timestamp\n    && position1.latitude === position2.latitude\n    && position1.longitude === position2.longitude\n    && position1.accuracy === position2.accuracy\n    && position1.speed === position2.speed\n    && position1.heading === position2.heading\n    && position1.altitude === position2.altitude\n    && position1.altitudeAccuracy === position2.altitudeAccuracy\n    && position1.pdop === position2.pdop\n    && position1.hdop === position2.hdop\n    && position1.vdop === position2.vdop\n    && position1.tdop === position2.tdop;\n}\n","// Angular.\nimport { NgModule, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n// TSS.\nimport { TssCoreModule } from '../core/core.module';\nimport { TssGeolocationModule } from '../geolocation/geolocation.module';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    TssCoreModule,\n    TssGeolocationModule\n  ],\n  declarations: [\n  ],\n  exports: [\n  ],\n  providers: [\n  ],\n  schemas: [CUSTOM_ELEMENTS_SCHEMA]\n})\nexport class TssGpsGateModule { }\n","import { FeatureClassLayer } from '../../maps/feature-class-layer';\nimport { LayerDateFormat } from '../../maps/map-layer';\n\n\nexport class CalibrationPointLayer extends FeatureClassLayer {\n  versionName: string;\n  dateFormat: LayerDateFormat;\n  routeIdFieldName: string;\n  networkFieldName: string;\n  fromDateFieldName: string;\n  toDateFieldName: string;\n  measureFieldName: string;\n  lrs: { id: string, name: string; };\n}\n","export enum CapturePosition {\n    Center = 'center',\n    Left = 'left',\n    Right = 'right',\n    Sld = 'sld',\n    Map = 'map',\n    Lane = 'lane',\n    Shoulder = 'shoulder',\n    Curb = 'curb',\n}\n","import { FeatureClassLayer } from '../../maps/feature-class-layer';\nimport { LayerDateFormat } from '../../maps/map-layer';\n\n\nexport class CenterlineLayer extends FeatureClassLayer {\n  versionName: string;\n  dateFormat: LayerDateFormat;\n  centerlineIdFieldName: string;\n  roadwayIdFieldName: string;\n  lrs: { id: string, name: string; };\n}\n","// Angular.\nimport { Injectable } from '@angular/core';\nimport { HttpParams } from '@angular/common/http';\n\n// 3rd Party.\nimport { Observable } from 'rxjs';\nimport { LayerField, toFieldName, getGeometryFieldName } from '../../maps/fields/layer-field';\nimport { LrsLayer } from '../lrs-layer';\nimport { DataSource } from '../../data-source/data-source';\nimport { EsriMapServerService } from '../../esri/esri-map-server.service';\nimport { DataSourceService } from '../../data-source/data-source.service';\nimport { NetworkFeatureCollection } from '../networks/network-feature-collection';\nimport { NetworkLayer } from '../networks/network-layer';\nimport { EsriMapServiceQueryOptions } from '../../esri/query/esi-map-service-query-options';\nimport { WhereClauseBuilder } from '../../maps/where-clause-builder';\nimport { DataSourceConfig } from '../../data-source/data-source-config';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LrsDataService {\n  constructor(\n    private mapService: EsriMapServerService,\n    private dataSourceService: DataSourceService,\n    private dataSourceConfig: DataSourceConfig\n  ) {\n  }\n\n  getUniqueValues<T>(dataSource: DataSource, layer: LrsLayer, field: string | LayerField, whereClause?: string): Observable<T[]> {\n    const mapServiceParams: EsriMapServiceQueryOptions = { gdbVersion: layer.versionName };\n    let httpParams;\n\n    if (whereClause) {\n      mapServiceParams.where = whereClause;\n      httpParams = new HttpParams().set('where', whereClause);\n    }\n\n    return dataSource.serviceUrl\n      ? this.mapService.getUniqueValues<T>(dataSource.serviceUrl, layer, field, mapServiceParams)\n      : this.dataSourceService.getUniqueColumnValues<T>(dataSource.id, layer.featureClassName, toFieldName(field), httpParams);\n  }\n\n  getQueryCount(dataSource: DataSource, layer: LrsLayer, whereClause: string): Observable<number> {\n    return dataSource.serviceUrl\n      ? this.mapService.getQueryCount(dataSource.serviceUrl, layer, whereClause, { gdbVersion: layer.versionName })\n      : this.dataSourceService.getRecordCount(dataSource.id, layer.featureClassName, whereClause, layer.versionName);\n  }\n\n  queryRoutesByIds(dataSource: DataSource, layer: NetworkLayer, routeIds: string[]): Observable<NetworkFeatureCollection> {\n    if (!routeIds || !routeIds.length) {\n      throw new Error('Failed to query routes. No route IDs supplied.');\n    }\n\n    if (!layer.compositeRouteIdFieldName) {\n      throw new Error(`Failed to query routes. No 'compositeRouteIdFieldName' property found for layer.`);\n    }\n\n    const whereClause = `${layer.compositeRouteIdFieldName} IN ('${routeIds.join(`','`)}')`;\n    return this.queryRoutes(dataSource, layer, whereClause);\n  }\n\n  queryRoutes(dataSource: DataSource, layer: NetworkLayer, whereClause?: string): Observable<NetworkFeatureCollection> {\n    const shapeFieldName = getGeometryFieldName(layer.fields);\n\n    return dataSource.serviceUrl\n      ? this.mapService.queryRoutes(dataSource.serviceUrl, layer, whereClause, { gdbVersion: layer.versionName })\n      : this.dataSourceService.querySpatialData(\n        dataSource.id,\n        layer.featureClassName,\n        whereClause,\n        layer.versionName,\n        null,\n        null,\n        true,\n        shapeFieldName\n      );\n  }\n\n  searchRoutesByText(dataSource: DataSource, layer: NetworkLayer, searchText: string): Observable<NetworkFeatureCollection> {\n    const useMapService = Boolean(dataSource.serviceUrl);\n    const shapeFieldName = getGeometryFieldName(layer.fields);\n    let whereClause: string;\n\n    if (!useMapService) {\n      whereClause = new WhereClauseBuilder({\n        quoteFields: !this.dataSourceConfig.skipColumnQuotes\n      })\n        .whereLike(layer.displayField, searchText)\n        .toWhereClause();\n    }\n\n    return useMapService\n      ? this.mapService.searchRoutesByText(dataSource.serviceUrl, layer, searchText, { gdbVersion: layer.versionName })\n      : this.dataSourceService.querySpatialData(\n        dataSource.id,\n        layer.featureClassName,\n        whereClause,\n        layer.versionName,\n        null,\n        null,\n        true,\n        shapeFieldName\n      );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { AutoConfig } from '../core/auto-config.decorator';\nimport { ResourceConfig } from '../core/resource.config';\n\n\n/**\n * Configuration class for storing global ESRI-related settings.\n */\n@Injectable({\n  providedIn: 'root'\n})\n@AutoConfig('LrsConfig')\nexport class LrsConfig extends ResourceConfig {\n  dataSourceLrsMetadataEndpoint = 'api/spatial/data/sources/{dataSourceId}/lrs/meta';\n  cacheInSessionLrsMetadata = true;\n}\n","// Angular.\nimport { HttpClient, HttpParams } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\n// 3rd Party.\nimport { Observable } from 'rxjs';\n\n// TSS.\nimport { LrsConfig } from './lrs.config';\nimport { LrsMetadata } from './lrs-metadata';\nimport { join } from '../core/url/join.function';\nimport { BaseResourceService } from '../core/resource/base-resource.service';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DataSourceLrsMetadataService extends BaseResourceService<LrsMetadata> {\n  constructor(protected http: HttpClient, config: LrsConfig) {\n    super(http, {\n      url: join(config.serviceUrl, config.dataSourceLrsMetadataEndpoint),\n      idFieldName: 'dataSourceId'\n    });\n  }\n\n  create(entity: LrsMetadata, routeTokens?: any, params?: HttpParams): Observable<LrsMetadata> {\n    routeTokens = routeTokens || {};\n    routeTokens.id = entity.dataSourceId;\n\n    return super.create(entity, routeTokens, params);\n  }\n}\n","import { FeatureClassLayer } from '../maps/feature-class-layer';\nimport { LayerDateFormat, MapLayerType, MapLayer } from '../maps/map-layer';\nimport { SpatialReferenceInfo } from '../maps/spatial-reference';\nimport { stripTableName } from '../data-source/data-table';\nimport { CapturePositionDefinition } from './capture-position-definition';\nimport { LaneMetadata } from './lane-metadata';\nimport { CapturePosition } from './capture-position';\n\n\nexport function getLayerTableName(layer: LrsLayer, stripLayerTableName: boolean = false) {\n  let tableName = layer\n    ? layer.featureClassName || layer.datasetName\n    : null;\n\n  if (stripLayerTableName) {\n    tableName = stripTableName(tableName);\n  }\n\n  return tableName;\n}\n\nexport interface TemporalLayer {\n  fromDateFieldName?: string;\n  toDateFieldName?: string;\n}\n\n\nexport interface DataLayer {\n  featureClassName: string;\n}\n\n\nexport interface NetworkLayerMappingInfo {\n  id: number;\n  name?: string;\n  type?: MapLayerType;\n}\n\n\nexport interface LrsReferenceLayer extends TemporalLayer {\n  routeIdFieldName: string;\n  fromMeasureFieldName: string;\n  toMeasureFieldName: string;\n}\n\n\nexport interface LrsDataReferenceLayer extends LrsReferenceLayer, DataLayer {\n}\n\n\nexport interface ChildLrsLayer {\n  parentNetwork: NetworkLayerMappingInfo;\n}\n\nexport interface EditableLayer {\n  targetFeatureClassName?: string;\n  modifiedDateFieldName?: string;\n  modifiedByFieldName?: string;\n}\n\nexport class LrsLayer extends FeatureClassLayer implements LaneMetadata, EditableLayer {\n  // Standard LRS properties.\n  featureClassName: string;\n\n  lrsNetworkId?: number;\n  datasetName?: string;\n  unitsOfMeasure?: string;\n  measurePrecision?: number;\n  temporalViewDate?: Date;\n  timeZoneOffset?: number;\n  versionName?: string;\n  isRouteEventSource?: boolean;\n  isStaged?: boolean;\n  dateFormat?: LayerDateFormat;\n  spatialReferenceInfo?: SpatialReferenceInfo;\n  fromDateFieldName?: string;\n  toDateFieldName?: string;\n  lrs?: NetworkLayerMappingInfo;\n\n  // Edit properties.\n  targetFeatureClassName?: string;\n  modifiedDateFieldName?: string;\n  modifiedByFieldName?: string;\n\n  preventOverlaps?: boolean;\n  autoStopCaptureOnRecordBreak?: boolean;\n\n  // Lane metadata implementation.\n  forwardLaneCountFieldName?: string;\n  reverseLaneCountFieldName?: string;\n\n  positionIdentifierFieldName?: string;\n  capturePositions: CapturePositionDefinition[];\n\n  laneDrawValueOrder?: string[];\n  laneIdentifierReverseValues?: string[];\n\n  constructor(...sources: MapLayer[]) {\n    super(...sources);\n    this.capturePositions = this.capturePositions ? this.capturePositions : [];\n  }\n\n  getPositionByValue(value): CapturePositionDefinition {\n    return this.capturePositions.find(positionDef => positionDef.value === value);\n  }\n\n  getPositions(position: CapturePosition): CapturePositionDefinition[] {\n    return this.capturePositions.filter(positionDef => positionDef.position === position);\n  }\n\n  hasPosition(position: CapturePosition): boolean {\n    const positions = this.getPositions(position);\n    return positions.length > 0;\n  }\n\n  get hasAnyPositions(): boolean {\n    return this.capturePositions.length > 0;\n  }\n\n  get hasLanePosition(): boolean {\n    const positions = this.getPositions(CapturePosition.Lane);\n    return positions.length > 0;\n  }\n\n  get hasLeftPosition(): boolean {\n    const positions = this.getPositions(CapturePosition.Left);\n    return positions.length > 0;\n  }\n\n  get hasRightPosition(): boolean {\n    const positions = this.getPositions(CapturePosition.Right);\n    return positions.length > 0;\n  }\n\n  get hasCenterPosition(): boolean {\n    const positions = this.getPositions(CapturePosition.Center);\n    return positions.length > 0;\n  }\n}\n","import {\n  LrsLayer,\n  LrsDataReferenceLayer,\n  ChildLrsLayer,\n  NetworkLayerMappingInfo\n} from '../lrs-layer';\n\n\nexport class EventLayer extends LrsLayer implements LrsDataReferenceLayer, ChildLrsLayer {\n  routeIdFieldName: string;\n  eventIdFieldName: string;\n  routeNameFieldName: string;\n  fromMeasureFieldName: string;\n  toMeasureFieldName: string;\n  shapeFieldName: string;\n  xFieldName: string;\n  yFieldName: string;\n  locErrorFieldName: string;\n  canSpanRoutes: boolean;\n  hasReferentLocation: boolean;\n  isStationEvent: boolean;\n  parentNetwork: NetworkLayerMappingInfo;\n}\n","import { NetworkLayer } from '../networks/network-layer';\nimport { HierarchyFilter } from './hierarchy-filter';\n\n\nexport function generateHierarchyFilters(layer: NetworkLayer): HierarchyFilter[] {\n  return layer.routeIdFields.map((fieldName, index) => {\n    const isFirst = index === 0;\n    const field = layer.fields.find(f => f.name === fieldName);\n\n    if (!field) {\n      throw new Error(`Invalid network layer 'routeIdFields' configuration. Field '${fieldName}' not found on layer.`);\n    }\n\n    return {\n      isRoot: isFirst,\n      label: field.alias,\n      networkLayerIdFieldName: field.name\n    };\n  });\n}\n","import { ChildLrsLayer, NetworkLayerMappingInfo } from '../lrs-layer';\nimport { FeatureClassLayer } from '../../maps/feature-class-layer';\n\n\nexport class IntersectionLayer extends FeatureClassLayer implements ChildLrsLayer {\n  intersectionIdFieldName: string;\n  intersectionNameFieldName: string;\n  parentNetworkDescriptionFieldName: string;\n  measureFieldName: string;\n  parentNetwork: NetworkLayerMappingInfo;\n}\n","import { MapLayer } from '../maps/map-layer';\n\n\nexport function findLayer(layerId: number, ...layerList: MapLayer[][]): MapLayer {\n  let layer: MapLayer;\n  layerList.forEach(layers => {\n    layer = layer || (layers || []).find(l => l && l.id === layerId);\n  });\n\n  return layer;\n}\n","import { LrsLayer, NetworkLayerMappingInfo } from '../lrs-layer';\nimport { HierarchyFilter } from '../hierarchy/hierarchy-filter';\nimport { MapLayer } from '../../maps/map-layer';\nimport { generateHierarchyFilters } from '../hierarchy/generate-hierarchy-filters.function';\n\n\nexport class NetworkLayer extends LrsLayer {\n  routeIdFields: string[];\n  routeIdSeparator: string;\n  compositeRouteIdFieldName: string;\n  routeNameFieldName: string;\n  hasDominanceRules: boolean;\n  autoGenerateRouteName: boolean;\n  supportsLines: boolean;\n  eventLayers: NetworkLayerMappingInfo[];\n  intersectionLayers: NetworkLayerMappingInfo[];\n  hierarchyFilter: HierarchyFilter[];\n\n  constructor(...sources: MapLayer[]) {\n    super(...sources);\n\n    this.routeIdFields = this.routeIdFields || [];\n    this.eventLayers = this.eventLayers || [];\n    this.intersectionLayers = this.intersectionLayers || [];\n    this.hierarchyFilter = this.hierarchyFilter && this.hierarchyFilter.length\n      ? this.hierarchyFilter\n      : generateHierarchyFilters(this);\n  }\n}\n","import { LrsReferenceLayer, LrsLayer } from '../lrs-layer';\n\n\nexport class RedlineLayer extends LrsLayer implements LrsReferenceLayer {\n  routeIdFieldName: string;\n  routeNameFieldName: string;\n  fromMeasureFieldName: string;\n  toMeasureFieldName: string;\n  activityTypeFieldName: string;\n  networkFieldName: string;\n\n  get effectiveDateFieldName(): string {\n    return this.fromDateFieldName;\n  }\n\n  set effectiveDateFieldName(effectiveDateFieldName: string) {\n    this.fromDateFieldName = effectiveDateFieldName;\n  }\n}\n","import { FeatureClassLayer } from './feature-class-layer';\nimport { MapTable } from './map-table';\nimport { clone } from '../core/clone/clone.function';\nimport { Cloneable } from '../core/clone/cloneable';\n\n\nexport class MapServerMetadata implements Cloneable<MapServerMetadata> {\n  layers: FeatureClassLayer[];\n  tables: MapTable[];\n\n  assign(source: any): MapServerMetadata {\n    Object.assign(this, source);\n    return this;\n  }\n\n  clone(): MapServerMetadata {\n    const copy = clone(this);\n    return new MapServerMetadata()\n      .assign(copy);\n  }\n}\n","import { LrsLayer } from './lrs-layer';\nimport { NetworkLayer } from './networks/network-layer';\nimport { getIdField } from '../maps/fields/layer-field';\nimport { LrsMetadata } from './lrs-metadata';\nimport { ValidationCheck } from '../core/validation/validation-check';\n\n\nexport const LRS_LAYER_VALIDATIONS: ValidationCheck<LrsLayer> = new ValidationCheck<LrsLayer>(`Layer '{name}'`)\n  .add(\n    new ValidationCheck<LrsLayer>('should have list of fields')\n      .pass(l => Boolean(l.fields && l.fields.length)),\n\n    new ValidationCheck<LrsLayer>('should have an ID field in list of fields')\n      .pass(l => Boolean(getIdField(l.fields)))\n  );\n\nexport const LRS_NETWORK_LAYER_VALIDATIONS: ValidationCheck<NetworkLayer> = new ValidationCheck<NetworkLayer>(\n  `Network layer '{name}' (ID: {id})`\n)\n  .add(\n    new ValidationCheck<NetworkLayer>(`should have a 'Composite Route ID Field Name' value specified`)\n      .pass(l => Boolean(l.compositeRouteIdFieldName))\n  );\n\nexport const LRS_EVENT_LAYER_VALIDATIONS: ValidationCheck<NetworkLayer> = new ValidationCheck<NetworkLayer>(\n  `Event layer '{name}' (ID: {id})`\n)\n  .add(\n    new ValidationCheck<NetworkLayer>(`should have a 'From Measure Field Name' value specified`)\n      .pass(l => Boolean(l.compositeRouteIdFieldName))\n  );\n\nexport const LRS_METADATA_VALIDATIONS: ValidationCheck<LrsMetadata> = new ValidationCheck<LrsMetadata>('LRS Metadata')\n  .add(\n    new ValidationCheck<LrsMetadata>('should have network layers')\n      .pass(x => Boolean(x.networkLayers && x.networkLayers.length)),\n\n    new ValidationCheck<LrsMetadata>('should have event layers')\n      .pass(x => Boolean(x.eventLayers && x.eventLayers.length)),\n\n    // TODO: Add other nested validations - RG.\n    // .forProperty(lrsMeta => lrsMeta.eventLayers)\n    // .add()\n  );\n","import { FeatureClassLayer } from '../../maps/feature-class-layer';\nimport { LayerDateFormat } from '../../maps/map-layer';\n\n\nexport class NonLrsLayer extends FeatureClassLayer {\n  featureClassName: string;\n  versionName: string;\n  dateFormat: LayerDateFormat;\n}\n","import { DataSource } from '../data-source/data-source';\nimport { FeatureClassLayer } from '../maps/feature-class-layer';\nimport { IntersectionLayer } from './intersections/intersection-layer';\nimport { EventLayer } from './events/event-layer';\nimport { NetworkLayer } from './networks/network-layer';\nimport { RedlineLayer } from './redlines/redline-layer';\nimport { CenterlineLayer } from './centerlines/centerline-layer';\nimport { CalibrationPointLayer } from './calibration-points/calibration-point-layer';\nimport { MapServerMetadata } from '../maps/map-server-metadata';\nimport { getGeometryField, getIdField, LayerFieldDomain } from '../maps/fields/layer-field';\nimport { MapLayer } from '../maps/map-layer';\nimport { LrsLayer } from './lrs-layer';\nimport { LrsLayerDetail } from './lrs-layer-detail';\nimport { LrsInfo } from './lrs-info';\nimport { findLayer } from './layer-search';\nimport { mergeMapMetadata, mergeLrsMetadata, deepMergeMapMetadata } from './lrs-metadata-merge';\nimport { LRS_METADATA_VALIDATIONS } from './lrs-metadata-validations';\nimport { NonLrsLayer } from './non-lrs/non-lrs-layer';\nimport { Cloneable } from '../core/clone/cloneable';\nimport { isNotValue } from '../core/type-check/is-not-value.function';\nimport { clone } from '../core/clone/clone.function';\nimport { ValidationResult } from '../core/validation/validation-results';\n\n\nfunction find(layerId: number, ...layerList: MapLayer[][]): MapLayer {\n  return findLayer(layerId, ...layerList);\n}\n\n\nexport class LrsMetadata extends MapServerMetadata implements Cloneable<LrsMetadata> {\n  dataSource: DataSource;\n  dataSourceId: string;\n  name: string;\n  serviceHasLrsMeta: boolean;\n  networkLayers: NetworkLayer[] = [];\n  eventLayers: EventLayer[] = [];\n  redlineLayers: RedlineLayer[] = [];\n  centerlineLayers: CenterlineLayer[] = [];\n  calibrationPointLayers: CalibrationPointLayer[] = [];\n  intersectionLayers: IntersectionLayer[] = [];\n  nonLRSLayers: FeatureClassLayer[] = [];\n  lrs: LrsInfo[] = [];\n  domains: LayerFieldDomain[] = [];\n\n  constructor(dataSource?: DataSource) {\n    super();\n\n    if (dataSource) {\n      this.dataSource = dataSource;\n      this.dataSourceId = dataSource.id;\n    }\n  }\n\n  /**\n   * Gets a layer by ID - searching across all types (event layers, network layers, etc).\n   */\n  getLayer(layerId: number): MapLayer {\n    return find(layerId, this.getAllLayers());\n  }\n\n  getLrsLayer(layerId: number): LrsLayer {\n    return (\n      find(layerId, this.networkLayers, this.eventLayers, this.redlineLayers)\n    ) as LrsLayer;\n  }\n\n  getLayerDetail(layerId: number): LrsLayerDetail {\n    // TODO: Come up with a better way to check these layer types.\n    // NOTE: We are doing all of these boolean checks instead of just simply calling\n    // isEventLayer = this.isEventLayer(layerId) because of performance reasons.\n    const isLrsLayer = this.isLrsLayer(layerId);\n    const isEventLayer = this.isEventLayer(layerId);\n    const isNetworkLayer = !isEventLayer && this.isNetworkLayer(layerId);\n    const isCalibrationPointLayer = !isEventLayer && !isNetworkLayer && this.isCalibrationPointLayer(layerId);\n    const isCenterlineLayer = !isEventLayer && !isNetworkLayer && !isCalibrationPointLayer && this.isCenterlineLayer(layerId);\n    const isIntersectionLayer = !isEventLayer && !isNetworkLayer && !isCalibrationPointLayer && !isCenterlineLayer\n      && this.isIntersectionLayer(layerId);\n    const isRedlineLayer = !isEventLayer && !isNetworkLayer && !isCalibrationPointLayer && !isCenterlineLayer && !isIntersectionLayer\n      && this.isRedlineLayer(layerId);\n    const isTable = !isEventLayer && !isNetworkLayer && !isCalibrationPointLayer && !isCenterlineLayer && !isIntersectionLayer\n      && !isRedlineLayer && this.isTable(layerId);\n    const isNonLRSLayer = !isEventLayer && !isNetworkLayer && !isCalibrationPointLayer && !isCenterlineLayer && !isIntersectionLayer\n      && !isRedlineLayer && !isTable && this.isNonLRSLayer(layerId);\n    const layer: MapLayer = this.getLayer(layerId);\n    const shapeField = layer ? getGeometryField(layer.fields) : null;\n    const idField = layer ? getIdField(layer.fields) : null;\n\n    return {\n      layer,\n      layerId,\n      isEventLayer,\n      isNetworkLayer,\n      isCalibrationPointLayer,\n      isCenterlineLayer,\n      isIntersectionLayer,\n      isRedlineLayer,\n      isTable,\n      isNonLRSLayer,\n      isLrsLayer,\n      shapeField,\n      idField,\n    };\n  }\n\n  isLrsLayer(layerId: number): boolean {\n    return Boolean(\n      this.getLrsLayer(layerId)\n    );\n  }\n\n  isNetworkLayer(layerId: number): boolean {\n    return Boolean(find(layerId, this.networkLayers));\n  }\n\n  isEventLayer(layerId: number): boolean {\n    return Boolean(find(layerId, this.eventLayers));\n  }\n\n  isIntersectionLayer(layerId: number): boolean {\n    return Boolean(find(layerId, this.intersectionLayers));\n  }\n\n  isRedlineLayer(layerId: number): boolean {\n    return Boolean(find(layerId, this.redlineLayers));\n  }\n\n  isCenterlineLayer(layerId: number): boolean {\n    return Boolean(find(layerId, this.centerlineLayers));\n  }\n\n  isCalibrationPointLayer(layerId: number): boolean {\n    return Boolean(find(layerId, this.calibrationPointLayers));\n  }\n\n  isNonLRSLayer(layerId: number): boolean {\n    return Boolean(find(layerId, this.nonLRSLayers));\n  }\n\n  isTable(layerId: number): boolean {\n    return Boolean(find(layerId, this.tables));\n  }\n\n  /**\n   * Merges map server general information into this LRS metadata instance.\n   */\n  mergeMapMetadata(mapMetadata: MapServerMetadata): LrsMetadata {\n    mergeMapMetadata(this, mapMetadata);\n    return this;\n  }\n\n  deepMergeMapMetadata(mapMetadata: MapServerMetadata): LrsMetadata {\n    deepMergeMapMetadata(this, mapMetadata);\n    return this;\n  }\n\n  /**\n   * Merges other LRS metadata into this LRS metdata instance.\n   */\n  mergeLrsMetadata(lrsMetadata: LrsMetadata): LrsMetadata {\n    mergeLrsMetadata(this, lrsMetadata);\n    return this;\n  }\n\n  getNetworkLayer(layerId: number): NetworkLayer {\n    return find(layerId, this.networkLayers) as NetworkLayer;\n  }\n\n  getEventLayer(layerId: number): EventLayer {\n    return find(layerId, this.eventLayers) as EventLayer;\n  }\n\n  getIntersectionLayer(layerId: number): IntersectionLayer {\n    return find(layerId, this.intersectionLayers) as IntersectionLayer;\n  }\n\n  getLrsLayers(): LrsLayer[] {\n    return (this.eventLayers as LrsLayer[])\n      .concat(this.networkLayers)\n      .concat(this.redlineLayers);\n  }\n\n  getFeatureClassLayers(): FeatureClassLayer[] {\n    return (this.eventLayers as FeatureClassLayer[])\n      .concat(this.networkLayers)\n      .concat(this.redlineLayers)\n      .concat(this.calibrationPointLayers)\n      .concat(this.centerlineLayers)\n      .concat(this.nonLRSLayers);\n  }\n\n  getAllLayers(): MapLayer[] {\n    return (this.getFeatureClassLayers() as MapLayer[])\n      .concat(this.tables)\n      .concat(this.layers);\n  }\n\n  getNetworkIdForLayer(layer: LrsLayer): number | null {\n    let networkId: number = null;\n    if (this.isEventLayer(layer.id)) {\n      const eventLayer = layer as EventLayer;\n      networkId = eventLayer.parentNetwork ? eventLayer.parentNetwork.id : null;\n    }\n\n    if (isNotValue(networkId)) {\n      this.networkLayers.forEach(network => {\n        if (network.eventLayers.find(l => l.id === layer.id)) {\n          networkId = network.id;\n        }\n      });\n    }\n\n    return networkId;\n  }\n\n  getEventLayersByNetwork(networkLayerId: number): EventLayer[] {\n    const networkLayer = this.getNetworkLayer(networkLayerId);\n    return this.eventLayers.filter(layer =>\n      layer.parentNetwork\n      && layer.parentNetwork.id === networkLayerId\n      || networkLayer.eventLayers\n      && networkLayer.eventLayers.find(l => l.id === layer.id)\n    );\n  }\n\n  rebuildLayers(): this {\n    this.eventLayers = this.eventLayers.map(eventLayer => new EventLayer(find(eventLayer.id, this.layers), eventLayer));\n    this.networkLayers = this.networkLayers.map(networkLayer => new NetworkLayer(find(networkLayer.id, this.layers), networkLayer));\n    this.redlineLayers = this.redlineLayers.map(redlineLayer => new RedlineLayer(find(redlineLayer.id, this.layers), redlineLayer));\n    this.centerlineLayers = this.centerlineLayers.map(centerlineLayer => new CenterlineLayer(centerlineLayer));\n    this.calibrationPointLayers = this.calibrationPointLayers.map(\n      calibrationPointLayer => new CalibrationPointLayer(calibrationPointLayer)\n    );\n    this.intersectionLayers = this.intersectionLayers.map(intersectionLayer => new IntersectionLayer(intersectionLayer));\n    this.nonLRSLayers = this.nonLRSLayers.map(nonLrsLayer => new NonLrsLayer(find(nonLrsLayer.id, this.layers), nonLrsLayer));\n\n    return this.assignCodedValueDomainsToFields();\n  }\n\n  assignCodedValueDomainsToFields(): this {\n    if (this.domains.length) {\n      this.getFeatureClassLayers()\n        .forEach(layer => layer.applyFieldDomains(this.domains));\n    }\n\n    return this;\n  }\n\n  assign(source: any): this {\n    Object.assign(this, source);\n    return this;\n  }\n\n  clone(): LrsMetadata {\n    const copy = clone(this);\n    return new LrsMetadata()\n      .assign(copy)\n      .rebuildLayers();\n  }\n\n  validate(): ValidationResult {\n    return LRS_METADATA_VALIDATIONS\n      .check(this);\n  }\n}\n","import { LayerField, LayerFieldDomain } from '../maps/fields/layer-field';\nimport { LrsMetadata } from './lrs-metadata';\nimport { MapServerMetadata } from '../maps/map-server-metadata';\nimport { findLayer } from './layer-search';\nimport { MapLayer } from '../maps/map-layer';\nimport { NetworkLayer } from './networks/network-layer';\nimport { DataSource } from '../data-source/data-source';\nimport { LayerDrawingInfo } from '../maps/drawing/layer-drawing-info';\nimport { FeatureClassLayer } from '../maps/feature-class-layer';\nimport { mergeDeep } from '../core/merge/merge-deep.function';\nimport { mergeDeepArray } from '../core/merge/merge-deep-array.function';\nimport { isNumber } from '../core/type-check/is-number.function';\nimport { LrsLayer } from './lrs-layer';\n\n\nfunction find(layerId: number, ...layerList: MapLayer[][]): MapLayer {\n  return findLayer(layerId, ...layerList);\n}\n\nfunction setLayerDefaults(layer: MapLayer): void {\n  layer.fields = layer.fields || [];\n}\n\nfunction setNetworkLayerDefaults(layer: NetworkLayer): void {\n  if (layer) {\n    layer.hierarchyFilter = layer.hierarchyFilter || [];\n  }\n}\n\nexport function mergeFieldDomains(target: LayerFieldDomain, source: LayerFieldDomain) {\n  mergeDeep(target, source, { ignoreArrays: true });\n\n  if (target && target.codedValues && source && source.codedValues) {\n    mergeDeepArray(target.codedValues, source.codedValues, { identifier: 'code' });\n  }\n}\n\nexport function mergeFields(target: LayerField[], source: LayerField[]) {\n  target = target || [];\n  source = source || [];\n\n  mergeDeepArray(target, source, {\n    identifier: 'name',\n    beforeMerge: (targetField: LayerField, sourceField: LayerField) => {\n      if (targetField.domain && sourceField.domain && sourceField.domain.codedValues) {\n        const doValuesNeedMerged = sourceField.domain.codedValues.filter(c => isNumber(c.order));\n\n        if (doValuesNeedMerged && doValuesNeedMerged.length) {\n          mergeFieldDomains(targetField.domain, sourceField.domain);\n          return false;\n        }\n      }\n    }\n  });\n}\n\nexport function mergeLayer(target: MapLayer, source: MapLayer) {\n  if (!target || !source) {\n    return;\n  }\n\n\n  const lrsTarget = target as LrsLayer;\n  const lrsSource = source as LrsLayer;\n  const targetCapturePositions = lrsTarget.capturePositions || [];\n  const sourceCapturePositions = lrsSource.capturePositions || [];\n  const targetDrawingInfo = lrsTarget.drawingInfo as LayerDrawingInfo;\n  const sourceDrawingInfo = lrsSource.drawingInfo as LayerDrawingInfo;\n  const hasDrawingInfo = Boolean(targetDrawingInfo || sourceDrawingInfo);\n  const drawingInfo = new LayerDrawingInfo(lrsTarget.drawingInfo as LayerDrawingInfo, lrsSource.drawingInfo as LayerDrawingInfo);\n\n  mergeDeep(target, source, { ignoreArrays: true });\n  mergeFields(target.fields, source.fields);\n\n  if (hasDrawingInfo) {\n    (target as FeatureClassLayer).drawingInfo = drawingInfo;\n  }\n\n  if (!targetCapturePositions.length && sourceCapturePositions.length) {\n    lrsTarget.capturePositions = sourceCapturePositions;\n  }\n}\n\nexport function mergeLayers(\n  target: MapLayer[],\n  source: MapLayer[],\n  sourceMetadata?: LrsMetadata,\n  sort = true,\n  onMergeComplete: (target: MapLayer, source: MapLayer) => any = null\n) {\n  target = target || [];\n  source = source || [];\n\n  target.forEach((targetLayer: MapLayer) => {\n    setLayerDefaults(targetLayer);\n    mergeLayer(targetLayer, source.find(sourceLayer => sourceLayer.id === targetLayer.id));\n  });\n\n  // There will be occurences where the source has layers that the target doesn't, which\n  // means that the merge will not happen above, because the target is the one being looped.\n  source\n    .filter(src => !target.find(x => src.id === x.id))\n    .forEach(missing => {\n      let newLayer: MapLayer = missing;\n      if (sourceMetadata) {\n        const merger: MapLayer = find(missing.id, sourceMetadata.tables, sourceMetadata.layers, sourceMetadata.nonLRSLayers);\n\n        // We want to preseve the original table or layer, so we don't overwrite it here.\n        newLayer = Object.assign({}, merger);\n        mergeLayer(newLayer, missing);\n      }\n\n      setLayerDefaults(newLayer);\n      target.push(newLayer);\n    });\n\n  if (sort) {\n    target.sort((layer1, layer2) => layer1.order - layer2.order);\n  }\n\n  if (onMergeComplete) {\n    target.forEach((targetLayer: MapLayer) => {\n      onMergeComplete(targetLayer, source.find(sourceLayer => sourceLayer.id === targetLayer.id));\n    });\n  }\n}\n\nexport function mergeNetworkLayers(target: NetworkLayer[], source: NetworkLayer[], sourceMetadata?: LrsMetadata) {\n  const isSorted = true;\n  mergeLayers(target, source, sourceMetadata, isSorted, onMergeNetworkLayerComplete);\n}\n\nexport function onMergeNetworkLayerComplete(targetLayer: NetworkLayer, sourceLayer: NetworkLayer): void {\n  setNetworkLayerDefaults(targetLayer);\n  setNetworkLayerDefaults(sourceLayer);\n\n  if (targetLayer && sourceLayer) {\n    mergeDeepArray(targetLayer.hierarchyFilter, sourceLayer.hierarchyFilter, { identifier: 'name' });\n  }\n}\n\nexport function mergeLrsMetadata(target: LrsMetadata, ...source: LrsMetadata[]): void {\n  source.forEach(srcMeta => {\n    const dataSource = srcMeta.dataSource || target.dataSource;\n    mergeDeep(target, srcMeta, { ignoreArrays: true });\n\n    if (dataSource) {\n      target.dataSource = dataSource;\n    }\n\n    mergeNetworkLayers(target.networkLayers, srcMeta.networkLayers, target);\n    mergeLayers(target.eventLayers, srcMeta.eventLayers, target);\n    mergeLayers(target.calibrationPointLayers, srcMeta.calibrationPointLayers, target);\n    mergeLayers(target.intersectionLayers, srcMeta.intersectionLayers, target);\n    mergeLayers(target.centerlineLayers, srcMeta.centerlineLayers, target);\n    mergeLayers(target.redlineLayers, srcMeta.redlineLayers, target);\n    mergeLayers(target.nonLRSLayers, srcMeta.nonLRSLayers, target);\n    mergeLayers(target.layers, srcMeta.layers);\n    mergeLayers(target.tables, srcMeta.tables);\n  });\n}\n\nexport function mergeMapMetadata(target: LrsMetadata, ...source: MapServerMetadata[]): void {\n  source.forEach(meta => {\n    Object.assign(target, meta);\n  });\n}\n\nexport function deepMergeMapMetadata(target: LrsMetadata, ...source: MapServerMetadata[]): void {\n  source.forEach(meta => {\n    meta.layers.forEach(nonLrsLayerInfo => {\n      const targetLayer = target.getLrsLayer(nonLrsLayerInfo.id);\n      if (targetLayer) {\n        const baseFields = [...nonLrsLayerInfo.fields];\n        mergeFields(baseFields, targetLayer.fields);\n        targetLayer.fields = baseFields;\n        if (nonLrsLayerInfo.geometryType) {\n          targetLayer.geometryType = nonLrsLayerInfo.geometryType;\n        }\n\n        targetLayer.drawingInfo = new LayerDrawingInfo(nonLrsLayerInfo.drawingInfo, targetLayer.drawingInfo);\n      }\n    });\n  });\n}\n\nexport function mergeLrsMetadataSources(\n  dataSource: DataSource,\n  dataSourceLrsMetadata: LrsMetadata,\n  mapServerLrsMetadata: LrsMetadata,\n  mapServerMetadata: MapServerMetadata\n): LrsMetadata {\n  const hasMapServerLrsMetadata = Boolean(mapServerLrsMetadata);\n  const fullLrsMeta = mapServerLrsMetadata\n    || dataSourceLrsMetadata\n    || new LrsMetadata(dataSource);\n\n  fullLrsMeta.mergeMapMetadata(mapServerMetadata);\n  fullLrsMeta.dataSource = fullLrsMeta.dataSource || dataSource;\n  fullLrsMeta.dataSourceId = fullLrsMeta.dataSourceId || dataSource.id;\n\n  if (hasMapServerLrsMetadata) {\n    // If the map service has LRS metadata then we need to merge the\n    // data source LRS metadata into the map service lrs metadata\n    // because we want the data source metadata to be priority.\n    fullLrsMeta.mergeLrsMetadata(dataSourceLrsMetadata);\n  } else {\n    // We only need to do a dep merge when there is no LRS metadata available in the map service because\n    // the map service LRS metadata provides all of the same information as the map server metadata (like fields).\n    fullLrsMeta.deepMergeMapMetadata(mapServerMetadata);\n  }\n\n  fullLrsMeta.rebuildLayers();\n\n  return fullLrsMeta;\n}\n","import { HttpClient } from '@angular/common/http';\n\nimport { Observable, forkJoin, of } from 'rxjs';\nimport { map, tap, mergeMap } from 'rxjs/operators';\n\nimport { LrsMetadata } from './lrs-metadata';\nimport { DataSource } from '../data-source/data-source';\nimport { DataSourceService } from '../data-source/data-source.service';\nimport { MapServerMetadata } from '../maps/map-server-metadata';\nimport { DataSourceLrsMetadataService } from './data-source-lrs-metadata.service';\nimport { Logger } from '../core/logging/logger.service';\nimport { NotifyService } from '../core/notify/notify.service';\nimport { EsriMapServerService } from '../esri/esri-map-server.service';\nimport { mergeLrsMetadataSources } from './lrs-metadata-merge';\nimport { isString } from '../core/type-check/is-string.function';\n\n\nexport class LrsMetadataRetriever {\n  private dataSourceId: string;\n  private dataSource: DataSource;\n  private dataSourceLrsMetadata: LrsMetadata;\n  private mapServerMetadata: MapServerMetadata;\n  private mapServerLrsMetadata: LrsMetadata;\n\n  constructor(\n    protected http: HttpClient,\n    protected mapServer: EsriMapServerService,\n    protected dataSourceService: DataSourceService,\n    protected dataSourceLrsMetadataService: DataSourceLrsMetadataService,\n    protected notify: NotifyService,\n    protected log: Logger) {\n  }\n\n  public withDataSource(dataSource: string | DataSource): LrsMetadataRetriever {\n    if (isString(dataSource)) {\n      this.dataSourceId = dataSource as string;\n    } else {\n      this.dataSource = dataSource as DataSource;\n      this.dataSourceId = this.dataSource.id;\n    }\n\n    return this;\n  }\n\n  public withLrsMetadata(lrsMeta: LrsMetadata): LrsMetadataRetriever {\n    this.dataSourceLrsMetadata = lrsMeta;\n    return this;\n  }\n\n  public retrieve(): Observable<LrsMetadata> {\n    if (!this.dataSourceId) {\n      throw new Error('A data source ID must be supplied');\n    }\n\n    return of(null)\n      .pipe(\n        mergeMap(this.getDataSource.bind(this)),\n        mergeMap(this.getDataSourceLrsMetadata.bind(this)),\n        mergeMap(this.getMapServiceLayers.bind(this)),\n        mergeMap(this.getMapServiceLrsMetadata.bind(this)),\n        mergeMap(this.mergeAll.bind(this))\n      );\n  }\n\n  private getDataSource(): Observable<DataSource> {\n    const observable = this.dataSource\n      ? of(this.dataSource)\n      : this.dataSourceService\n        .get(this.dataSourceId)\n        .pipe(\n          tap((dataSource: DataSource) => this.dataSource = dataSource)\n        );\n\n    return this.notify\n      .with(observable)\n      .error(`Failed to retrieve data source by ID: ${this.dataSourceId}: {error}`)\n      .source;\n  }\n\n  private getDataSourceLrsMetadata(): Observable<LrsMetadata> {\n    const observable = this.dataSourceLrsMetadata\n      ? of(this.dataSourceLrsMetadata)\n      : this.dataSourceLrsMetadataService\n        .get(this.dataSourceId)\n        .pipe(\n          tap((meta: LrsMetadata) => {\n            this.dataSourceLrsMetadata = new LrsMetadata(this.dataSource)\n              .assign(meta);\n\n            // NOTE: If we don't recieve any data source LRS metadata back then we assume that\n            // the map service has LRS capabiliities - otherwise we have no LRS server data available.\n            if (!meta) {\n              this.dataSourceLrsMetadata.serviceHasLrsMeta = true;\n            }\n          })\n        );\n\n    return this.notify\n      .with(observable)\n      .error(`Failed to retrieve data source LRS metadata by data source ID: ${this.dataSourceId}: {error}`)\n      .source;\n  }\n\n  private getMapServiceLayers(): Observable<MapServerMetadata> {\n    const observable = this.mapServerMetadata || !this.dataSource.serviceUrl\n      ? of(this.mapServerMetadata)\n      : this.mapServer\n        .getMapLayers(this.dataSource.serviceUrl)\n        .pipe(\n          tap((meta: MapServerMetadata) => this.mapServerMetadata = new MapServerMetadata().assign(meta))\n        );\n\n    return this.notify\n      .with(observable)\n      .error(`Failed to retrieve map service metadata from URL: ${this.dataSource.serviceUrl}: {error}`)\n      .source;\n  }\n\n  private getMapServiceLrsMetadata(): Observable<LrsMetadata> {\n    const observable = !this.dataSource.serviceUrl || !this.dataSourceLrsMetadata.serviceHasLrsMeta\n      ? of(this.mapServerLrsMetadata)\n      : forkJoin([\n        this.mapServer.getLrsServer(this.dataSource.serviceUrl),\n        this.mapServer.getLrsLayers(this.dataSource.serviceUrl)\n      ])\n        .pipe(\n          map((meta: LrsMetadata[]) => {\n            const [lrsServerMeta, lrsLayersMeta] = meta;\n            const lrsMetadata = Object.assign({}, lrsServerMeta, lrsLayersMeta);\n            const mapServerLrsMetadata = new LrsMetadata().assign(lrsMetadata);\n            return mapServerLrsMetadata;\n          }),\n          tap((meta: LrsMetadata) => this.mapServerLrsMetadata = new LrsMetadata().assign(meta))\n        );\n\n    return this.notify\n      .with(observable)\n      .error(`Failed to retrieve map service LRS metadata from URL: ${this.dataSource.serviceUrl}: {error}`)\n      .source;\n  }\n\n  private mergeAll(): Observable<LrsMetadata> {\n    const fullLrsMeta = mergeLrsMetadataSources(\n      this.dataSource,\n      this.dataSourceLrsMetadata,\n      this.mapServerLrsMetadata,\n      this.mapServerMetadata\n    );\n\n    return of(fullLrsMeta);\n  }\n}\n","// Angular.\nimport { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\n// 3rd Party.\nimport { Observable, of } from 'rxjs';\nimport { tap } from 'rxjs/operators';\n\n// TSS.\nimport { DataSourceService } from '../data-source/data-source.service';\nimport { DataSourceLrsMetadataService } from './data-source-lrs-metadata.service';\nimport { Logger } from '../core/logging/logger.service';\nimport { NotifyService } from '../core/notify/notify.service';\nimport { LrsMetadata } from './lrs-metadata';\nimport { LrsMetadataRetriever } from './lrs-metadata-retriever';\nimport { DataSource } from '../data-source/data-source';\nimport { LrsConfig } from './lrs.config';\nimport { EsriMapServerService } from '../esri/esri-map-server.service';\nimport { getDataSourceId } from '../data-source/get-data-source-id.function';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LrsMetadataService {\n  lrsCache: { dataSourceId: string, metaData: LrsMetadata }[] = [];\n\n  constructor(\n    protected http: HttpClient,\n    protected mapServer: EsriMapServerService,\n    protected dataSourceService: DataSourceService,\n    protected dataSourceLrsMetadataService: DataSourceLrsMetadataService,\n    protected notify: NotifyService,\n    protected config: LrsConfig,\n    protected log: Logger) {\n  }\n\n  get(dataSource: string | DataSource, lrsMetadata?: LrsMetadata): Observable<LrsMetadata> {\n    const dataSourceId = getDataSourceId(dataSource);\n    const cachedMeta = this.lrsCache.find(cache => cache.dataSourceId === dataSourceId);\n\n    if (cachedMeta) {\n      return of(cachedMeta.metaData);\n    }\n\n    return new LrsMetadataRetriever(\n      this.http,\n      this.mapServer,\n      this.dataSourceService,\n      this.dataSourceLrsMetadataService,\n      this.notify,\n      this.log\n    )\n      .withDataSource(dataSource)\n      .withLrsMetadata(lrsMetadata)\n      .retrieve()\n      .pipe(\n        tap(meta => this.tryCacheLrsMetadata(meta))\n      );\n  }\n\n  private tryCacheLrsMetadata(meta: LrsMetadata) {\n    if (this.config.cacheInSessionLrsMetadata) {\n      this.lrsCache.push({\n        dataSourceId: meta.dataSourceId,\n        metaData: meta\n      });\n    }\n  }\n}\n","// 3rd Party.\nimport { Feature, Geometry, LineString, Point, MultiLineString } from 'geojson';\n\n// TSS.\nimport { LrsFeature } from '../lrs-feature';\nimport { LrsReferenceFeature } from '../lrs-reference-feature';\nimport { toFeature } from '../feature';\nimport { RedlineLayer } from './redline-layer';\nimport { isPolygon } from '../../geometry/geometry/is-polygon.function';\nimport { Cloneable } from '../../core/clone/cloneable';\nimport { clone } from '../../core/clone/clone.function';\n\n\nexport class RedlineFeature extends LrsFeature implements LrsReferenceFeature, Cloneable<RedlineFeature> {\n  layer: RedlineLayer;\n\n  constructor(feature: Feature, layer: RedlineLayer) {\n    super(feature, layer);\n\n    this.routeId = this.getValue(layer.routeIdFieldName);\n    this.fromMeasure = this.getValue(layer.fromMeasureFieldName);\n    this.toMeasure = this.getValue(layer.toMeasureFieldName);\n    this.isLinear = Boolean(layer.toMeasureFieldName);\n  }\n\n  static create(\n    layer: RedlineLayer,\n    properties: { [name: string]: any; } = {},\n    geometry: Point | LineString | MultiLineString = null\n  ): RedlineFeature {\n    const feature: Feature = toFeature(properties, geometry as Geometry);\n    return new RedlineFeature(feature, layer);\n  }\n\n  setFromMeasure(measure: number): this {\n    this.fromMeasure = measure;\n    return this.setValue(this.layer.fromMeasureFieldName, measure);\n  }\n\n  setToMeasure(measure: number): this {\n    if (!this.isLinear) {\n      throw new Error('Cannot set to measure for a point-based feature');\n    }\n\n    this.toMeasure = measure;\n    return this.setValue(this.layer.toMeasureFieldName, measure);\n  }\n\n  setMeasureExtent(fromMeasure: number, toMeasure: number): this {\n    return this\n      .setFromMeasure(fromMeasure)\n      .setToMeasure(toMeasure);\n  }\n\n  clone(): RedlineFeature {\n    const copyFeature = clone(this.toFeature());\n    return new RedlineFeature(copyFeature, this.layer);\n  }\n\n  protected isGeometryTypeValid(): boolean {\n    return isPolygon(this.geometry) || super.isGeometryTypeValid();\n  }\n}\n","import { SymbolLocationType } from './types';\n\n\nexport const SYMBOL_LOCATION_TYPES: SymbolLocationTypeDefinition[] = [\n  { alias: 'Left', locationType: 'left' },\n  { alias: 'Right', locationType: 'right' },\n  { alias: 'Top', locationType: 'top' },\n  { alias: 'Bottom', locationType: 'bottom' },\n];\n\nexport interface SymbolLocationTypeDefinition {\n  alias: string;\n  locationType: SymbolLocationType;\n}\n","import { MapLayerType, MapLayer } from './map-layer';\nimport { LayerRelationship } from './layer-relationship';\nimport { LayerField } from './fields/layer-field';\nimport { LayerIndex } from './layer-index';\n\n\nexport class MapTable implements MapLayer {\n  currentVersion: number;\n  id: number;\n  name: string;\n  type: MapLayerType;\n  description: string;\n  hasAttachments: boolean;\n  displayField: string;\n  typeIdField: string;\n  fields: LayerField[] = [];\n  indexes: LayerIndex[] = [];\n  relationships: LayerRelationship[] = [];\n  maxRecordCount: number;\n  supportsStatistics: boolean;\n  supportsAdvancedQueries: boolean;\n  isDataVersioned: boolean;\n}\n","import { Injectable } from '@angular/core';\nimport { AutoConfig } from '../core/auto-config.decorator';\n\n\n/**\n * Configuration class for storing mapping-related settings.\n */\n@Injectable({\n  providedIn: 'root'\n})\n@AutoConfig('MapsConfig')\nexport class MapsConfig {\n}\n","// Angular.\nimport { Injectable } from '@angular/core';\n\n// TSS.\nimport { AutoConfig } from '../core/auto-config.decorator';\n\n\n/**\n * Configuration class for storing motion-related settings.\n */\n@Injectable({\n  providedIn: 'root'\n})\n@AutoConfig('MotionConfig')\nexport class MotionConfig {\n  allowMotionMocking = true;\n}\n","// Angular.\nimport { Injectable } from '@angular/core';\n\n// 3rd Party.\nimport { Observable, Subject, fromEvent } from 'rxjs';\n\n// App.\nimport { Motion } from './motion';\nimport { MotionConfig } from './motion.config';\n\n\n/**\n * Geolocator service. Provides a single point of motion API.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class DeviceMotionService {\n  readonly motionChange: Observable<Motion>;\n  readonly motionChangeSource: Subject<Motion>;\n\n  constructor(private readonly config: MotionConfig) {\n    this.motionChangeSource = new Subject();\n    this.motionChange = this.motionChangeSource.asObservable();\n\n    fromEvent(window, 'ondevicemotion').subscribe((event: DeviceMotionEvent) => this.emitMotionChange(event));\n  }\n\n  mockMotion(motion: Motion): this {\n    if (!this.config.allowMotionMocking) {\n      throw new Error('Permission denied to mock device motion');\n    }\n\n    this.motionChangeSource.next(motion);\n    return this;\n  }\n\n  private emitMotionChange(event: DeviceMotionEvent): void {\n    this.motionChangeSource.next({\n      x: event.acceleration.x,\n      y: event.acceleration.y,\n      z: event.acceleration.z,\n      withGravityX: event.accelerationIncludingGravity.x,\n      withGravityY: event.accelerationIncludingGravity.y,\n      withGravityZ: event.accelerationIncludingGravity.z,\n      rotationRateAlpha: event.rotationRate.alpha,\n      rotationRateBeta: event.rotationRate.beta,\n      rotationRateGamma: event.rotationRate.gamma,\n    });\n  }\n}\n","// Angular.\nimport { NgModule, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n  ],\n  declarations: [\n  ],\n  exports: [\n  ],\n  providers: [\n  ],\n  schemas: [CUSTOM_ELEMENTS_SCHEMA]\n})\nexport class TssMotionModule { }\n","import { Orientation } from '../orientation';\nimport { degreesToRadians } from '../../geometry/geometry/degrees-to-radians.function';\nimport { radiansToDegrees } from '../../geometry/geometry/radians-to-degrees.function';\n\n\n\n/**\n * Returns the heading based on an orientation (alpha, beta, and gamma).\n * Note: this code was sourced from: https://stackoverflow.com/questions/18112729/calculate-compass-heading-from-deviceorientation-event-api\n */\nexport function getHeadingFromOrientation(orientation: { alpha: number, beta: number, gamma: number }): number {\n  // Convert degrees to radians\n  const alphaRad = degreesToRadians(orientation.alpha);\n  const betaRad = degreesToRadians(orientation.beta);\n  const gammaRad = degreesToRadians(orientation.gamma);\n\n  // Calculate equation components\n  const cA = Math.cos(alphaRad);\n  const sA = Math.sin(alphaRad);\n  const sB = Math.sin(betaRad);\n  const cG = Math.cos(gammaRad);\n  const sG = Math.sin(gammaRad);\n\n  // Calculate A, B, C rotation components\n  const rA = - cA * sG - sA * sB * cG;\n  const rB = - sA * sG + cA * sB * cG;\n\n  // Calculate compass heading\n  let compassHeading = Math.atan(rA / rB);\n\n  // Convert from half unit circle to whole unit circle\n  compassHeading = rB < 0\n    ? compassHeading += Math.PI\n    : compassHeading += 2 * Math.PI;\n\n  // Convert radians to degrees\n  compassHeading = radiansToDegrees(compassHeading);\n\n  return compassHeading;\n}\n","// Angular.\nimport { Injectable } from '@angular/core';\n\n// TSS.\nimport { AutoConfig } from '../core/auto-config.decorator';\n\n\n/**\n * Configuration class for storing orientation-related settings.\n */\n@Injectable({\n  providedIn: 'root'\n})\n@AutoConfig('OrientationConfig')\nexport class OrientationConfig {\n  allowOrientationMocking = true;\n  allowHeadingMocking = true;\n}\n","// Angular.\nimport { Injectable } from '@angular/core';\n\n// 3rd Party.\nimport { Observable, Subject, fromEvent, merge } from 'rxjs';\n\n// App.\nimport { Orientation } from './orientation';\nimport { getHeadingFromOrientation } from './heading/get-heading-from-orientation.function';\nimport { OrientationConfig } from './orientation.config';\nimport { map } from 'rxjs/operators';\n\n\n/**\n * Geolocator service. Provides a single point of GPS interaction.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class DeviceOrientationService {\n  readonly orientationChange: Observable<Orientation>;\n  readonly headingChange: Observable<number>;\n  readonly orientationChangeSource: Subject<Orientation>;\n  readonly headingChangeSource: Subject<number>;\n\n  private internalDeviceNeedsCalibrated = false;\n\n  get deviceNeedsCalibrated(): boolean {\n    return this.internalDeviceNeedsCalibrated;\n  }\n\n  constructor(private readonly config: OrientationConfig) {\n    this.headingChangeSource = new Subject();\n    this.orientationChangeSource = new Subject();\n    this.orientationChange = this.orientationChangeSource.asObservable();\n    this.headingChange = merge(\n      this.headingChangeSource,\n      this.orientationChange.pipe(\n        map(orientation => orientation.heading)\n      )\n    );\n\n    fromEvent(window, 'deviceorientation').subscribe((event: DeviceOrientationEvent) => this.emitOrientationChange(event));\n    fromEvent(window, 'oncompassneedscalibration').subscribe(() => this.internalDeviceNeedsCalibrated = true);\n    fromEvent(window, 'compassneedscalibration').subscribe(() => this.internalDeviceNeedsCalibrated = true);\n  }\n\n  mockOrientation(orientation: Orientation): this {\n    if (!this.config.allowOrientationMocking) {\n      throw new Error('Permission denied to mock device orientation');\n    }\n\n    this.orientationChangeSource.next(orientation);\n    return this;\n  }\n\n  mockHeading(heading: number): this {\n    if (!this.config.allowHeadingMocking) {\n      throw new Error('Permission denied to mock heading');\n    }\n\n    this.headingChangeSource.next(heading);\n    return this;\n  }\n\n  private emitOrientationChange(event: DeviceOrientationEvent): void {\n    this.orientationChangeSource.next({\n      alpha: event.alpha,\n      beta: event.beta,\n      gamma: event.gamma,\n      heading: getHeadingFromOrientation(event)\n    });\n  }\n}\n","// Angular.\nimport { NgModule, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n  ],\n  declarations: [\n  ],\n  exports: [\n  ],\n  providers: [\n  ],\n  schemas: [CUSTOM_ELEMENTS_SCHEMA]\n})\nexport class TssOrientationModule { }\n","import { Guid } from '../core/uuid/guid';\nimport { getElapsedSeconds } from '../core/date-time/get-elapsed-seconds.function';\nimport { calculateRemainingSeconds } from '../core/stats/calculate-remaining-seconds.function';\n\n\n/**\n * Unique token created for each queue worker\n */\nexport class QueueWorkerToken {\n  readonly id: string;\n  isWorking = false;\n  isCanceled = false;\n  totalComplete: number;\n  totalFailed: number;\n  startTime: Date;\n  endTime: Date;\n\n  get isComplete(): boolean {\n    return !this.isWorking;\n  }\n\n  get ellapsedSeconds(): number {\n    return getElapsedSeconds(new Date(), this.startTime);\n  }\n\n  get totalProcessed(): number {\n    return this.totalComplete + this.totalFailed;\n  }\n\n  get recordsProcessedPerSecond(): number {\n    return this.totalComplete / this.ellapsedSeconds;\n  }\n\n  get recordsProcessedPerMinute(): number {\n    return this.recordsProcessedPerSecond * 60;\n  }\n\n  constructor() {\n    this.id = Guid.newGuid().value;\n  }\n\n  start(): QueueWorkerToken {\n    this.reset();\n    this.startTime = new Date();\n    this.isWorking = true;\n\n    return this;\n  }\n\n  reset(): QueueWorkerToken {\n    this.isWorking = false;\n    this.isCanceled = false;\n    this.totalComplete = 0;\n    this.totalFailed = 0;\n    this.startTime = null;\n    this.endTime = null;\n\n    return this;\n  }\n\n  calculateRemainingSeconds(remainingCount: number): number {\n    return this.isComplete\n      ? 0\n      : calculateRemainingSeconds(this.totalProcessed, this.ellapsedSeconds, remainingCount);\n  }\n\n  complete(): QueueWorkerToken {\n    this.endTime = new Date();\n    this.isWorking = false;\n\n    return this;\n  }\n\n  cancel(): QueueWorkerToken {\n    this.isCanceled = true;\n    this.isWorking = false;\n\n    return this;\n  }\n}\n","/**\n * Represents a status of a queued work item event.\n * * UnitOfWorkStarted: A given work item has begun.\n * * UnitOfWorkComplete: A given work item has completed.\n * * QueueWorkerStarted: A new worker has started processing the queue.\n * * QueueWorkerComplete: A given worker has completed processing of the queue (no more items found).\n * * QueueStarted: The process of starting workers to run through the queue has occurred.\n * * QueueStarted: All workers have completed working through the queue (all work is done).\n */\nexport enum WorkQueueStatusEventType {\n  UnitOfWorkStarted,\n  UnitOfWorkComplete,\n  UnitOfWorkStatusUpdate,\n  QueueWorkerStarted,\n  QueueWorkerComplete,\n  QueueStarted,\n  QueueComplete,\n}\n","import { QueueWorkerToken } from './queue-worker-token';\nimport { WorkQueueStatus } from './work-queue-status';\nimport { average } from '../core/stats/average.function';\n\n\nexport class WorkQueueStatusTracker implements WorkQueueStatus {\n  totalQueueSize = 0;\n\n  protected readonly workers: QueueWorkerToken[] = [];\n\n  get workerCount(): number {\n    return this.workers.length;\n  }\n\n  get percentComplete(): number {\n    return this.totalQueueSize >= 0\n      ? Math.round(this.totalProcessed / this.totalQueueSize * 100) || 0\n      : 0;\n  }\n\n  get totalComplete(): number {\n    return this.workers.reduce((accumulator, current) => accumulator + current.totalComplete, 0) || 0;\n  }\n\n  get totalFailed(): number {\n    return this.workers.reduce((accumulator, current) => accumulator + current.totalFailed, 0) || 0;\n  }\n\n  get totalProcessed(): number {\n    return this.totalComplete + this.totalFailed;\n  }\n\n  get isWorking(): boolean {\n    return Boolean(this.runningWorkerCount);\n  }\n\n  get isComplete(): boolean {\n    return this.startTime && !this.isWorking;\n  }\n\n  get isCanceled(): boolean {\n    const canceledWorkersCount = this.workers.filter(worker => worker.isCanceled).length;\n    return Boolean(canceledWorkersCount && canceledWorkersCount === this.workers.length);\n  }\n\n  get runningWorkerCount(): number {\n    return this.workers.filter(worker => worker.isWorking).length;\n  }\n\n  get startTime(): Date {\n    const startTimes: number[] = this.workers\n      .filter(worker => worker.startTime)\n      .map(worker => worker.startTime\n        ? worker.startTime.getTime()\n        : null\n      );\n\n    return new Date(Math.min(...startTimes));\n  }\n\n  get endTime(): Date {\n    const startTimes: number[] = this.workers\n      .filter(worker => worker.startTime)\n      .map(worker => worker.startTime\n        ? worker.startTime.getTime()\n        : null\n      );\n\n    return new Date(Math.max(...startTimes));\n  }\n\n  get remainingQueueSize(): number {\n    return this.totalQueueSize - this.totalProcessed;\n  }\n\n  get estimatedSecondsLeft(): number {\n    const remainingCount = this.remainingQueueSize;\n    return remainingCount\n      ? average(\n        this.workers\n          .map(worker => worker.calculateRemainingSeconds(remainingCount))\n      )\n      : 0;\n  }\n\n  get averageRecordsProcessedPerMinute(): number {\n    return average(\n      this.workers\n        .map(worker => worker.recordsProcessedPerMinute)\n    );\n  }\n\n  setQueueSize(totalQueueSize: number): WorkQueueStatusTracker {\n    this.totalQueueSize = totalQueueSize;\n    return this;\n  }\n\n  complete(): WorkQueueStatusTracker {\n    this.workers.splice(0, this.workers.length);\n    this.totalQueueSize = 0;\n    return this;\n  }\n\n  addWorker(...workers: QueueWorkerToken[]): WorkQueueStatusTracker {\n    workers.forEach(worker => {\n      this.workers.push(worker);\n    });\n\n    return this;\n  }\n\n  getStatus(): WorkQueueStatus {\n    return {\n      isWorking: this.isWorking,\n      isCanceled: this.isCanceled,\n      isComplete: this.isComplete,\n      totalProcessed: this.totalProcessed,\n      startTime: this.startTime,\n      endTime: this.endTime,\n      percentComplete: this.percentComplete,\n      totalQueueSize: this.totalQueueSize,\n      remainingQueueSize: this.remainingQueueSize,\n      totalComplete: this.totalComplete,\n      totalFailed: this.totalFailed,\n      estimatedSecondsLeft: this.estimatedSecondsLeft,\n      workerCount: this.workers.length,\n    };\n  }\n}\n","// 3rd Party.\nimport { Observable, Subject, of, iif } from 'rxjs';\nimport { takeWhile, tap, filter, mergeMap, map } from 'rxjs/operators';\n\n// TSS.\nimport { WorkerQueueOptions } from './worker-queue-options';\nimport { QueueWorkerToken } from './queue-worker-token';\nimport { WorkQueueStatusEvent } from './work-queue-status-event';\nimport { WorkQueueStatusEventType } from './work-queue-status-event-type';\nimport { WorkQueueStatusTracker } from './work-queue-status-tracker';\nimport { Logger } from '../core/logging/logger.service';\nimport { WorkQueueStatus } from './work-queue-status';\nimport { QueuePayload } from './queue-payload';\nimport { isValue } from '../core/type-check/is-value.function';\nimport { isNotValue } from '../core/type-check/is-not-value.function';\n\n\nexport const DEFAULT_WORK_QUEUE_OPTIONS = {\n  autoStartWorkers: true,\n  workerCount: 1,\n};\n\n\n/**\n * Provides the core queueing workflow for basic unit of work queues.\n * High Priority Todos:\n * * Implement worker cancelation into the worker token - RG.\n *\n * Low Priority Todos:\n * * Add queue prioritization - a queue priority flag to pull those items first from the queue - RG.\n * * Change overriding of methods to use metho attributes instead. Example: @OnWorkComplete.\n */\nexport abstract class WorkQueueManager<TInput, TOutput> {\n  private queueChangeObserver: Subject<WorkQueueStatusEvent<TInput, TOutput>>;\n\n  protected readonly workerTokens: QueueWorkerToken[] = [];\n  protected readonly tracker: WorkQueueStatusTracker = new WorkQueueStatusTracker();\n\n  readonly queueChange: Observable<WorkQueueStatusEvent<TInput, TOutput>>;\n  readonly queueStarted: Observable<WorkQueueStatusEvent<TInput, TOutput>>;\n  readonly queueComplete: Observable<WorkQueueStatusEvent<TInput, TOutput>>;\n  readonly options: WorkerQueueOptions = Object.assign({}, DEFAULT_WORK_QUEUE_OPTIONS);\n\n  get isWorking(): boolean {\n    return this.tracker.isWorking;\n  }\n\n  get status(): WorkQueueStatus {\n    return this.tracker.getStatus();\n  }\n\n  constructor(protected log: Logger, options?: WorkerQueueOptions) {\n    this.setOptions(options);\n    this.queueChangeObserver = new Subject();\n    this.queueChange = this.queueChangeObserver.pipe();\n\n    this.queueStarted = this.queueChangeObserver.pipe(\n      filter(change => change.event === WorkQueueStatusEventType.QueueStarted)\n    );\n\n    this.queueComplete = this.queueChangeObserver.pipe(\n      filter(change => change.event === WorkQueueStatusEventType.QueueComplete)\n    );\n\n    if (this.options.autoStartWorkers) {\n      setTimeout(() => this.startWork());\n    }\n  }\n\n  /**\n   * Overrides default options.\n   * @param options Options to override the defaults.\n   */\n  setOptions(options: WorkerQueueOptions): WorkQueueManager<TInput, TOutput> {\n    Object.assign(this.options, options);\n    return this;\n  }\n\n  /**\n   * Kicks off the queue workflow with the specified number of workers. If\n   * the maximum number of workers are currently running, no additional workers\n   * will be created (only the delta of allowed and running will be started).\n   */\n  startWork(): void {\n    // We dont' want to change the queue size if the queue is already working\n    // because it will mess up the statistics (percent copmlete, etc).\n    const starterSource = iif(() => !this.isWorking,\n      this.getRemainingQueueCount()\n        .pipe(\n          tap((queueCount: number) => this.tracker.setQueueSize(queueCount))\n        )\n    );\n\n    this.onReady()\n      .pipe(\n        mergeMap(() => starterSource)\n      )\n      .subscribe(() => {\n        const workersToStart = this.options.workerCount - this.workerTokens.length;\n\n        if (workersToStart > 0) {\n          this.emitQueueChange(null, WorkQueueStatusEventType.QueueStarted);\n        }\n\n        for (let i = 0; i < workersToStart; i++) {\n          const token = new QueueWorkerToken().start();\n          this.tracker.addWorker(token);\n          this.workerTokens.push(token);\n          this.emitQueueChange(token, WorkQueueStatusEventType.QueueWorkerStarted);\n          this.getNextAndDoWork(token);\n        }\n      });\n  }\n\n  /**\n   * Stops all workers from processing the queue.\n   */\n  stopWork(): void {\n    this.workerTokens.forEach(token => token.cancel());\n  }\n\n  /**\n   * Implementation method to do the actual unit of work.\n   * @param item The input paramater needed to process the unit of work and return an output result.\n   */\n  protected abstract doWork(item: TInput): Observable<TOutput>;\n\n  /**\n   * Implementation method to retrieve the next value in the queue. Note, there are no further checks\n   * to verify duplicate items are not processed - it is the responsibility of the implementer of this\n   * base class to never return the same item from this method. Typically the item in the queue is either\n   * dequeued or marked as \"processing\" to prevent this potential issue.\n   */\n  protected abstract getNext(): Observable<TInput>;\n\n  /**\n   * Method that determines that the workers are ready to be started. Note, in this implementation it\n   * makes use of an empty promise. The main reason for this is to provide a hook for other implementers\n   * to setup/initialize the queue before starting the workers. Additionaly, this practices provides a\n   * way to run the workers asynchronously.\n   */\n  protected onReady(): Observable<any> {\n    return of(null);\n  }\n\n  protected onBeforeWorkStarted(input: TInput): Observable<TInput> {\n    return of(input);\n  }\n\n  protected onWorkComplete(data: QueuePayload<TInput, TOutput>): Observable<QueuePayload<TInput, TOutput>> {\n    return of(data);\n  }\n\n  protected onWorkFailed(data: QueuePayload<TInput, TOutput>, error: any): Observable<any> {\n    return of(data, error);\n  }\n\n  protected getRemainingQueueCount(): Observable<number> {\n    return of(-1);\n  }\n\n  protected emitQueueChange(token: QueueWorkerToken, event: WorkQueueStatusEventType, input?: TInput, output?: TOutput): void {\n    this.queueChangeObserver.next({\n      event,\n      input,\n      output,\n      status: this.tracker.getStatus(),\n      tokenId: token ? token.id : null,\n    });\n  }\n\n  private emitWorkStarted(token: QueueWorkerToken, input?: TInput, output?: TOutput): void {\n    this.emitQueueChange(token, WorkQueueStatusEventType.UnitOfWorkStarted, input, output);\n  }\n\n  private emitWorkComplete(token: QueueWorkerToken, input?: TInput, output?: TOutput): void {\n    this.emitQueueChange(token, WorkQueueStatusEventType.UnitOfWorkComplete, input, output);\n  }\n\n  private onWorkerCompleted(token: QueueWorkerToken) {\n    if (token.isComplete) {\n      return;\n    }\n\n    const index = this.workerTokens.indexOf(token);\n    token.complete();\n\n    if (index !== -1) {\n      this.workerTokens.splice(index, 1);\n    }\n\n    this.emitQueueChange(token, WorkQueueStatusEventType.QueueWorkerComplete);\n    if (this.workerTokens.length === 0) {\n      this.emitQueueChange(token, WorkQueueStatusEventType.QueueComplete);\n      this.tracker.complete();\n    }\n  }\n\n  private checkIfWorkerComplete(token: QueueWorkerToken, next: TInput) {\n    if (isNotValue(next)) {\n      this.onWorkerCompleted(token);\n    }\n  }\n\n  private getNextAndDoWork(token: QueueWorkerToken): void {\n    if (token.isCanceled) {\n      this.log.debug(`Canceling worker due to canceled toke: ${token.id}`);\n      this.onWorkerCompleted(token);\n    }\n\n    this.log.trace('Retrieving next queue item to start processing');\n    const processingData: QueuePayload<TInput, TOutput> = { input: null, output: null };\n    this.getNext()\n      .pipe(\n        tap((input: TInput) => processingData.input = input),\n        tap((input: TInput) => this.checkIfWorkerComplete(token, input)),\n        takeWhile((input: TInput) => isValue(input) && !token.isCanceled),\n        tap((input: TInput) => this.emitWorkStarted(token, input)),\n        mergeMap((input: TInput) => this.onBeforeWorkStarted(input)),\n        mergeMap((input: TInput) => this.doWork(input)),\n        tap((output: TOutput) => processingData.output = output),\n        map(() => processingData),\n        mergeMap((data: QueuePayload<TInput, TOutput>) => this.onWorkComplete(data)),\n    )\n      .subscribe((data: QueuePayload<TInput, TOutput>) => {\n        this.log.trace('Completed work for item');\n        token.totalComplete++;\n        this.emitWorkComplete(token, data.input, data.output);\n        this.getNextAndDoWork(token);\n      }, (error) => {\n        this.log.error(`Failed to process item. {error}`, error);\n        token.totalFailed++;\n        this.onWorkFailed(processingData, error)\n          .toPromise()\n          .then(() => this.getNextAndDoWork(token));\n      });\n  }\n}\n","// 3rd Party.\nimport { Observable, forkJoin } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n// TSS.\nimport { WorkQueueManager, DEFAULT_WORK_QUEUE_OPTIONS } from './work-queue-manager';\nimport { Queuable } from './queuable';\nimport { QueuableWorkerQueueOptions } from './queuable-worker-queue-options';\nimport { QueuePayload } from './queue-payload';\n\n\nexport abstract class QueuableWorkQueueManager<TInput, TOutput> extends WorkQueueManager<TInput, TOutput> implements Queuable<TInput> {\n  readonly options: QueuableWorkerQueueOptions = Object.assign({\n    autoDequeu: true\n  }, DEFAULT_WORK_QUEUE_OPTIONS);\n\n  abstract enqueue(item: TInput): Observable<TInput>;\n  abstract dequeue(item: TInput): Observable<TInput>;\n\n  /**\n   * Enqueues multiple items into an array.\n   * @param items Items to enqueue.\n   *\n   * TODO: We want to change this to use \"mergeAll\" once we\n   *  upgrade to rxjs 6, as that is the desired behavior here.\n   *\n   * // The following works in rxjs 6, but not in 5:\n   * of(...sources)\n   * .pipe(\n   *   mergeAll(),\n   *   // NOTE: in rxjs 5\n   *   tap((x: TInput) => x)\n   * )\n   */\n  enqueuMany(...items: TInput[]): Observable<TInput> {\n    const sources: Observable<TInput>[] = items\n      .map(i => this.enqueue(i));\n\n    return forkJoin(sources)\n      .pipe(\n        map((results: TInput[]) => results.pop())\n      );\n  }\n\n  /**\n   * Deque many items from the queue.\n   * @param items Items do deque.\n   */\n  dequeuMany(...items: TInput[]): Observable<TInput> {\n    const sources: Observable<TInput>[] = items\n      .map(i => this.dequeue(i));\n\n    return forkJoin(sources)\n      .pipe(\n        map((results: TInput[]) => results.pop())\n      );\n  }\n\n  protected onWorkComplete(payload: QueuePayload<TInput, TOutput>): Observable<QueuePayload<TInput, TOutput>> {\n    return forkJoin(\n      super.onWorkComplete(payload),\n      this.dequeue(payload.input)\n    )\n      .pipe(\n        map((result) => result[0])\n      );\n  }\n}\n","/**\n * Represents all potential states of a queued item.\n * * Queued: The item is in the queue, waiting for the next available worker to retrieve it.\n * * InProgress: The item has been picked up by a worker and currently being processed.\n * * Complete: The item has been sucesfully completed.\n * * Canceled: The item was canceled before completion.\n * * Failed: The item failed to process.\n */\nexport enum QueueItemStatus {\n  Queued,\n  InProgress,\n  Complete,\n  Canceled,\n  Failed,\n}\n","// Angular.\nimport { Injectable } from '@angular/core';\n\n// TSS.\nimport { AutoConfig } from '../core/auto-config.decorator';\n\n\n/**\n * Configuration class for storing global queue-related settings.\n */\n@Injectable({\n  providedIn: 'root'\n})\n@AutoConfig('QueueConfig')\nexport class QueueConfig {\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\nimport { BaseResourceService } from '../../core/resource/base-resource.service';\nimport { Privilege } from './privilege';\nimport { SecurityConfig } from '../security-config';\nimport { join } from '../../core/url/join.function';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PrivilegeService extends BaseResourceService<Privilege> {\n  constructor(protected http: HttpClient, config: SecurityConfig) {\n    super(http, {\n      url: join(config.serviceUrl, config.privilegesEndpoint)\n    });\n  }\n}\n","export const MISSING_ROLE_PARAM_EXCEPTION_MSG = 'Missing role ID parameter';\n\n\nexport interface Role {\n  id: string;\n  name: string;\n  description: string;\n  isExternal: boolean;\n}\n","// Angular.\nimport { HttpClient, HttpParams } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\n// 3rd party.\nimport { Observable } from 'rxjs';\n\n// TSS.\nimport { SecurityConfig } from '../security-config';\nimport { Privilege } from '../privileges/privilege';\nimport { MISSING_ROLE_PARAM_EXCEPTION_MSG } from './role';\nimport { BaseResourceService } from '../../core/resource/base-resource.service';\nimport { join } from '../../core/url/join.function';\nimport { UNSUPPORTED_GET_EXCEPTION_MSG, UNSUPPORTED_CREATE_EXCEPTION_MSG } from '../../core/resource/resource.constants';\n\n\nexport const MISSING_PRIVILEGE_PARAM_EXCEPTION_MSG = 'Missing privilege identifier parameter';\n\n\n/**\n * Service to provide all CRUD operations for privilege/role assignment.\n *\n * @example\n * ## Gets privileges for a given role:\n * service.privilegesByRole('879e27e1-b139-4348-86ca-ec4d5651475f')\n *\n * // Which is just a shortcut for:\n * service.query({ roleId: 'admin' });\n *\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class RolePrivilegeService extends BaseResourceService<Privilege> {\n  constructor(protected http: HttpClient, config: SecurityConfig) {\n    super(http, {\n      url: join(config.serviceUrl, config.rolesPrivilegesEndpoint),\n      idFieldName: 'roleId'\n    });\n  }\n\n  /**\n   * Retrieves a list of privileges for a given role ID.\n   */\n  query(routeTokens?: any, params?: HttpParams): Observable<Privilege[]> {\n    if (!routeTokens || !routeTokens.roleId) {\n      throw new Error(MISSING_ROLE_PARAM_EXCEPTION_MSG);\n    }\n\n    return super.query(routeTokens, params);\n  }\n\n  /**\n   * This method is not supported for this resource. Please use \"privilegesByRole\".\n   */\n  get(id: string | number, routeTokens?: any, params?: HttpParams): Observable<Privilege> {\n    throw new Error(UNSUPPORTED_GET_EXCEPTION_MSG);\n  }\n\n  /**\n   * This method is not supported for this resource. Please use \"addPrivilegeToRole\".\n   */\n  create(entity: Privilege, routeTokens?: any, params?: HttpParams): Observable<Privilege> {\n    throw new Error(UNSUPPORTED_CREATE_EXCEPTION_MSG);\n  }\n\n  /**\n   * Updates a privilege assignment (adds a privilege to a role).\n   */\n  update(entity: Privilege, routeTokens?: any, params?: HttpParams): Observable<any> {\n    if (!routeTokens || !routeTokens.roleId) {\n      throw new Error(MISSING_ROLE_PARAM_EXCEPTION_MSG);\n    } else if (!routeTokens.privilegeId) {\n      throw new Error(MISSING_PRIVILEGE_PARAM_EXCEPTION_MSG);\n    }\n\n    return super.update(null, routeTokens, params);\n  }\n\n  /**\n   * Removes a privilege from a role assignment.\n   */\n  delete(id: string | number, routeTokens?: any, params?: HttpParams): Observable<Privilege> {\n    if (!routeTokens || !routeTokens.roleId) {\n      throw new Error(MISSING_ROLE_PARAM_EXCEPTION_MSG);\n    } else if (!routeTokens.privilegeId) {\n      throw new Error(MISSING_PRIVILEGE_PARAM_EXCEPTION_MSG);\n    }\n\n    return super.delete(id, routeTokens, params);\n  }\n\n  /**\n   * Retrieves all privileges assigned to the given role ID.\n   */\n  privilegesByRole(roleId: string, params?: HttpParams): Observable<Privilege[]> {\n    return this.query({ roleId }, params);\n  }\n\n  /**\n   * Adds a privilege to role.\n   */\n  addPrivilegeToRole(roleId: string, privilegeId: string): Observable<Privilege> {\n    return this.update(null, { roleId, privilegeId });\n  }\n\n\n  /**\n   * Removes a privilege from the given role.\n   */\n  removePrivilegeFromRole(roleId: string, privilegeId: string): Observable<Privilege> {\n    return this.delete(roleId, { roleId, privilegeId });\n  }\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\nimport { BaseResourceService } from '../../core/resource/base-resource.service';\nimport { Role } from './role';\nimport { SecurityConfig } from '../security-config';\nimport { join } from '../../core/url/join.function';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RoleService extends BaseResourceService<Role> {\n  constructor(protected http: HttpClient, config: SecurityConfig) {\n    super(http, {\n      url: join(config.serviceUrl, config.rolesEndpoint)\n    });\n  }\n}\n","export const MISSING_USER_PARAM_EXCEPTION_MSG = 'Missing user ID parameter';\n","import { HttpClient, HttpParams } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\nimport { Observable } from 'rxjs';\n\nimport { Role, MISSING_ROLE_PARAM_EXCEPTION_MSG } from './role';\nimport { SecurityConfig } from '../security-config';\nimport { BaseResourceService } from '../../core/resource/base-resource.service';\nimport { join } from '../../core/url/join.function';\nimport { UNSUPPORTED_GET_EXCEPTION_MSG, UNSUPPORTED_CREATE_EXCEPTION_MSG } from '../../core/resource/resource.constants';\nimport { MISSING_USER_PARAM_EXCEPTION_MSG } from '../security.constants';\n\n\n/**\n * Service to provide all CRUD operations for user/role assignment.\n *\n * @example\n * ## Gets roles for a given user:\n * service.rolesByUser('879e27e1-b139-4348-86ca-ec4d5651475f')\n *\n * // Which is just a shortcut for:\n * service.query({ userId: '879e27e1-b139-4348-86ca-ec4d5651475f' });\n *\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserRoleService extends BaseResourceService<Role> {\n  constructor(protected http: HttpClient, config: SecurityConfig) {\n    super(http, {\n      url: join(config.serviceUrl, config.userRolesEndpoint),\n      idFieldName: 'userId'\n    });\n  }\n\n  /**\n   * Retrieves a list of roles for a given user ID.\n   */\n  query(routeTokens?: any, params?: HttpParams): Observable<Role[]> {\n    if (!routeTokens || !routeTokens.userId) {\n      throw new Error(MISSING_USER_PARAM_EXCEPTION_MSG);\n    }\n\n    return super.query(routeTokens, params);\n  }\n\n  /**\n   * This method is not supported for this resource. Please use \"rolesByUser\".\n   */\n  get(id: string | number, routeTokens?: any, params?: HttpParams): Observable<Role> {\n    throw new Error(UNSUPPORTED_GET_EXCEPTION_MSG);\n  }\n\n  /**\n   * This method is not supported for this resource. Please use \"addUserToRole\".\n   */\n  create(entity: Role, routeTokens?: any, params?: HttpParams): Observable<Role> {\n    throw new Error(UNSUPPORTED_CREATE_EXCEPTION_MSG);\n  }\n\n  /**\n   * Updates a users role assignment (adds a role to a user).\n   */\n  update(entity: Role, routeTokens?: any, params?: HttpParams): Observable<any> {\n    if (!routeTokens || !routeTokens.userId) {\n      throw new Error(MISSING_USER_PARAM_EXCEPTION_MSG);\n    } else if (!routeTokens.roleName) {\n      throw new Error(MISSING_ROLE_PARAM_EXCEPTION_MSG);\n    }\n\n    return super.update(null, routeTokens, params);\n  }\n\n  /**\n   * Removes a user from a role assignment.\n   */\n  delete(id: string | number, routeTokens?: any, params?: HttpParams): Observable<Role> {\n    if (!routeTokens || !routeTokens.userId) {\n      throw new Error(MISSING_USER_PARAM_EXCEPTION_MSG);\n    } else if (!routeTokens.roleName) {\n      throw new Error(MISSING_ROLE_PARAM_EXCEPTION_MSG);\n    }\n\n    return super.delete(id, routeTokens, params);\n  }\n\n  /**\n   * Retrieves all roles assigned to the given user ID.\n   */\n  rolesByUser(userId: string, params?: HttpParams): Observable<Role[]> {\n    return this.query({ userId }, params);\n  }\n\n  /**\n   * Adds a user to role.\n   */\n  addUserToRole(userId: string, role: Role, params?: HttpParams): Observable<Role> {\n    // NOTE: We pass an arbitrary \"_\" role name because the route requires a role name,\n    // however the role's name is going to be pulled from the role entity on the server.\n    // The reason we don't pass \"role.name\" here is because of issues with IIS not\n    // handling decoded backslashes (ex: TSS\\TSS Users).\n    return super.update(role, { userId, roleName: '_' }, params);\n  }\n\n  /**\n   * Adds a user to role.\n   */\n  addUserToRoleByName(userId: string, roleName: string, params?: HttpParams): Observable<Role> {\n    roleName = decodeURIComponent(roleName);\n    return this.update(null, { userId, roleName }, params);\n  }\n\n  /**\n   * Removes a user from the given role.\n   */\n  removeUserFromRole(userId: string, role: Role, params?: HttpParams): Observable<Role> {\n    return this.removeUserFromRoleByName(userId, role.name, params);\n  }\n\n  /**\n   * Removes a user from the given role.\n   */\n  removeUserFromRoleByName(userId: string, roleName: string, params?: HttpParams): Observable<Role> {\n    roleName = decodeURIComponent(roleName);\n    return this.delete(userId, { userId, roleName }, params);\n  }\n}\n","// Angular.\nimport { HttpClient, HttpParams } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\n// 3rd party.\nimport { Observable } from 'rxjs';\n\n// TSS.\nimport { BaseResourceService } from '../../core/resource/base-resource.service';\nimport { User } from './user';\nimport { SecurityConfig } from '../security-config';\nimport { join } from '../../core/url/join.function';\n\n\n/**\n * @example\n * ## Get Users that belong to a given role (by ID).\n * service.usersByRoleId('1428a342-8a95-4b6c-b3e9-da135e3ced04')\n *\n * // ...which is just a shortcut for:\n * service.query({}, new HttpParams().set('filterByRoleId', roleName));\n *\n * ## Get Users that belong to a given role (by name).\n * service.usersByRoleName('Admin')\n *\n * // ...which is just a shortcut for:\n * service.query({}, new HttpParams().set('filterByRoleName', roleName));\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService extends BaseResourceService<User> {\n  constructor(protected http: HttpClient, config: SecurityConfig) {\n    super(http, {\n      url: join(config.serviceUrl, config.usersEndpoint)\n    });\n  }\n\n  usersByRoleId(roleId: string, params?: HttpParams): Observable<User[]> {\n    params = (params || new HttpParams()).set('filterByRoleId', roleId);\n    return this.query({}, params);\n  }\n\n  usersByRoleName(roleName: string, params?: HttpParams): Observable<User[]> {\n    params = (params || new HttpParams()).set('filterByRoleName', roleName);\n    return this.query({}, params);\n  }\n\n  search(searchText: string, params?: HttpParams) {\n    params = (params || new HttpParams()).set('search', searchText);\n    return this.query({}, params);\n  }\n}\n"],"names":["isDate","isNumber","map","distance","DEFAULT_OPTIONS","find"],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA,MAAa,cAAc;;;;IAGzB,IAAI,aAAa;QACf,OAAO,OAAO,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;KACjC;CACF;;;;;;;;ICLC,QAAS;IACT,QAAS;IACT,OAAQ;IACR,OAAQ;IACR,QAAS;IACT,QAAS;;;;;;;;;;;;AAOX,SAAgB,WAAW,CAAC,IAAa;IACvC,IAAI,IAAI,KAAK,OAAO,EAAE;QACpB,OAAO,QAAQ,CAAC,KAAK,CAAC;KACvB;SAAM,IAAI,IAAI,KAAK,OAAO,EAAE;QAC3B,OAAO,QAAQ,CAAC,KAAK,CAAC;KACvB;SAAM,IAAI,IAAI,KAAK,MAAM,EAAE;QAC1B,OAAO,QAAQ,CAAC,IAAI,CAAC;KACtB;SAAM,IAAI,IAAI,KAAK,MAAM,EAAE;QAC1B,OAAO,QAAQ,CAAC,IAAI,CAAC;KACtB;SAAM,IAAI,IAAI,KAAK,OAAO,EAAE;QAC3B,OAAO,QAAQ,CAAC,KAAK,CAAC;KACvB;SAAM,IAAI,IAAI,KAAK,OAAO,EAAE;QAC3B,OAAO,QAAQ,CAAC,KAAK,CAAC;KACvB;SAAM;QACL,MAAM,IAAI,KAAK,CAAC,sBAAsB,IAAI,GAAG,CAAC,CAAC;KAChD;CACF;;;;;AAGD,SAAgB,WAAW,CAAC,KAAe;IACzC,IAAI,KAAK,KAAK,QAAQ,CAAC,KAAK,EAAE;QAC5B,OAAO,OAAO,CAAC;KAChB;SAAM,IAAI,KAAK,KAAK,QAAQ,CAAC,KAAK,EAAE;QACnC,OAAO,OAAO,CAAC;KAChB;SAAM,IAAI,KAAK,KAAK,QAAQ,CAAC,IAAI,EAAE;QAClC,OAAO,MAAM,CAAC;KACf;SAAM,IAAI,KAAK,KAAK,QAAQ,CAAC,IAAI,EAAE;QAClC,OAAO,MAAM,CAAC;KACf;SAAM,IAAI,KAAK,KAAK,QAAQ,CAAC,KAAK,EAAE;QACnC,OAAO,OAAO,CAAC;KAChB;SAAM,IAAI,KAAK,KAAK,QAAQ,CAAC,KAAK,EAAE;QACnC,OAAO,OAAO,CAAC;KAChB;SAAM;QACL,MAAM,IAAI,KAAK,CAAC,uBAAuB,KAAK,GAAG,CAAC,CAAC;KAClD;CACF;;;;;;;;IC/CC,UAAW,UAAU;IACrB,QAAS,QAAQ;;;;;;;ACFnB;;;AAYA,MAAa,UAAU;IAHvB;QAME,eAAU,GAAG,IAAI,CAAC;QAClB,eAAU,GAAG,IAAI,CAAC;QAClB,aAAQ,GAAG,QAAQ,CAAC,IAAI,CAAC;QACzB,yBAAoB,GAAG,MAAM,CAAC;QAC9B,yBAAoB,GAAG,SAAS,CAAC;QACjC,0BAAqB,GAAG,OAAO,CAAC;QAChC,4BAAuB,GAAG,SAAS,CAAC;QACpC,yBAAoB,GAAG,MAAM,CAAC;QAC9B,oBAAe,GAAG,eAAe,CAAC,QAAQ,CAAC;KAC5C;;AAXiB,wBAAa,GAAqB,CAAC,EAAE,SAAS,EAAE,YAAY,EAAE,aAAa,EAAE,UAAU,EAAE,CAAC,CAAC;;YAJ5G,UAAU,SAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;ACXD,SAAgB,MAAM,CAAC,GAAQ,EAAE,YAAoB;IACnD,OAAO,OAAO,GAAG,KAAK,YAAY,CAAC;CACpC;;;;;;ACFD;;;;AAGA,SAAgB,QAAQ,CAAC,GAAQ;IAC/B,OAAO,MAAM,CAAC,GAAG,EAAE,QAAQ,CAAC,CAAC;CAC9B;;;;;;ACLD;;;;AAKA,SAAgB,UAAU,CAAC,MAA+B;IACxD;;;;IAAO,CAAC,WAAgB;;cAChB,QAAQ,GAAmB,QAAQ,CAAC,MAAM,CAAC;cAC7C,EAAE,SAAS,qBAAE,MAAM,EAAU,EAAE,aAAa,EAAE,WAAW,EAAE;iCAC3D,MAAM,EAAkB;QAE5B,UAAU,CAAC,aAAa,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;KACzC,EAAC;CACH;;;;;;;ACPD,MAAa,cAAc,GAAG,KAAK;;AACnC,MAAa,kBAAkB,GAAG,SAAS;;;;;;IAY9B,SAAS;;;;;MAAT,SAAU,SAAQ,cAAc;IAJ7C;;QAKE,UAAK,GAAG,cAAc,CAAC;QACvB,iBAAY,GAAG,IAAI,CAAC;QACpB,cAAS,GAAW,IAAI,CAAC;QACzB,YAAO,GAAe,IAAI,CAAC;QAC3B,qBAAgB,GAAG,kBAAkB,CAAC;QACtC,8BAAyB,GAAG,IAAI,CAAC;QACjC,gCAA2B,GAAG,KAAK,CAAC;QACpC,wBAAmB,GAAG,gCAAgC,CAAC;QACvD,uBAAkB,GAAG,gCAAgC,CAAC;QACtD,iBAAY,GAAG,UAAU,CAAC;QAC1B,mBAAc,GAAG,YAAY,CAAC;KAC/B;CAAA,CAAA;;YAhBA,UAAU,SAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;AAEY,SAAS;IADrB,UAAU,CAAC,WAAW,CAAC;GACX,SAAS,CAYrB;;;;;;;;;;;;AC7BD,SAAgB,IAAI,CAAC,GAAG,KAAK;;UACrB,WAAW,GAAG,EAAE;;QAClB,GAAG;IAEP,IAAI,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EAAE;QAC3B,KAAK,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;KAClB;IAED,KAAK,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC;;IAE1B,IAAI,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,cAAc,CAAC,IAAI,KAAK,CAAC,MAAM,GAAG,CAAC,EAAE;;cAChD,KAAK,GAAG,KAAK,CAAC,KAAK,EAAE;QAC3B,KAAK,CAAC,CAAC,CAAC,GAAG,KAAK,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;KAC7B;;IAGD,IAAI,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,cAAc,CAAC,EAAE;QAClC,KAAK,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,eAAe,EAAE,QAAQ,CAAC,CAAC;KACxD;SAAM;QACL,KAAK,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,eAAe,EAAE,OAAO,CAAC,CAAC;KACvD;IAED,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;;YACjC,SAAS,GAAG,KAAK,CAAC,CAAC,CAAC;QAExB,IAAI,OAAO,SAAS,KAAK,QAAQ,EAAE;YACjC,MAAM,IAAI,SAAS,CAAC,iCAAiC,GAAG,SAAS,CAAC,CAAC;SACpE;QAED,IAAI,SAAS,KAAK,EAAE,EAAE;YAAE,SAAS;SAAE;QAEnC,IAAI,CAAC,GAAG,CAAC,EAAE;;YAET,SAAS,GAAG,SAAS,CAAC,OAAO,CAAC,QAAQ,EAAE,EAAE,CAAC,CAAC;SAC7C;QAED,IAAI,CAAC,GAAG,KAAK,CAAC,MAAM,GAAG,CAAC,EAAE;;YAExB,SAAS,GAAG,SAAS,CAAC,OAAO,CAAC,QAAQ,EAAE,EAAE,CAAC,CAAC;SAC7C;aAAM;;YAEL,SAAS,GAAG,SAAS,CAAC,OAAO,CAAC,QAAQ,EAAE,GAAG,CAAC,CAAC;SAC9C;QAED,WAAW,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;KAC7B;IAED,GAAG,GAAG,WAAW,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;;;IAI5B,GAAG,GAAG,GAAG,CAAC,OAAO,CAAC,iBAAiB,EAAE,IAAI,CAAC,CAAC;;;UAGrC,QAAQ,GAAG,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC;IAC/B,GAAG,GAAG,QAAQ,CAAC,KAAK,EAAE,IAAI,QAAQ,CAAC,MAAM,GAAG,CAAC,GAAG,GAAG,GAAG,EAAE,CAAC,GAAG,QAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;IAE/E,OAAO,GAAG,CAAC;CACZ;;;;;;;AC5DD,MAAa,gBAAgB,GAAG,IAAI,MAAM,CAAC,SAAS,EAAE,IAAI,CAAC;;AAC3D,MAAa,qBAAqB,GAAG,IAAI,MAAM,CAAC,WAAW,EAAE,IAAI,CAAC;;AAClE,MAAa,yBAAyB,GAAG,MAAM;;;;;;ACF/C;;;;;AAGA,SAAgB,aAAa,CAAC,QAAgB,EAAE,YAAY,GAAG,EAAE;IAC/D,OAAO,CAAC,QAAQ,IAAI,EAAE;SACnB,OAAO,CAAC,qBAAqB,EAAE,YAAY,CAAC;SAC5C,OAAO,CAAC,gBAAgB,EAAE,YAAY,CAAC,CAAC;CAC5C;;;;;;;;;;;;ACPD,SAAgB,YAAY,CAAC,QAAgB,EAAE,QAAgB,EAAE,UAAkB;IACjF,OAAO,CAAC,QAAQ,IAAI,EAAE;SACnB,OAAO,CAAC,IAAI,MAAM,CAAC,KAAK,QAAQ,IAAI,EAAE,IAAI,CAAC,EAAE,UAAU,CAAC;SACxD,OAAO,CAAC,IAAI,MAAM,CAAC,IAAI,QAAQ,GAAG,EAAE,IAAI,CAAC,EAAE,UAAU,CAAC,CAAC;CAC3D;;;;;;ACJD;;;;;;;;;AAOA,SAAgB,MAAM,CAAC,QAAgB,EAAE,MAAW,EAAE,iBAAiB,GAAG,KAAK;IAC7E,MAAM,CAAC,IAAI,CAAC,MAAM,IAAI,EAAE,CAAC;SACtB,OAAO;;;;IAAC,GAAG,IAAI,QAAQ,GAAG,YAAY,CAAC,QAAQ,EAAE,GAAG,EAAE,MAAM,CAAC,GAAG,CAAC,CAAC,EAAC,CAAC;IAEvE,IAAI,iBAAiB,EAAE;QACrB,QAAQ,GAAG,aAAa,CAAC,QAAQ,CAAC,CAAC;KACpC;IAED,OAAO,QAAQ,CAAC;CACjB;;;;;;AChBD;;;;;;AAOA,SAAgB,KAAK,CAAC,GAAW;IAC/B,OAAO,QAAQ,CAAC,GAAG,CAAC;UAChB,GAAG,CAAC,OAAO,CAAC,cAAc,EAAE,IAAI,CAAC;UACjC,GAAG,CAAC;CACT;;;;;;;ACXD,MAAa,gBAAgB,GAAG,yCAAyC;;AACzE,MAAa,6BAA6B,GAAG,mDAAmD;;AAChG,MAAa,gCAAgC,GAAG,sDAAsD;;AACtG,MAAa,iBAAiB,GAAG,EAAE;;;;;;;;;;ACSnC,MAAsB,wBAAwB;;;;;IAO5C,YAAsB,IAAgB,EAAE,WAA2C;QAA7D,SAAI,GAAJ,IAAI,CAAY;QAN5B,WAAM,GAA0B;YACxC,GAAG,EAAE,IAAI;YACT,WAAW,EAAE,IAAI;YACjB,QAAQ,EAAE,IAAI;SACf,CAAC;QAGA,IAAI,QAAQ,CAAC,WAAW,CAAC,EAAE;YACzB,IAAI,CAAC,MAAM,CAAC,GAAG,sBAAG,WAAW,EAAU,CAAC;SACzC;aAAM;YACL,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,EAAE,WAAW,CAAC,CAAC;SACzC;QAED,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,EAAE;YACpB,MAAM,gBAAgB,CAAC;SACxB;KACF;;;;;;;;IAES,gBAAgB,CAAC,MAAS,EAAE,QAAgB,EAAE,MAAW;QACjE,OAAO,IAAI,CAAC,YAAY,CAAC,MAAM,GAAG,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC,GAAG,IAAI,EAAE,QAAQ,EAAE,MAAM,CAAC,CAAC;KAC7F;;;;;;;;IAES,YAAY,CAAC,EAAmB,EAAE,QAAgB,EAAE,MAAW;;cACjE,mBAAmB,GAAG,EAAE;QAC9B,mBAAmB,CAAC,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC,GAAG,EAAE,CAAC;QAElD,OAAO,IAAI,CAAC,MAAM,CAAC,QAAQ,EAAE,MAAM,CAAC,MAAM,CAAC,mBAAmB,EAAE,MAAM,CAAC,CAAC,CAAC;KAC1E;;;;;;;IAES,MAAM,CAAC,QAAgB,EAAE,MAAW;;cACtC,GAAG,GAAG,QAAQ;cAChB,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,EAAE,QAAQ,CAAC;cAC/B,IAAI,CAAC,MAAM,CAAC,GAAG;QAEnB,OAAO,IAAI,CAAC,aAAa,CAAC,GAAG,EAAE,MAAM,CAAC,CAAC;KACxC;;;;;;;IAES,aAAa,CAAC,GAAW,EAAE,MAAW;QAC9C,MAAM,GAAG,MAAM,IAAI,EAAE,CAAC;QACtB,IAAI,IAAI,CAAC,MAAM,CAAC,kBAAkB,EAAE;YAClC,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,IAAI,CAAC,MAAM,CAAC,kBAAkB,EAAE,MAAM,CAAC,CAAC;SACpE;QAED,GAAG,GAAG,MAAM,CAAC,GAAG,EAAE,MAAM,EAAE,IAAI,CAAC,CAAC;QAChC,IAAI,IAAI,CAAC,MAAM,CAAC,QAAQ,EAAE;YACxB,GAAG,GAAG,KAAK,CAAC,GAAG,CAAC,CAAC;SAClB;QAED,OAAO,GAAG,CAAC;KACZ;CACF;;;;;;MCrCY,UAAW,SAAQ,wBAAmC;;;;;IACjE,YAAY,IAAgB,EAAU,SAAoB;QACxD,KAAK,CAAC,IAAI,EAAE,SAAS,CAAC,UAAU,CAAC,CAAC;QADE,cAAS,GAAT,SAAS,CAAW;KAEzD;;;;;;IAED,IAAI,CAAC,WAAiB,EAAE,MAAmB;;cACnC,GAAG,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,YAAY,EAAE,WAAW,CAAC;QACjE,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAO,GAAG,EAAE,EAAE,MAAM,EAAE,CAAC,CAAC;KAC7C;;;;;;IAED,MAAM,CAAC,WAAiB,EAAE,MAAmB;;cACrC,GAAG,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,YAAY,EAAE,WAAW,CAAC;QACjE,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAY,GAAG,EAAE,EAAE,MAAM,EAAE,CAAC,CAAC;KAClD;;;YAhBF,UAAU,SAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;YAxBQ,UAAU;YAOV,SAAS;;;;;;;;;;;ACMlB,MAAa,MAAM;;;;IAGjB,YAAoB,MAAkB;QAAlB,WAAM,GAAN,MAAM,CAAY;QAF/B,SAAI,GAAoB,EAAE,CAAC;KAGjC;;;;IAED,IAAI,KAAK;QACP,OAAO,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC;KAC7B;;;;IAED,IAAI,OAAO;QACT,OAAO,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC;KAC/B;;;;IAED,IAAI,OAAO;QACT,OAAO,IAAI,CAAC,KAAK,IAAI,QAAQ,CAAC,KAAK,CAAC;KACrC;;;;IAED,IAAI,OAAO;QACT,OAAO,IAAI,CAAC,KAAK,IAAI,QAAQ,CAAC,KAAK,CAAC;KACrC;;;;IAED,IAAI,MAAM;QACR,OAAO,IAAI,CAAC,KAAK,IAAI,QAAQ,CAAC,IAAI,CAAC;KACpC;;;;IAED,IAAI,OAAO;QACT,OAAO,IAAI,CAAC,KAAK,IAAI,QAAQ,CAAC,KAAK,CAAC;KACrC;;;;IAED,IAAI,OAAO;QACT,OAAO,IAAI,CAAC,KAAK,IAAI,QAAQ,CAAC,KAAK,CAAC;KACrC;;;;IAED,IAAI,UAAU;QACZ,OAAO,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;KAC5B;;;;IAED,IAAI,UAAU;QACZ,OAAO,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;KAC5B;;;;IAED,IAAI,SAAS;QACX,OAAO,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;KAC3B;;;;IAED,IAAI,UAAU;QACZ,OAAO,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;KAC5B;;;;IAED,IAAI,UAAU;QACZ,OAAO,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;KAC5B;;;;;IAED,KAAK,CAAC,OAAgB;QACpB,OAAO,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC,MAAM,CAAC;KACxC;;;;;IAED,UAAU,CAAC,OAAgB;QACzB,OAAO,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC,CAAC;KAC/C;;;;;IAED,WAAW,CAAC,QAAkB;QAC5B,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM;;;;QAAC,CAAC,IAAI,CAAC,CAAC,KAAK,KAAK,QAAQ,EAAC,CAAC;KACpD;;;;;IAED,QAAQ,CAAC,GAAa;QACpB,IAAI,IAAI,CAAC,MAAM,CAAC,UAAU,IAAI,GAAG,CAAC,KAAK,IAAI,IAAI,CAAC,MAAM,CAAC,QAAQ,EAAE;YAC/D,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;YAEpB,IAAI,IAAI,CAAC,OAAO,EAAE;gBAChB,OAAO,CAAC,GAAG,CAAC,GAAG,QAAQ,CAAC,GAAG,CAAC,KAAK,CAAC,KAAK,GAAG,CAAC,GAAG,IAAI,GAAG,CAAC,KAAK,IAAI,EAAE,EAAE,CAAC,CAAC;aACtE;SACF;QAED,OAAO,GAAG,CAAC;KACZ;;;;;;;IAED,GAAG,CAAC,GAAW,EAAE,KAAe,EAAE,QAAe,IAAI;QACnD,OAAO,IAAI,CAAC,QAAQ,CAAC;YACnB,GAAG,EAAE,MAAM,CAAC,GAAG,EAAE,EAAE,KAAK,EAAE,CAAC;YAC3B,KAAK;YACL,KAAK;YACL,OAAO,EAAE,IAAI,IAAI,EAAE;SACpB,CAAC,CAAC;KACJ;;;;;IAED,KAAK,CAAC,GAAW;QACf,OAAO,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,QAAQ,CAAC,KAAK,CAAC,CAAC;KACtC;;;;;IAED,KAAK,CAAC,GAAW;QACf,OAAO,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,QAAQ,CAAC,KAAK,CAAC,CAAC;KACtC;;;;;IAED,IAAI,CAAC,GAAW;QACd,OAAO,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,QAAQ,CAAC,IAAI,CAAC,CAAC;KACrC;;;;;;IAED,IAAI,CAAC,GAAW,EAAE,QAAe,IAAI;QACnC,OAAO,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,QAAQ,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;KAC5C;;;;;;IAED,KAAK,CAAC,GAAW,EAAE,QAAe,IAAI;QACpC,OAAO,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,QAAQ,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;KAC7C;;;;;;IAED,KAAK,CAAC,GAAW,EAAE,QAAe,IAAI;QACpC,OAAO,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,QAAQ,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;KAC7C;;;;IAED,KAAK;QACH,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;KACtB;;;YAlHF,UAAU,SAAC,EAAE,UAAU,EAAE,MAAM,EAAE;;;;YAPzB,UAAU;;;;;;;;;;;;ACNnB,SAAgB,WAAW,CAAC,KAAa;IACvC,KAAK,GAAG,KAAK,IAAI,EAAE,CAAC;;;UAGd,KAAK,GAAG,kBAAkB,CAAC,KAAK,CAAC,CAAC,KAAK,CAAC,YAAY,CAAC;IAC3D,OAAO,KAAK,CAAC,MAAM,IAAI,KAAK,GAAG,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;CAClD;;;;;;;ACND,MAAa,oBAAoB,GAAG,CAAC,OAAO,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC;;AACrE,MAAa,kBAAkB,GAAG,MAAM;;;;;;ACDxC;;;;AAGA,SAAgB,SAAS,CAAC,GAAQ;IAChC,OAAO,CAAC,MAAM,CAAC,GAAG,EAAE,WAAW,CAAC,CAAC;CAClC;;;;;;ACLD;;;;AAEA,SAAgB,OAAO,CAAC,GAAQ;IAC9B,OAAO,SAAS,CAAC,GAAG,CAAC,IAAI,GAAG,KAAK,IAAI,IAAI,GAAG,KAAK,EAAE,CAAC;CACrD;;;;;;ACJD;;;;;;AAIA,SAAgB,cAAc,CAAC,aAAqB,EAAE,aAAsB,EAAE,cAAc,GAAG,KAAK;;QAC9F,GAAG,GAAG,CAAC;IAEX,IAAI,CAAC,aAAa,EAAE;QAClB,OAAO,kBAAkB,CAAC;KAC3B;IAED,OAAO,aAAa,IAAI,IAAI,IAAI,EAAE,GAAG,EAAE;QACrC,aAAa,GAAG,aAAa,GAAG,IAAI,CAAC;KACtC;IAED,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,EAAE;QAC3B,aAAa,GAAG,aAAa,IAAI,EAAE,IAAI,GAAG,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;KACxD;;UAEK,QAAQ,GAAW,aAAa,CAAC,OAAO,CAAC,aAAa,CAAC;;UACvD,IAAI,GAAG,cAAc;UACvB,oBAAoB,CAAC,GAAG,CAAC,CAAC,WAAW,EAAE;UACvC,oBAAoB,CAAC,GAAG,CAAC;IAE7B,OAAO,GAAG,QAAQ,IAAI,IAAI,EAAE,CAAC;CAC9B;;;;;;;;;AChBD,MAAsB,WAAW;IAHjC;QAIY,cAAS,GAAG,EAAE,CAAC;QACf,cAAS,GAAG,EAAE,CAAC;KAoC1B;;;;;IA5BC,GAAG,CAAC,GAAW;QACb,OAAO,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;KAC/B;;;;;;IAKD,IAAI,CAAC,GAAW;;cACR,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC;QAC3B,OAAO,WAAW,CAAC,KAAK,CAAC,GAAG,WAAW,CAAC,GAAG,CAAC,CAAC;KAC9C;;;;;IAED,aAAa,CAAC,GAAW;QACvB,OAAO,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;KACvC;;;;;IAED,SAAS,CAAC,GAAW;;cACb,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC;QAC3B,OAAO,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,GAAG,IAAI,CAAC;KACzC;;;;;;IAED,SAAS,CAAC,GAAW,EAAE,KAAU;QAC/B,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,CAAC;KACtC;;;;;;IAES,SAAS,CAAC,GAAW;QAC7B,OAAO,GAAG,IAAI,CAAC,SAAS,GAAG,GAAG,GAAG,IAAI,CAAC,SAAS,EAAE,CAAC;KACnD;;;YAxCF,UAAU,SAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;MCFY,iBAAkB,SAAQ,WAAW;;;;IAChD,IAAI,MAAM;QACR,OAAO,YAAY,CAAC,MAAM,CAAC;KAC5B;;;;;IAED,GAAG,CAAC,GAAW;QACb,OAAO,YAAY,CAAC,OAAO,CAAC,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,CAAC;KAClD;;;;;;IAED,GAAG,CAAC,GAAW,EAAE,KAAa;QAC5B,YAAY,CAAC,OAAO,CAAC,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE,KAAK,CAAC,CAAC;KAClD;;;;;IAED,MAAM,CAAC,GAAW;QAChB,YAAY,CAAC,UAAU,CAAC,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,CAAC;KAC9C;;;;IAED,KAAK;QACH,YAAY,CAAC,KAAK,EAAE,CAAC;KACtB;;;YApBF,UAAU,SAAC,EAAE,UAAU,EAAE,MAAM,EAAE;;;;;;;;;;;ACLlC,SAAgB,SAAS;IACvB,OAAO,OAAO,MAAM,KAAK,WAAW,CAAC;CACtC;;;;;;ACFD;;;AAGA,SAAgB,UAAU;IACxB,OAAO,SAAS,EAAE,GAAG,QAAQ,CAAC,IAAI,GAAG,EAAE,CAAC;CACzC;;;;;;ACLD;;;;AAGA,SAAgB,cAAc,CAAC,MAAe;;QACxC,MAAM;IACV,MAAM,GAAG,MAAM,IAAI,UAAU,EAAE,CAAC;IAEhC,IAAI,CAAC,MAAM,EAAE;QACX,OAAO,EAAE,CAAC;KACX;IAED,MAAM,GAAG,MAAM,CAAC,KAAK,CAAC,MAAM,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;IAC1D,IAAI,CAAC,MAAM,IAAI,CAAC,MAAM,CAAC,MAAM,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,MAAM,CAAC,MAAM,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,GAAG,CAAC,EAAE;QACtG,OAAO,EAAE,CAAC;KACX;IAED,OAAO,MAAM,CAAC,MAAM;;;;;IAAC,CAAC,MAAM,EAAE,IAAI;cAC1B,CAAC,GAAG,EAAE,GAAG,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC;QAClC,OAAO,MAAM,CAAC,MAAM,CAAC,MAAM,EAAE,EAAE,CAAC,GAAG,GAAG,kBAAkB,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;KAClE,GAAE,EAAE,CAAC,CAAC;CACR;;;;;;;;;;;ACpBD,SAAgB,WAAW,CAAI,IAAS;IACtC,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;CAC9B;;;;;;ACFD;;;;AAIA,SAAgB,qBAAqB,CAAC,GAAW;;UACzC,KAAK,GAAG,KAAK,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC;;UAC7B,QAAQ,GAAG,KAAK,CAAC,MAAM,GAAG,CAAC;UAC7B,WAAW,CAAC,KAAK,CAAC;UAClB,IAAI;IAER,OAAO,QAAQ,IAAI,QAAQ,KAAK,GAAG;UAC/B,QAAQ;aACP,KAAK,CAAC,GAAG,CAAC;aACV,MAAM;;;;QAAC,IAAI,IAAI,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,EAAC;UACrD,EAAE,CAAC;CACR;;;;;;ACfD;;;;AAGA,SAAgB,qBAAqB,CAAC,GAAW;UACzC,CAAC,aAAa,CAAC,GAAG,qBAAqB,CAAC,GAAG,CAAC;IAClD,OAAO,aAAa,IAAI,IAAI,CAAC;CAC9B;;;;;;;;;;ACND,SAAgBA,QAAM,CAAC,GAAQ;IAC7B,OAAO,GAAG,YAAY,IAAI,CAAC;CAC5B;;;;;;ACFD;;;;AAGA,SAAgB,UAAU,CAAC,GAAQ;IACjC,OAAO,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;CACtB;;;;;;;;;;ACLD,SAAgB,cAAc,CAAC,GAAQ;IACrC,OAAO,KAAK,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC;CAC3B;;;;;;ACFD;;;;AAGA,SAAgB,WAAW,CAAC,GAAQ;IAClC,OAAO,CAAC,cAAc,CAAC,GAAG,CAAC,CAAC;CAC7B;;;;;;ACLD;;;;AAIA,SAAgB,eAAe,CAAC,KAAa;IAC3C,IAAI,UAAU,CAAC,KAAK,CAAC,EAAE;QACrB,OAAO,KAAK,CAAC;KACd;SAAM,IAAI,KAAK,KAAK,MAAM,IAAI,KAAK,KAAK,OAAO,EAAE;QAChD,OAAO,OAAO,CAAC,KAAK,CAAC,CAAC;KACvB;SAAM,IAAI,WAAW,CAAC,KAAK,CAAC,EAAE;QAC7B,OAAO,MAAM,CAAC,KAAK,CAAC,CAAC;KACtB;SAAM;QACL,OAAO,KAAK,CAAC;KACd;CACF;;;;;;;;;;ACdD,SAAgB,cAAc,CAAC,KAAa;IAC1C,OAAO,MAAM,CAAC,KAAK,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,WAAW,EAAE,GAAG,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;CAC/D;;;;;;;;;;;;;;ACAD,SAAgB,QAAQ,CAAC,MAAW,EAAE,GAAW,EAAE,GAAQ;IACzD,IAAI,CAAC,MAAM,EAAE;QACX,OAAO;KACR;;UAEK,EAAE,GAAG,GAAG,CAAC,KAAK,CAAC,IAAI,CAAC;IAC1B,IAAI,EAAE,CAAC,MAAM,GAAG,CAAC,EAAE;QACjB,MAAM,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC;KACrB;SAAM;QACL,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE;YAClB,MAAM,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC;SACpB;QACD,MAAM,GAAG,MAAM,CAAC,EAAE,CAAC,KAAK,EAAE,CAAC,CAAC;QAC5B,QAAQ,CAAC,MAAM,EAAE,EAAE,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,GAAG,CAAC,CAAC;KACrC;CACF;;;;;;;;;;;ICDY,cAAc;;;;;MAAd,cAAe,SAAQ,cAAc;IAJlD;;QAKE,iBAAY,GAAG,IAAI,CAAC;QACpB,eAAU,GAAG,IAAI,CAAC;QAClB,eAAU,GAAG,IAAI,CAAC;QAClB,sBAAiB,GAAuB,QAAQ,CAAC;QACjD,kBAAa,GAAG,OAAO,CAAC;QACxB,oBAAe,GAAG,qBAAqB,CAAC;QACxC,qBAAgB,GAAG,sBAAsB,CAAC;QAC1C,kBAAa,GAAG,gBAAgB,CAAC;QACjC,kBAAa,GAAG,gBAAgB,CAAC;QACjC,uBAAkB,GAAG,qBAAqB,CAAC;QAC3C,sBAAiB,GAAG,qCAAqC,CAAC;QAC1D,4BAAuB,GAAG,6CAA6C,CAAC;QACxE,oBAAe,GAAG,aAAa,CAAC;QAChC,gCAA2B,GAAG,6BAA6B,CAAC;QAC5D,gCAA2B,GAAG,OAAO,CAAC;QACtC,uCAAkC,GAAG,OAAO,CAAC;QAC7C,uBAAkB,GAAG,KAAK,CAAC;QAC3B,gBAAW,GAAW,IAAI,CAAC;QAC3B,oBAAe,GAAW,IAAI,CAAC;QAC/B,oBAAe,GAAW,IAAI,CAAC;QAC/B,oBAAe,GAAG,OAAO,CAAC;QAC1B,cAAS;;;;;QAAG,CAAC,QAAQ,EAAE,QAAQ,KAAK,gCAAgC,QAAQ,aAAa,QAAQ,EAAE,EAAC;KACrG;CAAA,CAAA;;YA3BA,UAAU,SAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;AAEY,cAAc;IAD1B,UAAU,CAAC,gBAAgB,CAAC;GAChB,cAAc,CAuB1B;;;;;;;;;;ACvCD,SAAgB,OAAO,CAAC,GAAQ;IAC9B,OAAO,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;CAC3B;;;;;;ACFD;;;;AAGA,SAAgBC,UAAQ,CAAC,GAAQ;IAC/B,OAAO,MAAM,CAAC,GAAG,EAAE,QAAQ,CAAC,CAAC;CAC9B;;;;;;ACLD,MAWa,kBAAkB;;;;IAI7B,YAAoB,MAAsB;QAAtB,WAAM,GAAN,MAAM,CAAgB;QAHzB,UAAK,GAAG,IAAI,GAAG,EAAE,CAAC;QAIjC,IAAI,CAAC,gBAAgB,GAAG,IAAI,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,eAAe,CAAC,CAAC;KACjE;;;;IAED,IAAI,OAAO;QACT,OAAO,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC;KACjC;;;;IAED,IAAI,SAAS;QACX,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC;KACxB;;;;IAED,QAAQ;QACN,OAAO,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;KAC/B;;;;;IAED,QAAQ,CAAC,KAA4C;QACnD,IAAI,CAAC,UAAU,EAAE,CAAC;QAClB,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;KACtB;;;;;IAED,QAAQ,CAAC,KAA4C;QACnD,IAAI,QAAQ,CAAC,KAAK,CAAC,IAAI,oBAAC,KAAK,IAAY,QAAQ,CAAC,GAAG,CAAC,EAAE;YACtD,KAAK,GAAG,IAAI,CAAC,OAAO,qBAAE,KAAK,IAAY,CAAC;SACzC;QAED,IAAI,OAAO,CAAC,KAAK,CAAC,EAAE;YAClB,oBAAC,KAAK,IAAc,OAAO,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC;SACjD;aAAM;YACL,IAAI,CAAC,OAAO,oBAAC,KAAK,GAAW,CAAC;SAC/B;KACF;;;;;IAED,OAAO,CAAC,IAAqB;QAC3B,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC;KACrC;;;;IAED,UAAU;QACR,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE,CAAC;KACpB;;;;;IAED,OAAO,CAAC,IAAqB;QAC3B,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE;YACjB,OAAO,IAAI,CAAC;SACb;QAED,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE;YAClB,OAAO,KAAK,CAAC;SACd;QAED,OAAO,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC;KACpC;;;;;IAED,QAAQ,CAAC,KAAsB;;YACzB,UAAU;QAEd,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE;YACjB,OAAO,IAAI,CAAC;SACb;QAED,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE;YACnB,OAAO,KAAK,CAAC;SACd;QAED,UAAU,GAAG,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;QACjC,OAAO,MAAM,CAAC,KAAK,CAAC,CAAC,QAAQ,CAAC,GAAG,CAAC;cAC9B,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC;cAC5B,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,CAAC;KAClC;;;;;IAED,WAAW,CAAC,KAA4C;QACtD,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE;YACjB,OAAO,IAAI,CAAC;SACb;QAED,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE;YACnB,OAAO,KAAK,CAAC;SACd;;cAEK,QAAQ,GAAa,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC;QACpD,OAAO,QAAQ,CAAC,KAAK,CAAC,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;KACvD;;;;;IAED,WAAW,CAAC,KAA4C;QACtD,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE;YACjB,OAAO,IAAI,CAAC;SACb;QAED,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE;YACnB,OAAO,KAAK,CAAC;SACd;;cAEK,QAAQ,GAAa,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC;QACpD,OAAO,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;KACtD;;;;;;IAEO,cAAc,CAAC,IAAqB;QAC1C,OAAO,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC;KAC5C;;;;;;IAEO,aAAa,CAAC,KAA4C;;YAC5D,SAAS,GAAa,EAAE;QAC5B,IAAI,QAAQ,CAAC,KAAK,CAAC,EAAE;YACnB,SAAS,GAAG,IAAI,CAAC,OAAO,oBAAC,KAAK,GAAW,CAAC;SAC3C;aAAM,IAAIA,UAAQ,CAAC,KAAK,CAAC,EAAE;YAC1B,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC;SAC/B;aAAM;YACL,SAAS,sBAAG,KAAK,EAAY,CAAC;SAC/B;QAED,OAAO,SAAS,CAAC;KAClB;;;;;;IAEO,OAAO,CAAC,KAAsB;QACpC,OAAO,MAAM,CAAC,KAAK,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;KACnD;;;YA1HF,UAAU,SAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;YATQ,cAAc;;;;;;;;;;ICiBrB,WAAQ;IACR,YAAS;IACT,eAAY;IACZ,gBAAa;;;;;;AAOf,MAAa,WAAW;;;;;;;;IAUtB,YACU,IAAgB,EAChB,OAA2B,EAC3B,MAAsB,EACtB,OAA0B,EAC1B,GAAW;QAJX,SAAI,GAAJ,IAAI,CAAY;QAChB,YAAO,GAAP,OAAO,CAAoB;QAC3B,WAAM,GAAN,MAAM,CAAgB;QACtB,YAAO,GAAP,OAAO,CAAmB;QAC1B,QAAG,GAAH,GAAG,CAAQ;QAPJ,uBAAkB,GAAG,IAAI,OAAO,EAAe,CAAC;QAS/D,IAAI,CAAC,UAAU,GAAG,MAAM,CAAC,UAAU,CAAC;QACpC,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,kBAAkB,CAAC,YAAY,EAAE,CAAC;QAE1D,IAAI,MAAM,CAAC,UAAU,IAAI,CAAC,IAAI,CAAC,eAAe,EAAE;YAC9C,IAAI,CAAC,eAAe,EAAE,CAAC;SACxB;KACF;;;;;;;IAED,MAAM,CAAC,QAAgB,EAAE,QAAgB,EAAE,aAAsB,IAAI,CAAC,UAAU;;cACxE,UAAU,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAC/B,GAAG,IAAI,CAAC,MAAM,CAAC,UAAU,IAAI,IAAI,CAAC,MAAM,CAAC,aAAa,EAAE,EACxD,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,QAAQ,EAAE,QAAQ,CAAC,CAC1C;aACE,IAAI,CACH,aAAa,CAAC,CAAC,CAAC,CACjB;QAEH,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;QAC7B,UAAU,CAAC,SAAS,CAAC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;QAEjF,OAAO,UAAU,CAAC;KACnB;;;;IAED,OAAO;;cACC,UAAU,GAAG,GAAG,IAAI,CAAC,MAAM,CAAC,UAAU,IAAI,IAAI,CAAC,MAAM,CAAC,eAAe,EAAE;QAC7E,IAAI,IAAI,CAAC,kBAAkB,EAAE;YAC3B,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,wDAAwD,UAAU,EAAE,CAAC,CAAC;YACpF,IAAI,CAAC,WAAW,EAAE,CAAC;YAEnB,IAAI,OAAO,QAAQ,KAAK,WAAW,EAAE;gBACnC,QAAQ,CAAC,IAAI,GAAG,UAAU,CAAC;aAC5B;SACF;aAAM;;;;kBAGC,SAAS,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC;iBACxC,IAAI,CACH,aAAa,CAAC,CAAC,CAAC,CACjB;YAEH,SAAS;iBACN,SAAS,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;YAE7E,OAAO,SAAS,CAAC;SAClB;KACF;;;;IAED,WAAW;QACT,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAc,GAAG,IAAI,CAAC,MAAM,CAAC,UAAU,IAAI,IAAI,CAAC,MAAM,CAAC,gBAAgB,EAAE,CAAC,CAAC;KAChG;;;;IAED,QAAQ;QACN,OAAO,IAAI,CAAC,eAAe;cACvB,IAAI,CAAC,OAAO,CAAC,YAAY,IAAI,IAAI;cACjC,IAAI,CAAC;KACV;;;;IAED,eAAe;;cACP,KAAK,GAAG,IAAI,CAAC,aAAa,EAAE;;YAC9B,MAAM,GAAG,KAAK;QAElB,IAAI,KAAK,IAAI,KAAK,CAAC,UAAU,CAAC,EAAE;;kBACxB,WAAW,GAAG,KAAK,CAAC,UAAU,CAAC;YACrC,IAAI,WAAW,GAAG,IAAI,IAAI,EAAE,EAAE;gBAC5B,IAAI,CAAC,UAAU,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;gBAC7B,MAAM,GAAG,IAAI,CAAC;aACf;SACF;QAED,OAAO,MAAM,CAAC;KACf;;;;;;IAED,UAAU,CAAC,OAAoB,EAAE,mBAA4B,KAAK;QAChE,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;QACvB,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC;QAC5B,IAAI,CAAC,eAAe,GAAG,CAAC,OAAO,CAAC,gBAAgB,IAAI,EAAE,EAAE,WAAW,EAAE,KAAK,QAAQ,CAAC;QACnF,IAAI,CAAC,kBAAkB,GAAG,CAAC,OAAO,CAAC,kBAAkB,IAAI,EAAE,EAAE,WAAW,EAAE,KAAK,YAAY,CAAC;;;;;QAM5F,IAAI,CAAC,MAAM,CAAC,WAAW,GAAG,OAAO,CAAC,YAAY,CAAC;QAC/C,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,OAAO,CAAC,UAAU,IAAI,OAAO,CAAC,KAAK,CAAC,CAAC;QAE3D,IAAI,CAAC,gBAAgB,IAAI,IAAI,CAAC,UAAU,EAAE;YACxC,OAAO,CAAC,UAAU,GAAG,IAAI,IAAI,EAAE,CAAC;YAChC,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC;SAC7B;QAED,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,4BAA4B,CAAC,CAAC;QAC7C,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;KACpD;;;;IAED,WAAW;;;QAGT,IAAI,CAAC,eAAe,GAAG,KAAK,CAAC;QAC7B,IAAI,CAAC,eAAe,GAAG,KAAK,CAAC;QAC7B,IAAI,CAAC,kBAAkB,GAAG,KAAK,CAAC;QAChC,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACpB,IAAI,CAAC,OAAO,CAAC,UAAU,EAAE,CAAC;QAC1B,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;QACzB,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,6BAA6B,CAAC,CAAC;QAC9C,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,CAAC;KACrD;;;;;;IAEO,cAAc,CAAC,GAAQ;QAC7B,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,mBAAmB,EAAE,GAAG,CAAC,CAAC;QACzC,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,CAAC;KACxD;;;;;;IAEO,iBAAiB,CAAC,GAAQ;QAChC,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,oBAAoB,EAAE,GAAG,CAAC,CAAC;QAC1C,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,CAAC;KACzD;;;;;IAEO,aAAa;QACnB,IAAI;;kBACI,KAAK,GAAgB,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC,eAAe,CAAC;YAE9E,IAAI,KAAK,IAAI,KAAK,CAAC,UAAU,IAAI,QAAQ,CAAC,KAAK,CAAC,UAAU,CAAC,EAAE;gBAC3D,KAAK,CAAC,UAAU,GAAG,IAAI,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC;aAC/C;YAED,IAAI,KAAK,IAAI,KAAK,CAAC,UAAU,CAAC,IAAI,QAAQ,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC,EAAE;gBAC7D,KAAK,CAAC,UAAU,CAAC,GAAG,IAAI,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;aAC7D;YAED,OAAO,KAAK,CAAC;SACd;gBAAS;;SAET;KACF;;;;;;IAEO,aAAa,CAAC,KAAK;QACzB,IAAI;YACF,IAAI,KAAK,EAAE;gBACT,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC,eAAe,EAAE,KAAK,CAAC,CAAC;aAC5D;iBAAM;gBACL,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,eAAe,CAAC,CAAC;aAClD;SACF;gBAAS;;SAET;KACF;;;YArKF,UAAU,SAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;YAzBQ,UAAU;YAQV,kBAAkB;YAClB,cAAc;YAEd,iBAAiB;YADjB,MAAM;;;;;;;;;;;;ACDf,MAAsB,mBAAuB,SAAQ,wBAA2B;;;;;IAC9E,YAAsB,IAAgB,EAAE,WAA2C;QACjF,KAAK,CAAC,IAAI,EAAE,WAAW,CAAC,CAAC;QADL,SAAI,GAAJ,IAAI,CAAY;KAErC;;;;;;IAED,KAAK,CAAC,WAAiB,EAAE,MAAmB;;cACpC,GAAG,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,aAAa,EAAE,WAAW,CAAC;QAC/D,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAM,GAAG,EAAE,EAAE,MAAM,EAAE,CAAC,CAAC;KAC5C;;;;;;;IAED,GAAG,CAAC,EAAmB,EAAE,WAAiB,EAAE,MAAmB;;cACvD,GAAG,GAAG,IAAI,CAAC,YAAY,CAAC,EAAE,EAAE,IAAI,CAAC,MAAM,CAAC,WAAW,EAAE,WAAW,CAAC;QACvE,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAI,GAAG,EAAE,EAAE,MAAM,EAAE,CAAC,CAAC;KAC1C;;;;;;;IAED,MAAM,CAAC,MAAS,EAAE,WAAiB,EAAE,MAAmB;;cAChD,GAAG,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,cAAc,EAAE,WAAW,CAAC;QAChE,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAI,GAAG,EAAE,MAAM,EAAE,EAAE,MAAM,EAAE,CAAC,CAAC;KACnD;;;;;;;IAED,MAAM,CAAC,MAAS,EAAE,WAAiB,EAAE,MAAmB;;cAChD,GAAG,GAAG,IAAI,CAAC,gBAAgB,CAAC,MAAM,EAAE,IAAI,CAAC,MAAM,CAAC,cAAc,EAAE,WAAW,CAAC;QAClF,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,MAAM,EAAE,EAAE,MAAM,EAAE,CAAC,CAAC;KAC/C;;;;;;;IAED,MAAM,CAAC,EAAmB,EAAE,WAAiB,EAAE,MAAmB;;cAC1D,GAAG,GAAG,IAAI,CAAC,YAAY,CAAC,EAAE,EAAE,IAAI,CAAC,MAAM,CAAC,cAAc,EAAE,WAAW,CAAC;QAC1E,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAI,GAAG,EAAE,EAAE,MAAM,EAAE,CAAC,CAAC;KAC7C;CACF;;;;;;ACxCD,MAYa,iBAAkB,SAAQ,mBAA+B;;;;;IACpE,YAAsB,IAAgB,EAAE,MAAiB;QACvD,KAAK,CAAC,IAAI,EAAE;YACV,GAAG,EAAE,IAAI,CAAC,MAAM,CAAC,UAAU,EAAE,MAAM,CAAC,kBAAkB,CAAC;YACvD,kBAAkB,EAAE;gBAClB,KAAK,EAAE,MAAM,CAAC,KAAK;aACpB;SACF,CAAC,CAAC;QANiB,SAAI,GAAJ,IAAI,CAAY;KAOrC;;;YAXF,UAAU,SAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;YAVQ,UAAU;YAEV,SAAS;;;;;;;;;;;;ACsClB,MAAa,qBAAqB;;;;;;;;;;;;IAYhC,YACU,MAAc,EACd,IAAiB,EACjB,WAA8B,EAC9B,GAAW,EACX,MAAiB,EACjB,OAA0B,EAC1B,cAA8B,EAC9B,OAA2B,EAC3B,QAAkB;QARlB,WAAM,GAAN,MAAM,CAAQ;QACd,SAAI,GAAJ,IAAI,CAAa;QACjB,gBAAW,GAAX,WAAW,CAAmB;QAC9B,QAAG,GAAH,GAAG,CAAQ;QACX,WAAM,GAAN,MAAM,CAAW;QACjB,YAAO,GAAP,OAAO,CAAmB;QAC1B,mBAAc,GAAd,cAAc,CAAgB;QAC9B,YAAO,GAAP,OAAO,CAAoB;QAC3B,aAAQ,GAAR,QAAQ,CAAU;QAlB5B,UAAK,GAAG,KAAK,CAAC;QACd,YAAO,GAAG,KAAK,CAAC;QAGC,0BAAqB,GAAG,IAAI,GAAG,EAAmC,CAAC;QAgBlF,IAAI,CAAC,eAAe,GAAG,cAAc,EAAE,CAAC;QACxC,IAAI,CAAC,OAAO,GAAG,IAAI,OAAO;;;;;QAAa,CAAC,OAAO,EAAE,MAAM;YACrD,IAAI,CAAC,SAAS,GAAG,OAAO,CAAC;YACzB,IAAI,CAAC,QAAQ,GAAG,MAAM,CAAC;SACxB,EAAC,CAAC;KACJ;;;;;IAKD,UAAU;;cACF,KAAK,GAAW,IAAI,CAAC,MAAM,CAAC,KAAK;cACjC,CAAC,cAAc,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC;;cAC7C,SAAS,GAAW,IAAI,CAAC,eAAe,CAAC,SAAS;eACnD,cAAc;eACd,qBAAqB,CAAC,UAAU,EAAE,CAAC;eACnC,IAAI,CAAC,MAAM,CAAC,gBAAgB;;;;QAKjC,IAAI,CAAC,2CAA2C,EAAE,CAAC;QAEnD,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,6CAA6C,SAAS,EAAE,CAAC,CAAC;;;QAIzE,IAAI,CAAC,IAAI,CAAC,eAAe,EAAE,CAAC;QAC5B,IAAI,CAAC,6BAA6B,EAAE,CAAC;QAErC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,YAAY,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,aAAa,EAAE;YAC3D,IAAI,CAAC,MAAM,CAAC,OAAO,GAAG;gBACpB,IAAI,EAAE,EAAE;gBACR,KAAK;gBACL,EAAE,EAAE,SAAS;aACd,CAAC;YAEF,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,aAAa;kBACpC,mDAAmD;kBACnD,wFAAwF,CAAC,CAAC;YAE9F,IAAI,CAAC,2CAA2C,EAAE,CAAC;YACnD,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;YAClB,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;SACrC;aAAM;YACL,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;;;YAIpB,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC;iBACzB,IAAI;;;;YAAC,CAAC,OAAmB,KAAK,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,EAAC;iBACtD,KAAK;;;;YAAC,CAAC,GAAG;gBACT,IAAI,IAAI,CAAC,MAAM,CAAC,2BAA2B,EAAE;oBAC3C,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;iBACrC;qBAAM;oBACL,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC;iBACpB;aACF,EAAC,CAAC;SACN;KACF;;;;;;IAEO,YAAY,CAAC,SAAiB;QACpC,OAAO,IAAI,OAAO;;;;;QAAC,CAAC,OAAO,EAAE,MAAM;YACjC,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,SAAS,CAAC;iBAC5B,SAAS;;;;YAAC,CAAC,OAAO;gBACjB,IAAI,CAAC,OAAO,EAAE;oBACZ,OAAO,MAAM,CAAC,6BAA6B,SAAS,GAAG,CAAC,CAAC;iBAC1D;gBAED,IAAI,CAAC,MAAM,CAAC,SAAS,GAAG,OAAO,CAAC,EAAE,CAAC;gBACnC,IAAI,CAAC,MAAM,CAAC,OAAO,GAAG,OAAO,CAAC;gBAE9B,IAAI,CAAC,0BAA0B,EAAE,CAAC;gBAClC,IAAI,CAAC,yBAAyB,EAAE,CAAC;gBACjC,IAAI,CAAC,2CAA2C,EAAE,CAAC;gBACnD,IAAI,CAAC,mBAAmB,EAAE;qBACvB,IAAI;;;gBAAC;oBACJ,IAAI,CAAC,oBAAoB,EAAE,CAAC;oBAC5B,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;oBAClB,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;oBACrB,OAAO,CAAC,OAAO,CAAC,CAAC;iBAClB,EAAC;qBACD,KAAK;;;;gBAAC,CAAC,GAAG;oBACT,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;oBACrB,MAAM,CAAC,GAAG,CAAC,CAAC;iBACb,EAAC,CAAC;aACN;;;;YAAE,CAAC,GAAG;gBACL,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;gBACrB,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,uDAAuD,IAAI,CAAC,MAAM,CAAC,KAAK,aAAa,SAAS,GAAG,CAAC,CAAC;gBAClH,MAAM,CAAC,GAAG,CAAC,CAAC;aACb,EAAC,CAAC;SACN,EAAC,CAAC;KACJ;;;;;;;IAMO,8BAA8B;QACpC,OAAO,IAAI,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,cAAc,CAAC,2BAA2B,CAAC,CAAC,CAAC;KACpF;;;;;;;;IAMO,wBAAwB,CAAC,OAAgB;QAC/C,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,2CAA2C,OAAO,EAAE,CAAC,CAAC;QAErE,IAAI,OAAO,EAAE;YACX,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,uCAAuC,OAAO,EAAE,CAAC,CAAC;YACjE,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,cAAc,CAAC,2BAA2B,EAAE,OAAO,CAAC,CAAC;SAC5E;aAAM;YACL,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,cAAc,CAAC,2BAA2B,CAAC,CAAC;SACtE;KACF;;;;;;;;IAOO,0BAA0B;;YAC5B,eAAe;;cACb,QAAQ,GAAG,IAAI,CAAC,MAAM,CAAC,OAAO,IAAI,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,GAAG,IAAI,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,GAAG,CAAC,QAAQ;cAC/F,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,GAAG,CAAC,QAAQ;cAChC,IAAI;QAER,IAAI,QAAQ,IAAI,QAAQ,CAAC,qBAAqB,CAAC,kBAAkB,CAAC,EAAE;;kBAC5D,uBAAuB,GAAG,IAAI,CAAC,8BAA8B,EAAE;YACrE,eAAe,GAAG,IAAI,IAAI,CAAC,QAAQ,CAAC,qBAAqB,CAAC,kBAAkB,CAAC,CAAC,CAAC;;;;kBAIzE,6BAA6B,GAAGD,QAAM,CAAC,uBAAuB,CAAC,IAAIA,QAAM,CAAC,eAAe,CAAC;kBAC5F,uBAAuB,CAAC,eAAe,CAAC,CAAC,CAAC,KAAK,eAAe,CAAC,eAAe,CAAC,CAAC,CAAC;kBACjF,uBAAuB,KAAK,eAAe;YAE/C,IAAI,IAAI,CAAC,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,UAAU,GAAG,eAAe,IAAI,CAAC,6BAA6B,EAAE;gBACzG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,6EAA6E,CAAC,CAAC;gBAC7F,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC;aACzB;iBAAM,IAAI,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE;gBAC5B,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,+DAA+D,CAAC,CAAC;aACjF;YAED,IAAI,eAAe,EAAE;gBACnB,IAAI,CAAC,wBAAwB,CAAC,eAAe,CAAC,CAAC;aAChD;SACF;KACF;;;;;;;;IAOO,mBAAmB;QACzB,OAAO,IAAI,OAAO;;;;;QAAC,CAAC,OAAO,EAAE,MAAM;YACjC,IAAI;;oBACE,YAAY,GAAG,KAAK;;sBAClB,GAAG,GAAG,IAAI,CAAC,MAAM,CAAC,OAAO,IAAI,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,GAAG;sBACtD,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,GAAG,GAAG,IAAI;;;;gBAKlC,IAAI,GAAG,IAAI,GAAG,CAAC,QAAQ,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,eAAe,IAAI,GAAG,CAAC,QAAQ,CAAC,eAAe,EAAE;oBACrF,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,4DAA4D,CAAC,CAAC;oBAC7E,YAAY,GAAG,IAAI,CAAC;oBACpB,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,SAAS;;;;oBAAC,IAAI;;8BAC9B,WAAW,GAAG,IAAI,IAAI,EAAE;wBAC9B,WAAW,CAAC,OAAO,CAAC,WAAW,CAAC,OAAO,EAAE,GAAG,GAAG,CAAC,QAAQ,CAAC,qBAAqB,CAAC,CAAC;wBAChF,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE,UAAU,EAAE,WAAW,EAAE,EAAE,IAAI,CAAC,CAAC,CAAC;wBACvE,OAAO,CAAC,IAAI,CAAC,CAAC;qBACf;;;;oBAAE,GAAG;wBACJ,MAAM,CAAC,GAAG,CAAC,CAAC;qBACb,EAAC,CAAC;iBACJ;qBAAM,IAAI,IAAI,CAAC,IAAI,CAAC,eAAe,IAAI,GAAG,CAAC,QAAQ,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,eAAe,EAAE;oBACrF,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,yDAAyD,CAAC,CAAC;;;oBAG1E,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC;iBACzB;gBAED,IAAI,CAAC,YAAY,EAAE;oBACjB,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,kDAAkD,CAAC,CAAC;oBACnE,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;iBAC5B;aACF;YAAC,OAAO,CAAC,EAAE;gBACV,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,wDAAwD,EAAE,CAAC,CAAC,CAAC;gBAC5E,MAAM,CAAC,CAAC,CAAC,CAAC;aACX;SACF,EAAC,CAAC;KACJ;;;;;;;;;IAOO,mCAAmC,CAAC,aAAkB;QAC5D,aAAa,GAAG,aAAa,IAAI,EAAE,CAAC;QACpC,IAAI,CAAC,qBAAqB;aACvB,OAAO;;;;QAAC,MAAM;;kBACP,gBAAgB,GAAG,MAAM,CAAC,MAAM,CAAC,SAAS;;kBAC1C,cAAc,GAAG,MAAM,CAAC,QAAQ;YAEtC,MAAM,CAAC,IAAI,CAAC,aAAa,CAAC;iBACvB,OAAO;;;;YAAC,CAAC,GAAG;;sBACL,KAAK,GAAG,eAAe,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC;;sBAC3C,YAAY,GAAG,cAAc,CAAC,gBAAgB,GAAG,GAAG,CAAC;;sBACrD,OAAO,GAAG,GAAG,CAAC,OAAO,CAAC,YAAY,EAAE,EAAE,CAAC;gBAE7C,IAAI,OAAO,CAAC,KAAK,CAAC,IAAI,GAAG,CAAC,WAAW,EAAE,CAAC,UAAU,CAAC,YAAY,CAAC,WAAW,EAAE,CAAC,EAAE;;oBAE9E,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,WAAW,gBAAgB,cAAc,OAAO,QAAQ,KAAK,EAAE,CAAC,CAAC;oBAChF,QAAQ,CAAC,cAAc,EAAE,OAAO,EAAE,KAAK,CAAC,CAAC;iBAC1C;aACF,EAAC,CAAC;SACN,EAAC,CAAC;KACN;;;;;;;;IAOO,yBAAyB;;cACzB,OAAO,GAAG,IAAI,CAAC,MAAM,CAAC,OAAO;QACnC,IAAI,CAAC,OAAO,IAAI,CAAC,OAAO,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,QAAQ,EAAE;YACrD,OAAO;SACR;QAED,IAAI,CAAC,mCAAmC,CAAC,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;KAChE;;;;;;;;;;IASO,2CAA2C;QACjD,IAAI,IAAI,CAAC,MAAM,CAAC,yBAAyB,EAAE;YACzC,IAAI,CAAC,mCAAmC,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;SAChE;KACF;;;;;;;IAMO,6BAA6B;QACnC,UAAU,CAAC,aAAa;aACrB,OAAO;;;;QAAC,gBAAgB;YACvB,IAAI;;;;sBAGI,cAAc,GAAG,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,gBAAgB,CAAC,aAAa,CAAC;gBACxE,IAAI,CAAC,qBAAqB,CAAC,GAAG,CAAC,gBAAgB,CAAC,aAAa,EAAE;oBAC7D,QAAQ,EAAE,cAAc;oBACxB,MAAM,EAAE,gBAAgB;iBACzB,CAAC,CAAC;gBACH,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,8CAA8C,gBAAgB,CAAC,SAAS,EAAE,CAAC,CAAC;gBAE3F,IAAI,YAAY,IAAI,cAAc,IAAI,eAAe,IAAI,cAAc,EAAE;oBACvE,cAAc,CAAC,UAAU,GAAG,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC;iBACpD;aACF;YAAC,OAAO,GAAG,EAAE;gBACZ,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,gCAAgC,gBAAgB,CAAC,SAAS,EAAE,EAAE,GAAG,CAAC,CAAC;aACnF;SACF,EAAC,CAAC;KACN;;;;;;;IAMO,oBAAoB;;cACpB,QAAQ,GAAG,IAAI,CAAC,MAAM,CAAC,OAAO,IAAI,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,GAAG,IAAI,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,GAAG,CAAC,QAAQ;cAC/F,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,GAAG,CAAC,QAAQ,GAAG,IAAI;QAE3C,IAAI,CAAC,QAAQ,EAAE;YACb,OAAO;SACR;;QAGD,IAAI,QAAQ,CAAC,cAAc,CAAC,SAAS,CAAC,EAAE;YACtC,IAAI,CAAC,cAAc,CAAC,YAAY,GAAG,CAAC,CAAC,QAAQ,CAAC,OAAO,CAAC;SACvD;QAED,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE;YACzB,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,sBAAsB,CAAC,CAAC;SACvC;QAED,QAAQ,CAAC,eAAe,GAAG,QAAQ,CAAC,eAAe,IAAI,EAAE,CAAC;QAC1D,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,QAAQ,CAAC,eAAe,CAAC,CAAC;QAChD,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,qDAAqD,QAAQ,CAAC,eAAe,CAAC,MAAM,EAAE,CAAC,CAAC;QACtG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,uBAAuB,IAAI,CAAC,OAAO,CAAC,SAAS,yBAAyB,CAAC,CAAC;KACvF;;AAlUuB,wCAAkB,GAAG,mBAAmB,CAAC;;YAJlE,UAAU,SAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;YAvCQ,MAAM;YAiBN,WAAW;YAKX,iBAAiB;YAhBjB,MAAM;YAiBN,SAAS;YAhBT,iBAAiB;YAWjB,cAAc;YACd,kBAAkB;YAlBlB,QAAQ;;;;;;;;;AAiXjB,SAAgB,qBAAqB,CAAC,QAAkB;IACtD;;;IAAO;;cACC,WAAW,GAA0B,QAAQ,CAAC,GAAG,CAAC,qBAAqB,CAAC;QAC9E,WAAW,CAAC,UAAU,EAAE,CAAC;QAEzB,OAAO,WAAW,CAAC,OAAO,CAAC;KAC5B,EAAC;CACH;;;;;;;AC1XD,MAAa,iBAAiB,GAAG,KAAK;;;;;;ACAtC,MAGa,QAAQ;;;;;IACnB,SAAS,CAAC,KAAU;;cACZ,IAAI,GAAG,EAAE;QACf,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC;aACf,OAAO;;;;QAAC,GAAG,IAAI,IAAI,CAAC,IAAI,CAAC,EAAE,GAAG,EAAE,KAAK,EAAE,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,EAAC,CAAC;QAEzD,OAAO,IAAI,CAAC;KACb;;;YARF,IAAI,SAAC,EAAE,IAAI,EAAE,MAAM,EAAE;;;;;;;ACFtB,MAKa,YAAY;;;;;IACvB,SAAS,CAAC,QAAgB,CAAC;QACzB,OAAO,cAAc,CAAC,KAAK,CAAC,CAAC;KAC9B;;;YAJF,IAAI,SAAC,EAAE,IAAI,EAAE,UAAU,EAAE;;;;;;;;ACJ1B,MAAa,8BAA8B,GAAG,oBAAoB;;AAClE,MAAa,kBAAkB,GAAG,2CAA2C;;AAC7E,MAAa,mBAAmB,GAAG,qBAAqB;;AACxD,MAAa,aAAa,GAAG,EAAE;;AAC/B,MAAa,gBAAgB,GAAG,EAAE;;AAClC,MAAa,kBAAkB,GAAG,EAAE;;AACpC,MAAa,uBAAuB,GAAG,IAAI;;AAC3C,MAAa,uBAAuB,GAAG,KAAK;;AAC5C,MAAa,qBAAqB,GAAG,OAAO;;AAC5C,MAAa,oBAAoB,GAAG,QAAQ;;AAC5C,MAAa,wBAAwB,GAAG;IACtC,EAAE,EAAE,IAAI;IACR,eAAe,EAAE,CAAC;IAClB,GAAG,EAAE,KAAK;IACV,gBAAgB,EAAE,CAAC;IACnB,GAAG,EAAE,KAAK;IACV,gBAAgB,EAAE,CAAC;IACnB,EAAE,EAAE,IAAI;IACR,eAAe,EAAE,CAAC;IAClB,IAAI,EAAE,MAAM;IACZ,iBAAiB,EAAE,CAAC;CACrB;;;;;;ACrBD;;;;;AAIA,SAAgB,cAAc,CAAC,KAAa,EAAE,UAAoB;;QAC5D,gBAAwB;IAE5B,IAAI,UAAU,KAAK,cAAc,EAAE;QACjC,gBAAgB,GAAG,CAAC,CAAC;KACtB;SAAM,IAAI,UAAU,KAAK,SAAS,EAAE;QACnC,gBAAgB,GAAG,uBAAuB,CAAC;KAC5C;SAAM,IAAI,UAAU,KAAK,SAAS,EAAE;QACnC,gBAAgB,GAAG,uBAAuB,CAAC;KAC5C;SAAM,IAAI,UAAU,KAAK,OAAO,EAAE;QACjC,gBAAgB,GAAG,qBAAqB,CAAC;KAC1C;SAAM,IAAI,UAAU,KAAK,MAAM,EAAE;QAChC,gBAAgB,GAAG,oBAAoB,CAAC;KACzC;SAAM;QACL,MAAM,IAAI,KAAK,CAAC,sCAAsC,UAAU,GAAG,CAAC,CAAC;KACtE;IAED,OAAO,CAAC,KAAK,IAAI,CAAC,IAAI,gBAAgB,CAAC;CACxC;;;;;;ACtBD;;;;AAGA,SAAgB,qBAAqB,CAAC,YAAoB;IACxD,OAAO,YAAY,GAAG,uBAAuB,CAAC;CAC/C;;;;;;ACLD;;;;AAGA,SAAgB,qBAAqB,CAAC,YAAoB;IACxD,OAAO,YAAY,GAAG,uBAAuB,CAAC;CAC/C;;;;;;ACLD;;;;AAGA,SAAgB,mBAAmB,CAAC,YAAoB;IACtD,OAAO,YAAY,GAAG,qBAAqB,CAAC;CAC7C;;;;;;ACLD;;;;AAGA,SAAgB,kBAAkB,CAAC,YAAoB;IACrD,OAAO,YAAY,GAAG,oBAAoB,CAAC;CAC5C;;;;;;ACLD;;;;;AAaA,SAAgB,cAAc,CAAC,YAAoB,EAAE,YAAiB,EAAE;;;UAEhE,oBAAoB,GAAG,YAAY,GAAG,uBAAuB;;UAC7D,eAAe,GAAG,YAAY,IAAI,uBAAuB,GAAG,CAAC,CAAC;;UAC9D,eAAe,GAAG,YAAY,IAAI,qBAAqB,GAAG,GAAG,CAAC;;UAC9D,aAAa,GAAG,YAAY,IAAI,oBAAoB,GAAG,KAAK,CAAC;;QAC/D,KAAK,GAAW,YAAY;;QAC5B,IAAY;;QACZ,aAAqB;IAEzB,SAAS,GAAG,SAAS;UACjB,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,wBAAwB,EAAE,SAAS,CAAC;UACtD,wBAAwB,CAAC;;IAG7B,IAAI,oBAAoB,EAAE;;QAExB,IAAI,GAAG,SAAS,CAAC,EAAE,CAAC;QACpB,KAAK,GAAG,YAAY,CAAC;QACrB,aAAa,GAAG,SAAS,CAAC,eAAe,CAAC;KAC3C;SAAM,IAAI,eAAe,EAAE;;;cAEpB,OAAO,GAAG,qBAAqB,CAAC,YAAY,CAAC;QACnD,IAAI,GAAG,SAAS,CAAC,GAAG,CAAC;QACrB,KAAK,GAAG,OAAO,CAAC;QAChB,aAAa,GAAG,SAAS,CAAC,gBAAgB,CAAC;KAC5C;SAAM,IAAI,eAAe,EAAE;;;cAEpB,OAAO,GAAG,qBAAqB,CAAC,YAAY,CAAC;QACnD,IAAI,GAAG,SAAS,CAAC,GAAG,CAAC;QACrB,KAAK,GAAG,OAAO,CAAC;QAChB,aAAa,GAAG,SAAS,CAAC,gBAAgB,CAAC;KAC5C;SAAM,IAAI,aAAa,EAAE;;;cAElB,KAAK,GAAG,mBAAmB,CAAC,YAAY,CAAC;QAC/C,IAAI,GAAG,SAAS,CAAC,EAAE,CAAC;QACpB,KAAK,GAAG,KAAK,CAAC;QACd,aAAa,GAAG,SAAS,CAAC,eAAe,CAAC;KAC3C;SAAM;;;cAEC,IAAI,GAAG,kBAAkB,CAAC,YAAY,CAAC;QAC7C,IAAI,GAAG,SAAS,CAAC,IAAI,CAAC;QACtB,KAAK,GAAG,IAAI,CAAC;QACb,aAAa,GAAG,SAAS,CAAC,iBAAiB,CAAC;KAC7C;;UAEK,uBAAuB,GAAG,MAAM,CAAC,KAAK,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC;IACpE,OAAO,GAAG,uBAAuB,IAAI,IAAI,EAAE,CAAC;CAC7C;;;;;;AC7DD,MAOa,gBAAgB;;;;;;IAC3B,SAAS,CAAC,IAAY,EAAE,OAAiB,cAAc;;cAC/C,MAAM,GAAG,cAAc,CAAC,IAAI,EAAE,IAAI,CAAC;QACzC,OAAO,cAAc,CAAC,MAAM,CAAC,CAAC;KAC/B;;;YALF,IAAI,SAAC,EAAE,IAAI,EAAE,cAAc,EAAE;;;;;;;ACN9B,MAKa,WAAW;;;;IACtB,YAA6B,SAAuB;QAAvB,cAAS,GAAT,SAAS,CAAc;KAAK;;;;;IACzD,SAAS,CAAC,GAAG;QACX,OAAO,IAAI,CAAC,SAAS,CAAC,8BAA8B,CAAC,GAAG,CAAC,CAAC;KAC3D;;;YALF,IAAI,SAAC,EAAE,IAAI,EAAE,SAAS,EAAE;;;;YAHhB,YAAY;;;;;;;ACDrB,MA2Ba,aAAa;;;YAnBzB,QAAQ,SAAC;gBACR,OAAO,EAAE,EACR;gBACD,YAAY,EAAE;oBACZ,YAAY;oBACZ,QAAQ;oBACR,gBAAgB;oBAChB,WAAW;iBACZ;gBACD,OAAO,EAAE;oBACP,YAAY;oBACZ,QAAQ;oBACR,gBAAgB;oBAChB,WAAW;iBACZ;gBACD,SAAS,EAAE,EACV;gBACD,OAAO,EAAE,CAAC,sBAAsB,CAAC;aAClC;;;;;;;AC1BD,MAmBa,iBAAiB;;;YAb7B,QAAQ,SAAC;gBACR,OAAO,EAAE;oBACP,YAAY;oBACZ,aAAa;iBACd;gBACD,YAAY,EAAE,EACb;gBACD,OAAO,EAAE,EACR;gBACD,SAAS,EAAE,EACV;gBACD,OAAO,EAAE,CAAC,sBAAsB,CAAC;aAClC;;;;;;;AClBD,MAqBa,mBAAmB;;;YAd/B,QAAQ,SAAC;gBACR,OAAO,EAAE;oBACP,YAAY;oBACZ,aAAa;oBACb,gBAAgB;iBACjB;gBACD,YAAY,EAAE,EACb;gBACD,OAAO,EAAE,EACR;gBACD,SAAS,EAAE,EACV;gBACD,OAAO,EAAE,CAAC,sBAAsB,CAAC;aAClC;;;;;;;ACpBD,MAkBa,aAAa;;;YAbzB,QAAQ,SAAC;gBACR,OAAO,EAAE;oBACP,aAAa;oBACb,mBAAmB;iBACpB;gBACD,YAAY,EAAE,EACb;gBACD,OAAO,EAAE,EACR;gBACD,SAAS,EAAE,EACV;gBACD,OAAO,EAAE,CAAC,sBAAsB,CAAC;aAClC;;;;;;;;ACdD,MAAa,kBAAkB,GAAkC;IAC/D,EAAE,KAAK,EAAE,cAAc,EAAE,UAAU,EAAE,QAAQ,EAAE,WAAW,EAAE,mDAAmD,EAAE;IACjH,EAAE,KAAK,EAAE,cAAc,EAAE,UAAU,EAAE,aAAa,EAAE,WAAW,EAAE,wDAAwD,EAAE;IAC3H,EAAE,KAAK,EAAE,aAAa,EAAE,UAAU,EAAE,aAAa,EAAE,WAAW,EAAE,oEAAoE,EAAE;CACvI;;;;;;ACPD,MAQa,qBAAqB;;;;;IAChC,SAAS,CAAC,KAAmD;;cACrD,UAAU,GAAsB,QAAQ,CAAC,KAAK,CAAC;iCACjD,KAAK;cACL,oBAAC,KAAK,IAA8B,IAAI;;cAEtC,UAAU,GAAgC,kBAAkB;aAC/D,IAAI;;;;QAAC,CAAC,IAAI,CAAC,CAAC,UAAU,KAAK,UAAU,EAAC;QAEzC,OAAO,UAAU,CAAC,KAAK,CAAC;KACzB;;;YAXF,IAAI,SAAC,EAAE,IAAI,EAAE,mBAAmB,EAAE;;;;;;;ACPnC,MAsBa,aAAa;;;YAfzB,QAAQ,SAAC;gBACR,OAAO,EAAE;oBACP,YAAY;oBACZ,aAAa;iBACd;gBACD,YAAY,EAAE;oBACZ,qBAAqB;iBACtB;gBACD,OAAO,EAAE;oBACP,qBAAqB;iBACtB;gBACD,SAAS,EAAE,EACV;gBACD,OAAO,EAAE,CAAC,sBAAsB,CAAC;aAClC;;;;;;;ACrBD,MAuBa,YAAY;;;YAfxB,QAAQ,SAAC;gBACR,OAAO,EAAE;oBACP,YAAY;oBACZ,aAAa;oBACb,mBAAmB;oBACnB,gBAAgB;iBACjB;gBACD,YAAY,EAAE,EACb;gBACD,OAAO,EAAE,EACR;gBACD,SAAS,EAAE,EACV;gBACD,OAAO,EAAE,CAAC,sBAAsB,CAAC;aAClC;;;;;;;MCRY,gBAAgB;;;;IAC3B,YAAoB,MAAsB;QAAtB,WAAM,GAAN,MAAM,CAAgB;KAEzC;;;;;;IAED,SAAS,CAAC,OAAyB,EAAE,IAAiB;;cAC9C,aAAa,GAAG,IAAI,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,kCAAkC,CAAC;QAChF,IAAI,IAAI,CAAC,MAAM,CAAC,WAAW,IAAI,IAAI,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,2BAA2B,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE;YACpG,OAAO,GAAG,OAAO,CAAC,KAAK,CAAC;gBACtB,eAAe,EAAE,IAAI,CAAC,MAAM,CAAC,kBAAkB,IAAI,aAAa,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC;gBAClF,UAAU,EAAE;oBACV,aAAa,EAAE,GAAG,IAAI,CAAC,MAAM,CAAC,iBAAiB,IAAI,IAAI,CAAC,MAAM,CAAC,WAAW,EAAE;iBAC7E;aACF,CAAC,CAAC;SACJ;aAAM,IAAI,IAAI,CAAC,MAAM,CAAC,kBAAkB,IAAI,aAAa,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE;YAC5E,OAAO,GAAG,OAAO,CAAC,KAAK,CAAC;gBACtB,eAAe,EAAE,IAAI;aACtB,CAAC,CAAC;SACJ;QAED,OAAO,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;KAC7B;;;YAxBF,UAAU,SAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;YALQ,cAAc;;;;;;;;ACRvB,MAUa,iBAAiB;;;;;;;IAE5B,YACU,WAA6B,EAC7B,aAA+B,EAC/B,OAA2B,EAC3B,GAAW;QAHX,gBAAW,GAAX,WAAW,CAAkB;QAC7B,kBAAa,GAAb,aAAa,CAAkB;QAC/B,YAAO,GAAP,OAAO,CAAoB;QAC3B,QAAG,GAAH,GAAG,CAAQ;KACpB;;;;;IAED,IAAa,QAAQ,CAAC,KAAsB;QAC1C,IAAI,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,KAAK,CAAC,EAAE;;YAEhC,IAAI,CAAC,aAAa,CAAC,kBAAkB,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;YACxD,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,mBAAmB,KAAK,EAAE,CAAC,CAAC;SAC5C;aAAM;;YAEL,IAAI,CAAC,aAAa,CAAC,KAAK,EAAE,CAAC;YAC3B,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,kBAAkB,KAAK,EAAE,CAAC,CAAC;SAC3C;KACF;;;YAxBF,SAAS,SAAC;;;gBAGT,QAAQ,EAAE,YAAY;aACvB;;;;YAT0B,WAAW;YAAE,gBAAgB;YAC/C,kBAAkB;YAClB,MAAM;;;uBAiBZ,KAAK;;;;;;;ACnBR,MAgCa,iBAAiB;;;YAtB7B,QAAQ,SAAC;gBACR,OAAO,EAAE;oBACP,YAAY;oBACZ,gBAAgB;oBAChB,WAAW;oBACX,aAAa;iBACd;gBACD,YAAY,EAAE;oBACZ,iBAAiB;iBAClB;gBACD,OAAO,EAAE;oBACP,iBAAiB;iBAClB;gBACD,SAAS,EAAE;oBACT;wBACE,OAAO,EAAE,iBAAiB;wBAC1B,QAAQ,EAAE,gBAAgB;wBAC1B,KAAK,EAAE,IAAI;qBACZ;iBACF;gBACD,OAAO,EAAE,CAAC,sBAAsB,CAAC;aAClC;;;;;;;AC/BD,MAQa,2BAA2B;;;;;IAItC,cAAc,CAAC,KAAK;QAClB,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE;YACrB,KAAK,CAAC,cAAc,EAAE,CAAC;SACxB;KACF;;;YAbF,SAAS,SAAC;;;gBAGT,QAAQ,EAAE,QAAQ;aACnB;;;mBAEE,KAAK;6BAEL,YAAY,SAAC,OAAO,EAAE,CAAC,QAAQ,CAAC;;;;;;;ACXnC,MAiBa,iBAAiB;;;YAb7B,QAAQ,SAAC;gBACR,OAAO,EAAE,EACR;gBACD,YAAY,EAAE;oBACZ,2BAA2B;iBAC5B;gBACD,OAAO,EAAE;oBACP,2BAA2B;iBAC5B;gBACD,SAAS,EAAE,EACV;gBACD,OAAO,EAAE,CAAC,sBAAsB,CAAC;aAClC;;;;;;;;;;ACID,MAAa,cAAc;;;YAZ1B,QAAQ,SAAC;gBACR,OAAO,EAAE;oBACP,YAAY;iBACb;gBACD,YAAY,EAAE,EACb;gBACD,OAAO,EAAE,EACR;gBACD,SAAS,EAAE,EACV;gBACD,OAAO,EAAE,CAAC,sBAAsB,CAAC;aAClC;;;;;;;ACnBD;;;;AAGA,SAAgB,UAAU,CAAC,GAAQ;IACjC,OAAO,MAAM,CAAC,GAAG,EAAE,UAAU,CAAC,CAAC;CAChC;;;;;;ACJD;;;;;AAKA,SAAgB,YAAY,CAAC,KAAa,EAAE,eAAgC;;QACtE,GAAW;IAEf,IAAI,UAAU,CAAC,eAAe,CAAC,EAAE;QAC/B,OAAO,OAAO,CAAC,oBAAC,eAAe,IAA8B,KAAK,CAAC,CAAC,CAAC;KACtE;IAED,IAAI,QAAQ,CAAC,eAAe,CAAC,EAAE;;;cAEvB,WAAW,GAAG,IAAI,MAAM,CAAC,KAAK,EAAE,IAAI,CAAC;;cACrC,aAAa,sBAAG,eAAe,EAAU;;cACzC,aAAa,GAAG,aAAa,CAAC,aAAa,EAAE,GAAG,CAAC;aACpD,OAAO,CAAC,WAAW,EAAE,IAAI,CAAC;QAE7B,GAAG,GAAG,IAAI,MAAM,CAAC,aAAa,EAAE,GAAG,CAAC,CAAC;KACtC;SAAM;QACL,GAAG,sBAAG,eAAe,EAAU,CAAC;KACjC;IAED,OAAO,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;CACxB;;;;;;;;;ICTY,UAAU;;;MAAV,UAAU;IAJvB;QASE,2BAAsB,GAAG,IAAI,CAAC;QAC9B,4BAAuB,GAAmC,EAAE,CAAC;KAqC9D;;;;IA1CC,IAAI,aAAa;QACf,OAAO,OAAO,CAAC,IAAI,CAAC,uBAAuB,CAAC,MAAM,CAAC,CAAC;KACrD;;;;;;;IAKD,6BAA6B,CAAC,KAAsB,EAAE,SAAiB,EAAE,UAAkB;;cACnF,UAAU,GAAiC;YAC/C,KAAK;YACL,SAAS;YACT,UAAU;SACX;;cAEK,kBAAkB,GAAG,IAAI,CAAC,uBAAuB,CAAC,IAAI;;;;QAAC,GAAG,IAAI,GAAG,CAAC,KAAK,KAAK,KAAK,IAAI,GAAG,CAAC,SAAS,KAAK,SAAS,EAAC;QACvH,IAAI,kBAAkB,EAAE;YACtB,MAAM,CAAC,MAAM,CAAC,kBAAkB,EAAE,UAAU,CAAC,CAAC;YAC9C,OAAO,kBAAkB,CAAC;SAC3B;aAAM;YACL,IAAI,CAAC,uBAAuB,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;YAC9C,OAAO,UAAU,CAAC;SACnB;KACF;;;;;;;IAED,qBAAqB,CAAC,KAAsB,EAAE,SAAiB,EAAE,UAAkB;;cAC3E,UAAU,GAAG;YACjB,KAAK;YACL,SAAS;YACT,UAAU;SACX;QAED,IAAI,CAAC,uBAAuB,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;QAC9C,OAAO,UAAU,CAAC;KACnB;;;;;IAED,uBAAuB,CAAC,KAAa;QACnC,OAAO,IAAI,CAAC,uBAAuB,CAAC,MAAM;;;;QAAC,GAAG,IAAI,YAAY,CAAC,KAAK,EAAE,GAAG,CAAC,KAAK,CAAC,EAAC,CAAC;KACnF;;;;;IAED,2BAA2B,CAAC,KAAa;QACvC,OAAO,IAAI,CAAC,uBAAuB,CAAC,IAAI;;;;QAAC,GAAG,IAAI,YAAY,CAAC,KAAK,EAAE,GAAG,CAAC,KAAK,CAAC,EAAC,CAAC;KACjF;CACF,CAAA;;YA/CA,UAAU,SAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;AAEY,UAAU;IADtB,UAAU,CAAC,YAAY,CAAC;GACZ,UAAU,CA2CtB;;;;;;MC5CY,oBAAoB;;;;;IAC/B,YAAoB,MAAkB,EAAU,GAAW;QAAvC,WAAM,GAAN,MAAM,CAAY;QAAU,QAAG,GAAH,GAAG,CAAQ;KAC1D;;;;;;IAED,SAAS,CAAC,OAAyB,EAAE,IAAiB;;cAC9C,mBAAmB,GAAmC,IAAI,CAAC,MAAM,CAAC,sBAAsB;cAC1F,IAAI,CAAC,MAAM,CAAC,uBAAuB,CAAC,OAAO,CAAC,aAAa,CAAC;cAC1D,EAAE;QAEN,IAAI,mBAAmB,CAAC,MAAM,EAAE;YAC9B,OAAO,GAAG,IAAI,CAAC,yBAAyB,CAAC,OAAO,EAAE,mBAAmB,CAAC,CAAC;SACxE;QAED,OAAO,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;KAC7B;;;;;;IAED,yBAAyB,CAAC,OAAyB,EAAE,mBAAmD;;YAClG,MAAM,GAAG,OAAO,CAAC,MAAM;QAC3B,mBAAmB;aAChB,OAAO;;;;QAAC,cAAc;YACrB,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,kBAAkB,OAAO,CAAC,GAAG,kCAAkC,cAAc,CAAC,SAAS,IAAI,CAAC,CAAC;YAC5G,MAAM,GAAG,MAAM,CAAC,GAAG,CAAC,cAAc,CAAC,SAAS,EAAE,cAAc,CAAC,UAAU,CAAC,CAAC;SAC1E,EAAC,CAAC;QAEL,OAAO,OAAO,CAAC,KAAK,CAAC,EAAE,MAAM,EAAE,CAAC,CAAC;KAClC;;;YA5BF,UAAU,SAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;YANQ,UAAU;YADV,MAAM;;;;;;;;MCqBF,aAAa;;;YAnBzB,QAAQ,SAAC;gBACR,OAAO,EAAE;oBACP,YAAY;oBACZ,gBAAgB;oBAChB,aAAa;iBACd;gBACD,YAAY,EAAE,EACb;gBACD,OAAO,EAAE,EACR;gBACD,SAAS,EAAE;oBACT;wBACE,OAAO,EAAE,iBAAiB;wBAC1B,QAAQ,EAAE,oBAAoB;wBAC9B,KAAK,EAAE,IAAI;qBACZ;iBACF;gBACD,OAAO,EAAE,CAAC,sBAAsB,CAAC;aAClC;;;;;;;AC5BD,WAqCkB,qBAAqB;AAOvC,MAAa,YAAY;;;YA5BxB,QAAQ,SAAC;gBACR,OAAO,EAAE;oBACP,gBAAgB;oBAChB,YAAY;oBACZ,aAAa;oBACb,iBAAiB;oBACjB,aAAa;oBACb,mBAAmB;oBACnB,cAAc;oBACd,iBAAiB;iBAClB;gBACD,YAAY,EAAE,EACb;gBACD,OAAO,EAAE,EACR;gBACD,SAAS,EAAE;oBACT,iBAAiB;oBACjB,UAAU;oBACV,qBAAqB;oBACrB;wBACE,OAAO,EAAE,eAAe;wBACxB,UAAU,IAAuB;wBACjC,KAAK,EAAE,IAAI;wBACX,IAAI,EAAE,CAAC,QAAQ,CAAC;qBACjB;iBACF;gBACD,OAAO,EAAE,CAAC,sBAAsB,CAAC;aAClC;;;;;;;MChBY,mBAAmB;;;YAhB/B,QAAQ,SAAC;gBACR,OAAO,EAAE;oBACP,YAAY;oBACZ,aAAa;oBACb,iBAAiB;oBACjB,aAAa;oBACb,YAAY;iBACb;gBACD,YAAY,EAAE,EACb;gBACD,OAAO,EAAE,EACR;gBACD,SAAS,EAAE,EACV;gBACD,OAAO,EAAE,CAAC,sBAAsB,CAAC;aAClC;;;;;;;;;;;;;AC1BD,MAAa,yBAAyB,GAAG,KAAK;;;;;;MCiBjC,iBAAkB,SAAQ,mBAA+B;;;;;IACpE,YAAsB,IAAgB,EAAE,MAAiB;QACvD,KAAK,CAAC,IAAI,EAAE;YACV,GAAG,EAAE,IAAI,CAAC,MAAM,CAAC,UAAU,EAAE,MAAM,CAAC,mBAAmB,CAAC;YACxD,kBAAkB,EAAE;gBAClB,KAAK,EAAE,MAAM,CAAC,KAAK;aACpB;SACF,CAAC,CAAC;QANiB,SAAI,GAAJ,IAAI,CAAY;KAOrC;;;;;;;IAKD,YAAY,CAAC,WAAiB,EAAE,MAAmB;QACjD,WAAW,GAAG,WAAW,IAAI,EAAE,CAAC;QAChC,WAAW,CAAC,KAAK,GAAG,yBAAyB,CAAC;QAC9C,OAAO,KAAK,CAAC,KAAK,CAAC,WAAW,EAAE,MAAM,CAAC,CAAC;KACzC;;;YApBF,UAAU,SAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;YAdQ,UAAU;YAQV,SAAS;;;;;;;;;;;;;;;;;;;;;;;;;ICFhB,YAAa,YAAY;IACzB,UAAW,WAAW;;;;;;;;;ICDtB,cAAe,eAAe;IAC9B,YAAa,aAAa;IAC1B,SAAU,SAAS;IACnB,WAAY,YAAY;;;;;;;ICOb,WAAW;;;MAAX,WAAW;IAJxB;;;;;QASE,iBAAY,GAAG,KAAK,CAAC;;;;;;;QAQrB,mBAAc,GAAsB,EAAE,CAAC;;;;;;;;QASvC,8BAAyB,GAAkB,IAAI,CAAC;KAgBjD;;;;;IAdC,OAAO,MAAM,CAAC,MAA0B;QACtC,OAAO,MAAM,CAAC,MAAM,CAAC,IAAI,aAAW,EAAE,EAAE,MAAM,CAAC,CAAC;KACjD;;;;;IAED,OAAO,MAAM,CAAC,GAAG,IAAuB;QACtC,OAAO,aAAW,CAAC,MAAM,CAAC;YACxB,YAAY,EAAE,IAAI;YAClB,cAAc,EAAE,IAAI;SACrB,CAAC,CAAC;KACJ;;;;;IAED,kBAAkB,CAAC,KAAa;QAC9B,OAAO,IAAI,CAAC,cAAc,CAAC,IAAI;;;;QAAC,GAAG,IAAI,YAAY,CAAC,KAAK,EAAE,GAAG,CAAC,KAAK,CAAC,EAAC,CAAC;KACxE;CACF,CAAA;;YA1CA,UAAU,SAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;AAEY,WAAW;IADvB,UAAU,CAAC,aAAa,CAAC;GACb,WAAW,CAsCvB;;;;;;;ACxDD,MAAa,0BAA0B,GAAG,oBAAoB;;;;;;;ACO9D,MAAa,wBAAwB,GAAG,aAAa;;;;AASrD,MAAa,sBAAuB,SAAQ,iBAAiB;IAC3D;QACE,KAAK,EAAE,CAAC;QACR,IAAI,CAAC,SAAS,GAAG,wBAAwB,CAAC;KAC3C;;;YAPF,UAAU,SAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;ACCD,MAAa,YAAY;;;;IACvB,YAAoB,KAA6B;QAA7B,UAAK,GAAL,KAAK,CAAwB;KAChD;;;;;IAED,GAAG,CAAC,GAAW;;cACP,SAAS,GAAiB,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,GAAG,CAAC;;cACnD,GAAG,GAAG,IAAI,IAAI,EAAE;;YAClB,SAA4B;QAEhC,IAAI,SAAS,IAAI,SAAS,CAAC,OAAO,IAAI,SAAS,CAAC,OAAO,CAAC,OAAO,EAAE,GAAG,GAAG,CAAC,OAAO,EAAE,EAAE;YACjF,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;SACxB;aAAM,IAAI,SAAS,EAAE;;;YAGpB,SAAS,GAAG,MAAM,CAAC,MAAM,CAAC,IAAI,YAAY,EAAO,EAAE,SAAS,CAAC,KAAK,CAAC,CAAC;SACrE;aAAM;YACL,SAAS,GAAG,IAAI,CAAC;SAClB;QAED,OAAO,SAAS,CAAC;KAClB;;;;;;;IAED,GAAG,CAAC,GAAW,EAAE,KAAwB,EAAE,aAAqB,IAAI;;cAC5D,OAAO,GAAG,UAAU,GAAG,IAAI,CAAC,aAAa,CAAC,UAAU,CAAC,GAAG,IAAI;;cAC5D,SAAS,GAAiB,EAAE,OAAO,EAAE,KAAK,EAAE;QAElD,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,GAAG,EAAE,SAAS,CAAC,CAAC;KACtC;;;;;IAED,GAAG,CAAC,GAAW;QACb,OAAO,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;KAC5B;;;;;;IAEO,aAAa,CAAC,aAAqB,IAAI;;cACvC,OAAO,GAAG,IAAI,IAAI,EAAE;QAC1B,OAAO,CAAC,UAAU,CAAC,OAAO,CAAC,UAAU,EAAE,GAAG,UAAU,CAAC,CAAC;QAEtD,OAAO,OAAO,CAAC;KAChB;;;YAzCF,UAAU,SAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;YAVQ,sBAAsB;;;;;;;;ACL/B;;;;AAGA,SAAgB,SAAS,CAAC,QAAgB;IACxC,OAAO,gBAAgB,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;CACxC;;;;;;;;;;ACLD,SAAgB,iBAAiB,CAAC,QAAgB;IAChD,OAAO,CAAC,QAAQ,IAAI,EAAE,EAAE,OAAO,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC,OAAO,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC;CACnE;;;;;;;;;;ACFD,SAAgB,gBAAgB,CAAC,KAAa;IAC5C,OAAO,CAAC,KAAK,IAAI,EAAE;SAChB,OAAO,CAAC,IAAI,MAAM,CAAC,GAAG,EAAE,IAAI,CAAC,EAAE,EAAE,CAAC;SAClC,OAAO,CAAC,IAAI,MAAM,CAAC,GAAG,EAAE,IAAI,CAAC,EAAE,EAAE,CAAC,CAAC;CACvC;;;;;;ACJD;;;;;AAMA,SAAgB,8BAA8B,CAAC,QAAgB,EAAE,YAAoB;;UAC7E,MAAM,GAAG,EAAE;IACjB,QAAQ,GAAG,iBAAiB,CAAC,QAAQ,CAAC,CAAC;;UACjC,gBAAgB,GAAG,aAAa,CAAC,QAAQ,EAAE,yBAAyB,CAAC;;UACrE,KAAK,GAAG,IAAI,MAAM,CAAC,gBAAgB,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC;IAE7D,IAAI,KAAK,IAAI,KAAK,CAAC,MAAM,EAAE;;cACnB,UAAU,GAAG,QAAQ,CAAC,KAAK,CAAC,gBAAgB,CAAC;;QAGnD,KAAK,CAAC,KAAK,EAAE,CAAC;QAEd,KAAK,CAAC,OAAO;;;;;QAAC,CAAC,aAAqB,EAAE,KAAa;YACjD,IAAI,UAAU,CAAC,KAAK,CAAC,EAAE;;sBACf,GAAG,GAAG,gBAAgB,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;gBAC/C,MAAM,CAAC,GAAG,CAAC,GAAG,CAAC,aAAa,IAAI,EAAE,EAAE,OAAO,CAAC,IAAI,MAAM,CAAC,GAAG,EAAE,IAAI,CAAC,EAAE,EAAE,CAAC,CAAC;aACxE;SACF,EAAC,CAAC;KACJ;IAED,OAAO,MAAM,CAAC;CACf;;;;;;;;;;ACND,SAAS,qBAAqB,CAAC,QAAuB;IACpD,OAAO,QAAQ,KAAK,aAAa,CAAC,UAAU;WACvC,QAAQ,KAAK,aAAa,CAAC,OAAO;WAClC,QAAQ,KAAK,aAAa,CAAC,SAAS,CAAC;CAC3C;;;;;;AAED,SAAS,WAAW,CAAC,UAA2B,EAAE,UAAkB;;QAC9D,QAAQ,GAAG,UAAU,CAAC,OAAO,IAAI,UAAU;IAC/C,IAAI,SAAS,CAAC,QAAQ,CAAC,IAAI,QAAQ,CAAC,UAAU,CAAC,KAAK,CAAC,EAAE;;cAC/C,WAAW,GAAG,8BAA8B,oBAAC,UAAU,CAAC,KAAK,IAAY,UAAU,CAAC;QAC1F,QAAQ,GAAG,MAAM,CAAC,QAAQ,EAAE,WAAW,EAAE,IAAI,CAAC,CAAC;KAChD;IAED,OAAO,QAAQ,CAAC;CACjB;AAMD,MAAa,gBAAgB;;;;;;IAC3B,YAAoB,MAAmB,EAAU,KAAmB,EAAU,GAAW;QAArE,WAAM,GAAN,MAAM,CAAa;QAAU,UAAK,GAAL,KAAK,CAAc;QAAU,QAAG,GAAH,GAAG,CAAQ;KACxF;;;;;;IAED,SAAS,CAAC,OAAyB,EAAE,IAAiB;;cAC9C,YAAY,GAAG,OAAO,CAAC,MAAM,KAAK,KAAK,IAAI,IAAI,CAAC,MAAM,CAAC,YAAY;;YACrE,uBAAwC;;;QAK5C,IAAI,YAAY,EAAE;YAChB,uBAAuB,GAAG,IAAI,CAAC,MAAM,CAAC,kBAAkB,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC;;kBAC1E,QAAQ,GAAkB,uBAAuB;kBACnD,IAAI,CAAC,MAAM,CAAC,yBAAyB,IAAI,uBAAuB,CAAC,QAAQ;kBACzE,IAAI;YAER,IAAI,uBAAuB,IAAI,qBAAqB,CAAC,QAAQ,CAAC,EAAE;;sBACxD,QAAQ,GAAG,WAAW,CAAC,uBAAuB,EAAE,OAAO,CAAC,GAAG,CAAC;;sBAC5D,WAAW,GAAG,QAAQ,KAAK,aAAa,CAAC,SAAS;;sBAClD,cAAc,GAAsB,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,QAAQ,CAAC;gBAElE,IAAI,cAAc,EAAE;oBAClB,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,uCAAuC,OAAO,CAAC,GAAG,GAAG,CAAC,CAAC;oBACtE,OAAO,EAAE,CAAC,cAAc,CAAC,CAAC;iBAC3B;qBAAM,IAAI,WAAW,EAAE;oBACtB,OAAO,UAAU,CAAC,IAAI,KAAK,CAAC,0BAA0B,CAAC,CAAC,CAAC;iBAC1D;aACF;SACF;QAED,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,yBAAyB,OAAO,CAAC,GAAG,GAAG,CAAC,CAAC;;YACpD,iBAAiB,GAA+B,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC;;QAGxE,IAAI,YAAY,IAAI,uBAAuB,EAAE;YAC3C,iBAAiB,GAAG,IAAI,CAAC,aAAa,CAAC,iBAAiB,EAAE,OAAO,EAAE,uBAAuB,CAAC,CAAC;SAC7F;QAED,OAAO,iBAAiB,CAAC;KAC1B;;;;;;;;IAEO,aAAa,CACnB,MAAkC,EAClC,OAAyB,EACzB,eAAgC;;cAE1B,QAAQ,GAAG,WAAW,CAAC,eAAe,EAAE,OAAO,CAAC,GAAG,CAAC;QAC1D,OAAO,MAAM,CAAC,IAAI,CAChB,GAAG;;;;QAAC,KAAK;YACP,IAAI,eAAe,IAAI,KAAK,YAAY,YAAY,EAAE;gBACpD,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,0BAA0B,OAAO,CAAC,GAAG,GAAG,CAAC,CAAC;gBACzD,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,QAAQ,EAAE,KAAK,EAAE,eAAe,CAAC,OAAO,CAAC,CAAC;aAC1D;SACF,EAAC,EACF,UAAU;;;;QAAC,CAAC,KAAU;;kBACd,UAAU,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,QAAQ,CAAC;YAC3C,IAAI,UAAU,EAAE;gBACd,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,sDAAsD,OAAO,CAAC,GAAG,yBAAyB,CAAC,CAAC;gBAC3G,OAAO,EAAE,CAAC,UAAU,CAAC,CAAC;aACvB;iBAAM;gBACL,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,sDAAsD,OAAO,CAAC,GAAG,gCAAgC,CAAC,CAAC;gBAClH,MAAM,KAAK,CAAC;aACb;SACF,EAAC,CACH,CAAC;KACH;;;YArEF,UAAU,SAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;YA9BQ,WAAW;YADX,YAAY;YAEZ,MAAM;;;;;;;;MCwBF,cAAc;;;YAtB1B,QAAQ,SAAC;gBACR,OAAO,EAAE;oBACP,YAAY;oBACZ,gBAAgB;oBAChB,aAAa;iBACd;gBACD,YAAY,EAAE,EACb;gBACD,OAAO,EAAE,EACR;gBACD,SAAS,EAAE;oBACT,WAAW;oBACX,sBAAsB;oBACtB,YAAY;oBACZ;wBACE,OAAO,EAAE,iBAAiB;wBAC1B,QAAQ,EAAE,gBAAgB;wBAC1B,KAAK,EAAE,IAAI;qBACZ;iBACF;gBACD,OAAO,EAAE,CAAC,sBAAsB,CAAC;aAClC;;;;;;;;;;;;;AClCD,SAAgB,aAAa,CAAI,IAAS,EAAE,GAAG,UAAe;IAC5D,UAAU,CAAC,OAAO;;;;IAAC,IAAI;QACrB,IAAI,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE;YAC7B,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;SACjB;KACF,EAAC,CAAC;CACJ;;;;;;;;;;;;ACND,SAAgB,mBAAmB,CAAI,IAAS,EAAE,UAAe;IAC/D,IAAI,CAAC,OAAO,CAAC,GAAG,UAAU,CAAC,CAAC;CAC7B;;;;;;;;;;;;ACFD,SAAgB,QAAQ,CAAI,IAAS,EAAE,UAAe;IACpD,IAAI,CAAC,IAAI,CAAC,GAAG,UAAU,CAAC,CAAC;CAC1B;;;;;;;;;;;ACFD,SAAgB,gBAAgB,CAAI,IAAS;IAC3C,OAAO,IAAI;SACR,MAAM;;;;;;IAAC,CAAC,OAAU,EAAE,QAAgB,EAAE,YAAiB,KACtD,YAAY,CAAC,OAAO,CAAC,OAAO,CAAC,KAAK,QAAQ,EAAC,CAAC;CACjD;;;;;;;;;;;;ACJD,SAAgB,UAAU,CAAI,IAAS,EAAE,GAAG,aAAkB;IAC5D,aAAa,CAAC,OAAO;;;;IAAC,YAAY;;cAC1B,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,YAAY,CAAC;;cAClC,qBAAqB,GAAG,CAAC;QAC/B,IAAI,KAAK,GAAG,CAAC,CAAC,EAAE;YACd,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE,qBAAqB,CAAC,CAAC;SAC3C;KACF,EAAC,CAAC;CACJ;;;;;;ACRD;;;;;;AAGA,SAAgB,WAAW,CAAI,IAAS,EAAE,SAA+B;;UACjE,aAAa,GAAG,IAAI,CAAC,MAAM;;;;IAAC,CAAC,IAAI,SAAS,CAAC,CAAC,CAAC,EAAC;IACpD,UAAU,CAAC,IAAI,EAAE,GAAG,aAAa,CAAC,CAAC;CACpC;;;;;;;;;;;;;;;;ACND,SAAgB,KAAK,CAAI,aAAgB;IACvC,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC,CAAC,CAAC;CAClD;;;;;;;;;;;;;;;ACFD,SAAgB,QAAQ,CAAC,GAAW;;;UAE5B,cAAc,GAAG,kCAAkC;;QACrD,MAAM,GAAG,IAAI;IACjB,GAAG,GAAG,GAAG,CAAC,OAAO,CAAC,cAAc;;;;;;;IAAE,CAAC,CAAC,EAAE,GAAG,EAAE,KAAK,EAAE,IAAI;QACpD,OAAO,GAAG,GAAG,GAAG,GAAG,KAAK,GAAG,KAAK,GAAG,IAAI,GAAG,IAAI,CAAC;KAChD,EAAC,CAAC;;UAEG,WAAW,GAAG,2CAA2C,CAAC,IAAI,CAAC,GAAG,CAAC;IACzE,IAAI,WAAW,EAAE;;cACT,GAAG,GAAG,QAAQ,CAAC,WAAW,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC;;cAClC,IAAI,GAAG,QAAQ,CAAC,WAAW,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC;;cACnC,KAAK,GAAG,QAAQ,CAAC,WAAW,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC;QAC1C,MAAM,GAAG,CAAC,GAAG,EAAE,IAAI,EAAE,KAAK,CAAC,CAAC;KAC7B;IAED,OAAO,MAAM,CAAC;CACf;;;;;;;;;;ACjBD,SAAgB,UAAU,CAAC,SAAiB;IAC1C,OAAO,oCAAoC,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;CAC7D;;;;;;;;;;ACFD,SAAgB,QAAQ,CAAC,GAA6B;;UAC9C,GAAG,GAAG,GAAG,CAAC,CAAC,CAAC;;UACZ,KAAK,GAAG,GAAG,CAAC,CAAC,CAAC;;UACd,IAAI,GAAG,GAAG,CAAC,CAAC,CAAC;;IAGnB,OAAO,IAAI,CAAC,CAAC,CAAC,IAAI,EAAE,KAAK,GAAG,IAAI,EAAE,CAAC,IAAI,KAAK,IAAI,CAAC,CAAC,GAAG,IAAI,EAAE,QAAQ,CAAC,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC;CACpF;;;;;;;;;;ACPD,SAAgB,qBAAqB,CAAC,YAAoB;IACxD,OAAO,CAAC,IAAI,YAAY,GAAG,IAAI,CAAC,CAAC;CAClC;;;;;;;;;;;;ACED,SAAgB,SAAS,CAAC,IAAY;;UAC9B,eAAe,GAAG,IAAI,CAAC,MAAM,GAAG,CAAC;IACvC,OAAO,QAAQ,CAAC,MAAM;SACnB,KAAK,CAAC,GAAG,CAAC;SACV,GAAG;;;;IAAC,CAAC,IAAI,CAAC,CAAC,IAAI,EAAE,EAAC;SAClB,MAAM;;;;IAAC,MAAM,IACZ,MAAM,CAAC,SAAS,CAAC,CAAC,EAAE,eAAe,CAAC,KAAK,GAAG,IAAI,GAAG,EACpD;SACA,GAAG;;;;IAAC,MAAM,IACT,kBAAkB,CAAC,MAAM,CAAC,SAAS,CAAC,eAAe,CAAC,CAAC,EACtD,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC;CAChB;;;;;;;;;;;ACfD,SAAgB,eAAe,CAAC,YAAoB,EAAE,IAAW;IAC/D,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,EAAE,CAAC;;UACpB,IAAI,GAAG,IAAI,CAAC,OAAO,EAAE;;UACrB,OAAO,GAAG,IAAI,GAAG,YAAY;IACnC,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;IAEtB,OAAO,IAAI,CAAC;CACb;;;;;;ACPD;;;;;AAIA,SAAgB,UAAU,CAAC,OAAe,EAAE,IAAW;IACrD,OAAO,eAAe,CAAC,OAAO,GAAG,uBAAuB,EAAE,IAAI,CAAC,CAAC;CACjE;;;;;;ACND;;;;;AAIA,SAAgB,OAAO,CAAC,IAAY,EAAE,IAAW;IAC/C,OAAO,UAAU,CAAC,IAAI,GAAG,aAAa,EAAE,IAAI,CAAC,CAAC;CAC/C;;;;;;ACND;;;;;AAIA,SAAgB,QAAQ,CAAC,KAAa,EAAE,IAAW;IACjD,OAAO,UAAU,CAAC,KAAK,GAAG,gBAAgB,EAAE,IAAI,CAAC,CAAC;CACnD;;;;;;ACND;;;;;AAIA,SAAgB,UAAU,CAAC,OAAe,EAAE,IAAW;IACrD,OAAO,eAAe,CAAC,OAAO,GAAG,uBAAuB,EAAE,IAAI,CAAC,CAAC;CACjE;;;;;;;;;;ACND,SAAgB,SAAS,CAAC,IAAU;IAClC,OAAO,IAAI,IAAI,CACb,IAAI,CAAC,cAAc,EAAE,EACrB,IAAI,CAAC,WAAW,EAAE,EAClB,IAAI,CAAC,UAAU,EAAE,EACjB,IAAI,CAAC,WAAW,EAAE,EAClB,IAAI,CAAC,aAAa,EAAE,EACpB,IAAI,CAAC,aAAa,EAAE,CACrB,CAAC;CACH;;;;;;;;;;;ACDD,SAAgB,UAAU,CAAC,IAAU,EAAE,aAAqB,mBAAmB;;UACvE,eAAe,GAAG,IAAI,QAAQ,CAAC,OAAO,CAAC;IAE7C,IAAI,UAAU,KAAK,8BAA8B,IAAI,UAAU,KAAK,kBAAkB,EAAE;QACtF,OAAO,MAAM,CAAC,UAAU,EAAE;YACxB,IAAI,EAAE,eAAe,CAAC,SAAS,CAAC,IAAI,EAAE,mBAAmB,CAAC;SAC3D,CAAC,CAAC;KACJ;;UAEK,aAAa,GAAG,eAAe,CAAC,SAAS,CAAC,IAAI,EAAE,UAAU,CAAC;IACjE,OAAO,GAAG,aAAa,EAAE,CAAC;CAC3B;;;;;;ACnBD;;;;AAKA,SAAgB,6BAA6B,CAAC,IAAU;;;;IAItD,IAAI,GAAG,SAAS,CAAC,IAAI,CAAC,CAAC;IACvB,OAAO,UAAU,CAAC,IAAI,EAAE,8BAA8B,CAAC,CAAC;CACzD;;;;;;ACXD;;;;AAGA,SAAgB,cAAc,CAAC,IAAU;IACvC,OAAO,SAAS,CAAC,IAAI,CAAC,CAAC,OAAO,EAAE,CAAC;CAClC;;;;;;ACLD;;;;;AAIA,SAAgB,kBAAkB,CAAC,IAAU,EAAE,aAAqB,mBAAmB;;QACjF,SAAS,GAAG,IAAI;IACpB,IAAI,UAAU,KAAK,8BAA8B,IAAI,UAAU,KAAK,kBAAkB,EAAE;QACtF,SAAS,GAAG,KAAK,CAAC;KACnB;;UAEK,aAAa,GAAG,UAAU,CAAC,IAAI,EAAE,UAAU,CAAC;IAClD,OAAO,SAAS,GAAG,IAAI,aAAa,GAAG,GAAG,GAAG,aAAa,EAAE,CAAC;CAC9D;;;;;;;;ICXC,eAAY;IACZ,UAAO;IACP,SAAM;;;;;;;;;;ACHR;;;AAGA,SAAgB,mBAAmB;IACjC,OAAO,SAAS,CAAC,IAAI,IAAI,EAAE,CAAC,CAAC;CAC9B;;;;;;ACLD;;;AAGA,SAAgB,wBAAwB;IACtC,OAAO,SAAS,CAAC,IAAI,IAAI,EAAE,CAAC,CAAC,OAAO,EAAE,CAAC;CACxC;;;;;;;;;;;ACLD,SAAgB,sBAAsB,CAAC,KAAW,EAAE,GAAU;IAC5D,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,EAAE,CAAC;IACxB,OAAO,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,OAAO,EAAE,GAAG,GAAG,CAAC,OAAO,EAAE,CAAC,CAAC;CAClD;;;;;;ACHD;;;;;AAGA,SAAgB,iBAAiB,CAAC,KAAW,EAAE,GAAU;IACvD,OAAO,sBAAsB,CAAC,KAAK,EAAE,GAAG,CAAC,GAAG,IAAI,CAAC;CAClD;;;;;;ACLD;;;;;AAIA,SAAgB,qBAAqB,CAAC,OAAe,EAAE,YAAiB,EAAE;IACxE,OAAO,cAAc,CAAC,OAAO,GAAG,uBAAuB,EAAE,SAAS,CAAC,CAAC;CACrE;;;;;;;;;;ACND,SAAgB,uBAAuB,CAAC,IAAU;IAChD,IAAI,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;CAC3B;;;;;;;;;;ACFD,SAAgB,iBAAiB,CAAC,IAAU;IAC1C,IAAI,CAAC,QAAQ,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;CAC3B;;;;;;ACFD;;;;;AAGA,SAAgB,YAAY,CAAC,IAAY,EAAE,IAAW;IACpD,OAAO,OAAO,CAAC,IAAI,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC;CACjC;;;;;;ACLD;;;;;AAGA,SAAgB,eAAe,CAAC,OAAe,EAAE,IAAW;IAC1D,OAAO,UAAU,CAAC,OAAO,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC;CACvC;;;;;;ACLD;;;;;AAGA,SAAgB,eAAe,CAAC,OAAe,EAAE,IAAW;IAC1D,OAAO,UAAU,CAAC,OAAO,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC;CACvC;;;;;;ACLD;;;;;AAGA,SAAgB,aAAa,CAAC,KAAa,EAAE,IAAW;IACtD,OAAO,QAAQ,CAAC,KAAK,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC;CACnC;;;;;;ACLD;;;;;AAGA,SAAgB,oBAAoB,CAAC,YAAoB,EAAE,IAAW;IACpE,OAAO,eAAe,CAAC,YAAY,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC;CACjD;;;;;;;;;;;;;;;;ACLD;;;AAGA,SAAgB,eAAe;IAC7B,OAAO,SAAS,EAAE,IAAI,OAAO,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC;CACpD;;;;;;MCKY,oBAAoB;IAQ/B;QACE,IAAI,CAAC,yBAAyB,GAAG,IAAI,OAAO,EAAW,CAAC;QACxD,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,yBAAyB,CAAC,YAAY,EAAE,CAAC;QAEvE,MAAM,CAAC,gBAAgB,CAAC,QAAQ;;;QAAE,MAAM,IAAI,CAAC,kBAAkB,EAAE,EAAC,CAAC;QACnE,MAAM,CAAC,gBAAgB,CAAC,SAAS;;;QAAE,MAAM,IAAI,CAAC,kBAAkB,EAAE,EAAC,CAAC;KACrE;;;;IAVD,IAAI,QAAQ;QACV,OAAO,CAAC,CAAC,MAAM,CAAC,SAAS,CAAC,MAAM,CAAC;KAClC;;;;;IAUO,kBAAkB;QACxB,IAAI,CAAC,yBAAyB,CAAC,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;KAC9D;;;YAnBF,UAAU,SAAC,EAAE,UAAU,EAAE,MAAM,EAAE;;;;;;;;;;;ACTlC,MAAa,gCAAgC,GAAG,CAAC;;;;;;ACAjD;;;;;;;AAKA,SAAgB,WAAW,CAAC,OAAe,EAAE,OAAe,EAAE,SAAS,GAAG,gCAAgC;;UAClG,SAAS,GAAG,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,CAAC,SAAS,CAAC;IAChD,OAAO,IAAI,CAAC,GAAG,CAAC,OAAO,GAAG,OAAO,CAAC,GAAG,SAAS,CAAC;CAChD;;;;;;ACRD;;;;;;;;AAIA,SAAgB,iBAAiB,CAAC,EAAU,EAAE,EAAU,EAAE,EAAU,EAAE,EAAU,EAAE,SAAS,GAAG,gCAAgC;IAC5H,OAAO,WAAW,CAAC,EAAE,EAAE,EAAE,EAAE,SAAS,CAAC,IAAI,WAAW,CAAC,EAAE,EAAE,EAAE,EAAE,SAAS,CAAC,CAAC;CACzE;;;;;;;ACND,MAAa,iBAAiB,GAAG,mBAAmB;;;;;;ACApD;;;;;AAKA,SAAgB,QAAQ,CAAC,UAAe,EAAE,KAAW;;QAC/C,gBAAgB;IAEpB,UAAU,GAAG,UAAU,IAAI,iBAAiB,CAAC;IAC7C,IAAI,QAAQ,CAAC,UAAU,CAAC,EAAE;QACxB,gBAAgB,GAAG,KAAK,GAAG,QAAQ,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC;QAEhD,OAAO,MAAM,CAAC,UAAU,EAAE,EAAE,KAAK,EAAE,gBAAgB,EAAE,CAAC,CAAC;KACxD;IAED,OAAO,QAAQ,CACb,UAAU,CAAC,cAAc;WACtB,UAAU,CAAC,cAAc;WACzB,UAAU,CAAC,gBAAgB;WAC3B,UAAU,CAAC,gBAAgB;WAC3B,UAAU,CAAC,OAAO;WAClB,UAAU,CAAC,OAAO;WAClB,UAAU,CAAC,GAAG;WACd,UAAU,CAAC,GAAG;WACd,UAAU,CAAC,iBAAiB;WAC5B,UAAU,CAAC,KAAK;WAChB,UAAU,CAAC,KAAK;WAChB,UAAU,CAAC,IAAI;WACf,UAAU,CAAC,IAAI;WACf,UAAU,CAAC,SAAS;WACpB,UAAU,CAAC,SAAS,CAAC,CAAC;CAC5B;;;;;;AC/BD;;;;;;AAGA,SAAgB,YAAY,CAAC,KAAU,EAAE,MAAe,EAAE,MAAe;IACvE,OAAO,IAAI,WAAW,CAAC,OAAO,CAAC,CAAC,SAAS,CAAC,KAAK,EAAE,MAAM,EAAE,MAAM,CAAC,CAAC;CAClE;;;;;;;ACLD,MAAa,2CAA2C,GAAG,kBAAkB;;AAC7E,MAAa,oCAAoC,GAAG,WAAW;;AAC/D,MAAa,2CAA2C,GAAG,mBAAmB;;AAC9E,MAAa,uCAAuC,GAAG,mBAAmB;;AAC1E,MAAa,sBAAsB,GAAG,UAAU;;AAChD,MAAa,kBAAkB,GAAG,UAAU;;;;;;ACL5C;;;;AAGA,SAAgB,iBAAiB,CAAC,IAAY;IAC5C,OAAO,CAAC,IAAI,IAAI,EAAE;SACf,OAAO,CAAC,2CAA2C;;;;IAAE,KAAK,IACzD,KAAK,CAAC,WAAW,EAAE,EACpB,CAAC;CACL;;;;;;;;;;ACRD,SAAgB,oBAAoB,CAAC,KAAa;IAChD,OAAO,MAAM,CAAC,KAAK,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,WAAW,EAAE,GAAG,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;CAC/D;;;;;;ACFD;;;;;AAWA,SAAgB,QAAQ,CAAC,IAAY,EAAE,iBAAiB,GAAG,IAAI;;UACvD,MAAM,GAAG,CAAC,IAAI,IAAI,EAAE;SACvB,KAAK,CAAC,oCAAoC,CAAC;SAC3C,IAAI,CAAC,GAAG,CAAC;SACT,OAAO,CAAC,2CAA2C,EAAE,EAAE,CAAC;SACxD,OAAO,CAAC,uCAAuC,EAAE,EAAE,CAAC;SACpD,OAAO,CAAC,sBAAsB,EAAE,GAAG,CAAC;SACpC,OAAO,CAAC,kBAAkB,EAAE,GAAG,CAAC;SAChC,WAAW,EAAE;IAEhB,OAAO,iBAAiB;UACpB,iBAAiB,CAAC,MAAM,CAAC;UACzB,oBAAoB,CAAC,MAAM,CAAC,CAAC;CAClC;;;;;;;;;;;ACxBD,SAAgB,OAAO,CAAC,KAAa,EAAE,aAAa,GAAG,GAAG;IACxD,IAAI,KAAK,CAAC,QAAQ,CAAC,aAAa,CAAC,EAAE;QACjC,KAAK,GAAG,KAAK,CAAC,MAAM,CAAC,CAAC,EAAE,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;KAC3C;IAED,OAAO,KAAK,CAAC;CACd;;;;;;;;;;;ACND,SAAgB,SAAS,CAAC,KAAa,EAAE,aAAa,GAAG,GAAG;IAC1D,IAAI,KAAK,CAAC,UAAU,CAAC,aAAa,CAAC,EAAE;QACnC,KAAK,GAAG,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;KACzB;IAED,OAAO,KAAK,CAAC;CACd;;;;;;ACND;;;;;AAIA,SAAgB,IAAI,CAAC,KAAa,EAAE,aAAa,GAAG,GAAG;IACrD,KAAK,GAAG,SAAS,CAAC,KAAK,EAAE,aAAa,CAAC,CAAC;IACxC,KAAK,GAAG,OAAO,CAAC,KAAK,EAAE,aAAa,CAAC,CAAC;IAEtC,OAAO,KAAK,CAAC;CACd;;;;;;;;;;;;ACTD,SAAgB,OAAO,CAAa,IAAa,EAAE,SAAiC;;UAC5EE,MAAG,GAAG,IAAI,GAAG,EAAE;IAErB,IAAI,CAAC,OAAO;;;;IAAC,CAAC,IAAW;;cACjB,GAAG,GAAQ,SAAS,CAAC,IAAI,CAAC;;cAC1B,UAAU,GAAYA,MAAG,CAAC,GAAG,CAAC,GAAG,CAAC;QAExC,IAAI,CAAC,UAAU,EAAE;YACfA,MAAG,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC;SACtB;aAAM;YACL,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;SACvB;KACF,EAAC,CAAC;IAEH,OAAOA,MAAG,CAAC;CACZ;;;;;;;;;;;;ACfD,MAAa,sBAAsB,GAAG,2CAA2C;;AACjF,MAAa,cAAc,GAAG,kBAAkB;;;AAGhD,MAAa,cAAc,GAAG,YAAY;;AAC1C,MAAa,mBAAmB,GAAG,MAAM;;;AAGzC,MAAa,oBAAoB,GAAG,YAAY;;AAChD,MAAa,mBAAmB,GAAG,cAAc;;AACjD,MAAa,wBAAwB,GAAG,MAAM;;;AAG9C,MAAa,oBAAoB,GAAG,wBAAwB;;AAC5D,MAAa,mBAAmB,GAAG,WAAW;;AAC9C,MAAa,wBAAwB,GAAG,MAAM;;;AAG9C,MAAa,wBAAwB,GAAG,MAAM;;AAC9C,MAAa,mBAAmB,GAAG,WAAW;;AAC9C,MAAa,yBAAyB,GAAG,OAAO;;AAChD,MAAa,oBAAoB,GAAG,YAAY;;;;;;ACrBhD;;;;AAGA,SAAgB,cAAc,CAAC,OAAe;;QACxC,MAAM,GAAG,IAAI;;UACX,IAAI,GAAG,OAAO,CAAC,KAAK,CAAC,sBAAsB,CAAC;IAElD,IAAI,IAAI,IAAI,IAAI,CAAC,MAAM,EAAE;QACvB,MAAM,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;KAClB;IAED,OAAO,MAAM,CAAC;CACf;;;;;;ACZD;;;;AAGA,SAAgB,mBAAmB,CAAC,MAAc;;UAC1C,MAAM,GAAG,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC;IAChC,OAAO,WAAW,CAAC,MAAM,CAAC,CAAC,IAAI,EAAE,CAAC;CACnC;;;;;;ACND;;;;AAGA,SAAgB,iBAAiB,CAAC,UAAkB;;UAC5C,SAAS,GAAG,IAAI;;UAChB,kBAAkB,GAAG,mBAAmB,CAAC,UAAU,CAAC;;UACpD,cAAc,GAAG,IAAI,CAAC,kBAAkB,CAAC;;UACzC,WAAW,GAAG,cAAc,CAAC,MAAM;;UACnC,WAAW,GAAG,IAAI,CAAC,IAAI,CAAC,WAAW,GAAG,SAAS,CAAC;;UAChD,UAAU,GAAG,IAAI,KAAK,CAAC,WAAW,CAAC;;QACrC,UAAkB;IAEtB,KAAK,UAAU,GAAG,CAAC,EAAE,UAAU,GAAG,WAAW,EAAE,EAAE,UAAU,EAAE;;cACrD,KAAK,GAAG,UAAU,GAAG,SAAS;;cAC9B,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,GAAG,SAAS,EAAE,WAAW,CAAC;;cAE9C,KAAK,GAAG,IAAI,KAAK,CAAC,GAAG,GAAG,KAAK,CAAC;;YAChC,MAAc;;YACd,CAAS;QAEb,KAAK,MAAM,GAAG,KAAK,EAAE,CAAC,GAAG,CAAC,EAAE,MAAM,GAAG,GAAG,EAAE,EAAE,CAAC,EAAE,EAAE,MAAM,EAAE;YACvD,KAAK,CAAC,CAAC,CAAC,GAAG,cAAc,CAAC,MAAM,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;SACjD;QAED,UAAU,CAAC,UAAU,CAAC,GAAG,IAAI,UAAU,CAAC,KAAK,CAAC,CAAC;KAChD;IAED,OAAO,UAAU,CAAC;CACnB;;;;;;AC5BD;;;;;AAIA,SAAgB,YAAY,CAAC,UAAkB,EAAE,cAAsB,IAAI;IACzE,WAAW,GAAG,WAAW,IAAI,cAAc,CAAC,UAAU,CAAC,CAAC;IACxD,OAAO,IAAI,IAAI,CAAC,iBAAiB,CAAC,UAAU,CAAC,EAAE,EAAE,IAAI,EAAE,WAAW,EAAE,CAAC,CAAC;CACvE;;;;;;;;;;;ACPD;;;;AAIA,SAAgB,QAAQ,CAAC,GAAQ;IAC/B,OAAO,MAAM,CAAC,GAAG,EAAE,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,OAAO,CAAC,GAAG,CAAC,CAAC;CACrE;;;;;;ACND;;;;;;;AAOA,SAAgB,SAAS,CAAC,MAAW,EAAE,MAAW,EAAE,UAA+D,EAAE;IACnH,IAAI,QAAQ,CAAC,MAAM,CAAC,IAAI,QAAQ,CAAC,MAAM,CAAC,EAAE;QACxC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,OAAO;;;;QAAC,GAAG;;kBACvB,KAAK,GAAG,MAAM,CAAC,GAAG,CAAC;YACzB,IAAI,QAAQ,CAAC,KAAK,CAAC,EAAE;gBACnB,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,EAAE;oBAChB,MAAM,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC;iBAClB;gBAED,SAAS,CAAC,MAAM,CAAC,GAAG,CAAC,EAAE,KAAK,EAAE,OAAO,CAAC,CAAC;aACxC;iBAAM;;oBACD,MAAM,GAAG,IAAI;gBAEjB,IAAI,OAAO,CAAC,YAAY,IAAI,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC;uBAC3C,UAAU,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,aAAa,EAAE;oBAChD,MAAM,GAAG,KAAK,CAAC;iBAChB;gBAED,IAAI,MAAM,EAAE;oBACV,MAAM,CAAC,MAAM,CAAC,MAAM,EAAE,EAAE,CAAC,GAAG,GAAG,KAAK,EAAE,CAAC,CAAC;iBACzC;aACF;SACF,EAAC,CAAC;KACJ;IAED,OAAO,MAAM,CAAC;CACf;;;;;;AChCD;;;;;;AAGA,SAAgB,cAAc,CAAC,MAAa,EAAE,MAAa,EAAE,OAA+B;IAC1F,IAAI,CAAC,MAAM,IAAI,CAAC,MAAM,EAAE;QACtB,OAAO;KACR;IAED,OAAO,GAAG,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE;QAC1B,UAAU,EAAE,IAAI;QAChB,UAAU,EAAE,IAAI;QAChB,WAAW;;;QAAE,MAAM,SAAS,CAAA;QAC5B,UAAU;;;QAAE,MAAM,SAAS,CAAA;KAC5B,EAAE,OAAO,CAAC,CAAC;IAEZ,MAAM,CAAC,OAAO;;;;IAAC,UAAU;;cACjB,QAAQ,GAAG,UAAU,CAAC,OAAO,CAAC,UAAU,CAAC;;cACzC,KAAK,GAAG,MAAM,CAAC,IAAI;;;;QAAC,CAAC,IAAI,QAAQ,IAAI,CAAC,CAAC,OAAO,CAAC,UAAU,CAAC,KAAK,QAAQ,EAAC;QAC9E,IAAI,KAAK,EAAE;;kBACH,iBAAiB,GAAG,OAAO,CAAC,WAAW,CAAC,UAAU,EAAE,KAAK,CAAC;YAChE,IAAI,iBAAiB,KAAK,KAAK,EAAE;gBAC/B,SAAS,CAAC,UAAU,EAAE,KAAK,CAAC,CAAC;aAC9B;YAED,OAAO,CAAC,UAAU,CAAC,UAAU,EAAE,KAAK,CAAC,CAAC;SACvC;KACF,EAAC,CAAC;IAEH,IAAI,OAAO,CAAC,UAAU,EAAE;QACtB,MAAM;aACH,MAAM;;;;QAAC,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI;;;;QAAC,CAAC,IAAI,GAAG,CAAC,OAAO,CAAC,UAAU,CAAC,IAAI,GAAG,CAAC,OAAO,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC,OAAO,CAAC,UAAU,CAAC,EAAC,EAAC;aAC9G,OAAO;;;;QAAC,OAAO,IAAI,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,EAAC,CAAC;KAC7C;CACF;;;;;;AC5BD;;;;AAIA,MAAsB,uBAAuB;;;;;;IAQ3C,YAAsB,MAAqB,EAAY,GAAY,EAAY,SAA6B,EAAE,SAAS,EAAE,IAAI,EAAE;QAAzG,WAAM,GAAN,MAAM,CAAe;QAAY,QAAG,GAAH,GAAG,CAAS;QAAY,WAAM,GAAN,MAAM,CAA0C;QALrH,kBAAa,GAGjB,EAAE,CAAC;KAGR;;;;;;;IAED,IAAI,CAAC,OAAe,EAAE,KAAc,EAAE,MAAY;QAChD,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,EAAE,KAAK,EAAE,MAAM,CAAC,CAAC;;QAG7D,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QAClB,OAAO,IAAI,CAAC;KACb;;;;;;;;IAED,MAAM,CAAC,SAAoC,EAAE,OAAe,EAAE,KAAc,EAAE,MAAY;;cAClF,MAAM,GAAG,UAAU,CAAC,SAAS,CAAC;cAChC,oBAAC,SAAS,KAAoB;cAC9B,OAAO,CAAC,SAAS,CAAC;QAEtB,OAAO,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,KAAK,EAAE,MAAM,CAAC,GAAG,IAAI,CAAC;KAC1D;;;;;;;IAED,OAAO,CAAC,OAAe,EAAE,KAAc,EAAE,MAAY;QACnD,IAAI,CAAC,MAAM,CAAC,WAAW,GAAG,IAAI,CAAC;QAC/B,IAAI,CAAC,MAAM,CAAC,UAAU,GAAG,OAAO,CAAC;QACjC,IAAI,CAAC,MAAM,CAAC,YAAY,GAAG,KAAK,CAAC;QACjC,IAAI,CAAC,MAAM,CAAC,oBAAoB,GAAG,MAAM,CAAC;QAC1C,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QACrB,OAAO,IAAI,CAAC;KACb;;;;;;;IAED,KAAK,CAAC,OAAe,EAAE,KAAc,EAAE,MAAY;QACjD,IAAI,CAAC,MAAM,CAAC,SAAS,GAAG,IAAI,CAAC;QAC7B,IAAI,CAAC,MAAM,CAAC,QAAQ,GAAG,OAAO,CAAC;QAC/B,IAAI,CAAC,MAAM,CAAC,UAAU,GAAG,KAAK,CAAC;QAC/B,IAAI,CAAC,MAAM,CAAC,kBAAkB,GAAG,MAAM,CAAC;QACxC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QACnB,OAAO,IAAI,CAAC;KACb;;;;;;;IAED,IAAI,CAAC,OAAe,EAAE,KAAc,EAAE,MAAY;QAChD,IAAI,CAAC,MAAM,CAAC,QAAQ,GAAG,IAAI,CAAC;QAC5B,IAAI,CAAC,MAAM,CAAC,OAAO,GAAG,OAAO,CAAC;QAC9B,IAAI,CAAC,MAAM,CAAC,SAAS,GAAG,KAAK,CAAC;QAC9B,IAAI,CAAC,MAAM,CAAC,iBAAiB,GAAG,MAAM,CAAC;QACvC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QAClB,OAAO,IAAI,CAAC;KACb;;;;;;;IAED,IAAI,CAAC,OAAe,EAAE,KAAc,EAAE,MAAY;QAChD,IAAI,CAAC,MAAM,CAAC,QAAQ,GAAG,IAAI,CAAC;QAC5B,IAAI,CAAC,MAAM,CAAC,OAAO,GAAG,OAAO,CAAC;QAC9B,IAAI,CAAC,MAAM,CAAC,SAAS,GAAG,KAAK,CAAC;QAC9B,IAAI,CAAC,MAAM,CAAC,iBAAiB,GAAG,MAAM,CAAC;QACvC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QAClB,OAAO,IAAI,CAAC;KACb;;;;;IAED,OAAO,CAAC,MAA8D;QACpE,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QACrB,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QACrB,OAAO,IAAI,CAAC;KACb;;;;;;IAED,EAAE,CAAC,SAA0B,EAAE,QAA2B;QACxD,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,EAAE,SAAS,EAAE,QAAQ,EAAE,CAAC,CAAC;KAClD;;;;;;;IAES,IAAI,CAAC,SAA0B,EAAE,KAAW;QACpD,IAAI,CAAC,aAAa;aACf,MAAM;;;;QAAC,OAAO,IAAI,OAAO,CAAC,SAAS,KAAK,SAAS,EAAC;aAClD,OAAO;;;;QAAC,OAAO,IAAI,OAAO,CAAC,QAAQ,CAAC,KAAK,CAAC,EAAC,CAAC;KAChD;;;;;;IAES,IAAI,CAAC,QAAc;QAC3B,IAAI,IAAI,CAAC,YAAY,EAAE;YACrB,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,YAAY,CAAC,QAAQ,EAAE,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC,CAAC;SAC9E;QAED,IAAI,IAAI,CAAC,MAAM,EAAE;YACf,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;SACvB;KACF;;;;;;IAES,SAAS,CAAC,QAAa;QAC/B,IAAI,IAAI,CAAC,MAAM,CAAC,WAAW,EAAE;YAC3B,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,UAAU,EAAE,IAAI,CAAC,MAAM,CAAC,YAAY,EAAE,IAAI,CAAC,MAAM,CAAC,oBAAoB,CAAC,CAAC;SACzG;QAED,IAAI,IAAI,CAAC,MAAM,CAAC,QAAQ,EAAE;YACxB,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,OAAO,EAAE,IAAI,CAAC,MAAM,CAAC,SAAS,EAAE,IAAI,CAAC,MAAM,CAAC,iBAAiB,CAAC,CAAC;SAC7F;QAED,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;KACrB;;;;;;IAES,MAAM,CAAC,KAAU;;cACnB,aAAa,GAAG,CAAC,KAAK,CAAC,KAAK,IAAI,KAAK,KAAK,KAAK;;cAC/C,GAAG,GAAW,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,EAAE,aAAa,CAAC;QAEjE,IAAI,IAAI,CAAC,GAAG,IAAI,IAAI,CAAC,MAAM,CAAC,SAAS,EAAE;YACrC,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;SACrB;QAED,IAAI,IAAI,CAAC,MAAM,CAAC,SAAS,EAAE;YACzB,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,GAAG,EAAE,IAAI,CAAC,MAAM,CAAC,UAAU,EAAE,aAAa,EAAE,IAAI,CAAC,MAAM,CAAC,kBAAkB,CAAC,CAAC;SAC/F;QAED,IAAI,IAAI,CAAC,MAAM,CAAC,QAAQ,EAAE;YACxB,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,MAAM,CAAC,SAAS,EAAE,IAAI,CAAC,MAAM,CAAC,iBAAiB,CAAC,CAAC;SAC7E;QAED,IAAI,CAAC,IAAI,EAAE,CAAC;KACb;CACF;;;;;;;;;;;AC/HD;;;AAIA,MAAa,0BAA8B,SAAQ,uBAA0B;;;;;;;IAC3E,YAAmB,MAAkB,EAAE,MAAqB,EAAE,GAAY,EAAE,SAA6B,EAAE;QACzG,KAAK,CAAC,MAAM,EAAE,GAAG,EAAE,MAAM,CAAC,CAAC;QADV,WAAM,GAAN,MAAM,CAAY;KAEpC;;;;;;IAED,IAAI,CAAC,OAAe,EAAE,KAAc;QAClC,KAAK,CAAC,IAAI,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;QAC3B,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM;aACtB,IAAI;;;;QAAC,CAAC,MAAS;YACd,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;YACvB,OAAO,MAAM,CAAC;SACf,EAAC;aACD,KAAK;;;;QAAC,CAAC,KAAU;YAChB,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;YACnB,MAAM,KAAK,CAAC;SACb,EAAC,CAAC;QACL,OAAO,IAAI,CAAC;KACb;;;;;;;IAED,MAAM,CAAC,SAAoC,EAAE,OAAe,EAAE,KAAc;QAC1E,0BAAO,KAAK,CAAC,MAAM,CAAC,SAAS,EAAE,OAAO,EAAE,KAAK,CAAC,GAAkC;KACjF;;;;;;IAED,OAAO,CAAC,OAAe,EAAE,KAAc;QACrC,0BAAO,KAAK,CAAC,OAAO,CAAC,OAAO,EAAE,KAAK,CAAC,GAAkC;KACvE;;;;;;IAED,KAAK,CAAC,OAAe,EAAE,KAAc;QACnC,0BAAO,KAAK,CAAC,KAAK,CAAC,OAAO,EAAE,KAAK,CAAC,GAAkC;KACrE;;;;;;IAED,IAAI,CAAC,OAAe,EAAE,KAAc;QAClC,0BAAO,KAAK,CAAC,IAAI,CAAC,OAAO,EAAE,KAAK,CAAC,GAAkC;KACpE;;;;;;IAED,IAAI,CAAC,OAAe,EAAE,KAAc;QAClC,0BAAO,KAAK,CAAC,IAAI,CAAC,OAAO,EAAE,KAAK,CAAC,GAAkC;KACpE;;;;;IAED,OAAO,CAAC,MAA8D;QACpE,0BAAO,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,GAAkC;KAC/D;;;;;IAED,IAAI,CAAC,WAAmE;QACtE,OAAO,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;KACtC;;;;;IAED,KAAK,CAAC,UAAqE;QACzE,OAAO,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC;KACtC;CACF;;;;;;ACvDD;;;AAQA,MAAa,+BAAmC,SAAQ,uBAA0B;;;;;;;IAChF,YAAmB,MAAqB,EAAE,MAAqB,EAAE,GAAY,EAAE,SAA6B,EAAE;QAC5G,KAAK,CAAC,MAAM,EAAE,GAAG,EAAE,MAAM,CAAC,CAAC;QADV,WAAM,GAAN,MAAM,CAAe;;;QAKtC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAC5B,GAAG;;;;QAAC,CAAC,CAAI;YACP,UAAU;;;YAAC,MAAM,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,EAAC,CAAC;SACrC;;;;QAAE,CAAC,KAAU;YACZ,UAAU;;;YAAC,MAAM,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,EAAC,CAAC;SACtC,EAAC,CACH,CAAC;QAEF,IAAI,IAAI,CAAC,MAAM,CAAC,gCAAgC,EAAE;YAChD,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,aAAa,EAAE,CAAC,CAAC;SACjD;KACF;;;;;;;IAED,IAAI,CAAC,OAAe,EAAE,KAAc,EAAE,MAAY;QAChD,0BAAO,KAAK,CAAC,IAAI,CAAC,OAAO,EAAE,KAAK,EAAE,MAAM,CAAC,GAAuC;KACjF;;;;;;;;IAED,MAAM,CAAC,SAAoC,EAAE,OAAe,EAAE,KAAc,EAAE,MAAY;QACxF,0BAAO,KAAK,CAAC,MAAM,CAAC,SAAS,EAAE,OAAO,EAAE,KAAK,EAAE,MAAM,CAAC,GAAuC;KAC9F;;;;;;;IAED,OAAO,CAAC,OAAe,EAAE,KAAc,EAAE,MAAY;QACnD,0BAAO,KAAK,CAAC,OAAO,CAAC,OAAO,EAAE,KAAK,EAAE,MAAM,CAAC,GAAuC;KACpF;;;;;;;IAED,KAAK,CAAC,OAAe,EAAE,KAAc,EAAE,MAAY;QACjD,0BAAO,KAAK,CAAC,KAAK,CAAC,OAAO,EAAE,KAAK,EAAE,MAAM,CAAC,GAAuC;KAClF;;;;;;;IAED,IAAI,CAAC,OAAe,EAAE,KAAc,EAAE,MAAY;QAChD,0BAAO,KAAK,CAAC,IAAI,CAAC,OAAO,EAAE,KAAK,EAAE,MAAM,CAAC,GAAuC;KACjF;;;;;;;IAED,IAAI,CAAC,OAAe,EAAE,KAAc,EAAE,MAAY;QAChD,0BAAO,KAAK,CAAC,IAAI,CAAC,OAAO,EAAE,KAAK,EAAE,MAAM,CAAC,GAAuC;KACjF;;;;;IAED,OAAO,CAAC,MAA8D;QACpE,0BAAO,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,GAAuC;KACpE;;;;;;;IAED,SAAS,CAAC,IAAyB,EAAE,KAA4B,EAAE,QAAqB;QACtF,OAAO,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,IAAI,EAAE,KAAK,EAAE,QAAQ,CAAC,CAAC;KACrD;CACF;;;;;;;;;;;;;;;;;;;;;;;;;;;;IC1DC,OAAQ;IACR,UAAW;IACX,OAAQ;IACR,OAAQ;IACR,QAAS;;;;;;;;;;;;;;;ACgBX,MAAa,aAAa;;;;;IACxB,YAAsB,MAAkB,EAAY,GAAW;QAAzC,WAAM,GAAN,MAAM,CAAY;QAAY,QAAG,GAAH,GAAG,CAAQ;KAC9D;;;;;;;;IAED,MAAM,CAAC,IAAgB,EAAE,OAAe,EAAE,KAAa,EAAE,MAAY;;QAEnE,OAAO,EAAE,CAAC;KACX;;;;;;IAED,KAAK,CAAC,QAAiB,EAAE,WAAoB;KAC5C;;;;;;IAED,IAAI,CAAI,MAAqB;QAC3B,OAAO,IAAI,+BAA+B,CAAI,MAAM,EAAE,IAAI,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC;KACvE;;;;;;IAED,OAAO,CAAI,MAAkB;QAC3B,OAAO,IAAI,0BAA0B,CAAI,MAAM,EAAE,IAAI,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC;KAClE;;;;;;;IAED,IAAI,CAAC,OAAe,EAAE,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,oBAAoB,EAAE,MAAY;QAC1E,OAAO,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,IAAI,EAAE,OAAO,EAAE,KAAK,EAAE,MAAM,CAAC,CAAC;KAC7D;;;;;;;IAED,OAAO,CAAC,OAAe,EAAE,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,uBAAuB,EAAE,MAAY;QAChF,OAAO,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,OAAO,EAAE,OAAO,EAAE,KAAK,EAAE,MAAM,CAAC,CAAC;KAChE;;;;;;;;IAED,KAAK,CAAC,OAAe,EAAE,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,qBAAqB,EAAE,QAAa,IAAI,EAAE,MAAY;QAC/F,OAAO,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,KAAK,EAAE,MAAM,CAAC,OAAO,EAAE,EAAE,KAAK,EAAE,CAAC,EAAE,KAAK,EAAE,MAAM,CAAC,CAAC;KACjF;;;;;;;;IAED,IAAI,CAAC,OAAe,EAAE,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,oBAAoB,EAAE,QAAa,IAAI,EAAE,MAAY;QAC7F,OAAO,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,IAAI,EAAE,MAAM,CAAC,OAAO,EAAE,EAAE,KAAK,EAAE,CAAC,EAAE,KAAK,EAAE,MAAM,CAAC,CAAC;KAChF;;;;;;;IAED,IAAI,CAAC,OAAe,EAAE,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,oBAAoB,EAAE,MAAY;QAC1E,OAAO,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,IAAI,EAAE,OAAO,EAAE,KAAK,EAAE,MAAM,CAAC,CAAC;KAC7D;;;YAvCF,UAAU,SAAC,EAAE,UAAU,EAAE,MAAM,EAAE;;;;YAbzB,UAAU;YAGV,MAAM;;;;;;;;;;;;;ACVf;;;;;;;;;AAOA,SAAgB,iBAAiB,CAAI,UAAa,EAAE,UAAe,EAAE,GAAG,qBAA+B;IACrG,IAAI,qBAAqB,CAAC,MAAM,KAAK,CAAC,EAAE;QACtC,qBAAqB,GAAG,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;KACjD;IAED,qBAAqB;SAClB,MAAM;;;;IAAC,QAAQ,IAAI,OAAO,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC,EAAC;SACjD,OAAO;;;;IAAC,QAAQ,IAAI,UAAU,CAAC,QAAQ,CAAC,GAAG,UAAU,CAAC,QAAQ,CAAC,EAAC,CAAC;IAEpE,OAAO,UAAU,CAAC;CACnB;;;;;;;;;;;;;ACfD,SAAgB,QAAQ,CAAC,GAAQ,EAAE,IAAY;;UACvC,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC;IAC3B,OAAO,GAAG,CAAC,MAAM,IAAI,GAAG,EAAE;QACxB,GAAG,GAAG,GAAG,CAAC,GAAG,CAAC,KAAK,EAAE,CAAC,CAAC;KACxB;IAED,OAAO,GAAG,CAAC;CACZ;;;;;;;;;;;;;ACLD,SAAgB,gBAAgB,CAAC,MAAc,CAAC,EAAE,MAAc,IAAI;IAClE,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC;CAC1D;;;;;;;;;;;;ACHD,SAAgB,eAAe,CAAC,MAAc,CAAC,EAAE,MAAc,EAAE;IAC/D,OAAO,IAAI,CAAC,MAAM,EAAE,IAAI,GAAG,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC;CAC1C;;;;;;;;;;;;;;;;ACLD;;;;;AAGA,SAAgB,KAAK,CAAC,aAAqB,EAAE,aAAa,GAAG,CAAC;IAC5D,OAAOD,UAAQ,CAAC,aAAa,CAAC;UAC1B,MAAM,CAAC,aAAa,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC;UAC5C,aAAa,CAAC;CACnB;;;;;;;;;;;ACND;;;;;AAGA,SAAgB,WAAW,CAAsB,IAAS;;QACpD,aAAa,GAAG,CAAC,CAAC;IACtB,IAAI;SACD,IAAI;;;;;IAAC,CAAC,QAAW,EAAE,QAAW;QAC7B,IAAI,CAACA,UAAQ,CAAC,QAAQ,CAAC,KAAK,CAAC,IAAI,QAAQ,CAAC,KAAK,GAAG,QAAQ,CAAC,KAAK,EAAE;YAChE,aAAa,GAAG,CAAC,CAAC,CAAC;SACpB;aAAM,IAAI,CAACA,UAAQ,CAAC,QAAQ,CAAC,KAAK,CAAC,IAAI,QAAQ,CAAC,KAAK,GAAG,QAAQ,CAAC,KAAK,EAAE;YACvE,aAAa,GAAG,CAAC,CAAC;SACnB;aAAM,IAAI,QAAQ,CAAC,KAAK,KAAK,QAAQ,CAAC,KAAK,EAAE;YAC5C,aAAa,GAAG,CAAC,CAAC;SACnB;QAED,OAAO,aAAa,CAAC;KACtB,EAAC,CAAC;CACN;;;;;;AClBD;;;;;AAIA,SAAgB,cAAc,CAAsB,IAAS;IAC3D,WAAW,CAAC,IAAI,CAAC,CAAC;IAClB,IAAI;SACD,OAAO;;;;;IAAC,CAAC,IAAI,EAAE,KAAK,KAAK,IAAI,CAAC,KAAK,GAAG,KAAK,GAAG,CAAC,EAAC,CAAC;CACrD;;;;;;;;ICPC,YAAS;IACT,aAAU;;;;;;;;;;;;;;ACFZ;;;;;;AAMA,SAAgB,aAAa,CAAI,IAAS,EAAE,GAAG,cAAuC;IACpF,OAAO,IAAI,CAAC,IAAI,EAAE,aAAa,CAAC,SAAS,EAAE,GAAG,cAAc,CAAC,CAAC;CAC/D;;;;;;;AAED,SAAgB,cAAc,CAAI,IAAS,EAAE,GAAG,cAAuC;IACrF,OAAO,IAAI,CAAC,IAAI,EAAE,aAAa,CAAC,UAAU,EAAE,GAAG,cAAc,CAAC,CAAC;CAChE;;;;;;;;AAED,SAAgB,IAAI,CAAI,IAAS,EAAE,YAA2B,aAAa,CAAC,SAAS,EAAE,GAAG,cAAuC;IAC/H,IAAI,CAAC,IAAI;;;;;IAAC,CAAC,KAAQ,EAAE,KAAQ;;YACvB,YAAY,GAAG,CAAC;QAEpB,IAAI,cAAc,IAAI,cAAc,CAAC,MAAM,EAAE;YAC3C,cAAc,CAAC,OAAO;;;;YAAC,QAAQ;gBAC7B,IAAI,YAAY,KAAK,CAAC,EAAE;;0BAChB,MAAM,GAAG,gBAAgB,CAAC,KAAK,EAAE,QAAQ,CAAC;;0BAC1C,MAAM,GAAG,gBAAgB,CAAC,KAAK,EAAE,QAAQ,CAAC;oBAChD,YAAY,GAAG,sBAAsB,CAAC,MAAM,EAAE,MAAM,EAAE,SAAS,CAAC,CAAC;iBAClE;aACF,EAAC,CAAC;SACJ;aAAM;YACL,YAAY,GAAG,sBAAsB,CAAC,KAAK,EAAE,KAAK,EAAE,SAAS,CAAC,CAAC;SAChE;QAED,OAAO,YAAY,CAAC;KACrB,EAAC,CAAC;IAEH,OAAO,IAAI,CAAC;CACb;;;;;;;AAED,SAAS,gBAAgB,CAAI,IAAO,EAAE,QAA+B;IACnE,OAAO,UAAU,CAAC,QAAQ,CAAC;UACvB,oBAAC,QAAQ,IAAyB,IAAI,CAAC;UACvC,IAAI,oBAAC,QAAQ,GAAW,CAAC;CAC9B;;;;;;;AAED,SAAS,sBAAsB,CAAC,MAAW,EAAE,MAAW,EAAE,SAAwB;IAChF,OAAO,SAAS,KAAK,aAAa,CAAC,SAAS;UACxC,+BAA+B,CAAC,MAAM,EAAE,MAAM,CAAC;UAC/C,gCAAgC,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC;CACtD;;;;;AAED,SAAS,WAAW,CAAC,KAAU;IAC7B,OAAO,KAAK,KAAK,IAAI,IAAI,KAAK,KAAK,SAAS,GAAG,EAAE,GAAG,KAAK,CAAC;CAC3D;;;;;;AAED,SAAS,+BAA+B,CAAC,MAAW,EAAE,MAAW;IAC/D,MAAM,GAAG,WAAW,CAAC,MAAM,CAAC,CAAC;IAC7B,MAAM,GAAG,WAAW,CAAC,MAAM,CAAC,CAAC;;UACvB,QAAQ,GAAG,QAAQ,CAAC,MAAM,CAAC,GAAG,MAAM,CAAC,WAAW,EAAE,GAAG,MAAM;;UAC3D,QAAQ,GAAG,QAAQ,CAAC,MAAM,CAAC,GAAG,MAAM,CAAC,WAAW,EAAE,GAAG,MAAM;;QAC7D,aAAa,GAAG,CAAC;IAErB,IAAI,QAAQ,GAAG,QAAQ,EAAE;QACvB,aAAa,GAAG,CAAC,CAAC,CAAC;KACpB;SAAM,IAAI,QAAQ,GAAG,QAAQ,EAAE;QAC9B,aAAa,GAAG,CAAC,CAAC;KACnB;;IAGD,OAAO,aAAa,CAAC;CACtB;;;;;;AAED,SAAS,gCAAgC,CAAC,MAAc,EAAE,MAAc;;UAChE,QAAQ,GAAG,QAAQ,CAAC,MAAM,CAAC,GAAG,MAAM,CAAC,WAAW,EAAE,GAAG,MAAM;;UAC3D,QAAQ,GAAG,QAAQ,CAAC,MAAM,CAAC,GAAG,MAAM,CAAC,WAAW,EAAE,GAAG,MAAM;;QAC7D,aAAa,GAAG,CAAC;IAErB,IAAI,QAAQ,GAAG,QAAQ,EAAE;QACvB,aAAa,GAAG,CAAC,CAAC,CAAC;KACpB;SAAM,IAAI,QAAQ,GAAG,QAAQ,EAAE;QAC9B,aAAa,GAAG,CAAC,CAAC;KACnB;;IAGD,OAAO,aAAa,CAAC;CACtB;;;;;;AClFD;;;;AAGA,SAAgB,OAAO,CAAC,IAAc;IACpC,IAAI,GAAG,IAAI,CAAC,MAAM;;;;IAAC,KAAK,IAAIA,UAAQ,CAAC,KAAK,CAAC,EAAC,CAAC;;UACvC,KAAK,GAAG,IAAI,CAAC,MAAM;;;;;IAAC,CAAC,OAAO,EAAE,YAAY,KAAK,OAAO,GAAG,YAAY,GAAE,CAAC,CAAC;IAE/E,OAAO,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC;CAC5B;;;;;;;;;;;;;;;ACRD,SAAgB,qBAAqB,CAAC,EAAU,EAAE,EAAU,EAAE,EAAU,EAAE,EAAU,EAAE,KAAa,EAAE,KAAa;IAChH,OAAO,CAAC,KAAK,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC,KAAK,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,CAAC,CAAC;CAC5D;;;;;;;;;;;ACFD,SAAgB,wBAAwB,CAAC,YAAoB,EAAE,UAAkB;IAC/E,OAAO,CAAC,GAAG,GAAG,YAAY,IAAI,UAAU,CAAC;CAC1C;;;;;;;;;;;;ACFD,SAAgB,yBAAyB,CAAC,cAAsB,EAAE,eAAuB,EAAE,cAAsB;;QAC3G,yBAAyB,GAAG,CAAC,CAAC;IAClC,IAAI,cAAc,GAAG,CAAC,EAAE;QACtB,yBAAyB,GAAG,eAAe,GAAG,cAAc,GAAG,cAAc,CAAC;KAC/E;IAED,OAAO,yBAAyB,CAAC;CAClC;;;;;;;;;;;;ACPD,SAAgB,sBAAsB,CAAC,UAAkB,EAAE,UAAkB,EAAE,QAAgB;;UACvF,QAAQ,GAAG,IAAI,CAAC,GAAG,CAAC,UAAU,EAAE,QAAQ,CAAC;;UACzC,QAAQ,GAAG,IAAI,CAAC,GAAG,CAAC,UAAU,EAAE,QAAQ,CAAC;IAE/C,OAAO,UAAU,IAAI,QAAQ,IAAI,UAAU,IAAI,QAAQ,CAAC;CACzD;;;;;;;;;;;;ACLD,SAAgB,eAAe,CAAC,UAAkB,EAAE,UAAkB,EAAE,QAAgB;;UAChF,QAAQ,GAAG,IAAI,CAAC,GAAG,CAAC,UAAU,EAAE,QAAQ,CAAC;;UACzC,QAAQ,GAAG,IAAI,CAAC,GAAG,CAAC,UAAU,EAAE,QAAQ,CAAC;IAE/C,OAAO,UAAU,GAAG,QAAQ,IAAI,UAAU,GAAG,QAAQ,CAAC;CACvD;;;;;;;;;;;ACLD;;;;;;AAGA,SAAgB,GAAG,CAAI,IAAS,EAAE,SAA8B;IAC9D,OAAO,IAAI;SACR,MAAM;;;;;IAAC,CAAC,CAAC,EAAE,CAAC;;YACP,KAAK,GAAG,SAAS,CAAC,CAAC,CAAC;QACxB,KAAK,GAAGA,UAAQ,CAAC,KAAK,CAAC,GAAG,KAAK,GAAG,CAAC,CAAC;QAEpC,OAAO,CAAC,GAAG,KAAK,CAAC;KAClB,GAAE,CAAC,CAAC,CAAC;CACT;;;;;;ACVD,MAGa,YAAY;;;;IAGvB,YAAY,GAAG,aAA6B;QAC1C,IAAI,CAAC,aAAa,GAAG,aAAa,IAAI,EAAE,CAAC;KAC1C;;;;;;;IAED,GAAG,CAAC,YAA0B;QAC5B,mBAAA,IAAI,GAAC,aAAa,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;QACtC,0BAAO,IAAI,GAAC;KACb;;;;IAED,kBAAkB;;cACV,oBAAoB,GAAG,GAAG,CAAC,IAAI,CAAC,aAAa;;;;QAAE,CAAC,IAAI,CAAC,CAAC,eAAe,EAAC;;cACtE,eAAe,GAAG,oBAAoB,GAAG,IAAI,CAAC,aAAa,CAAC,MAAM;QAExE,OAAO,IAAI,CAAC,KAAK,CAAC,eAAe,CAAC,CAAC;KACpC;CACF;;;;;;ACtBD;;;;;;AAGA,SAAgB,WAAW,CAAI,IAAS,EAAE,QAAgB;IACxD,OAAO,GAAG,CAAC,IAAI;;;;IAAE,CAAC,KAAQ,KAAK,KAAK,CAAC,QAAQ,CAAC,EAAC,CAAC;CACjD;;;;;;ACLD;;;;AAGA,SAAgB,SAAS,CAAC,IAAc;IACtC,OAAO,GAAG,CAAC,IAAI;;;;IAAE,KAAK,IAAI,KAAK,EAAC,CAAC;CAClC;;;;;;MCCY,eAAgB,SAAQ,WAAW;IADhD;;QAEE,UAAK,GAAG,IAAI,GAAG,EAAkB,CAAC;KAqBnC;;;;IAnBC,IAAI,MAAM;QACR,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC;KACxB;;;;;IAED,GAAG,CAAC,GAAW;QACb,OAAO,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,CAAC;KAC5C;;;;;;IAED,GAAG,CAAC,GAAW,EAAE,KAAa;QAC5B,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE,KAAK,CAAC,CAAC;KAC5C;;;;;IAED,MAAM,CAAC,GAAW;QAChB,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,CAAC;KACxC;;;;IAED,KAAK;QACH,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE,CAAC;KACpB;;;YAtBF,UAAU,SAAC,EAAE,UAAU,EAAE,MAAM,EAAE;;;;;;;;ACLlC;;;;AAIA,SAAgB,aAAa,CAAC,QAAgB;IAC5C,QAAQ,GAAG,iBAAiB,CAAC,QAAQ,CAAC,CAAC;IACvC,OAAO,QAAQ,CAAC,KAAK,CAAC,IAAI,MAAM,CAAC,gBAAgB,CAAC,CAAC,CAAC;CACrD;;;;;;ACPD;;;;AAIA,SAAgB,uBAAuB,CAAC,QAAgB;IACtD,OAAO,aAAa,CAAC,QAAQ,CAAC;SAC3B,GAAG;;;;IAAC,eAAe,IAAI,gBAAgB,CAAC,eAAe,CAAC,EAAC,CAAC;CAC9D;;;;;;ACPD;;;;AAGA,SAAgB,SAAS,CAAC,GAAQ;IAChC,OAAO,MAAM,CAAC,GAAG,EAAE,SAAS,CAAC,CAAC;CAC/B;;;;;;ACLD;;;;AAGA,SAAgB,UAAU,CAAC,GAAQ;IACjC,OAAO,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;CACtB;;;;;;ACLD;;;;AAGA,SAAgB,YAAY,CAAC,GAAQ;IACnC,OAAO,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC;CACxB;;;;;;ACLD;;;;AAGA,SAAgB,SAAS,CAAC,GAAQ;IAChC,OAAO,CAACD,QAAM,CAAC,GAAG,CAAC,CAAC;CACrB;;;;;;ACLD;;;;AAGA,SAAgB,YAAY,CAAC,GAAQ;IACnC,OAAO,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC;CACxB;;;;;;ACLD;;;;AAGA,SAAgB,aAAa,CAAC,GAAQ;IACpC,OAAO,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC;CACzB;;;;;;ACLD;;;;AAGA,SAAgB,WAAW,CAAC,GAAQ;IAClC,OAAO,CAACC,UAAQ,CAAC,GAAG,CAAC,CAAC;CACvB;;;;;;ACLD;;;;AAGA,SAAgB,WAAW,CAAC,GAAQ;IAClC,OAAO,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC;CACvB;;;;;;ACLD;;;;AAIA,SAAgB,WAAW,CAAC,GAAQ;IAClC,OAAO,aAAa,CAAC,GAAG,CAAC,IAAI,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,IAAI,UAAU,CAAC,GAAG,CAAC,CAAC;CACvE;;;;;;ACND;;;;AAGA,SAAgB,cAAc,CAAC,GAAQ;IACrC,OAAO,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC;CAC1B;;;;;;ACLD;;;;AAGA,SAAgB,WAAW,CAAC,GAAQ;IAClC,OAAO,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC;CACvB;;;;;;ACLD;;;;;AAGA,SAAgB,SAAS,CAAC,GAAQ,EAAE,YAAoB;IACtD,OAAO,CAAC,MAAM,CAAC,GAAG,EAAE,YAAY,CAAC,CAAC;CACnC;;;;;;;;ICJC,OAAQ,OAAO;IACf,UAAW,UAAU;IACrB,YAAa,aAAa;IAC1B,cAAe,eAAe;IAC9B,aAAc,cAAc;;;;;;;;;;;;ACF9B,SAAgB,gBAAgB,CAAC,QAAkB,EAAE,MAAgB;IACnE,MAAM,IAAI,KAAK,CAAC,2CAA2C,CAAC,CAAC;CAC9D;;;;;;;;ICJC,MAAO,MAAM;IACb,QAAS,QAAQ;IACjB,QAAS,QAAQ;IACjB,MAAO,MAAM;IACb,OAAQ,OAAO;IACf,WAAY,WAAW;;;;;;;ACNzB;;;AAIA,SAAS,yBAAyB;;UAC1B,OAAO,GAAgC,EAAE;IAC/C,OAAO,CAAC,UAAU,CAAC,IAAI,CAAC,GAAG,MAAM,CAAC;IAClC,OAAO,CAAC,UAAU,CAAC,SAAS,CAAC,GAAG,IAAI,CAAC;IACrC,OAAO,CAAC,UAAU,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;IAC9B,OAAO,CAAC,UAAU,CAAC,IAAI,CAAC,GAAG,OAAO,CAAC;IAEnC,OAAO,OAAO,CAAC;CAChB;;AAED,MAAa,mCAAmC,GAAG,yBAAyB,EAAE;;;;;;ACb9E;;;;;AAIA,SAAgB,QAAQ,CAAC,KAAa,EAAE,QAAoB;;UACpD,gBAAgB,GAAG,mCAAmC,CAAC,QAAQ,CAAC;IACtE,IAAI,WAAW,CAAC,gBAAgB,CAAC,EAAE;QACjC,MAAM,IAAI,KAAK,CAAC,sCAAsC,QAAQ,GAAG,CAAC,CAAC;KACpE;IAED,OAAO,KAAK,GAAG,gBAAgB,CAAC;CACjC;;;;;;ACXD;;;;;AAIA,SAAgB,UAAU,CAAC,KAAa,EAAE,MAAkB;;UACpD,gBAAgB,GAAG,mCAAmC,CAAC,MAAM,CAAC;IACpE,IAAI,CAACA,UAAQ,CAAC,gBAAgB,CAAC,EAAE;QAC/B,MAAM,IAAI,KAAK,CAAC,sCAAsC,MAAM,GAAG,CAAC,CAAC;KAClE;IAED,OAAO,KAAK,GAAG,gBAAgB,CAAC;CACjC;;;;;;ACXD;;;;;;AAIA,SAAgB,kBAAkB,CAAC,SAAiB,EAAE,QAAoB,EAAE,MAAkB;;UACtF,iBAAiB,GAAG,QAAQ,CAAC,SAAS,EAAE,QAAQ,CAAC;IAEvD,OAAO,UAAU,CAAC,iBAAiB,EAAE,MAAM,CAAC,CAAC;CAC9C;;;;;;;;;;;;;;;ACTD,SAAgB,kCAAkC,CAAC,eAAuB;IACxE,OAAO,eAAe,GAAG,GAAG,CAAC;CAC9B;;;;;;;;;;ACFD,SAAgB,6BAA6B,CAAC,eAAuB;IACnE,OAAO,eAAe,GAAG,KAAK,CAAC;CAChC;;;;;;ACFD;;;;AAGA,SAAgB,cAAc,CAAC,GAAW;IACxC,IAAI,SAAS,EAAE,IAAI,MAAM,CAAC,GAAG,CAAC,CAAC,UAAU,CAAC,IAAI,CAAC,EAAE;QAC/C,GAAG,GAAG,GAAG,MAAM,CAAC,QAAQ,CAAC,QAAQ,GAAG,GAAG,EAAE,CAAC;KAC3C;IAED,OAAO,GAAG,CAAC;CACZ;;;;;;ACTD;;;;AAGA,SAAgB,UAAU,CAAC,GAAW;QAChC,CAAC,OAAO,CAAC,GAAG,KAAK,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC;IACrC,CAAC,OAAO,CAAC,GAAG,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;IAC/B,OAAO,OAAO,CAAC;CAChB;;;;;;ACPD;;;;;AAIA,SAAgB,YAAY,CAAC,MAAW,EAAE,GAAG,KAAK;;UAC1C,GAAG,GAAG,IAAI,CAAC,GAAG,KAAK,CAAC;IAC1B,OAAO,MAAM,CAAC,GAAG,EAAE,MAAM,CAAC,CAAC;CAC5B;;;;;;ACPD;;;;AAIA,SAAgB,kBAAkB,CAAC,eAAmB;IACpD,OAAO,MAAM;SACV,IAAI,CAAC,eAAe,CAAC;SACrB,MAAM;;;;IAAC,GAAG,IAAI,OAAO,CAAC,eAAe,CAAC,GAAG,CAAC,CAAC,EAAC;SAC5C,GAAG;;;;IAAC,GAAG;;cACA,KAAK,GAAG,QAAQ,CAAC,eAAe,CAAC,GAAG,CAAC,CAAC;cACxC,IAAI,CAAC,SAAS,CAAC,eAAe,CAAC,GAAG,CAAC,CAAC;cACpC,eAAe,CAAC,GAAG,CAAC;QAExB,OAAO,GAAG,GAAG,IAAI,KAAK,EAAE,CAAC;KAC1B,EAAC;SACD,IAAI,CAAC,GAAG,CAAC,CAAC;CACd;;;;;;;AChBD,MAAa,kBAAkB,GAAG,wBAAwB;;;;;;ACA1D;;;;AAGA,SAAgB,iBAAiB,CAAC,GAAW;IAC3C,OAAO,GAAG,CAAC,OAAO,CAAC,kBAAkB,EAAE,EAAE,CAAC,CAAC;CAC5C;;;;;;ACLD;;;;AAGA,SAAgB,kBAAkB,CAAC,GAAW;IAC5C,OAAO,OAAO,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;CAC1B;;;;;;;;;;;;;ACCD,SAAsB,KAAK,CAAuB,QAAW,EAAE,IAA2C;;QACxG,IAAI;YACF,MAAM,IAAI,CAAC,QAAQ,CAAC,CAAC;SACtB;gBAAS;YACR,MAAM,QAAQ,CAAC,OAAO,EAAE,CAAC;SAC1B;KACF;CAAA;;;;;;;ACZD,MAAa,sBAAsB,GAAG,6BAA6B;;;;;;;;;;ACAnE,SAAgB,iBAAiB,CAAC,YAAoB;;;UAE9C,WAAW,GAAG,IAAI,CAAC,MAAM,EAAE,GAAG,EAAE,GAAG,CAAC;;;UAEpC,KAAK,GAAG,YAAY,KAAK,GAAG,GAAG,WAAW,IAAI,WAAW,GAAG,GAAG,GAAG,GAAG,CAAC;IAE5E,OAAO,KAAK,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;CAC3B;;;;;;ACPD;;;AAGA,SAAgB,IAAI;IAClB,OAAO,sCAAsC;SAC1C,OAAO,CAAC,IAAI,MAAM,CAAC,MAAM,EAAE,GAAG,CAAC,EAAE,iBAAiB,CAAC,CAAC;CACxD;;;;;;ACND;;;;AAQA,MAAa,IAAI;;;;IAkBf,YAAY,KAAc;QACxB,IAAI,CAAC,KAAK,GAAG,KAAK,IAAI,IAAI,CAAC,KAAK,CAAC;QAEjC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE;YACxB,MAAM,IAAI,KAAK,CAAC,sBAAsB,CAAC,CAAC;SACzC;KACF;;;;IAnBD,IAAI,OAAO;QACT,OAAO,IAAI,CAAC,KAAK,KAAK,IAAI,CAAC,KAAK,CAAC;KAClC;;;;IAEM,OAAO,OAAO;QACnB,OAAO,IAAI,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC;KACzB;;;;;IAEM,OAAO,OAAO,CAAC,GAAW;;cACzB,UAAU,GAAG,4EAA4E;QAC/F,OAAO,UAAU,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;KAC7B;;;;;IAUD,MAAM,CAAC,IAAU;QACf,OAAO,IAAI,CAAC,QAAQ,EAAE,KAAK,IAAI,CAAC,QAAQ,EAAE,CAAC;KAC5C;;;;IAED,QAAQ;QACN,OAAO,IAAI,CAAC,KAAK,CAAC;KACnB;;;;IAED,MAAM;QACJ,OAAO,IAAI,CAAC,KAAK,CAAC;KACnB;;AAnCsB,UAAK,GAAG,sCAAsC,CAAC;;;;;;ACTxE,MAAa,gBAAgB;IAA7B;QAME,cAAS,GAAU,EAAE,CAAC;KA0BvB;;;;IAxBC,IAAI,MAAM;QACR,OAAO,IAAI,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC;KACjC;;;;IAED,IAAI,OAAO;QACT,OAAO,IAAI,CAAC,iBAAiB,CAAC;KAC/B;;;;;IAED,IAAI,OAAO,CAAC,KAAc;QACxB,IAAI,CAAC,iBAAiB,GAAG,KAAK,CAAC;QAC/B,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC;KACjB;;;;;IAED,GAAG,CAAC,KAAuB;QACzB,IAAI,KAAK,CAAC,MAAM,EAAE;YAChB,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;SACrB;QAED,IAAI,KAAK,CAAC,MAAM,EAAE;YAChB,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;SACpB;QAED,OAAO,IAAI,CAAC;KACb;CACF;;;;;;AChCD;IAGI,OAAO,GAAG,CAAC;;;;AAEf,MAAa,eAAe;;;;;IAU1B,YAAY,WAAmB,EAAE,SAAmC;QAN5D,cAAS,GAAyB,EAAE,CAAC;QAO3C,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC;QAC/B,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;QAC3B,IAAI,CAAC,EAAE,GAAG,OAAO,EAAE,CAAC;KACrB;;;;;IAED,KAAK,CAAC,EAAU;QACd,IAAI,CAAC,EAAE,GAAG,EAAE,CAAC;QACb,OAAO,IAAI,CAAC;KACb;;;;;IAED,OAAO,CAAC,WAAmB;QACzB,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC;QAC/B,OAAO,IAAI,CAAC;KACb;;;;;IAED,IAAI,CAAC,SAAiC;QACpC,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;QAC3B,OAAO,IAAI,CAAC;KACb;;;;;IAED,IAAI,CAAC,SAAiC;QACpC,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;QAC3B,OAAO,IAAI,CAAC;KACb;;;;;IAED,IAAI,CAAC,SAAiC;QACpC,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;QAC3B,OAAO,IAAI,CAAC;KACb;;;;;IAED,MAAM,CAAC,WAAmC;QACxC,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC;QAC/B,OAAO,IAAI,CAAC;KACb;;;;;IAED,GAAG,CAAC,GAAG,WAAiC;QACtC,WAAW,CAAC,OAAO;;;;QAAC,KAAK,IAAI,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,EAAC,CAAC;QACzD,OAAO,IAAI,CAAC;KACb;;;;;IAED,KAAK,CAAC,MAAS;;cACP,MAAM,GAAG,IAAI,gBAAgB,EAAE;QAErC,IAAI,IAAI,CAAC,WAAW,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,EAAE;YACjD,MAAM,CAAC,OAAO,GAAG,IAAI,CAAC;YACtB,OAAO,MAAM,CAAC;SACf;QAED,IAAI,IAAI,CAAC,SAAS,EAAE;YAClB,MAAM,CAAC,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;SACxC;QAED,IAAI,IAAI,CAAC,SAAS,EAAE;YAClB,MAAM,CAAC,MAAM,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;SACzC;QAED,IAAI,IAAI,CAAC,SAAS,EAAE;YAClB,MAAM,CAAC,MAAM,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;SACzC;QAED,IAAI,IAAI,CAAC,SAAS,EAAE;YAClB,IAAI,CAAC,SAAS,CAAC,OAAO;;;;YAAC,CAAC;;sBAChB,WAAW,GAAG,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC;gBACnC,MAAM,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC;aACzB,EAAC,CAAC;SACJ;QAED,OAAO,MAAM,CAAC;KACf;CACF;;;;;;;;;ICvEY,SAAS;;;MAAT,SAAS;CACrB,CAAA;;YALA,UAAU,SAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;AAEY,SAAS;IADrB,UAAU,CAAC,WAAW,CAAC;GACX,SAAS,CACrB;;;;;;;ACfD,MAAa,YAAY,GAAG,IAAI;;AAChC,MAAa,aAAa,GAAG,GAAG;;;;;;MCoBnB,YAAY;;;YAbxB,QAAQ,SAAC;gBACR,OAAO,EAAE;oBACP,YAAY;oBACZ,aAAa;iBACd;gBACD,YAAY,EAAE,EACb;gBACD,OAAO,EAAE,EACR;gBACD,SAAS,EAAE,EACV;gBACD,OAAO,EAAE,CAAC,sBAAsB,CAAC;aAClC;;;;;;;;;;;;ACdD,SAAgB,KAAK,CAAC,IAAW,EAAE,GAAG,UAAoB;UAClD,CAAC,SAAS,CAAC,GAAG,IAAI;;QACpB,GAAG,GAAG,EAAE;IAEZ,IAAI,SAAS,EAAE;;;QAGb,UAAU,GAAG,UAAU,IAAI,UAAU,CAAC,MAAM;cACxC,UAAU;cACV,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,CAAC;;cAE5B,MAAM,GAAG,GAAG,UAAU,CAAC,IAAI,CAAC,aAAa,CAAC,EAAE;;cAC5C,QAAQ,GAAG,IAAI,CAAC,GAAG;;;;QAAC,KAAK;;kBACvB,MAAM,GAAG,UAAU,CAAC,GAAG;;;;YAAC,QAAQ;;sBAC9B,KAAK,GAAG,KAAK,CAAC,QAAQ,CAAC;;sBACvB,gBAAgB,GAAG,SAAS,CAAC,KAAK,CAAC;gBACzC,OAAO,gBAAgB,GAAG,KAAK,GAAG,EAAE,CAAC;aACtC,EAAC;YAEF,OAAO,MAAM,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;SACnC,EAAC;QAEF,GAAG,GAAG,GAAG,MAAM,GAAG,YAAY,GAAG,QAAQ,CAAC,IAAI,CAAC,YAAY,CAAC,EAAE,CAAC;KAChE;IAED,OAAO,GAAG,CAAC;CACZ;;;;;;;;;;AC7BD,SAAgB,MAAM,CAAC,QAAkB;IACvC,OAAO,OAAO,CACZ,QAAQ;WACL,QAAQ,CAAC,IAAI;WACb,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC;aACrB,WAAW,EAAE;aACb,QAAQ,CAAC,YAAY,CAAC,CAC1B,CAAC;CACH;;;;;;ACXD;;;;AAGA,SAAgB,eAAe,CAAC,IAA+B;IAC7D,OAAO,OAAO,CACZ,IAAI;WACD,IAAI,CAAC,MAAM;WACX,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;WAChB,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CACvB,CAAC;CACH;;;;;;;;;;ACDD,SAAgB,gBAAgB,CAAC,IAAkB;IACjD,IAAI,OAAO,CAAC,IAAI,CAAC,EAAE;;cACX,WAAW,uBAAI,IAAI,GAAU;QACnC,OAAO,eAAe,CAAC,WAAW,CAAC;cAC/B,WAAW;cACX,CAAC,WAAW,CAAC,CAAC;KACnB;SAAM;;cACC,YAAY,sBAAG,IAAI,EAAgC;QACzD,OAAO,YAAY,CAAC,IAAI,KAAK,YAAY;cACrC,CAAC,YAAY,CAAC,WAAW,CAAC;cAC1B,YAAY,CAAC,WAAW,CAAC;KAC9B;CACF;;;;;;AChBD;;;;AAGA,SAAgB,WAAW,CAAC,IAAkB;;UACtC,eAAe,GAAe,EAAE;;UAChC,WAAW,GAAiB,gBAAgB,CAAC,IAAI,CAAC;IACxD,WAAW,CAAC,OAAO;;;;IAAC,CAAC,IAAgB;QACnC,IAAI,CAAC,OAAO;;;;QAAC,CAAC,QAAkB;YAC9B,eAAe,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;SAChC,EAAC,CAAC;KACJ,EAAC,CAAC;IAEH,OAAO,eAAe,CAAC;CACxB;;;;;;;;;;ACfD,SAAgB,OAAO,CAAC,QAAkB;IACxC,OAAO,QAAQ,IAAI,QAAQ,CAAC,IAAI;UAC5B,QAAQ,CAAC,IAAI,KAAK,OAAO,IAAI,QAAQ,CAAC,IAAI,KAAK,YAAY;UAC3D,KAAK,CAAC;CACX;;;;;;ACFD;;;;AAGA,SAAgB,gBAAgB,CAAC,KAAe;;UACxC,WAAW,GAAG,OAAO,CAAC,KAAK,CAAC;8BAC7B,KAAK;UACN,oBAAC,KAAK,IAAwB,WAAW;IAE7C,OAAO,OAAO,CACZ,WAAW;WACR,WAAW,CAAC,MAAM;WAClB,OAAO,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,CAC3B,CAAC;CACH;;;;;;ACbD;;;;AAIA,SAAgB,gBAAgB,CAAC,KAAe;;UACxC,WAAW,GAA0B,OAAO,CAAC,KAAK,CAAC;8BACpD,KAAK;UACN,oBAAC,KAAK,IAAwB,WAAW;IAE7C,OAAO,gBAAgB,CAAC,WAAW,CAAC;6BAChC,WAAW;UACX,oBAAC,WAAW,GAAa,CAAC;CAC/B;;;;;;;;;;ACdD,SAAgB,SAAS,CAAC,QAAkB;IAC1C,OAAO,QAAQ,IAAI,QAAQ,CAAC,IAAI;UAC5B,QAAQ,CAAC,IAAI,KAAK,SAAS,IAAI,QAAQ,CAAC,IAAI,KAAK,cAAc;UAC/D,KAAK,CAAC;CACX;;;;;;;;;;;ACKD,SAAgB,aAAa,CAAC,QAAkB,EAAE,GAAG,oBAA8B;;UAC3E,UAAU,GAAG,EAAE;;QACjB,SAAS,GAAe,EAAE;IAE9B,IAAI,MAAM,CAAC,QAAQ,CAAC,EAAE;QACpB,SAAS,GAAG,WAAW,oBAAC,QAAQ,GAAe,CAAC;KACjD;SAAM,IAAI,OAAO,CAAC,QAAQ,CAAC,EAAE;QAC5B,SAAS,GAAG,gBAAgB,oBAAC,QAAQ,GAAU,CAAC;KACjD;SAAM,IAAI,SAAS,CAAC,QAAQ,CAAC,EAAE;;cACxB,OAAO,sBAAG,QAAQ,EAAW;QACnC,SAAS,GAAG,WAAW,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC;KAC9C;SAAM;QACL,MAAM,IAAI,KAAK,CAAC,+CAA+C,CAAC,CAAC;KAClE;IAED,SAAS,CAAC,GAAG;;;;IAAC,QAAQ;;cACd,IAAI,GAAG,EAAE;QACf,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAEtB,IAAI,CAAC,oBAAoB,IAAI,CAAC,oBAAoB,CAAC,MAAM,EAAE;YACzD,oBAAoB,GAAG,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;YAElC,IAAI,QAAQ,CAAC,MAAM,GAAG,CAAC,EAAE;gBACvB,oBAAoB,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;aAChC;YAED,IAAI,QAAQ,CAAC,MAAM,GAAG,CAAC,EAAE;gBACvB,oBAAoB,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;aAChC;SACF;QAED,oBAAoB,CAAC,OAAO;;;;;QAAC,CAAC,IAAY,EAAE,KAAa;YACvD,IAAI,CAAC,IAAI,CAAC,GAAG,QAAQ,CAAC,KAAK,CAAC,CAAC;SAC9B,EAAC,CAAC;KACJ,EAAC,CAAC;IAEH,OAAO,KAAK,CAAC,UAAU,CAAC,CAAC;CAC1B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACjDD,MAAa,mCAAmC,GAAG,WAAW;;;;;;;;;ICYjD,gBAAgB;;;MAAhB,gBAAiB,SAAQ,cAAc;IAJpD;;QAKE,wBAAmB,GAAG,uBAAuB,CAAC;QAC9C,mBAAc,GAAG,8BAA8B,CAAC;QAChD,oBAAe,GAAG,gEAAgE,CAAC;QACnF,wBAAmB,GAAG,2DAA2D,CAAC;QAClF,qBAAgB,GAAG,2CAA2C,CAAC;QAC/D,uBAAkB,GAAG,kCAAkC,CAAC;QACxD,wBAAmB,GAAG,+BAA+B,CAAC;QACtD,qBAAgB,GAAG,KAAK,CAAC;KAC1B;CAAA,CAAA;;YAbA,UAAU,SAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;AAEY,gBAAgB;IAD5B,UAAU,CAAC,kBAAkB,CAAC;GAClB,gBAAgB,CAS5B;;;;;;MCDY,qBAAsB,SAAQ,wBAAwC;;;;;IACjF,YAAsB,IAAgB,EAAU,QAA0B;QACxE,KAAK,CAAC,IAAI,EAAE;YACV,GAAG,EAAE,QAAQ,CAAC,UAAU;SACzB,CAAC,CAAC;QAHiB,SAAI,GAAJ,IAAI,CAAY;QAAU,aAAQ,GAAR,QAAQ,CAAkB;KAIzE;;;;;;IAED,UAAU,CAAC,IAAmB,EAAE,MAAmB;QACjD,IAAI,CAAC,IAAI,EAAE;YACT,MAAM,IAAI,KAAK,CAAC,mDAAmD,CAAC,CAAC;SACtE;aAAM,IAAI,CAAC,IAAI,CAAC,YAAY,EAAE;YAC7B,MAAM,IAAI,KAAK,CAAC,uDAAuD,CAAC,CAAC;SAC1E;;cAEK,GAAG,GAAG,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,YAAY,EAAE,IAAI,CAAC,QAAQ,CAAC,kBAAkB,EAAE,EAAE,CAAC;QACtF,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAmB,GAAG,EAAE,IAAI,EAAE,EAAE,MAAM,EAAE,CAAC,CAAC;KAChE;;;;;;;;;IAED,YAAY,CACV,YAAoB,EACpB,KAAa,EACb,OAAgB,EAChB,OAAgB,EAChB,MAAmB;;cAEb,GAAG,GAAG,IAAI,CAAC,YAAY,CAAC,YAAY,EAAE,IAAI,CAAC,QAAQ,CAAC,gBAAgB,EAAE,EAAE,KAAK,EAAE,CAAC;QACtF,MAAM,GAAG,CAAC,MAAM,IAAI,IAAI,UAAU,EAAE;aACjC,GAAG,CAAC,SAAS,EAAE,OAAO,IAAI,iBAAiB,CAAC,CAAC;QAEhD,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAmB,GAAG,EAAE,OAAO,EAAE,EAAE,MAAM,EAAE,CAAC,CAAC;KACnE;;;YAjCF,UAAU,SAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;YAjBQ,UAAU;YAQV,gBAAgB;;;;;;;;;;ICTvB,OAAQ,OAAO;IACf,OAAQ,OAAO;IACf,OAAQ,OAAO;IACf,MAAO,MAAM;;;;;;;ACJf;;;;;AAMA,SAAgB,gBAAgB,CAAC,KAAS,EAAE,UAAU,GAAG,IAAI;;QACvD,WAAW;IACf,IAAI,UAAU,CAAC,KAAK,CAAC,EAAE;QACrB,WAAW,GAAG,EAAE,CAAC;KAClB;SAAM,IAAI,QAAQ,CAAC,KAAK,CAAC,IAAI,OAAO,CAAC,KAAK,CAAC,EAAE;QAC5C,WAAW,GAAG,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;KACrC;SAAM;QACL,WAAW,GAAG,KAAK,CAAC,QAAQ,EAAE,CAAC;KAChC;IAED,OAAO,OAAO,CAAC,WAAW,CAAC,IAAI,UAAU;QACvC,kBAAkB,CAAC,WAAW,CAAC;UAC7B,WAAW,CAAC;CACjB;;;;;;;ACnBD,MAAa,wBAAwB,GAAG,MAAM;;AAC9C,MAAa,wBAAwB,GAAG,YAAY;;;;;;MCoBvC,iBAAkB,SAAQ,mBAA+B;;;;;IACpE,YAAsB,IAAgB,EAAE,QAA0B;QAChE,KAAK,CAAC,IAAI,EAAE;YACV,GAAG,EAAE,QAAQ,CAAC,UAAU;YACxB,aAAa,EAAE,QAAQ,CAAC,mBAAmB;YAC3C,WAAW,EAAE,QAAQ,CAAC,mBAAmB;YACzC,cAAc,EAAE,QAAQ,CAAC,mBAAmB;YAC5C,cAAc,EAAE,QAAQ,CAAC,mBAAmB;YAC5C,cAAc,EAAE,QAAQ,CAAC,mBAAmB;SAC7C,CAAC,CAAC;QARiB,SAAI,GAAJ,IAAI,CAAY;KASrC;;;;;;;IAED,MAAM,CAAC,UAAsB,EAAE,WAAiB,EAAE,MAAmB;;cAC7D,GAAG,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,cAAc,EAAE,WAAW,CAAC;;cAC1D,QAAQ,GAAa,IAAI,QAAQ,EAAE;;YACrC,QAAuB;QAE3B,IAAI,UAAU,CAAC,IAAI,KAAK,cAAc,CAAC,KAAK,IAAI,QAAQ,CAAC,UAAU,CAAC,IAAI,CAAC,EAAE;YACzE,QAAQ,GAAG,YAAY,oBAAC,UAAU,CAAC,IAAI,GAAW,CAAC;SACpD;aAAM,IAAI,UAAU,CAAC,IAAI,KAAK,cAAc,CAAC,IAAI,EAAE;YAClD,QAAQ,GAAG,IAAI,IAAI,CAAC,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC;SACxC;aAAM;YACL,QAAQ,sBAAG,UAAU,CAAC,IAAI,EAAQ,CAAC;SACpC;QAED,OAAO,UAAU,CAAC,IAAI,CAAC;QACvB,QAAQ,CAAC,MAAM,CAAC,wBAAwB,EAAE,QAAQ,CAAC,CAAC;QACpD,QAAQ,CAAC,MAAM,CAAC,wBAAwB,EAAE,gBAAgB,CAAC,UAAU,CAAC,CAAC,CAAC;QAExE,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAa,GAAG,EAAE,QAAQ,EAAE,EAAE,MAAM,EAAE,cAAc,EAAE,IAAI,EAAE,CAAC,CAAC;KACpF;;;;;;;IAED,QAAQ,CAAC,YAAoB,EAAE,WAAiB,EAAE,MAAmB;;;QAGnE,MAAM,IAAI,KAAK,CAAC,qBAAqB,CAAC,CAAC;KACxC;;;YAvCF,UAAU,SAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;YAlBQ,UAAU;YAOV,gBAAgB;;;;;;;;;;;;;;;;;;;;ICRvB,WAAY,uBAAuB;IACnC,SAAU,oBAAoB;IAC9B,mBAAoB,6BAA6B;IACjD,QAAS,iCAAiC;IAC1C,cAAe,oBAAoB;;;;;;;;;;;;;;;;;ACLrC;AAIA,MAAa,uBAAuB,GAAG,KAAK;;AAC5C,MAAa,qBAAqB,GAAyB;IACzD,EAAE,KAAK,EAAE,YAAY,EAAE,QAAQ,EAAE,sBAAsB,CAAC,SAAS,EAAE,QAAQ,EAAE,IAAI,EAAE,oBAAoB,EAAE,IAAI,EAAE;IAC/G,EAAE,KAAK,EAAE,QAAQ,EAAE,QAAQ,EAAE,sBAAsB,CAAC,OAAO,EAAE,QAAQ,EAAE,KAAK,EAAE,oBAAoB,EAAE,IAAI,EAAE;IAC1G;QACE,KAAK,EAAE,4BAA4B;QACnC,QAAQ,EAAE,sBAAsB,CAAC,iBAAiB;QAClD,QAAQ,EAAE,IAAI;QACd,oBAAoB,EAAE,KAAK;KAC5B;IACD,EAAE,KAAK,EAAE,QAAQ,EAAE,QAAQ,EAAE,sBAAsB,CAAC,MAAM,EAAE,QAAQ,EAAE,KAAK,EAAE,oBAAoB,EAAE,KAAK,EAAE;IAC1G,EAAE,KAAK,EAAE,QAAQ,EAAE,QAAQ,EAAE,sBAAsB,CAAC,YAAY,EAAE,QAAQ,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,oBAAoB,EAAE,KAAK,EAAE;CAC9H;;AAED,MAAa,oBAAoB,GAAuF;IACtH;QACE,IAAI,EAAE,uBAAuB;QAC7B,YAAY,EAAE,sBAAsB,CAAC,SAAS;QAC9C,gBAAgB,EAAE,iFAAiF;cAC/F,yEAAyE;KAC9E;IACD;QACE,IAAI,EAAE,wCAAwC;QAC9C,YAAY,EAAE,sBAAsB,CAAC,iBAAiB;QACtD,gBAAgB,EAAE,sEAAsE;KACzF;IACD;QACE,IAAI,EAAE,QAAQ;QACd,YAAY,EAAE,sBAAsB,CAAC,OAAO;QAC5C,gBAAgB,EAAE,4DAA4D;KAC/E;IACD;QACE,IAAI,EAAE,6CAA6C;QACnD,YAAY,EAAE,sBAAsB,CAAC,MAAM;QAC3C,gBAAgB,EAAE,gEAAgE;cAC9E,6FAA6F;cAC7F,2CAA2C;KAChD;IACD;QACE,IAAI,EAAE,0CAA0C;QAChD,YAAY,EAAE,sBAAsB,CAAC,MAAM;QAC3C,gBAAgB,EAAE,mEAAmE;KACtF;IACD;QACE,IAAI,EAAE,6CAA6C;QACnD,YAAY,EAAE,sBAAsB,CAAC,YAAY;QACjD,gBAAgB,EAAE,gEAAgE;cAC9E,6FAA6F;cAC7F,2CAA2C;KAChD;IACD;QACE,IAAI,EAAE,0CAA0C;QAChD,YAAY,EAAE,sBAAsB,CAAC,YAAY;QACjD,gBAAgB,EAAE,mEAAmE;KACtF;CACF;;;;;;MCnCY,iBAAkB,SAAQ,mBAA+B;;;;;IACpE,YAAsB,IAAgB,EAAU,QAA0B;QACxE,KAAK,CAAC,IAAI,EAAE;YACV,GAAG,EAAE,QAAQ,CAAC,UAAU;YACxB,aAAa,EAAE,QAAQ,CAAC,mBAAmB;YAC3C,WAAW,EAAE,QAAQ,CAAC,mBAAmB;YACzC,cAAc,EAAE,QAAQ,CAAC,mBAAmB;YAC5C,cAAc,EAAE,QAAQ,CAAC,mBAAmB;YAC5C,cAAc,EAAE,QAAQ,CAAC,mBAAmB;SAC7C,CAAC,CAAC;QARiB,SAAI,GAAJ,IAAI,CAAY;QAAU,aAAQ,GAAR,QAAQ,CAAkB;KASzE;;;;;;;IAED,cAAc,CAAC,MAAkB,EAAE,kBAA2B,EAAE,MAAmB;QACjF,MAAM,IAAI,KAAK,CAAC,qBAAqB,CAAC,CAAC;KACxC;;;;;;IAED,sBAAsB,CAAC,EAAU,EAAE,MAAmB;QACpD,MAAM,IAAI,KAAK,CAAC,qBAAqB,CAAC,CAAC;KACxC;;;;;;;IAGD,SAAS,CAAC,YAAoB,EAAE,MAAmB;;cAC3C,GAAG,GAAG,IAAI,CAAC,YAAY,CAAC,YAAY,EAAE,IAAI,CAAC,QAAQ,CAAC,cAAc,EAAE,EAAE,CAAC;QAC7E,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAkB,GAAG,EAAE,EAAE,MAAM,EAAE,CAAC,CAAC;KACxD;;;;;;;IAGD,eAAe,CAAC,YAAoB,EAAE,MAAmB;;cACjD,GAAG,GAAG,IAAI,CAAC,YAAY,CAAC,YAAY,EAAE,IAAI,CAAC,QAAQ,CAAC,mBAAmB,EAAE;YAC7E,MAAM,EAAE,SAAS;SAClB,CAAC;QAEF,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAY,GAAG,EAAE,EAAE,MAAM,EAAE,CAAC,CAAC;KAClD;;;;;;;;IAGD,UAAU,CAAC,YAAoB,EAAE,KAAa,EAAE,MAAmB;;cAC3D,GAAG,GAAG,IAAI,CAAC,YAAY,CAAC,YAAY,EAAE,IAAI,CAAC,QAAQ,CAAC,eAAe,EAAE,EAAE,KAAK,EAAE,CAAC;QAErF,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAe,GAAG,EAAE,EAAE,MAAM,EAAE,CAAC,CAAC;KACrD;;;;;;;;;;;IAGD,eAAe,CAAI,YAAoB,EAAE,KAAa,EAAE,MAAc,EAAE,SAAkB,KAAK,EAAE,MAAmB;;cAC5G,GAAG,GAAG,IAAI,CAAC,YAAY,CAAC,YAAY,EAAE,IAAI,CAAC,QAAQ,CAAC,eAAe,EAAE;YACzE,KAAK;YACL,MAAM;YACN,MAAM,EAAE,QAAQ;SACjB,CAAC;QACF,MAAM,GAAG,CAAC,MAAM,IAAI,IAAI,UAAU,EAAE,EAAE,GAAG,CAAC,QAAQ,EAAE,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC;QAEpE,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAM,GAAG,EAAE,EAAE,MAAM,EAAE,CAAC,CAAC;KAC5C;;;;;;;;;;IAGD,qBAAqB,CAAI,YAAoB,EAAE,KAAa,EAAE,MAAc,EAAE,MAAmB;QAC/F,OAAO,IAAI,CAAC,eAAe,CAAI,YAAY,EAAE,KAAK,EAAE,MAAM,EAAE,IAAI,EAAE,MAAM,CAAC,CAAC;KAC3E;;;;;;;;;;IAGD,cAAc,CACZ,YAAoB,EACpB,KAAa,EACb,cAAsB,uBAAuB,EAC7C,OAAgB,EAChB,MAAmB;;cAEb,GAAG,GAAG,IAAI,CAAC,YAAY,CAAC,YAAY,EAAE,IAAI,CAAC,QAAQ,CAAC,mBAAmB,EAAE;YAC7E,KAAK;YACL,MAAM,EAAE,OAAO;SAChB,CAAC;QAEF,MAAM,GAAG,CAAC,MAAM,IAAI,IAAI,UAAU,EAAE;aACjC,GAAG,CAAC,OAAO,EAAE,WAAW,CAAC;aACzB,GAAG,CAAC,SAAS,EAAE,OAAO,IAAI,iBAAiB,CAAC,CAAC;QAEhD,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAS,GAAG,EAAE,EAAE,MAAM,EAAE,CAAC,CAAC;KAC/C;;;;;;;;;;;;;;IAGD,SAAS,CACP,YAAoB,EACpB,KAAa,EACb,WAAmB,EACnB,OAAgB,EAChB,IAAa,EACb,QAAiB,EACjB,eAAyB,EACzB,UAAmB,EACnB,MAAmB;QAEnB,OAAO,IAAI,CAAC,gBAAgB,CAC1B,YAAY,EACZ,KAAK,EACL,WAAW,EACX,OAAO,EACP,IAAI,EACJ,QAAQ,EACR,eAAe,EACf,UAAU,EACV,MAAM,EACN,MAAM,CACP,CAAC;KACH;;;;;;;;;;;;;IAED,gBAAgB,CACd,YAAoB,EACpB,KAAa,EACb,WAAmB,EACnB,OAAgB,EAChB,IAAa,EACb,QAAiB,EACjB,eAAyB,EACzB,UAAmB,EACnB,MAAmB;QAEnB,OAAO,IAAI,CAAC,gBAAgB,CAC1B,YAAY,EACZ,KAAK,EACL,WAAW,EACX,OAAO,EACP,IAAI,EACJ,QAAQ,EACR,eAAe,EACf,UAAU,EACV,SAAS,EACT,MAAM,CACP,CAAC;KACH;;;;;;;;;;;;;;;IAED,gBAAgB,CACd,YAAoB,EACpB,KAAa,EACb,WAAmB,EACnB,OAAgB,EAChB,IAAa,EACb,QAAiB,EACjB,eAAyB,EACzB,UAAmB,EACnB,MAAsC,EACtC,MAAmB;;cAEb,GAAG,GAAG,IAAI,CAAC,YAAY,CAAC,YAAY,EAAE,IAAI,CAAC,QAAQ,CAAC,mBAAmB,EAAE;YAC7E,KAAK;YACL,MAAM,EAAE,eAAe;SACxB,CAAC;QAEF,MAAM,GAAG,CAAC,MAAM,IAAI,IAAI,UAAU,EAAE;aACjC,GAAG,CAAC,OAAO,EAAE,WAAW,IAAI,iBAAiB,CAAC;aAC9C,GAAG,CAAC,SAAS,EAAE,OAAO,IAAI,iBAAiB,CAAC;aAC5C,GAAG,CAAC,MAAM,EAAE,OAAO,CAAC,IAAI,CAAC,GAAG,MAAM,CAAC,IAAI,CAAC,GAAG,iBAAiB,CAAC;aAC7D,GAAG,CAAC,UAAU,EAAE,OAAO,CAAC,QAAQ,CAAC,GAAG,MAAM,CAAC,QAAQ,CAAC,GAAG,iBAAiB,CAAC;aACzE,GAAG,CAAC,iBAAiB,EAAE,OAAO,CAAC,eAAe,CAAC,GAAG,MAAM,CAAC,eAAe,CAAC,GAAG,iBAAiB,CAAC;aAC9F,GAAG,CAAC,YAAY,EAAE,UAAU,IAAI,iBAAiB,CAAC;aAClD,GAAG,CAAC,QAAQ,EAAE,MAAM,IAAI,iBAAiB,CAAC,CAAC;QAE9C,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAI,GAAG,EAAE,EAAE,MAAM,EAAE,CAAC,CAAC;KAC1C;;;YAhKF,UAAU,SAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;YAtBQ,UAAU;YAQV,gBAAgB;;;;;;;;;;;;;;;;;;;;;;ACNzB,SAAgB,cAAc,CAAC,SAAiB;IAC9C,OAAO,CAAC,SAAS,IAAI,EAAE,EAAE,KAAK,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;CAClD;;;;;;ACJD;;;;AAGA,SAAgB,eAAe,CAAC,UAA+B;;QACzD,YAAY;IAChB,IAAI,QAAQ,CAAC,UAAU,CAAC,EAAE;QACxB,YAAY,sBAAG,UAAU,EAAU,CAAC;KACrC;SAAM;;cACC,GAAG,sBAAG,UAAU,EAAc;QACpC,IAAI,GAAG,EAAE;YACP,YAAY,GAAG,GAAG,CAAC,EAAE,CAAC;SACvB;KACF;IAED,OAAO,YAAY,CAAC;CACrB;;;;;;AChBD;;;;AAGA,SAAgB,gBAAgB,CAAC,YAAoC;IACnE,OAAO,YAAY,KAAK,sBAAsB,CAAC,MAAM,IAAI,YAAY,KAAK,sBAAsB,CAAC,YAAY,CAAC;CAC/G;;;;;;ACLD;;;;AAKA,SAAgB,wBAAwB,CAAC,YAAoC;IAC3E,IAAI,CAAC,YAAY,EAAE;QACjB,OAAO,8BAA8B,CAAC;KACvC;SAAM,IAAI,gBAAgB,CAAC,YAAY,CAAC,EAAE;QACzC,OAAO,kBAAkB,CAAC;KAC3B;SAAM;QACL,OAAO,mBAAmB,CAAC;KAC5B;CACF;;;;;;ACbD;;;;AAGA,SAAgB,oBAAoB,CAAC,YAAoC;IACvE,OAAO,YAAY,KAAK,sBAAsB,CAAC,SAAS;WACnD,YAAY,KAAK,sBAAsB,CAAC,MAAM;WAC9C,YAAY,KAAK,sBAAsB,CAAC,YAAY,CAAC;CAC3D;;;;;;;ACPD,MAAa,uBAAuB,GAAG,MAAM;;;;;;;;;;;;;;;;;;;;;ACA7C;AA8CA,MAAa,cAAc,GAAc,IAAI;;AAC7C,MAAa,qBAAqB,GAAc,WAAW;;AAC3D,MAAa,iBAAiB,GAAc,QAAQ;;AACpD,MAAa,iBAAiB,GAAc,QAAQ;;AACpD,MAAa,cAAc,GAAc,KAAK;;AAC9C,MAAa,eAAe,GAAc,MAAM;;AAChD,MAAa,eAAe,GAAc,MAAM;;AAChD,MAAa,iBAAiB,GAAc,QAAQ;;AACpD,MAAa,eAAe,GAAc,MAAM;;AAChD,MAAa,mBAAmB,GAAc,UAAU;;AACxD,MAAa,mBAAmB,GAAc,UAAU;;AACxD,MAAa,kBAAkB,GAAc,SAAS;;AACtD,MAAa,iBAAiB,GAAc,QAAQ;;AACpD,MAAa,iBAAiB,GAAc,QAAQ;;AACpD,MAAa,wBAAwB,GAAc,KAAK;;AAExD,MAAa,mBAAmB,GAAc,kBAAkB;;AAChE,MAAa,sBAAsB,GAAc,qBAAqB;;AACtE,MAAa,sBAAsB,GAAc,qBAAqB;;AACtE,MAAa,mBAAmB,GAAc,kBAAkB;;AAChE,MAAa,oBAAoB,GAAc,mBAAmB;;AAClE,MAAa,oBAAoB,GAAc,mBAAmB;;AAClE,MAAa,sBAAsB,GAAc,qBAAqB;;AACtE,MAAa,oBAAoB,GAAc,mBAAmB;;AAClE,MAAa,wBAAwB,GAAc,uBAAuB;;AAC1E,MAAa,wBAAwB,GAAc,uBAAuB;;AAC1E,MAAa,uBAAuB,GAAc,sBAAsB;;AACxE,MAAa,sBAAsB,GAAc,qBAAqB;;AACtE,MAAa,sBAAsB,GAAc,qBAAqB;;AACtE,MAAa,6BAA6B,GAAc,2BAA2B;;AAEnF,MAAa,cAAc,GAAoB;IAC7C,EAAE,KAAK,EAAE,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE,KAAK,EAAE,CAAC,cAAc,EAAE,mBAAmB,CAAC,EAAE;IAC9E,EAAE,KAAK,EAAE,IAAI,EAAE,SAAS,EAAE,KAAK,EAAE,KAAK,EAAE,CAAC,qBAAqB,CAAC,EAAE;IACjE,EAAE,KAAK,EAAE,QAAQ,EAAE,SAAS,EAAE,KAAK,EAAE,KAAK,EAAE,CAAC,iBAAiB,EAAE,sBAAsB,CAAC,EAAE;IACzF,EAAE,KAAK,EAAE,QAAQ,EAAE,SAAS,EAAE,IAAI,EAAE,KAAK,EAAE,CAAC,iBAAiB,EAAE,sBAAsB,CAAC,EAAE;IACxF,EAAE,KAAK,EAAE,QAAQ,EAAE,SAAS,EAAE,IAAI,EAAE,KAAK,EAAE,CAAC,iBAAiB,EAAE,sBAAsB,CAAC,EAAE;IACxF,EAAE,KAAK,EAAE,KAAK,EAAE,SAAS,EAAE,IAAI,EAAE,KAAK,EAAE,CAAC,kBAAkB,EAAE,uBAAuB,EAAE,6BAA6B,CAAC,EAAE;IACtH,EAAE,KAAK,EAAE,MAAM,EAAE,SAAS,EAAE,KAAK,EAAE,KAAK,EAAE,CAAC,eAAe,EAAE,oBAAoB,CAAC,EAAE;IACnF,EAAE,KAAK,EAAE,UAAU,EAAE,SAAS,EAAE,KAAK,EAAE,KAAK,EAAE,CAAC,mBAAmB,EAAE,wBAAwB,CAAC,EAAE;IAC/F,EAAE,KAAK,EAAE,KAAK,EAAE,SAAS,EAAE,KAAK,EAAE,KAAK,EAAE,CAAC,cAAc,EAAE,mBAAmB,CAAC,EAAE;IAChF,EAAE,KAAK,EAAE,MAAM,EAAE,SAAS,EAAE,KAAK,EAAE,KAAK,EAAE,CAAC,eAAe,EAAE,oBAAoB,CAAC,EAAE;IACnF,EAAE,KAAK,EAAE,MAAM,EAAE,SAAS,EAAE,KAAK,EAAE,KAAK,EAAE,CAAC,eAAe,EAAE,oBAAoB,CAAC,EAAE;IACnF,EAAE,KAAK,EAAE,UAAU,EAAE,SAAS,EAAE,KAAK,EAAE,KAAK,EAAE,CAAC,mBAAmB,EAAE,wBAAwB,CAAC,EAAE;IAC/F,EAAE,KAAK,EAAE,SAAS,EAAE,SAAS,EAAE,IAAI,EAAE,KAAK,EAAE,CAAC,kBAAkB,EAAE,uBAAuB,CAAC,EAAE;IAC3F,EAAE,KAAK,EAAE,QAAQ,EAAE,SAAS,EAAE,KAAK,EAAE,KAAK,EAAE,CAAC,iBAAiB,EAAE,sBAAsB,CAAC,EAAE;IACzF,EAAE,KAAK,EAAE,QAAQ,EAAE,SAAS,EAAE,KAAK,EAAE,KAAK,EAAE,CAAC,iBAAiB,EAAE,sBAAsB,CAAC,EAAE;CAC1F;;;;;AAQD,SAAgB,mBAAmB,CAAC,SAAoB;IACtD,OAAO,SAAS,KAAK,uBAAuB,IAAI,SAAS,KAAK,UAAU,CAAC;CAC1E;;;;;AAED,SAAgB,cAAc,CAAC,SAAoB;IACjD,OAAO,SAAS,KAAK,kBAAkB,IAAI,SAAS,KAAK,IAAI,CAAC;CAC/D;;;;;AAED,SAAgB,gBAAgB,CAAC,MAAoB;IACnD,OAAO,CAAC,MAAM,IAAI,EAAE,EAAE,IAAI;;;;IAAC,CAAC,IAAI,mBAAmB,CAAC,CAAC,CAAC,IAAI,CAAC,EAAC,CAAC;CAC9D;;;;;AAED,SAAgB,oBAAoB,CAAC,MAAoB;;UACjD,KAAK,GAAG,gBAAgB,CAAC,MAAM,CAAC;IACtC,OAAO,KAAK,GAAG,KAAK,CAAC,IAAI,GAAG,IAAI,CAAC;CAClC;;;;;AAED,SAAgB,UAAU,CAAC,MAAoB;IAC7C,OAAO,CAAC,MAAM,IAAI,EAAE,EAAE,IAAI;;;;IAAC,CAAC,IAAI,cAAc,CAAC,CAAC,CAAC,IAAI,CAAC,EAAC,CAAC;CACzD;;;;;AAED,SAAgB,mBAAmB,CAAC,MAAoB;;UAChD,KAAK,GAAG,UAAU,CAAC,MAAM,CAAC;IAChC,OAAO,KAAK,GAAG,KAAK,CAAC,IAAI,GAAG,IAAI,CAAC;CAClC;;;;;AAED,SAAgB,iBAAiB,CAAC,qBAA6B;IAC7D,OAAO,SAAS,CAAC,qBAAqB,CAAC,CAAC;CACzC;;;;;AAED,SAAgB,WAAW,CAAC,KAA6B;IACvD,OAAO,QAAQ,CAAC,KAAK,CAAC;6BAClB,KAAK;UACL,oBAAC,KAAK,IAAgB,IAAI,CAAC;CAChC;;;;;AAED,SAAgB,WAAW,CAAC,KAA0B;IACpD,OAAO,QAAQ,CAAC,KAAK,CAAC,sBAAG,KAAK,KAAa,oBAAC,KAAK,IAAgB,IAAI,CAAC;CACvE;;;;;;AAED,SAAgB,QAAQ,CAAC,SAAiB,EAAE,MAAoB;IAC9D,OAAO,MAAM,CAAC,IAAI;;;;IAAC,CAAC,IAAI,CAAC,CAAC,IAAI,KAAK,SAAS,EAAC,IAAI,IAAI,CAAC;CACvD;;;;;;AAED,SAAgB,aAAa,CAAC,SAAiB,EAAE,MAAoB;;QAC/D,UAAU,GAAG,IAAI;;UACf,KAAK,GAAG,QAAQ,CAAC,SAAS,EAAE,MAAM,CAAC;IACzC,IAAI,KAAK,IAAI,KAAK,CAAC,KAAK,EAAE;QACxB,UAAU,GAAG,KAAK,CAAC,KAAK,CAAC;KAC1B;IAED,OAAO,UAAU,CAAC;CACnB;;;;;AAED,SAAgB,cAAc,CAAC,KAA6B;;UACpD,SAAS,GAAG,WAAW,CAAC,KAAK,CAAC;;UAC9B,KAAK,GAAG,cAAc;SACzB,MAAM;;;;IAAC,CAAC,IAAI,CAAC,CAAC,SAAS,EAAC;SACxB,IAAI;;;;IAAC,CAAC,IAAI,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,EAAC;IAE7C,OAAO,OAAO,CAAC,KAAK,CAAC,CAAC;CACvB;;;;;;AAED,SAAgB,mBAAmB,CAAC,KAA6B,EAAE,KAAU;;UACrE,SAAS,GAAG,WAAW,CAAC,KAAK,CAAC;IACpC,IAAI,cAAc,CAAC,SAAS,CAAC,IAAI,cAAc,CAAC,KAAK,CAAC,EAAE;QACtD,OAAO,KAAK,CAAC;KACd;IAED,OAAO,cAAc,CAAC,KAAK,CAAC,CAAC;CAC9B;;;;;;AC3KD;AAGA,MAAa,WAAW,GAAG,GAAG;;;IAE5B,QAAS,GAAG;IACZ,cAAe,IAAI;;;IAGnB,aAAc,GAAG;IACjB,UAAW,GAAG;IACd,kBAAmB,IAAI;IACvB,mBAAoB,IAAI;;;;IAIxB,IAAK,IAAI;IACT,KAAM,KAAK;IACX,IAAK,IAAI;IACT,MAAO,MAAM;IACb,SAAU,SAAS;;;;IAInB,UAAW,GAAG;IACd,MAAO,MAAM;;;;IAIb,iBAAkB,GAAG;IACrB,mBAAoB,GAAG;IACvB,aAAc,IAAI;;;;IAIlB,KAAM,KAAK;IACX,IAAK,IAAI;;;AAOX,MAAa,gCAAgC,GAAG;IAC9C,WAAW,EAAE,IAAI;CAClB;AAED,MAAa,kBAAkB;;;;IAI7B,YAAY,OAAmC;QAH9B,eAAU,GAAa,EAAE,CAAC;QAIzC,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,gCAAgC,EAAE,OAAO,CAAC,CAAC;KAC7E;;;;IAED,IAAI,aAAa;QACf,OAAO,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC;KAC/B;;;;;;;IAED,GAAG,CAAC,SAAiB;QACnB,mBAAA,IAAI,GAAC,UAAU,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QAChC,0BAAO,IAAI,GAAC;KACb;;;;;;;;IAED,UAAU,CAAC,KAAiB,EAAE,KAAU;QACtC,OAAO,KAAK,KAAK,IAAI;cACjB,mBAAA,IAAI,GAAC,WAAW,CAAC,KAAK,CAAC,IAAI,CAAC;cAC5B,mBAAA,IAAI,GAAC,KAAK,CAAC,KAAK,CAAC,IAAI,EAAE,gBAAgB,CAAC,MAAM,EAAE,KAAK,EAAE,mBAAmB,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC,CAAC;KAC/F;;;;;;;;IAED,SAAS,CAAC,KAAa,EAAE,KAAU;QACjC,OAAO,mBAAA,IAAI,GAAC,GAAG,CAAC,GAAG,mBAAA,IAAI,GAAC,WAAW,CAAC,KAAK,CAAC,IAAI,cAAc,CAAC,IAAI,MAAM,KAAK,IAAI,CAAC,CAAC;KACnF;;;;;;;;IAED,eAAe,CAAC,KAAa,EAAE,KAAU;QACvC,OAAO,mBAAA,IAAI,GAAC,GAAG,CAAC,GAAG,mBAAA,IAAI,GAAC,WAAW,CAAC,KAAK,CAAC,IAAI,cAAc,CAAC,IAAI,KAAK,KAAK,IAAI,CAAC,CAAC;KAClF;;;;;;;;IAED,aAAa,CAAC,KAAa,EAAE,KAAU;QACrC,OAAO,mBAAA,IAAI,GAAC,GAAG,CAAC,GAAG,mBAAA,IAAI,GAAC,WAAW,CAAC,KAAK,CAAC,IAAI,cAAc,CAAC,IAAI,MAAM,KAAK,GAAG,CAAC,CAAC;KAClF;;;;;;;;IAED,aAAa,CAAC,KAAiB,EAAE,KAAU;QACzC,OAAO,KAAK,KAAK,IAAI;cACjB,mBAAA,IAAI,GAAC,cAAc,CAAC,KAAK,CAAC,IAAI,CAAC;cAC/B,mBAAA,IAAI,GAAC,KAAK,CAAC,KAAK,CAAC,IAAI,EAAE,gBAAgB,CAAC,YAAY,EAAE,KAAK,EAAE,mBAAmB,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC,CAAC;KACrG;;;;;;;IAED,WAAW,CAAC,KAAa;QACvB,OAAO,mBAAA,IAAI,GAAC,GAAG,CAAC,GAAG,mBAAA,IAAI,GAAC,WAAW,CAAC,KAAK,CAAC,IAAI,cAAc,CAAC,EAAE,IAAI,aAAa,CAAC,IAAI,EAAE,CAAC,CAAC;KAC1F;;;;;;;IAED,cAAc,CAAC,KAAa;QAC1B,OAAO,mBAAA,IAAI,GAAC,GAAG,CAAC,GAAG,mBAAA,IAAI,GAAC,WAAW,CAAC,KAAK,CAAC,IAAI,cAAc,CAAC,EAAE,IAAI,cAAc,CAAC,GAAG,IAAI,aAAa,CAAC,IAAI,EAAE,CAAC,CAAC;KAChH;;;;;;;;;;IAED,KAAK,CAAC,KAAa,EAAE,QAA2C,EAAE,KAAU,EAAE,SAAS,GAAG,KAAK;QAC7F,KAAK,GAAG,SAAS,GAAG,KAAK,GAAG,IAAI,KAAK,GAAG,CAAC;QACzC,mBAAA,IAAI,GAAC,GAAG,CAAC,GAAG,mBAAA,IAAI,GAAC,WAAW,CAAC,KAAK,CAAC,GAAG,QAAQ,GAAG,KAAK,EAAE,CAAC,CAAC;QAC1D,0BAAO,IAAI,GAAC;KACb;;;;;;;;IAED,YAAY,CAAC,KAAa,EAAE,KAAU;QACpC,mBAAA,IAAI,GAAC,KAAK,CAAC,KAAK,EAAE,KAAK,EAAE,IAAI,CAAC,CAAC;QAC/B,0BAAO,IAAI,GAAC;KACb;;;;IAED,aAAa;QACX,OAAO,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,iBAAiB,CAAC,GAAG,GAAG,CAAC,CAAC;KAC3D;;;;IAED,QAAQ;QACN,OAAO,IAAI,CAAC,aAAa,EAAE,CAAC;KAC7B;;;;IAED,KAAK;QACH,IAAI,CAAC,UAAU,CAAC,MAAM,GAAG,CAAC,CAAC;KAC5B;;;;;;IAES,WAAW,CAAC,KAAa;QACjC,KAAK,GAAG,KAAK,IAAI,EAAE,CAAC;;cACd,SAAS,GAAG,IAAI,CAAC,OAAO,CAAC,WAAW;QAE1C,IAAI,SAAS,EAAE;YACb,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,WAAW,CAAC,EAAE;gBAClC,KAAK,GAAG,GAAG,WAAW,GAAG,KAAK,EAAE,CAAC;aAClC;YAED,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,WAAW,CAAC,EAAE;gBAChC,KAAK,GAAG,GAAG,KAAK,GAAG,WAAW,EAAE,CAAC;aAClC;SACF;aAAM;;kBACC,UAAU,GAAG,IAAI,MAAM,CAAC,WAAW,EAAE,GAAG,CAAC;YAC/C,OAAO,KAAK,CAAC,OAAO,CAAC,UAAU,EAAE,EAAE,CAAC,CAAC;SACtC;QAED,OAAO,KAAK,CAAC;KACd;CACF;;;;;;AC1ID;AAaA,MAAa,oCAAoC,GAAG,iCAAiC;;AACrF,MAAa,qCAAqC,GAAG,iCAAiC;;AACtF,MAAa,8BAA8B,GAAG,yEAAyE;MACnH,iEAAiE;;AACrE,MAAa,qCAAqC,GAAG,gEAAgE;;AACrH,MAAa,sCAAsC,GAAG,iEAAiE;MACnH,6GAA6G;MAC7G,4FAA4F;MAC5F,gIAAgI;;;;;;;;AAGpI,SAAgB,4BAA4B,CAC1C,iBAAyB,EACzB,eAAuB,EACvB,MAA+B,EAC/B,QAAe;IAEf,QAAQ,GAAG,SAAS,CAAC,QAAQ,IAAI,IAAI,IAAI,EAAE,CAAC,CAAC;IAC7C,uBAAuB,CAAC,QAAQ,CAAC,CAAC;;;;UAI5B,UAAU,GAAG,wBAAwB,CAAC,MAAM,CAAC;IAEnD,OAAO,MAAM,CAAC,8BAA8B,EAAE;QAC5C,iBAAiB;QACjB,eAAe;QACf,IAAI,EAAE,kBAAkB,CAAC,QAAQ,EAAE,UAAU,CAAC;QAC9C,YAAY,EAAE,kBAAkB,CAAC,QAAQ,EAAE,UAAU,CAAC;KACvD,CAAC,CAAC;CACJ;AAED,MAAa,qBAAsB,SAAQ,kBAAkB;;;;IAO3D,YAAY,OAAmC;QAC7C,KAAK,CAAC,OAAO,CAAC,CAAC;KAChB;;;;;;;IAED,cAAc,CAAC,UAAsB;QACnC,OAAO,mBAAA,IAAI,GAAC,gBAAgB,CAAC,UAAU,CAAC,YAAY,CAAC,CAAC;KACvD;;;;;;;IAED,gBAAgB,CAAC,YAAoC;QACnD,mBAAA,IAAI,GAAC,YAAY,GAAG,YAAY,CAAC;QACjC,0BAAO,IAAI,GAAC;KACb;;;;;;;IAED,cAAc,CAAC,UAAsB;QACnC,OAAO,mBAAA,IAAI,GACR,iBAAiB,CAAC,UAAU,CAAC;aAC7B,kBAAkB,CAAC,UAAU,CAAC,CAAC;KACnC;;;;;;;IAED,kBAAkB,CAAC,cAAiC;QAClD,mBAAA,IAAI,GAAC,cAAc,GAAG,cAAc,CAAC;QACrC,0BAAO,IAAI,GAAC;KACb;;;;;;;IAED,gBAAgB,CAAC,YAA0B;QACzC,OAAO,mBAAA,IAAI,GAAC,iBAAiB,CAAC,YAAY,CAAC,CAAC;KAC7C;;;;;;;IAED,iBAAiB,CAAC,aAA4B;QAC5C,mBAAA,IAAI,GAAC,aAAa,GAAG,aAAa,CAAC;QACnC,0BAAO,IAAI,GAAC;KACb;;;;;;;;IAED,WAAW,CAAC,OAAwB,EAAE,gBAAyB;QAC7D,OAAO,mBAAA,IAAI,GAAC,KAAK,CAAC,gBAAgB,IAAI,mBAAA,IAAI,GAAC,cAAc,CAAC,gBAAgB,EAAE,gBAAgB,CAAC,MAAM,EAAE,OAAO,CAAC,CAAC;KAC/G;;;;;;;;;IAED,YAAY,CAAC,QAAe,EAAE,iBAA0B,EAAE,eAAwB;QAChF,IAAI,mBAAA,IAAI,GAAC,aAAa,EAAE;YACtB,iBAAiB,GAAG,iBAAiB,IAAI,mBAAA,IAAI,GAAC,aAAa,CAAC,iBAAiB,CAAC;YAC9E,eAAe,GAAG,eAAe,IAAI,mBAAA,IAAI,GAAC,aAAa,CAAC,eAAe,CAAC;SACzE;;cAEK,gBAAgB,GAAG,OAAO,CAAC,mBAAA,IAAI,GAAC,aAAa,IAAI,iBAAiB,IAAI,eAAe,CAAC;QAC5F,IAAI,CAAC,gBAAgB,EAAE;YACrB,MAAM,IAAI,KAAK,CAAC,oCAAoC,CAAC,CAAC;SACvD;QAED,IAAI,iBAAiB,IAAI,eAAe,EAAE;;kBAClC,UAAU,GAAG,4BAA4B,CAC7C,mBAAA,IAAI,GAAC,WAAW,CAAC,iBAAiB,CAAC,EACnC,mBAAA,IAAI,GAAC,WAAW,CAAC,eAAe,CAAC,EACjC,mBAAA,IAAI,GAAC,YAAY,EACjB,QAAQ,CACT;YAED,mBAAA,IAAI,GAAC,GAAG,CAAC,UAAU,CAAC,CAAC;SACtB;QAED,0BAAO,IAAI,GAAC;KACb;;;;;;;;;;IAED,eAAe,CAAC,WAAmB,EAAE,SAAiB,EAAE,oBAA6B,EAAE,kBAA2B;QAChH,IAAI,mBAAA,IAAI,GAAC,cAAc,EAAE;YACvB,oBAAoB,GAAG,oBAAoB,IAAI,mBAAA,IAAI,GAAC,cAAc,CAAC,oBAAoB,CAAC;YACxF,kBAAkB,GAAG,kBAAkB,IAAI,mBAAA,IAAI,GAAC,cAAc,CAAC,kBAAkB,CAAC;SACnF;;cAEK,mBAAmB,GAAG,OAAO,CAAC,mBAAA,IAAI,GAAC,cAAc,IAAI,oBAAoB,CAAC;QAChF,IAAI,CAAC,mBAAmB,EAAE;YACxB,MAAM,IAAI,KAAK,CAAC,qCAAqC,CAAC,CAAC;SACxD;;cAEK,aAAa,GAAG,kBAAkB;cACpC,sCAAsC;cACtC,qCAAqC;;cAEnC,aAAa,GAAG,MAAM,CAAC,aAAa,EAAE;YAC1C,oBAAoB,EAAE,mBAAA,IAAI,GAAC,WAAW,CAAC,oBAAoB,CAAC;YAC5D,kBAAkB,EAAE,mBAAA,IAAI,GAAC,WAAW,CAAC,kBAAkB,CAAC;YACxD,WAAW;YACX,SAAS;SACV,CAAC;QAEF,OAAO,mBAAA,IAAI,GAAC,GAAG,CAAC,aAAa,CAAC,CAAC;KAChC;CACF;;;;;;ACrID;;;AAMA,MAAsB,eAAe;;;;;;;IACnC,YAAsB,IAAgB,EAAY,MAAkB,EAAY,UAA4B,EAAY,GAAW;QAA7G,SAAI,GAAJ,IAAI,CAAY;QAAY,WAAM,GAAN,MAAM,CAAY;QAAY,eAAU,GAAV,UAAU,CAAkB;QAAY,QAAG,GAAH,GAAG,CAAQ;KAClI;;;;;;IAES,mBAAmB,CAAC,OAAoB;QAChD,OAAO,IAAI,CAAC,MAAM,CAAC,yBAAyB,KAAK,YAAY;eACxD,IAAI,CAAC,SAAS,CAAC,OAAO,IAAI,EAAE,CAAC,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,gCAAgC,CAAC;KAC1F;;;;;;;;IAES,uBAAuB,CAAI,QAAyC,EAAE,GAAW;;cACnF,KAAK,sBAAG,QAAQ,EAA+B;QACrD,IAAI,KAAK,IAAI,KAAK,CAAC,KAAK,EAAE;;kBAClB,WAAW,GAAG,IAAI,KAAK,CAAC,gCAAgC,KAAK,CAAC,KAAK,CAAC,OAAO,EAAE,CAAC;YACpF,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,0CAA0C,GAAG,EAAE,EAAE,WAAW,CAAC,CAAC;YAC7E,MAAM,WAAW,CAAC;SACnB;KACF;;;;;IAES,eAAe;QACvB,OAAO,IAAI,qBAAqB,CAAC,EAAE,WAAW,EAAE,CAAC,IAAI,CAAC,UAAU,CAAC,gBAAgB,EAAE,CAAC,CAAC;KACtF;CACF;;;;;;;;;IClBY,UAAU;;;MAAV,UAAU;IAJvB;QAKE,WAAM,GAA6B,EAAE,CAAC;QACtC,8BAAyB,GAA8B,YAAY,CAAC;QACpE,qCAAgC,GAAG,IAAI,CAAC;KAWzC;;;;IAPC,IAAI,cAAc;QAChB,OAAO,OAAO,CAAC,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC;KACxD;;;;IAED,IAAI,iBAAiB;QACnB,OAAO,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,MAAM,CAAC,WAAW,GAAG,IAAI,CAAC;KAC7D;CACF,CAAA;;YAlBA,UAAU,SAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;AAEY,UAAU;IADtB,UAAU,CAAC,YAAY,CAAC;GACZ,UAAU,CActB;;;;;;;;;;;;AC5BD,MAAa,+BAA+B,GAAG,WAAW;;AAC1D,MAAa,0BAA0B,GAAG,IAAI;;AAC9C,MAAa,sBAAsB,GAAG,SAAS;;AAC/C,MAAa,WAAW,GAAG,IAAI;;;;;;ACE/B;;;;AAGA,SAAgB,sBAAsB,CAAC,KAAkB;IACvD,OAAO,OAAO,CAAC,KAAK,CAAC;8BAChB,KAAK;UACN,oBAAC,KAAK,IAAW,WAAW,CAAC;CAClC;;;;;;ACZD;;;;;AAQA,SAAgB,sBAAsB,CAAC,UAAuB,EAAE,WAAwB;;UAChF,KAAK,GAAa,sBAAsB,CAAC,UAAU,CAAC;;UACpD,MAAM,GAAa,sBAAsB,CAAC,WAAW,CAAC;;UACtD,sBAAsB,GAAW,WAAW,CAAC,KAAK,CAAC;;UACnD,uBAAuB,GAAW,WAAW,CAAC,MAAM,CAAC;IAE3D,OAAO,sBAAsB,GAAG,uBAAuB,CAAC;CACzD;;;;;;AAED,SAAgB,mBAAmB,CAAC,MAAgB,EAAE,SAAS,GAAG,KAAK;IACrE,IAAI,MAAM,CAAC,+BAA+B,CAAC,EAAE;QAC3C,OAAO;KACR;;UAEK,WAAW,GAAe,gBAAgB,CAAC,MAAM,CAAC;;UAClD,2BAA2B,GAAG,OAAO,CACzC,WAAW,CAAC,MAAM;WACf,WAAW,CAAC,CAAC,CAAC,CAAC,MAAM,GAAG,CAAC,CAC7B;IAED,IAAI,2BAA2B,EAAE;QAC/B,WAAW,CAAC,IAAI,CAAC,sBAAsB,CAAC,CAAC;QACzC,IAAI,SAAS,EAAE;YACb,MAAM,CAAC,+BAA+B,CAAC,GAAG,IAAI,CAAC;SAChD;KACF;CACF;;;;;;AClCD;;;;AAKA,SAAgB,uBAAuB,CAAC,IAAgB;IACtD,OAAO,OAAO,CAAC,IAAI,CAAC;6BAChB,IAAI;UACJ,oBAAC,IAAI,IAAgB,WAAW,CAAC;CACtC;;;;;;ACTD;;;;AAKA,SAAgB,sBAAsB,CAAC,IAAe;IACpD,OAAO,OAAO,CAAC,IAAI,CAAC;6BAChB,IAAI;UACJ,oBAAC,IAAI,IAAqB,WAAW,CAAC;CAC3C;;;;;;ACRD;;;;AAKA,SAAgB,gBAAgB,CAAC,IAAkB;;UAC3C,KAAK,GAAiB,gBAAgB,CAAC,IAAI,CAAC;IAClD,OAAO,yBAAyB,CAAC,KAAK,CAAC,CAAC;CACzC;;;;;AAED,SAAgB,0BAA0B,CAAC,IAAgB;;UACnD,WAAW,GAAG,uBAAuB,CAAC,IAAI,CAAC;IACjD,OAAO,OAAO,CACZ,WAAW;WACR,WAAW,CAAC,MAAM;WAClB,WAAW,CAAC,CAAC,CAAC,CAAC,MAAM,GAAG,CAAC,CAC7B,CAAC;CACH;;;;;AAED,SAAgB,yBAAyB,CAAC,IAAe;;UACjD,WAAW,GAAG,sBAAsB,CAAC,IAAI,CAAC;IAChD,OAAO,OAAO,CACZ,WAAW,CAAC,MAAM;WACf,0BAA0B,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,CAC9C,CAAC;CACH;;;;;;AC1BD;;;;AAOA,SAAgB,iBAAiB,CAAC,IAAkB;IAClD,IAAI,IAAI,CAAC,+BAA+B,CAAC,EAAE;;QAEzC,OAAO;KACR;;UAEK,KAAK,GAAiB,gBAAgB,CAAC,IAAI,CAAC;IAClD,IAAI,CAAC,yBAAyB,CAAC,KAAK,CAAC,EAAE;;QAErC,OAAO;KACR;;;IAID,KAAK,CAAC,OAAO;;;;IAAC,CAAC,WAAuB,KAAK,mBAAmB,CAAC,WAAW,CAAC,EAAC,CAAC;IAE7E,KAAK,CAAC,IAAI;;;;;IAAC,CAAC,eAA2B,EAAE,gBAA4B;;cAC7D,yBAAyB,GAAG,eAAe,CAAC,CAAC,CAAC;;cAC9C,0BAA0B,GAAG,gBAAgB,CAAC,CAAC,CAAC;QAEtD,OAAO,sBAAsB,CAAC,yBAAyB,EAAE,0BAA0B,CAAC,CAAC;KACtF,EAAC,CAAC;IAEH,IAAI,CAAC,+BAA+B,CAAC,GAAG,IAAI,CAAC;CAC9C;;;;;;AC9BD;;;;AAIA,SAAgB,mBAAmB,CAAC,KAAkB;;UAC9C,UAAU,GAAa,sBAAsB,CAAC,KAAK,CAAC;;UACpD,gBAAgB,GAAG,OAAO,CAC9B,UAAU;WACP,UAAU,CAAC,MAAM;WACjB,UAAU,CAAC,MAAM,GAAG,CAAC,CACzB;IAED,OAAO,gBAAgB;UACnB,WAAW,CAAC,UAAU,CAAC;UACvB,IAAI,CAAC;CACV;;;;;;ACdD;;;;AAMA,SAAgB,wBAAwB,CAAC,IAAkB;;UACnD,KAAK,GAAG,gBAAgB,CAAC,IAAI,CAAC;;QAChC,GAAW;;QACX,GAAW;IACf,IAAI,KAAK,CAAC,MAAM,EAAE;QAChB,iBAAiB,CAAC,IAAI,CAAC,CAAC;;cAClB,SAAS,GAAe,KAAK,CAAC,CAAC,CAAC;;cAChC,QAAQ,GAAe,WAAW,CAAC,KAAK,CAAC;;cACzC,eAAe,GAAa,SAAS,CAAC,CAAC,CAAC;;cACxC,cAAc,GAAa,WAAW,CAAC,QAAQ,CAAC;QAEtD,GAAG,GAAG,mBAAmB,CAAC,eAAe,CAAC,CAAC;QAC3C,GAAG,GAAG,mBAAmB,CAAC,cAAc,CAAC,CAAC;KAC3C;IAED,OAAO;QACL,GAAG;QACH,GAAG;KACJ,CAAC;CACH;;;;;;AC3BD;;;;AAQA,SAAgB,yBAAyB,CAAC,KAAe;;UACjD,MAAM,GAAe,gBAAgB,CAAC,KAAK,CAAC;;UAC5C,UAAU,GAAG,MAAM,CAAC,CAAC,CAAC;;UACtB,SAAS,GAAG,WAAW,CAAC,MAAM,CAAC;;QACjC,GAAG;;QACH,GAAG;IAEP,mBAAmB,CAAC,MAAM,CAAC,CAAC;IAE5B,GAAG,GAAG,mBAAmB,CAAC,UAAU,CAAC,CAAC;IACtC,GAAG,GAAG,mBAAmB,CAAC,SAAS,CAAC,CAAC;IAErC,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC;CACrB;;;;;;AChBD;;;;AAKA,SAAgB,gBAAgB,CAAC,QAAkB;;QAC7C,MAAqB;IACzB,IAAI,MAAM,CAAC,QAAQ,CAAC,EAAE;;cACd,YAAY,sBAAG,QAAQ,EAAgC;QAC7D,MAAM,GAAG,wBAAwB,CAAC,YAAY,CAAC,CAAC;KACjD;SAAM;;cACC,KAAK,sBAAG,QAAQ,EAAsB;QAC5C,MAAM,GAAG,yBAAyB,CAAC,KAAK,CAAC,CAAC;KAC3C;IAED,OAAO,MAAM,CAAC;CACf;;;;;;;;;;;AClBD,SAAgB,aAAa,CAAC,KAAiB,EAAE,KAA+B;IAC9E,OAAO,KAAK,CAAC,MAAM;UACf,KAAK,CAAC,MAAM,CAAC,WAAW,CAAC,IAAI;;;;QAAC,UAAU,IAAI,UAAU,CAAC,IAAI,KAAK,KAAK,EAAC;UACtE,SAAS,CAAC;CACf;;;;;;ACND;;;;;AAGA,SAAgB,iBAAiB,CAAC,KAAiB,EAAE,KAA+B;;UAC5E,UAAU,GAAG,aAAa,CAAC,KAAK,EAAE,KAAK,CAAC;IAC9C,OAAO,UAAU;UACb,UAAU,CAAC,IAAI;UACf,SAAS,CAAC;CACf;;;;;;ACRD;;;;;AAIA,SAAgB,0BAA0B,CAAC,KAAiB,EAAE,KAA+B;;UACrF,IAAI,GAAG,iBAAiB,CAAC,KAAK,EAAE,KAAK,CAAC;IAE5C,OAAO,OAAO,CAAC,IAAI,CAAC;UAChB,IAAI;UACJ,MAAM,CAAC,KAAK,CAAC,CAAC;CACnB;;;;;;;ACXD,MAAa,kBAAkB,GAAG,IAAI,MAAM,CAAC,yCAAyC,EAAE,GAAG,CAAC;;;;;AAE5F,SAAgB,uBAAuB,CAAC,UAAkB;IACxD,OAAO,kBAAkB,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;CAC5C;;;;;;;ACGD,MAAa,kBAAkB,GAAG,GAAG;;;;;;;;AAErC,SAAgB,yBAAyB,CAAI,OAAe,EAAE,QAAgB,GAAG,EAAE,GAAG,QAAsB;IAC1G,OAAO,kBAAkB,CAAI,KAAK,EAAE,GAAG,QAAQ,CAAC,MAAM;;;;IAAC,OAAO,IAAI,OAAO,CAAC,OAAO,KAAK,OAAO,EAAC,CAAC,CAAC;CACjG;;;;;;;AAED,SAAgB,kBAAkB,CAAI,QAAgB,kBAAkB,EAAE,GAAG,QAAmB;IAC9F,OAAO,QAAQ,CAAC,GAAG;;;;IAAC,OAAO,IAAI,KAAK,KAAK,kBAAkB;UACvD,OAAO,CAAC,UAAU;UAClB,OAAO,CAAC,UAAU,CAAC,KAAK,CAAC,EAAC,CAAC;CAChC;;;;;;ACjBD;;;;AAaA,SAAS,mBAAmB,CAAC,UAAiB;IAC5C,OAAO,UAAU;SACd,MAAM;;;;IAAC,KAAK,IAAI,QAAQ,CAAC,KAAK,CAAC,EAAC;SAChC,GAAG;;;;IAAC,KAAK,IAAI,MAAM,CAAC,KAAK,CAAC,EAAC,CAAC;CAChC;;;;;;AAED,SAAS,mCAAmC,CAAC,UAAkB,EAAE,GAAG,QAAsB;;UAClF,WAAW,GAAG,UAAU,CAAC,KAAK,CAAC,kBAAkB,CAAC;;QACpD,eAAmB;IAEvB,IAAI,WAAW,IAAI,WAAW,CAAC,MAAM,GAAG,CAAC,EAAE;;cACnC,OAAO,GAAG,MAAM,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;;cAChC,KAAK,GAAG,WAAW,CAAC,CAAC,CAAC;;cACtB,aAAa,sBAA6B,CAAC,WAAW,CAAC,CAAC,CAAC,IAAI,OAAO,EAAE,iBAAiB,EAAE,EAA4B;;cACrH,UAAU,GAAG,yBAAyB,CAAC,OAAO,EAAE,KAAK,EAAE,GAAG,QAAQ,CAAC;QAEzE,IAAI,aAAa,KAAK,OAAO,EAAE;YAC7B,eAAe,GAAG,UAAU,CAAC,CAAC,CAAC,CAAC;SACjC;aAAM,IAAI,aAAa,KAAK,MAAM,EAAE;YACnC,eAAe,GAAG,UAAU,CAAC,UAAU,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;SACrD;aAAM,IAAI,aAAa,KAAK,KAAK,IAAI,aAAa,KAAK,KAAK,EAAE;;kBACvD,YAAY,GAAG,mBAAmB,CAAC,UAAU,CAAC;YACpD,eAAe,GAAG,SAAS,CAAC,YAAY,CAAC,CAAC;SAC3C;aAAM,IAAI,aAAa,KAAK,KAAK,IAAI,aAAa,KAAK,SAAS,EAAE;;kBAC3D,YAAY,GAAG,mBAAmB,CAAC,UAAU,CAAC;YACpD,eAAe,GAAG,OAAO,CAAC,YAAY,CAAC,CAAC;SACzC;aAAM,IAAI,aAAa,KAAK,QAAQ,EAAE;YACrC,eAAe,GAAG,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;SACzC;aAAM,IAAI,aAAa,KAAK,KAAK,EAAE;;kBAC5B,YAAY,GAAG,mBAAmB,CAAC,UAAU,CAAC;YACpD,eAAe,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,YAAY,CAAC,CAAC;SAC7C;aAAM,IAAI,aAAa,KAAK,KAAK,EAAE;;kBAC5B,YAAY,GAAG,mBAAmB,CAAC,UAAU,CAAC;YACpD,eAAe,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,YAAY,CAAC,CAAC;SAC7C;aAAM;YACL,MAAM,IAAI,KAAK,CAAC,uDAAuD,aAAa,GAAG,CAAC,CAAC;SAC1F;QAED,OAAO,QAAQ,CAAC,eAAe,CAAC;cAC5B,IAAI,CAAC,SAAS,CAAC,eAAe,CAAC;cAC/B,MAAM,CAAC,eAAe,CAAC,CAAC;KAC7B;CACF;;;;;;AAED,SAAS,6BAA6B,CAAC,UAAkB,EAAE,GAAG,QAAsB;;UAC5E,gBAAgB,GAAG,uBAAuB,CAAC,UAAU,CAAC;;QACxD,gBAAgB,GAAG,UAAU;IAEjC,gBAAgB;SACb,MAAM;;;;IAAC,eAAe,IAAI,uBAAuB,CAAC,eAAe,CAAC,EAAC;SACnE,OAAO;;;;IAAC,eAAe;;cAChB,KAAK,GAAG,mCAAmC,CAAC,eAAe,EAAE,GAAG,QAAQ,CAAC;QAC/E,gBAAgB,GAAG,YAAY,CAAC,gBAAgB,EAAE,eAAe,EAAE,KAAK,CAAC,CAAC;KAC3E,EAAC,CAAC;IAEL,OAAO,gBAAgB,CAAC;CACzB;;;;;;AAED,SAAgB,4BAA4B,CAAC,UAAkB,EAAE,GAAG,QAAsB;;UAClF,gBAAgB,GAAG,6BAA6B,CAAC,UAAU,EAAE,GAAG,QAAQ,CAAC;;UACzE,sBAAsB,GAAG,QAAQ,IAAI,QAAQ,CAAC,MAAM;UACtD,QAAQ,CAAC,CAAC,CAAC,CAAC,UAAU;UACtB,EAAE;;UAEA,aAAa,GAAG,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,sBAAsB,EAAE;QAC9D,WAAW,EAAE,QAAQ,CAAC,MAAM;KAC7B,CAAC;IAEF,OAAO,MAAM,CAAC,gBAAgB,EAAE,aAAa,CAAC,CAAC;CAChD;;;;;;MCjEY,UAAU;;;;IAoBrB,IAAI,OAAO;QACT,OAAO,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,EAAE,GAAG,IAAI,CAAC;KAC1C;;;;IAED,IAAI,IAAI;QACN,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC;KACxB;;;;IAED,IAAI,IAAI;QACN,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC;KACxB;;;;;;IAED,YAAY,OAAgB,EAAE,KAAwB,EAAE,kBAAkB,GAAG,WAAW;QACtF,IAAI,CAAC,EAAE,GAAG,OAAO,CAAC,EAAE,CAAC;QACrB,IAAI,CAAC,UAAU,GAAG,OAAO,CAAC,UAAU,CAAC;QACrC,IAAI,CAAC,IAAI,GAAG,OAAO,CAAC,IAAI,CAAC;QACzB,IAAI,CAAC,IAAI,GAAG,OAAO,CAAC,IAAI,CAAC;QACzB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,IAAI,CAAC,kBAAkB,GAAG,kBAAkB,CAAC;;cAEvC,WAAW,GAAG,IAAI,CAAC,cAAc,EAAE;QAEzC,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,EAAE,IAAI,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC;QAChD,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,YAAY,CAAC,CAAC;QACtD,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;KACpC;;;;IAED,cAAc;QACZ,OAAO,mBAAmB,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;KAC/C;;;;;IAED,QAAQ,CAAC,qBAA6B;QACpC,OAAO,iBAAiB,CAAC,qBAAqB,CAAC;cAC3C,4BAA4B,CAAC,qBAAqB,EAAE,IAAI,CAAC;cACzD,IAAI,CAAC,UAAU,IAAI,IAAI,CAAC,UAAU,CAAC,qBAAqB,CAAC,CAAC;KAC/D;;;;;IAED,0BAA0B,CAAC,SAAiB;;cACpC,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC;;cAChC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,SAAS,CAAC;QAC5C,OAAO,0BAA0B,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;KACjD;;;;;;;;IAED,QAAQ,CAAC,SAAiB,EAAE,KAAU;QACpC,mBAAA,IAAI,GAAC,UAAU,CAAC,SAAS,CAAC,GAAG,KAAK,CAAC;QACnC,0BAAO,IAAI,GAAC;KACb;;;;;;;IAED,KAAK,CAAC,EAAmB;QACvB,mBAAA,IAAI,GAAC,EAAE,GAAG,EAAE,CAAC;QACb,mBAAA,IAAI,GAAC,QAAQ,CAAC,mBAAmB,CAAC,mBAAA,IAAI,GAAC,KAAK,CAAC,MAAM,CAAC,EAAE,EAAE,CAAC,CAAC;QAC1D,0BAAO,IAAI,GAAC;KACb;;;;;;;IAED,WAAW,CAAC,QAAkB;QAC5B,mBAAA,IAAI,GAAC,QAAQ,GAAG,QAAQ,CAAC;QACzB,OAAO,mBAAA,IAAI,GAAC,yBAAyB,EAAE,CAAC;KACzC;;;;;;IAED,sBAAsB;QACpB,IAAI,mBAAA,IAAI,GAAC,QAAQ,EAAE;;kBACX,MAAM,GAAG,gBAAgB,CAAC,mBAAA,IAAI,GAAC,QAAQ,CAAC;YAC9C,mBAAA,IAAI,GAAC,WAAW,GAAG,MAAM,CAAC,GAAG,CAAC;YAC9B,mBAAA,IAAI,GAAC,SAAS,GAAG,MAAM,CAAC,GAAG,CAAC;SAC7B;QACD,0BAAO,IAAI,GAAC;KACb;;;;IAED,uBAAuB;QACrB,OAAO,IAAI,CAAC,kBAAkB,KAAK,WAAW,CAAC;KAChD;;;;IAED,KAAK;;cACG,WAAW,GAAG,KAAK,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC;QAC3C,OAAO,IAAI,UAAU,CAAC,WAAW,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;KAChD;;;;IAED,SAAS;;cACD,OAAO,GAAY;YACvB,IAAI,EAAE,SAAS;YACf,QAAQ,EAAE,IAAI,CAAC,QAAQ;YACvB,UAAU,EAAE,IAAI,CAAC,UAAU;YAC3B,EAAE,EAAE,IAAI,CAAC,EAAE;YACX,IAAI,EAAE,IAAI,CAAC,IAAI;SAChB;QAED,OAAO,OAAO,CAAC;KAChB;;;;IAED,SAAS;QACP,OAAO,IAAI,CAAC,SAAS,EAAE,CAAC;KACzB;;;;;;;IAES,yBAAyB;QACjC,mBAAA,IAAI,GAAC,QAAQ,GAAG,MAAM,CAAC,mBAAA,IAAI,GAAC,QAAQ,CAAC,CAAC;QACtC,mBAAA,IAAI,GAAC,OAAO,GAAG,OAAO,CAAC,mBAAA,IAAI,GAAC,QAAQ,CAAC,CAAC;QACtC,mBAAA,IAAI,GAAC,SAAS,GAAG,SAAS,CAAC,mBAAA,IAAI,GAAC,QAAQ,CAAC,CAAC;QAC1C,0BAAO,IAAI,GAAC;KACb;CACF;;;;;;ACnID,MAQa,UAAW,SAAQ,UAAU;;;;IAUxC,IAAI,OAAO;QACT,OAAO,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,EAAE,GAAG,IAAI,CAAC;KAC1C;;;;IAED,IAAI,QAAQ;QACV,OAAO,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,iBAAiB,CAAC,CAAC;KACpD;;;;IAED,IAAI,MAAM;QACR,OAAO,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,eAAe,CAAC,CAAC;KAClD;;;;IAED,IAAI,SAAS;QACX,OAAO,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;KAC7B;;;;IAED,IAAI,QAAQ;QACV,OAAO,CAAC,IAAI,CAAC,SAAS,CAAC;KACxB;;;;;;IAED,YAAY,OAAgB,EAAE,KAAe,EAAE,kBAAkB,GAAG,WAAW;QAC7E,KAAK,CAAC,OAAO,EAAE,KAAK,EAAE,kBAAkB,CAAC,CAAC;QAE1C,IAAI,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,qBAAqB,EAAE,EAAE;YACjD,MAAM,IAAI,KAAK,CAAC,gCAAgC,IAAI,CAAC,QAAQ,CAAC,IAAI,YAAY,CAAC,CAAC;SACjF;KACF;;;;;;;IAED,WAAW,CAAC,IAAU;QACpB,OAAO,mBAAA,IAAI,GAAC,QAAQ,CAAC,mBAAA,IAAI,GAAC,KAAK,CAAC,iBAAiB,EAAE,IAAI,CAAC,CAAC;KAC1D;;;;;;;IAED,SAAS,CAAC,IAAU;QAClB,OAAO,mBAAA,IAAI,GAAC,QAAQ,CAAC,mBAAA,IAAI,GAAC,KAAK,CAAC,eAAe,EAAE,IAAI,CAAC,CAAC;KACxD;;;;;;IAED,MAAM;QACJ,IAAI,mBAAA,IAAI,GAAC,KAAK,CAAC,eAAe,EAAE;YAC9B,mBAAA,IAAI,GAAC,QAAQ,CAAC,mBAAA,IAAI,GAAC,KAAK,CAAC,eAAe,EAAE,IAAI,IAAI,EAAE,CAAC,CAAC;SACvD;QAED,0BAAO,IAAI,GAAC;KACb;;;;IAED,KAAK;;cACG,WAAW,GAAG,KAAK,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC;QAC3C,OAAO,IAAI,UAAU,CAAC,WAAW,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;KAChD;;;;;IAES,mBAAmB;QAC3B,OAAO,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,OAAO,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;KACxD;;;;;IAEO,qBAAqB;QAC3B,OAAO,CAAC,IAAI,CAAC,mBAAmB,EAAE,CAAC;KACpC;CACF;;;;;;MClEY,YAAa,SAAQ,UAAU;;;;;;IAG1C,YAAY,OAAgB,EAAE,KAAiB,EAAE,kBAAkB,GAAG,WAAW;QAC/E,KAAK,CAAC,OAAO,EAAE,KAAK,EAAE,kBAAkB,CAAC,CAAC;QAE1C,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,gBAAgB,CAAC,CAAC;QACrD,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,oBAAoB,CAAC,CAAC;QAC7D,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,kBAAkB,CAAC,CAAC;KAC1D;;;;;;;IAED,OAAO,MAAM,CACX,KAAiB,EACjB,aAAuC,EAAE,EACzC,WAAiD,IAAI;;cAE/C,OAAO,GAAY,SAAS,CAAC,UAAU,qBAAE,QAAQ,GAAa;QACpE,OAAO,IAAI,YAAY,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;KACzC;;;;;;;IAED,UAAU,CAAC,OAAe;QACxB,mBAAA,IAAI,GAAC,OAAO,GAAG,OAAO,CAAC;QACvB,OAAO,mBAAA,IAAI,GAAC,QAAQ,CAAC,OAAO,EAAE,mBAAA,IAAI,GAAC,KAAK,CAAC,gBAAgB,CAAC,CAAC;KAC5D;;;;;;;IAED,cAAc,CAAC,OAAe;QAC5B,mBAAA,IAAI,GAAC,WAAW,GAAG,OAAO,CAAC;QAC3B,OAAO,mBAAA,IAAI,GAAC,QAAQ,CAAC,mBAAA,IAAI,GAAC,KAAK,CAAC,oBAAoB,EAAE,OAAO,CAAC,CAAC;KAChE;;;;;;;IAED,YAAY,CAAC,OAAe;QAC1B,IAAI,CAAC,mBAAA,IAAI,GAAC,QAAQ,EAAE;YAClB,MAAM,IAAI,KAAK,CAAC,iDAAiD,CAAC,CAAC;SACpE;QAED,mBAAA,IAAI,GAAC,SAAS,GAAG,OAAO,CAAC;QACzB,OAAO,mBAAA,IAAI,GAAC,QAAQ,CAAC,mBAAA,IAAI,GAAC,KAAK,CAAC,kBAAkB,EAAE,OAAO,CAAC,CAAC;KAC9D;;;;;;;;IAED,gBAAgB,CAAC,WAAmB,EAAE,SAAiB;QACrD,OAAO,mBAAA,IAAI,GACR,cAAc,CAAC,WAAW,CAAC;aAC3B,YAAY,CAAC,SAAS,CAAC,CAAC;KAC5B;;;;IAED,KAAK;;cACG,WAAW,GAAG,KAAK,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC;QAC3C,OAAO,IAAI,YAAY,CAAC,WAAW,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;KAClD;;;;;;;IAES,yBAAyB;QACjC,mBAAA,IAAI,GAAC,QAAQ,GAAG,OAAO,CAAC,mBAAA,IAAI,GAAC,KAAK,CAAC,kBAAkB,CAAC,CAAC;QACvD,mBAAA,IAAI,GAAC,OAAO,GAAG,CAAC,mBAAA,IAAI,GAAC,QAAQ,CAAC;QAC9B,mBAAA,IAAI,GAAC,SAAS,GAAG,KAAK,CAAC;QACvB,0BAAO,IAAI,GAAC;KACb;CACF;;;;;;AC/DD;;;;;;AAMA,SAAgB,YAAY,CAAC,OAAgB,EAAE,OAAe,EAAE,OAAoB;;UAC5E,SAAS,GAAG,OAAO,CAAC,cAAc,CAAC,OAAO,CAAC;;QAC7C,UAAsB;IAE1B,IAAI,SAAS,CAAC,cAAc,EAAE;QAC5B,UAAU,GAAG,IAAI,cAAc,CAAC,OAAO,qBAAE,SAAS,CAAC,KAAK,GAAiB,CAAC;KAC3E;SAAM,IAAI,SAAS,CAAC,YAAY,EAAE;QACjC,UAAU,GAAG,IAAI,YAAY,CAAC,OAAO,qBAAE,SAAS,CAAC,KAAK,GAAe,CAAC;KACvE;IAED,OAAO,UAAU,CAAC;CACnB;;;;;;;AAGD,SAAgB,SAAS,CAAC,aAAuC,EAAE,EAAE,WAAqB,IAAI;IAC5F,OAAO;QACL,IAAI,EAAE,SAAS;QACf,QAAQ;QACR,UAAU;KACX,CAAC;CACH;;;;;;AChCD;;;;;AAOA,SAAgB,QAAQ,CAAC,IAAkB,EAAE,OAAe;;UACpD,uBAAuB,GAA6B,EAAE;;UACtD,KAAK,GAAiB,gBAAgB,CAAC,IAAI,CAAC;IAElD,KAAK,CAAC,OAAO;;;;IAAC,CAAC,WAAuB;;cAC9B,OAAO,GAAG,sBAAsB,CAAC,WAAW,EAAE,OAAO,CAAC;QAC5D,QAAQ,CAAC,uBAAuB,EAAE,OAAO,CAAC,CAAC;KAC5C,EAAC,CAAC;;UAEG,QAAQ,GAAG,uBAAuB,CAAC,MAAM;;;;;IAAC,CAAC,WAAW,EAAE,KAAK,KAAK,uBAAuB,CAAC,WAAW,EAAE,KAAK,EAAE,OAAO,CAAC,EAAC;;UACvH,QAAQ,GAAG,uBAAuB,CAAC,MAAM;;;;;IAAC,CAAC,WAAW,EAAE,KAAK,KAAK,uBAAuB,CAAC,WAAW,EAAE,KAAK,EAAE,OAAO,CAAC,EAAC;;UACvH,mBAAmB,GAAG,qBAAqB,CAAC,QAAQ,CAAC,YAAY,EAAE,QAAQ,CAAC,YAAY,EAAE,OAAO,CAAC;;UAClG,CAAC,GAAG,YAAY,CAAC,QAAQ,CAAC,eAAe,EAAE,QAAQ,CAAC,eAAe,EAAE,mBAAmB,CAAC;;UACzF,CAAC,GAAG,YAAY,CAAC,QAAQ,CAAC,eAAe,EAAE,QAAQ,CAAC,eAAe,EAAE,mBAAmB,CAAC;IAE/F,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC,CAAC;CAC3B;;;;;;;AAED,SAAS,YAAY,CAAC,CAAC,IAAI,CAAW,EAAE,CAAC,IAAI,CAAW,EAAE,KAAa;IACrE,OAAO,IAAI,GAAG,KAAK,IAAI,IAAI,GAAG,IAAI,CAAC,CAAC;CACrC;;;;;;;AAED,SAAS,YAAY,CAAC,GAAG,IAAI,CAAW,EAAE,GAAG,IAAI,CAAW,EAAE,KAAa;IACzE,OAAO,IAAI,GAAG,KAAK,IAAI,IAAI,GAAG,IAAI,CAAC,CAAC;CACrC;;;;;;;AAED,SAAS,qBAAqB,CAAC,UAAkB,EAAE,UAAkB,EAAE,OAAe;IACpF,IAAI,UAAU,KAAK,UAAU,EAAE;QAC7B,OAAO,CAAC,CAAC;KACV;IAED,OAAO,CAAC,OAAO,GAAG,UAAU,KAAK,UAAU,GAAG,UAAU,CAAC,CAAC;CAC3D;;;;;;AAED,SAAS,sBAAsB,CAAC,WAAuB,EAAE,gBAAwB;;UACzE,+BAA+B,GAA6B,WAAW;SAC1E,GAAG;;;;;IACF,CAAC,UAAoB,EAAE,KAAa,KAAK,4BAA4B,CAAC,UAAU,EAAE,gBAAgB,EAAE,KAAK,CAAC,EAC3G;IAEH,OAAO,+BAA+B,CAAC;CACxC;;;;;;;AAED,SAAS,4BAA4B,CAAC,UAAoB,EAAE,gBAAwB,EAAE,KAAa;;UAC3F,qBAAqB,GAAG,mBAAmB,CAAC,UAAU,CAAC;;UACvD,YAAY,GAA2B;QAC3C,eAAe,EAAE,UAAU;QAC3B,QAAQ,EAAE,IAAI,CAAC,GAAG,CAAC,qBAAqB,GAAG,gBAAgB,CAAC;QAC5D,YAAY,EAAE,qBAAqB;QACnC,KAAK;KACN;IAED,OAAO,YAAY,CAAC;CACrB;;;;;;;AAED,SAAS,uBAAuB,CAC9B,WAAmC,EACnC,KAA6B,EAC7B,gBAAwB;;UAElB,sBAAsB,GAAG,KAAK,CAAC,QAAQ,IAAI,WAAW,CAAC,QAAQ;;UAC/D,sBAAsB,GAAG,KAAK,CAAC,YAAY,IAAI,gBAAgB;IAErE,OAAO,sBAAsB,IAAI,sBAAsB;UACnD,KAAK;UACL,WAAW,CAAC;CACjB;;;;;;;AAED,SAAS,uBAAuB,CAC9B,MAA8B,EAC9B,MAA8B,EAC9B,gBAAwB;;UAElB,sBAAsB,GAAG,MAAM,CAAC,QAAQ,IAAI,MAAM,CAAC,QAAQ;;UAC3D,yBAAyB,GAAG,MAAM,CAAC,YAAY,IAAI,gBAAgB;IAEzE,OAAO,sBAAsB,IAAI,yBAAyB;UACtD,MAAM;UACN,MAAM,CAAC;CACZ;;;;;;ACjFD;;;;AAGA,SAAgB,iBAAiB,CAAC,IAAkB;;UAC5C,WAAW,GAAG,gBAAgB,CAAC,IAAI,CAAC;IAE1C,OAAO;QACL,IAAI,EAAE,IAAI;QACV,IAAI,EAAE,iBAAiB;QACvB,WAAW;KACZ,CAAC;CACH;;;;;;ACXD;;;;AAGA,SAAgB,YAAY,CAAC,IAAgB;IAC3C,OAAO,OAAO,CAAC,IAAI,CAAC;UAChB;YACA,IAAI,EAAE,IAAI;YACV,IAAI,EAAE,YAAY;YAClB,WAAW,qBAAE,IAAI,EAAc;SAChC;6BACC,IAAI,EAAc,CAAC;CACxB;;;;;;ACXD;;;;AAMA,SAAgB,uBAAuB,CAAC,IAAkB;;UAClD,kBAAkB,GAAG,OAAO,CAAC,IAAI,CAAC;IACxC,IAAI,CAAC,kBAAkB,EAAE;QACvB,0BAAO,IAAI,GAAmC;KAC/C;;UAEK,WAAW,sBAAG,IAAI,EAA+B;IACvD,OAAO,eAAe,CAAC,WAAW,CAAC;UAC/B,iBAAiB,CAAC,WAAW,CAAC;UAC9B,YAAY,oBAAC,WAAW,GAAe,CAAC;CAC7C;;;;;;;;;;ACrBD,SAAgB,gBAAgB,CAAC,OAAO;IACtC,OAAO,OAAO,GAAG,IAAI,CAAC,EAAE,GAAG,GAAG,CAAC;CAChC;;;;;;ACFD;;;;;AAQA,SAAgB,wBAAwB,CAAC,MAAmB,EAAE,MAAmB;;UACzE,WAAW,GAAa,sBAAsB,CAAC,MAAM,CAAC;;UACtD,WAAW,GAAa,sBAAsB,CAAC,MAAM,CAAC;;UAEtD,EAAE,GAAW,WAAW,CAAC,CAAC,CAAC;;UAC3B,EAAE,GAAW,WAAW,CAAC,CAAC,CAAC;;UAC3B,EAAE,GAAW,WAAW,CAAC,CAAC,CAAC;;UAC3B,EAAE,GAAW,WAAW,CAAC,CAAC,CAAC;IAEjC,OAAO,6BAA6B,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;CACtD;;;;;;;;AAED,SAAgB,6BAA6B,CAAC,EAAU,EAAE,EAAU,EAAE,EAAU,EAAE,EAAU;;;UAEpF,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC,EAAE,GAAG,EAAE,EAAE,CAAC,CAAC;;UAC9B,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC,EAAE,GAAG,EAAE,EAAE,CAAC,CAAC;;UAC9BE,WAAQ,GAAG,IAAI,CAAC,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;IAE7C,IAAI,KAAK,CAACA,WAAQ,CAAC,EAAE;QACnB,MAAM,IAAI,KAAK,CAAC,gDAAgD,EAAE,IAAI,EAAE,QAAQ,EAAE,IAAI,EAAE,yCAAyC,CAAC,CAAC;KACpI;IAED,OAAOA,WAAQ,CAAC;CACjB;;;;;;;;AAED,SAAgB,0BAA0B,CAAC,IAAY,EAAE,IAAY,EAAE,IAAY,EAAE,IAAY;;;UAEzF,IAAI,GAAG,gBAAgB,CAAC,IAAI,GAAG,IAAI,CAAC;;UACpC,IAAI,GAAG,gBAAgB,CAAC,IAAI,GAAG,IAAI,CAAC;IAE1C,IAAI,GAAG,gBAAgB,CAAC,IAAI,CAAC,CAAC;IAC9B,IAAI,GAAG,gBAAgB,CAAC,IAAI,CAAC,CAAC;;UAExB,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,GAAG,CAAC,CAAC;QAC/C,IAAI,CAAC,GAAG,CAAC,IAAI,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC;;UAErE,aAAa,GAAG,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;IAEpE,OAAO,0BAA0B,GAAG,aAAa,CAAC;CACnD;;;;;;;;AAED,SAAgB,sBAAsB,CAAC,IAAY,EAAE,IAAY,EAAE,IAAY,EAAE,IAAY;IAC3F,OAAO,wBAAwB,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,UAAU,CAAC,KAAK,CAAC,CAAC;CAC3E;;;;;;;;AAED,SAAgB,oBAAoB,CAAC,IAAY,EAAE,IAAY,EAAE,IAAY,EAAE,IAAY;IACzF,OAAO,wBAAwB,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,UAAU,CAAC,IAAI,CAAC,CAAC;CAC1E;;;;;;;;AAED,SAAgB,qBAAqB,CAAC,IAAY,EAAE,IAAY,EAAE,IAAY,EAAE,IAAY;IAC1F,OAAO,wBAAwB,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,UAAU,CAAC,IAAI,CAAC,CAAC;CAC1E;;;;;;;;;AAED,SAAgB,wBAAwB,CAAC,IAAY,EAAE,IAAY,EAAE,IAAY,EAAE,IAAY,EAAE,UAAsB;;UAC/G,oBAAoB,GAAG,0BAA0B,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC;IAC/E,OAAO,kBAAkB,CAAC,oBAAoB,EAAE,UAAU,CAAC,SAAS,EAAE,UAAU,CAAC,CAAC;CACnF;;;;;;AC9DD;;;;;;AAiBA,SAAgB,UAAU,CAAC,IAAkB,EAAE,KAAkB,EAAE,OAA2B;IAC5F,OAAO,GAAG,MAAM,CAAC,MAAM,CAAC;QACtB,UAAU,EAAE,OAAO;QACnB,gBAAgB,EAAE,OAAO;KAC1B,EAAE,OAAO,CAAC,CAAC;;UAEN,mBAAmB,GAAmB,kBAAkB,CAAC,IAAI,EAAE,KAAK,CAAC;IAC3E,IAAI,CAAC,mBAAmB,IAAI,CAAC,mBAAmB,CAAC,QAAQ,EAAE;QACzD,MAAM,IAAI,KAAK,CAAC,oCAAoC,CAAC,CAAC;KACvD;;UAEK,iBAAiB,GAAG,mBAAmB,CAAC,mBAAmB,CAAC,QAAQ,CAAC;;IAG3E,IAAI,iBAAiB,KAAK,IAAI,EAAE;QAC9B,OAAO,iBAAiB,CAAC;KAC1B;;UAEK,YAAY,GAAG,uBAAuB,CAAC,IAAI,CAAC;IAClD,IAAI,eAAe,CAAC,YAAY,CAAC,WAAW,CAAC,EAAE;QAC7C,MAAM,IAAI,KAAK,CAAC,8DAA8D,CAAC,CAAC;KACjF;IAED,OAAO,kBAAkB,oBAAC,YAAY,IAAgB,mBAAmB,CAAC,QAAQ,EAAE,OAAO,CAAC,CAAC;CAC9F;;;;;;;AAED,SAAS,kBAAkB,CAAC,IAAgB,EAAE,WAAwB,EAAE,OAA0B;;UAC1F,gBAAgB,GAAG,sBAAsB,CAAC,WAAW,CAAC;;UACtD,aAAa,GAAU,EAAE,IAAI,EAAE,OAAO,EAAE,WAAW,EAAE,gBAAgB,EAAE;;UACvE,YAAY,GAAmB,EAAE,IAAI,EAAE,SAAS,EAAE,QAAQ,EAAE,aAAa,EAAE,UAAU,EAAE,EAAE,EAAE;;UAC3F,WAAW,GAAwB;QACvC,IAAI,EAAE,SAAS;QACf,QAAQ,EAAE,IAAI;QACd,UAAU,EAAE,EAAE;KACf;;UAEK,WAAW,GAAG,SAAS,CAAC,WAAW,EAAE,YAAY,CAAC;;UAClD,YAAY,GAAG,WAAW,CAAC,QAAQ,CAAC,CAAC,CAAC;;UACtC,WAAW,GAAG,WAAW,CAAC,YAAY,CAAC,QAAQ,CAAC,WAAW,CAAC;;UAC5D,0BAA0B,GAAG,YAAY,CAAC,QAAQ,CAAC,WAAW,CAAC,MAAM,GAAG,CAAC;;UACzE,qBAAqB,GAAG,YAAY,CAAC,QAAQ,CAAC,WAAW,CAAC,0BAA0B,CAAC;;UACrF,cAAc,GAAG,UAAU,CAAC,CAAC,qBAAqB,EAAE,WAAW,CAAC,CAAC;;UAEjE,aAAa,GAAG,OAAO,CAAC,gBAAgB,KAAK,MAAM;UACrD,wBAAwB,CAAC,qBAAqB,EAAE,WAAW,CAAC;UAC5D,MAAM,CAAC,cAAc,EAAE,EAAE,KAAK,qBAAE,OAAO,CAAC,UAAU,EAAO,EAAE,CAAC;;UAC1D,iBAAiB,GAAG,mBAAmB,CAAC,qBAAqB,CAAC;IAEpE,OAAO,iBAAiB,GAAG,aAAa,CAAC;CAC1C;;;;;;MCpDY,cAAe,SAAQ,UAAU;;;;;;IAG5C,YAAY,OAAgB,EAAE,KAAmB,EAAE,kBAAkB,GAAG,WAAW;QACjF,KAAK,CAAC,OAAO,EAAE,KAAK,EAAE,kBAAkB,CAAC,CAAC;QAE1C,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,yBAAyB,CAAC,CAAC;QAC9D,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,YAAY,IAAI,IAAI,CAAC,OAAO,CAAC;QACtD,IAAI,CAAC,sBAAsB,EAAE,CAAC;KAC/B;;;;;;;IAED,OAAO,MAAM,CACX,KAAmB,EACnB,aAAuC,EAAE,EACzC,WAAyC,IAAI;;cAEvC,OAAO,GAAY,SAAS,CAAC,UAAU,qBAAE,QAAQ,GAAa;QACpE,OAAO,IAAI,cAAc,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;KAC3C;;;;;IAED,UAAU,CAAC,KAAkB;QAC3B,OAAO,UAAU,oBAAC,IAAI,CAAC,QAAQ,IAAkB,KAAK,CAAC,CAAC;KACzD;;;;;IAED,QAAQ,CAAC,OAAe;QACtB,OAAO,QAAQ,oBAAC,IAAI,CAAC,QAAQ,IAAkB,OAAO,CAAC,CAAC;KACzD;;;;IAED,KAAK;;cACG,WAAW,GAAG,KAAK,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC;QAC3C,OAAO,IAAI,cAAc,CAAC,WAAW,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;KACpD;CACF;;;;;;ACzCD,MAAa,oBAAoB;;;;IAK/B,YAAY,UAA6B;QACvC,IAAI,CAAC,IAAI,GAAG,UAAU,CAAC,IAAI,CAAC;QAC5B,IAAI,CAAC,IAAI,GAAG,UAAU,CAAC,IAAI,CAAC;KAC7B;;;;;;IAED,OAAO,MAAM,CAAC,QAAsB,EAAE,IAAW;QAC/C,OAAO,IAAI,oBAAoB,CAAC;YAC9B,IAAI,EAAE,mBAAmB;YACzB,QAAQ;YACR,IAAI;SACL,CAAC,CAAC;KACJ;;;;IAED,SAAS;QACP,OAAO;YACL,IAAI,EAAE,mBAAmB;YACzB,IAAI,EAAE,IAAI,CAAC,IAAI;YACf,QAAQ,EAAE,IAAI,CAAC,QAAQ,CAAC,GAAG;;;;YAAC,OAAO,IAAI,OAAO,CAAC,SAAS,EAAE,EAAC;SAC5D,CAAC;KACH;CACF;;;;;;MCtBY,sBAAuB,SAAQ,oBAAoB;;;;;;IAI9D,YAAY,UAA6B,EAAE,KAAiB,EAAE,kBAAkB,GAAG,WAAW;QAC5F,KAAK,CAAC,UAAU,CAAC,CAAC;QAClB,IAAI,CAAC,QAAQ,GAAG,UAAU,CAAC,QAAQ;aAChC,GAAG;;;;QAAC,CAAC,IAAI,IAAI,YAAY,CAAC,CAAC,EAAE,KAAK,EAAE,kBAAkB,CAAC,EAAC,CAAC;KAC7D;;;;;;IAED,OAAO,YAAY,CAAC,KAAiB,EAAE,GAAG,QAAwB;QAChE,OAAO,IAAI,sBAAsB,CAAC;YAChC,IAAI,EAAE,mBAAmB;YACzB,QAAQ;SACT,EAAE,KAAK,CAAC,CAAC;KACX;CACF;;;;;;ACzBD,MAMa,wBAAyB,SAAQ,oBAAoB;;;;;;IAIhE,YAAY,UAA6B,EAAE,KAAmB,EAAE,kBAAkB,GAAG,WAAW;QAC9F,KAAK,CAAC,UAAU,CAAC,CAAC;QAClB,IAAI,CAAC,QAAQ,GAAG,UAAU,CAAC,QAAQ;aAChC,GAAG;;;;QAAC,CAAC,IAAI,IAAI,cAAc,CAAC,CAAC,EAAE,KAAK,EAAE,kBAAkB,CAAC,EAAC,CAAC;KAC/D;CACF;;;;;;AChBD;;;;;AAeA,SAAgB,2BAA2B,CAAC,MAAmB,EAAE,SAAkC,MAAM;;UACjG,OAAO,GAAG,IAAI,WAAW,EAAE;IACjC,MAAM,GAAG,MAAM,IAAI,IAAI,UAAU,EAAE,CAAC;IAEpC,IAAI,MAAM,EAAE;QACV,MAAM,GAAG,MAAM,CAAC,GAAG,CAAC,GAAG,EAAE,MAAM,CAAC,CAAC;KAClC;IAED,OAAO,CAAC,MAAM,CAAC,cAAc,EAAE,kBAAkB,CAAC,CAAC;IACnD,OAAO,CAAC,MAAM,CAAC,6BAA6B,EAAE,GAAG,CAAC,CAAC;;UAE7C,WAAW,GAAG;QAClB,eAAe,EAAE,IAAI;QACrB,OAAO;QACP,MAAM;KACP;IAED,OAAO,WAAW,CAAC;CACpB;;;;;;AAED,SAAgB,sBAAsB,CAAC,UAA6B,EAAE,MAAU;IAC9E,MAAM;SACH,IAAI,CAAC,MAAM,CAAC;SACZ,MAAM;;;;IAAC,GAAG,IAAI,OAAO,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,EAAC;SACnC,OAAO;;;;IAAC,GAAG;;cACJ,KAAK,GAAG,MAAM,CAAC,GAAG,CAAC;QACzB,UAAU,CAAC,MAAM,GAAG,UAAU,CAAC,MAAM,CAAC,GAAG,CAAC,GAAG,EAAE,gBAAgB,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC,CAAC;KAChF,EAAC,CAAC;CACN;;;;;;AC3CD;;;;AAGA,SAAgB,UAAU,CAAC,eAAmB;;UACtC,QAAQ,GAAa,IAAI,QAAQ,EAAE;IACzC,MAAM,CAAC,IAAI,CAAC,eAAe,CAAC;SACzB,GAAG;;;;IAAC,GAAG,KAAK;QACX,GAAG;QACH,KAAK,EAAE,gBAAgB,CAAC,eAAe,CAAC,GAAG,CAAC,CAAC;KAC9C,CAAC,EAAC;SACF,OAAO;;;;IAAC,QAAQ,IAAI,QAAQ,CAAC,MAAM,CAAC,QAAQ,CAAC,GAAG,EAAE,QAAQ,CAAC,KAAK,CAAC,EAAC,CAAC;IAEtE,OAAO,QAAQ,CAAC;CACjB;;;;;;;;ACTD,MAAa,mCAAmC,GAAG,8BAA8B;;AACjF,MAAa,6BAA6B,GAAG,0BAA0B;;AACvE,MAAa,iCAAiC,GAAG,kCAAkC;;AACnF,MAAa,+BAA+B,GAAG,+BAA+B;;AAE9E,MAAa,uCAAuC,GAAG,6BAA6B;;AACpF,MAAa,yCAAyC,GAAG,uDAAuD;;AAChH,MAAa,mCAAmC,GAAG,yBAAyB;;AAE5E,MAAa,6BAA6B,GAAG,4DAA4D;;AACzG,MAAa,oCAAoC,GAAG,4EAA4E;;;AAGhI,MAAa,2BAA2B,GAAG,QAAQ;;AACnD,MAAa,0BAA0B,GAAG,WAAW;;AACrD,MAAa,gCAAgC,GAAG,iBAAiB;;AACjE,MAAa,gDAAgD,GAAG,sCAAsC;;;AAGtG,MAAa,wBAAwB,GAAG,gBAAgB;;AACxD,MAAa,2BAA2B,GAAG,uBAAuB;;AAClE,MAAa,+BAA+B,GAAG,2BAA2B;;;AAG1E,MAAa,uBAAuB,GAAG,0DAA0D;;;AAGjG,MAAa,uBAAuB,GAAG,SAAS;;AAChD,MAAa,+BAA+B,GAAG,0BAA0B;;AACzE,MAAa,2BAA2B,GAAG,2BAA2B;;AACtE,MAAa,8BAA8B,GAAG,uBAAuB;;AAErE,MAAa,0CAA0C,GAAG,GAAG;;AAC7D,MAAa,qCAAqC,GAAkC;IAClF,YAAY,EAAE,OAAO;IACrB,cAAc,EAAE,0CAA0C;IAC1D,WAAW,EAAE,MAAM,CAAC,QAAQ,CAAC,IAAI;CAClC;;;;;;;ACvCD,MAAa,mCAAmC,GAA2C;IACzF,SAAS,EAAE,EAAE;IACb,IAAI,EAAE,IAAI;IACV,KAAK,EAAE,IAAI;IACX,CAAC,EAAE,MAAM;CACV;;;;;;ACND;;;;AAKA,SAAgB,2BAA2B,CAAC,GAAG,OAAiD;;UACxF,YAAY,GAAG,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,mCAAmC,CAAC;IAC3E,CAAC,OAAO,IAAI,EAAE;SACX,OAAO;;;;IAAC,MAAM,IAAI,MAAM,CAAC,MAAM,CAAC,YAAY,EAAE,MAAM,CAAC,EAAC,CAAC;IAE1D,IAAI,MAAM,CAAC,YAAY,CAAC,gBAAgB,CAAC,EAAE;QACzC,YAAY,CAAC,gBAAgB,GAAG,cAAc,oBAAC,YAAY,CAAC,gBAAgB,GAAS,CAAC;KACvF;IAED,OAAO,YAAY,CAAC;CACrB;;;;;;ACfD;AAGA,MAAa,yBAAyB,GAA+B;;;IAGnE,KAAK,EAAE,KAAK;IACZ,IAAI,EAAE,EAAE;IACR,SAAS,EAAE,EAAE;IACb,IAAI,EAAE,EAAE;IACR,QAAQ,EAAE,EAAE;IACZ,YAAY,EAAE,sBAAsB;IACpC,UAAU,EAAE,0BAA0B;IACtC,aAAa,EAAE,EAAE;IACjB,SAAS,EAAE,GAAG;IACd,cAAc,EAAE,IAAI;IACpB,gBAAgB,EAAE,KAAK;IACvB,kBAAkB,EAAE,EAAE;IACtB,iBAAiB,EAAE,EAAE;IACrB,IAAI,EAAE,WAAW;IACjB,KAAK,EAAE,WAAW;IAClB,aAAa,EAAE,KAAK;IACpB,eAAe,EAAE,KAAK;IACtB,aAAa,EAAE,EAAE;IACjB,0BAA0B,EAAE,EAAE;IAC9B,aAAa,EAAE,EAAE;IACjB,OAAO,EAAE,KAAK;IACd,OAAO,EAAE,IAAI;IACb,UAAU,EAAE,EAAE;IACd,oBAAoB,EAAE,KAAK;IAC3B,YAAY,EAAE,EAAE;IAChB,iBAAiB,EAAE,EAAE;IACrB,eAAe,EAAE,EAAE;IACnB,iBAAiB,EAAE,KAAK;IACxB,mBAAmB,EAAE,EAAE;IACvB,eAAe,EAAE,EAAE;IACnB,WAAW,EAAE,EAAE;IACf,CAAC,EAAE,SAAS;CACb;;;;;;ACvCD;;;;AAIA,SAAgB,kBAAkB,CAAC,GAAG,OAAqC;;UACnE,YAAY,GAAG,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,yBAAyB,CAAC;IACjE,CAAC,OAAO,IAAI,EAAE;SACX,OAAO;;;;IAAC,MAAM,IAAI,MAAM,CAAC,MAAM,CAAC,YAAY,EAAE,MAAM,CAAC,EAAC,CAAC;IAE1D,OAAO,YAAY,CAAC;CACrB;;;;;;;;;;;ACFD,SAAgB,iBAAiB,CAAC,OAAmC,EAAE,UAAuB;IAC5F,UAAU,GAAG,UAAU,IAAI,IAAI,UAAU,EAAE,CAAC;IAC5C,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC;SACjB,OAAO;;;;IAAC,CAAC;;cACF,KAAK,GAAG,OAAO,CAAC,CAAC,CAAC;QACxB,IAAI,OAAO,CAAC,KAAK,CAAC,EAAE;YAClB,UAAU,GAAG,UAAU,CAAC,GAAG,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC;SACvC;KACF,EAAC,CAAC;IAEL,OAAO,UAAU,CAAC;CACnB;;;;;;;;;;;;;;ACXD,SAAgB,kBAAkB,CAAC,KAAe,EAAE,OAAoC;IACtF,IAAI,KAAK;WACJ,OAAO;WACP,KAAK,CAAC,WAAW;WACjB,OAAO,CAAC,UAAU;WAClB,KAAK,CAAC,WAAW,CAAC,WAAW,EAAE,KAAK,OAAO,CAAC,UAAU,CAAC,WAAW,EAAE,EAAE;QACzE,OAAO,CAAC,UAAU,GAAG,SAAS,CAAC;KAChC;CACF;;;;;;ACfD;;;;AAGA,SAAgB,SAAS,CAAC,KAAwB;IAChD,OAAOF,UAAQ,CAAC,KAAK,CAAC,sBAAG,KAAK,KAAa,oBAAC,KAAK,IAAc,EAAE,CAAC;CACnE;;;;;;ACLD;;;;;;AAIA,SAAgB,qBAAqB,CAAC,KAAwB,EAAE,MAAW,EAAE,GAAG,KAAK;;UAC7E,OAAO,GAAG,SAAS,CAAC,KAAK,CAAC;IAChC,OAAO,YAAY,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,MAAM,EAAE;QAC5C,OAAO;KACR,CAAC,EAAE,GAAG,KAAK,CAAC,CAAC;CACf;;;;;;;;;;ACPD,SAAgB,qBAAqB,CAAC,IAAoB;IACxD,OAAO,CAAC,IAAI;WACP,CAAC,IAAI,CAAC,aAAa;eACnB,CAAC,IAAI,CAAC,KAAK;eACX,CAAC,IAAI,CAAC,WAAW;eACjB,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,IAAI,EAAE,CAAC,CAAC,MAAM,CAAC;CAC7C;;;;;;;;;;ACND,SAAgB,sBAAsB,CAAC,IAAqB;IAC1D,OAAO,CAAC,IAAI;WACP,CAAC,IAAI,CAAC,KAAK;eACX,CAAC,IAAI,CAAC,KAAK;eACX,CAAC,IAAI,CAAC,WAAW;eACjB,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,IAAI,EAAE,CAAC,CAAC,MAAM,CAAC;CAC7C;;;;;;ACRD;AAQA,MAAa,yBAAyB,GAAG,IAAI;;AAC7C,MAAa,8BAA8B,GAAG,IAAI;;AAClD,MAAa,uBAAuB,GAAG;IACrC,IAAI,EAAE,SAAS;IACf,KAAK,EAAE,cAAc;IACrB,KAAK,EAAE,SAAS;IAChB,KAAK,EAAE,CAAC;CACT;;;;;AAED,SAAgB,uBAAuB,CAAC,MAA2B;IACjE,OAAO,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,MAAM,KAAK,MAAM,CAAC,IAAI,CAAC,uBAAuB,CAAC,CAAC,MAAM;WAC5E,MAAM,CAAC,IAAI,KAAK,uBAAuB,CAAC,IAAI;WAC5C,MAAM,CAAC,KAAK,KAAK,uBAAuB,CAAC,KAAK;WAC9C,MAAM,CAAC,KAAK,KAAK,uBAAuB,CAAC,KAAK;WAC9C,MAAM,CAAC,KAAK,KAAK,uBAAuB,CAAC,KAAK,CAAC;CACrD;AAED,MAAa,wBAAwB;;;;IAiBnC,IAAI,QAAQ;QACV,OAAO,IAAI,CAAC,IAAI,KAAK,QAAQ,CAAC;KAC/B;;;;IAED,IAAI,aAAa;QACf,OAAO,IAAI,CAAC,IAAI,KAAK,aAAa,CAAC;KACpC;;;;IAED,IAAI,YAAY;QACd,OAAO,IAAI,CAAC,IAAI,KAAK,aAAa,CAAC;KACpC;;;;IAED,IAAI,OAAO;QACT,OAAO,CAAC,IAAI,CAAC,QAAQ;eAChB,CAAC,IAAI,CAAC,eAAe,CAAC,MAAM;eAC5B,CAAC,IAAI,CAAC,gBAAgB,CAAC,MAAM;eAC7B,uBAAuB,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;KAC3C;;;;IAED,IAAI,KAAK;QACP,OAAO,IAAI,CAAC,MAAM,CAAC;KACpB;;;;;IAED,IAAI,KAAK,CAAC,KAAa;QACrB,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;KACrB;;;;IAED,YAAY,IAA+B;QACzC,MAAM,CAAC,MAAM,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;QAC1B,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,IAAI,QAAQ,CAAC;QAClC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,IAAI,CAAC,CAAC;QACnC,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,eAAe,IAAI,EAAE,CAAC;QAClD,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,gBAAgB,IAAI,EAAE,CAAC;QACpD,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,uBAAuB,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;QACtE,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,IAAI,EAAE,CAAC;QAC9B,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,WAAW,IAAI,EAAE,CAAC;QAE1C,IAAI,CAAC,wBAAwB,EAAE,CAAC;KACjC;;;;;IAED,SAAS,CAAC,KAAsB;;YAC1B,MAAM,GAAG,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,aAAa;QAE9C,IAAI,IAAI,CAAC,aAAa,EAAE;;kBAChB,eAAe,GAAG,IAAI,CAAC,2BAA2B,CAAC,KAAK,CAAC;YAC/D,MAAM,GAAG,sBAAsB,CAAC,eAAe,CAAC,GAAG,IAAI,GAAG,eAAe,CAAC,MAAM,CAAC;SAClF;aAAM,IAAI,IAAI,CAAC,YAAY,EAAE;;kBACtB,cAAc,GAAG,IAAI,CAAC,0BAA0B,CAAC,KAAK,CAAC;YAC7D,MAAM,GAAG,qBAAqB,CAAC,cAAc,CAAC,GAAG,IAAI,GAAG,cAAc,CAAC,MAAM,CAAC;SAC/E;QAED,OAAO,MAAM,IAAI,IAAI,CAAC,aAAa,IAAI,IAAI,CAAC;KAC7C;;;;;IAED,kBAAkB,CAAC,KAAsB;QACvC,IAAI,CAAC,IAAI,CAAC,gBAAgB,IAAI,CAAC,IAAI,CAAC,gBAAgB,CAAC,MAAM,EAAE;YAC3D,OAAO,IAAI,CAAC;SACb;QAED,OAAO,IAAI,CAAC,gBAAgB,CAAC,IAAI;;;;QAAC,IAAI,IACpC,IAAI,CAAC,KAAK,KAAK,KAAK,IAAI,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,MAAM,CAAC,KAAK,CAAC,EAC7D,CAAC;KACH;;;;;IAED,2BAA2B,CAAC,KAAsB;QAChD,OAAO,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC,IAAI,yBAAyB,CAAC;KACpE;;;;;IAED,iBAAiB,CAAC,UAA2B;QAC3C,IAAI,CAAC,IAAI,CAAC,eAAe,IAAI,CAAC,IAAI,CAAC,eAAe,CAAC,MAAM,EAAE;YACzD,OAAO,IAAI,CAAC;SACb;QAED,OAAO,IAAI,CAAC,eAAe,CAAC,IAAI;;;;;QAAC,CAAC,KAAK,EAAE,KAAK,KAAK,IAAI,CAAC,wBAAwB,CAAC,KAAK,EAAE,UAAU,EAAE,KAAK,CAAC,EAAC,CAAC;KAC7G;;;;;IAED,0BAA0B,CAAC,KAAsB;QAC/C,OAAO,IAAI,CAAC,iBAAiB,CAAC,KAAK,CAAC,IAAI,8BAA8B,CAAC;KACxE;;;;;;;IAED,wBAAwB,CAAC,cAA8B,EAAE,KAAsB,EAAE,KAAa;;cACtF,QAAQ,GAAG,KAAK,KAAK,CAAC,GAAG,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,eAAe,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC,aAAa;;cACtF,QAAQ,GAAG,cAAc,CAAC,aAAa;QAC7C,OAAO,QAAQ,GAAG,KAAK,IAAI,QAAQ,GAAG,KAAK,CAAC;KAC7C;;;;IAED,eAAe;QACb,WAAW,CAAC,IAAI,CAAC,gBAAgB;;;;QAAE,IAAI,IAAI,sBAAsB,CAAC,IAAI,CAAC,EAAC,CAAC;QACzE,WAAW,CAAC,IAAI,CAAC,eAAe;;;;QAAE,IAAI,IAAI,qBAAqB,CAAC,IAAI,CAAC,EAAC,CAAC;KACxE;;;;;IAED,0BAA0B,CAAC,KAAuB;;YAC5C,MAAM,GAAG,IAAI,CAAC,aAAa,IAAI,IAAI,CAAC,MAAM;QAC9C,IAAI,IAAI,CAAC,aAAa,IAAI,IAAI,CAAC,gBAAgB,CAAC,MAAM,EAAE;;kBAChD,SAAS,GAAG,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC;YAChD,MAAM,GAAG,SAAS,GAAG,SAAS,CAAC,MAAM,GAAG,IAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC;SACzE;aAAM,IAAI,IAAI,CAAC,YAAY,IAAI,IAAI,CAAC,eAAe,CAAC,MAAM,EAAE;;kBACrD,SAAS,GAAG,IAAI,CAAC,iBAAiB,CAAC,KAAK,CAAC;YAC/C,MAAM,GAAG,SAAS,GAAG,SAAS,CAAC,MAAM,GAAG,IAAI,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC;SACxE;QAED,0BAAO,MAAM,CAAC,KAAK,GAAW;KAC/B;;;;IAED,wBAAwB;QACtB,uBAAuB,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;QAC5C,uBAAuB,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QACrC,IAAI,CAAC,gBAAgB,CAAC,OAAO;;;;QAAC,IAAI,IAAI,uBAAuB,CAAC,IAAI,CAAC,MAAM,CAAC,EAAC,CAAC;QAC5E,IAAI,CAAC,eAAe,CAAC,OAAO;;;;QAAC,IAAI,IAAI,uBAAuB,CAAC,IAAI,CAAC,MAAM,CAAC,EAAC,CAAC;KAC5E;CACF;;;;;AAED,SAAS,uBAAuB,CAAC,MAA2B;IAC1D,IAAI,CAAC,MAAM,EAAE;QACX,OAAO;KACR;IAED,IAAI,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,EAAE;QACzB,MAAM,CAAC,KAAK,GAAG,QAAQ,oBAAC,MAAM,CAAC,KAAK,GAA6B,CAAC;KACnE;IAED,IAAI,MAAM,CAAC,OAAO,IAAI,OAAO,CAAC,MAAM,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE;QACnD,MAAM,CAAC,OAAO,CAAC,KAAK,GAAG,QAAQ,oBAAC,MAAM,CAAC,OAAO,CAAC,KAAK,GAA6B,CAAC;KACnF;CACF;;;;;;ACvKD,MAWa,gBAAgB;;;;IAO3B,IAAI,OAAO;QACT,OAAO,CAAC,IAAI,CAAC,YAAY;eACpB,CAAC,IAAI,CAAC,MAAM;eACZ,IAAI,CAAC,QAAQ,CAAC,OAAO;eACrB,IAAI,CAAC,gBAAgB,CAAC,OAAO;eAC7B,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,IAAI,EAAE,CAAC,CAAC,MAAM,CAAC;KACnD;;;;IAED,IAAI,OAAO;QACT,OAAO,qBAAqB,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;KACjD;;;;IAED,YAAY,GAAG,gBAA8D;QAC3E,IAAI,CAAC,KAAK,CAAC,GAAG,gBAAgB,CAAC,CAAC;QAChC,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,YAAY,IAAI,CAAC,CAAC;QAC3C,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC;QAClC,IAAI,CAAC,QAAQ,GAAG,IAAI,wBAAwB,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QAC5D,IAAI,CAAC,gBAAgB,GAAG,IAAI,wBAAwB,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;QAC5E,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,YAAY,IAAI,IAAI,CAAC;KAC/C;;;;;;;IAED,KAAK,CAAC,GAAG,kBAAgE;;cACjE,UAAU,GAAG,kBAAkB,CAAC,GAAG;;;;QAAC,IAAI,IAC5C,IAAI,IAAI,oBAAC,IAAI,IAAsB,YAAY;cAC3C,oBAAC,IAAI,IAAsB,YAAY,EAAE;cACzC,IAAI,EACT;QAED,MAAM,CAAC,MAAM,oBAAC,IAAI,IAAE,GAAG,UAAU,CAAC,CAAC;QACnC,0BAAO,IAAI,GAAC;KACb;;;;;IAED,iBAAiB,CAAC,KAAuB;QACvC,OAAO,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;KACvC;;;;;IAED,yBAAyB,CAAC,KAAuB;QAC/C,OAAO,IAAI,CAAC,gBAAgB,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;KAC/C;;;;;IAED,0BAA0B,CAAC,KAAuB;QAChD,OAAO,IAAI,CAAC,QAAQ,CAAC,0BAA0B,CAAC,KAAK,CAAC,CAAC;KACxD;;;;IAED,YAAY;;cACJ,cAAc,GAA0B,EAAE;QAChD,IAAI,IAAI,CAAC,YAAY,EAAE;YACrB,cAAc,CAAC,YAAY,GAAG,IAAI,CAAC,YAAY,CAAC;SACjD;QAED,IAAI,IAAI,CAAC,gBAAgB,IAAI,CAAC,IAAI,CAAC,gBAAgB,CAAC,OAAO,EAAE;YAC3D,cAAc,CAAC,gBAAgB,GAAG,IAAI,CAAC,gBAAgB,CAAC;SACzD;QAED,IAAI,IAAI,CAAC,QAAQ,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,OAAO,EAAE;YAC3C,cAAc,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;SACzC;QAED,IAAI,IAAI,CAAC,YAAY,EAAE;YACrB,cAAc,CAAC,YAAY,GAAG,IAAI,CAAC,YAAY,CAAC;SACjD;QAED,OAAO,cAAc,CAAC;KACvB;CACF;;;;;;AChFD;AAaA,MAAa,oBAAoB,GAAmB,CAAC,OAAO,EAAE,mBAAmB,CAAC;;AAClF,MAAa,qBAAqB,GAAmB,CAAC,MAAM,EAAE,sBAAsB,CAAC;;AACrF,MAAa,sBAAsB,GAAmB,CAAC,SAAS,EAAE,qBAAqB,CAAC;;;;;AAExF,SAAgB,mBAAmB,CAAC,YAA0B;IAC5D,OAAO,oBAAoB,CAAC,OAAO,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC,CAAC;CACxD;;;;;AAED,SAAgB,oBAAoB,CAAC,YAA0B;IAC7D,OAAO,qBAAqB,CAAC,OAAO,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC,CAAC;CACzD;;;;;AAED,SAAgB,qBAAqB,CAAC,YAA0B;IAC9D,OAAO,sBAAsB,CAAC,OAAO,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC,CAAC;CAC1D;AAED,MAAa,iBAAiB;;;;IA8B5B,IAAI,OAAO;QACT,OAAO,mBAAmB,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;KAC/C;;;;IAED,IAAI,QAAQ;QACV,OAAO,oBAAoB,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;KAChD;;;;IAED,IAAI,SAAS;QACX,OAAO,qBAAqB,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;KACjD;;;;IAED,IAAI,iBAAiB;QACnB,OAAO,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;KAC9C;;;;IAED,YAAY,GAAG,OAAmB;QAChC,MAAM,CAAC,MAAM,CAAC,IAAI,EAAE,GAAG,OAAO,CAAC,CAAC;QAEhC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,IAAI,EAAE,CAAC;QACtC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,IAAI,EAAE,CAAC;QAChC,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,IAAI,EAAE,CAAC;QAClC,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,aAAa,IAAI,EAAE,CAAC;QAC9C,IAAI,CAAC,qBAAqB,GAAG,IAAI,CAAC,qBAAqB,IAAI,EAAE,CAAC;QAC9D,IAAI,CAAC,WAAW,GAAG,IAAI,gBAAgB,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;KAC3D;;;;;IAED,QAAQ,CAAC,SAAiB;QACxB,OAAO,QAAQ,CAAC,SAAS,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;KACzC;;;;;IAED,aAAa,CAAC,SAAiB;QAC7B,OAAO,aAAa,CAAC,SAAS,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;KAC9C;;;;;;;IAED,iBAAiB,CAAC,OAA2B;QAC3C,IAAI,OAAO,CAAC,MAAM,EAAE;YAClB,mBAAA,IAAI,GAAC,MAAM;iBACR,MAAM;;;;YAAC,CAAC,IAAI,CAAC,CAAC,UAAU,EAAC;iBACzB,OAAO;;;;YAAC,KAAK,IACZ,KAAK,CAAC,MAAM,GAAG,OAAO,CAAC,IAAI;;;;YAAC,MAAM,IAAI,MAAM,CAAC,IAAI,KAAK,KAAK,CAAC,UAAU,EAAC,IAAI,KAAK,CAAC,MAAM,EACxF,CAAC;SACL;QAED,0BAAO,IAAI,GAAC;KACb;;;;IAED,KAAK;;cACG,IAAI,GAAG,KAAK,CAAC,IAAI,CAAC;QACxB,OAAO,IAAI,iBAAiB,CAAC,IAAI,CAAC,CAAC;KACpC;CACF;;;;;;MClDY,oBAAqB,SAAQ,eAAe;;;;;;;IACvD,YAAY,IAAgB,EAAE,MAAkB,EAAE,UAA4B,EAAE,GAAW;QACzF,KAAK,CAAC,IAAI,EAAE,MAAM,EAAE,UAAU,EAAE,GAAG,CAAC,CAAC;KACtC;;;;;;IAKD,YAAY,CAAC,UAAkB;;cACvB,GAAG,GAAG,IAAI,CAAC,UAAU,EAAE,2BAA2B,CAAC;QACzD,OAAO,IAAI,CAAC,IAAI;aACb,GAAG,CAAoB,GAAG,EAAE,2BAA2B,EAAE,CAAC;aAC1D,IAAI,CACH,GAAG;;;;QAAC,CAAC,QAAa,KAAK,IAAI,CAAC,uBAAuB,CAAC,QAAQ,EAAE,UAAU,CAAC,EAAC,CAC3E,CAAC;KACL;;;;;;;IAKD,WAAW,CAAC,UAAkB,EAAE,OAAe;;cACvC,GAAG,GAAG,qBAAqB,CAAC,OAAO,EAAE,EAAE,EAAE,UAAU,EAAE,0BAA0B,CAAC;QACtF,OAAO,IAAI,CAAC,IAAI;aACb,GAAG,CAAoB,GAAG,EAAE,2BAA2B,EAAE,CAAC;aAC1D,IAAI,CACH,GAAG;;;;QAAC,CAAC,QAAa,KAAK,IAAI,CAAC,uBAAuB,CAAC,QAAQ,EAAE,UAAU,CAAC,EAAC,EAC1E,GAAG;;;;QAAC,gBAAgB,IAAI,IAAI,iBAAiB,CAAC,gBAAgB,CAAC,EAAC,CACjE,CAAC;KACL;;;;;;IAKD,YAAY,CAAC,UAAkB;;cACvB,GAAG,GAAG,IAAI,CAAC,UAAU,EAAE,2BAA2B,CAAC;QACzD,OAAO,IAAI,CAAC,IAAI;aACb,GAAG,CAAc,GAAG,EAAE,2BAA2B,EAAE,CAAC;aACpD,IAAI,CACH,GAAG;;;;QAAC,CAAC,QAAa,KAAK,IAAI,CAAC,uBAAuB,CAAC,QAAQ,EAAE,UAAU,CAAC,EAAC,CAC3E,CAAC;KACL;;;;;;IAKD,YAAY,CAAC,UAAkB;;cACvB,GAAG,GAAG,IAAI,CAAC,UAAU,EAAE,wBAAwB,CAAC;QACtD,OAAO,IAAI,CAAC,IAAI;aACb,GAAG,CAAc,GAAG,EAAE,2BAA2B,EAAE,CAAC;aACpD,IAAI,CACH,GAAG;;;;QAAC,CAAC,QAAa,KAAK,IAAI,CAAC,uBAAuB,CAAC,QAAQ,EAAE,UAAU,CAAC,EAAC,CAC3E,CAAC;KACL;;;;;;IAED,WAAW,CAAC,UAAkB,EAAE,KAAc;QAC5C,OAAO,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC;aACjC,IAAI,CACH,GAAG;;;;QAAC,CAAC,QAAqB;;gBACpB,GAAG,GAAY,QAAQ,GAAG,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,IAAI;YACpD,IAAI,CAAC,GAAG,EAAE;gBACR,MAAM,IAAI,KAAK,CAAC,oBAAoB,CAAC,CAAC;aACvC;YAED,IAAI,KAAK,EAAE;gBACT,GAAG,GAAG,QAAQ,CAAC,GAAG,CAAC,IAAI;;;;gBAAC,OAAO,IAAI,OAAO,CAAC,EAAE,KAAK,KAAK,EAAC,CAAC;gBACzD,IAAI,CAAC,GAAG,EAAE;oBACR,MAAM,IAAI,KAAK,CAAC,8BAA8B,KAAK,GAAG,CAAC,CAAC;iBACzD;aACF;YAED,OAAO,GAAG,CAAC,QAAQ,CAAC;SACrB,EAAC,CACH,CAAC;KACL;;;;;;;;;;;;IAED,uBAAuB,CACrB,UAAkB,EAClB,cAAsB,EACtB,OAAe,EACf,CAAS,EACT,CAAS,EACT,QAAe,EACf,oBAAoB,GAAG,IAAI,EAC3B,wBAAwB,GAAG,IAAI;;cAEzB,SAAS,GAAG;YAChB,EAAE,OAAO,EAAE,QAAQ,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE;SAChC;QAED,OAAO,IAAI,CAAC,iBAAiB,CAAC,UAAU,EAAE,cAAc,EAAE;YACxD,SAAS;YACT,gBAAgB,EAAE,QAAQ;YAC1B,IAAI,EAAE,oBAAoB;YAC1B,KAAK,EAAE,wBAAwB;SAChC,CAAC;aACC,IAAI,CACH,GAAG;;;;QAAC,MAAM;;kBACF,KAAK,GAAG,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,IAAI,EAAE;YACpD,IAAI,MAAM,CAAC,SAAS,CAAC,MAAM,IAAI,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,MAAM,EAAE;sBAC3D,CAAC,KAAK,CAAC,GAAG,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,OAAO;gBAC3C,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC,OAAO,CAAC;gBACxB,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC;gBAC3B,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC;aAC5B;YAED,OAAO,KAAK,CAAC;SACd,EAAC,CACH,CAAC;KACL;;;;;;;IAED,iBAAiB,CACf,UAAkB,EAClB,cAAsB,EACtB,OAA+C;;cAEzC,QAAQ,GAAG,MAAM,CAAC,uBAAuB,EAAE,EAAE,OAAO,EAAE,cAAc,EAAE,CAAC;;cACvE,GAAG,GAAG,IAAI,CAAC,UAAU,EAAE,QAAQ,CAAC;;cAChC,UAAU,GAAsB,2BAA2B,EAAE;;cAC7D,cAAc,GAAG,2BAA2B,CAAC,OAAO,CAAC;;cACrD,YAAY,GAAG,CAAC,IAAI,CAAC,mBAAmB,CAAC,cAAc,CAAC;QAE9D,IAAI,YAAY,EAAE;YAChB,sBAAsB,CAAC,UAAU,EAAE,cAAc,CAAC,CAAC;SACpD;QAED,OAAO,CACL,YAAY;cACR,IAAI,CAAC,IAAI,CAAC,GAAG,CAA8B,GAAG,EAAE,UAAU,CAAC;cAC3D,IAAI,CAAC,IAAI,CAAC,IAAI,CAA8B,GAAG,EAAE,UAAU,CAAC,cAAc,CAAC,EAAE,UAAU,CAAC;aAE3F,IAAI,CACH,GAAG;;;;QAAC,QAAQ,IAAI,IAAI,CAAC,uBAAuB,CAAC,QAAQ,EAAE,UAAU,CAAC,EAAC,CACpE,CAAC;KACL;;;;;;;IAED,UAAU,CAAC,UAAkB,EAAE,KAAuB,EAAE,UAAmB;;cACnE,GAAG,GAAG,IAAI,CAAC,UAAU,EAAE,+BAA+B,CAAC;;cACvD,OAAO,GAAG,2BAA2B,EAAE;;cACvC,YAAY,GAAG,CAAC,IAAI,CAAC,mBAAmB,CAAC,KAAK,CAAC;QAErD,IAAI,YAAY,EAAE;YAChB,OAAO,CAAC,MAAM,GAAG,OAAO,CAAC,MAAM;iBAC5B,GAAG,CAAC,OAAO,EAAE,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;iBACnC,GAAG,CAAC,YAAY,EAAE,UAAU,CAAC,CAAC;SAClC;QAED,OAAO,CACL,YAAY;cACR,IAAI,CAAC,IAAI,CAAC,GAAG,CAAyB,GAAG,EAAE,OAAO,CAAC;cACnD,IAAI,CAAC,IAAI,CAAC,IAAI,CAAyB,GAAG,EAAE,UAAU,CAAC,EAAE,KAAK,EAAE,UAAU,EAAE,CAAC,EAAE,OAAO,CAAC;aAE1F,IAAI,CACH,GAAG;;;;QAAC,QAAQ,IAAI,IAAI,CAAC,uBAAuB,CAAC,QAAQ,EAAE,UAAU,CAAC,EAAC,CACpE,CAAC;KACL;;;;;;;;;IAED,eAAe,CACb,UAAkB,EAClB,KAAwB,EACxB,KAA0B,EAC1B,OAAoC;;cAE9B,SAAS,GAAG,WAAW,CAAC,KAAK,CAAC;;cAC9B,YAAY,GAA+B,kBAAkB,CAAC;YAClE,SAAS,EAAE,SAAS;YACpB,oBAAoB,EAAE,IAAI;YAC1B,cAAc,EAAE,KAAK;SACtB,EAAE,OAAO,CAAC;QAEX,OAAO,IAAI,CAAC,KAAK,CAAC,UAAU,EAAE,SAAS,CAAC,KAAK,CAAC,EAAE,YAAY,CAAC;aAC1D,IAAI,CACH,GAAG;;;;QAAC,UAAU;YACZ,OAAO,UAAU,CAAC,QAAQ,CAAC,GAAG;;;;YAAC,CAAC,IAAI,CAAC,CAAC,UAAU,CAAC,SAAS,CAAC,EAAC,CAAC;SAC9D,EAAC,CACH,CAAC;KACL;;;;;;;;IAED,aAAa,CACX,UAAkB,EAClB,KAAwB,EACxB,WAAmB,EACnB,OAAoC;;cAE9B,YAAY,GAA+B,kBAAkB,CAAC;YAClE,eAAe,EAAE,IAAI;YACrB,cAAc,EAAE,KAAK;YACrB,KAAK,EAAE,WAAW;SACnB,EAAE,OAAO,CAAC;QAEX,OAAO,IAAI,CAAC,KAAK,CAAC,UAAU,EAAE,SAAS,CAAC,KAAK,CAAC,EAAE,YAAY,CAAC;aAC1D,IAAI,CACH,GAAG;;;;QAAC,CAAC,MAAW;YACd,OAAO,CAAC,MAAM,IAAI,EAAE,KAAK,EAAE,CAAC,EAAE,EAAE,KAAK,CAAC;SACvC,EAAC,CACH,CAAC;KACL;;;;;;;;IAED,QAAQ,CACN,UAAkB,EAClB,KAAiB,EACjB,OAAwB,EACxB,OAAoC;QAEpC,kBAAkB,CAAC,KAAK,EAAE,OAAO,CAAC,CAAC;QACnC,MAAM,IAAI,KAAK,CAAC,qBAAqB,CAAC,CAAC;KACxC;;;;;;;;;;;IAED,WAAW,CACT,UAAkB,EAClB,KAAiB,EACjB,OAAwB,EACxB,WAAmB,EACnB,SAAiB,EACjB,QAAe,EACf,OAAoC;QAEpC,kBAAkB,CAAC,KAAK,EAAE,OAAO,CAAC,CAAC;;cAC7B,KAAK,GAAG,IAAI,CAAC,eAAe,EAAE;aACjC,cAAc,CAAC,KAAK,CAAC;aACrB,WAAW,CAAC,OAAO,CAAC;aACpB,YAAY,CAAC,QAAQ,CAAC;aACtB,eAAe,CAAC,WAAW,EAAE,SAAS,CAAC;aACvC,aAAa,EAAE;;cAEZ,YAAY,GAA+B,kBAAkB,CAAC,EAAE,KAAK,EAAE,cAAc,EAAE,KAAK,EAAE,EAAE,OAAO,CAAC;QAE9G,OAAO,IAAI;aACR,KAAK,CAAC,UAAU,EAAE,KAAK,CAAC,EAAE,EAAE,YAAY,CAAC;aACzC,IAAI,CACH,GAAG;;;;QAAC,iBAAiB,IAAI,IAAI,sBAAsB,CAAC,iBAAiB,EAAE,KAAK,CAAC,EAAC,CAC/E,CAAC;KACL;;;;;;;;IAED,kBAAkB,CAChB,UAAkB,EAClB,KAAiB,EACjB,UAAkB,EAClB,OAAoC;QAEpC,OAAO,IAAI,CAAC,YAAY,CAAC,UAAU,EAAE,KAAK,CAAC,EAAE,EAAE,UAAU,EAAE,OAAO,CAAC;aAChE,IAAI,CACH,GAAG;;;;QAAC,QAAQ,IAAI,IAAI,CAAC,uBAAuB,CAAC,QAAQ,EAAE,UAAU,CAAC,EAAC,EACnE,GAAG;;;;QAAC,iBAAiB,IAAI,IAAI,sBAAsB,CAAC,iBAAiB,EAAE,KAAK,CAAC,EAAC,CAC/E,CAAC;KACL;;;;;;;;;IAED,QAAQ,CACN,UAAkB,EAClB,OAAwB,EACxB,KAAmB,EACnB,QAAe,EACf,OAAoC;QAEpC,kBAAkB,CAAC,KAAK,EAAE,OAAO,CAAC,CAAC;;cAC7B,KAAK,GAAG,IAAI,CAAC,eAAe,EAAE;aACjC,gBAAgB,CAAC,KAAK,CAAC;aACvB,KAAK,CAAC,KAAK,CAAC,yBAAyB,EAAE,gBAAgB,CAAC,MAAM,EAAE,OAAO,CAAC;aACxE,YAAY,CAAC,QAAQ,CAAC;aACtB,aAAa,EAAE;;cAEZ,YAAY,GAA+B,kBAAkB,CAAC;YAClE,KAAK;SACN,EAAE,OAAO,CAAC;QAEX,OAAO,IAAI;aACR,KAAK,CAAC,UAAU,EAAE,KAAK,CAAC,EAAE,EAAE,YAAY,CAAC;aACzC,IAAI,CACH,GAAG;;;;QAAC,CAAC;YACH,OAAO,CAAC,IAAI,CAAC,CAAC,QAAQ,IAAI,CAAC,CAAC,QAAQ,CAAC,MAAM;kBACvC,IAAI,cAAc,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE,KAAK,CAAC;kBACxC,IAAI,CAAC;SACV,EAAC,CACH,CAAC;KACL;;;;;;;;IAED,WAAW,CACT,UAAkB,EAClB,KAAmB,EACnB,WAAmB,EACnB,OAAoC;;cAE9B,YAAY,GAA+B,kBAAkB,CAAC;YAClE,KAAK,EAAE,WAAW;SACnB,EAAE,OAAO,CAAC;QAEX,OAAO,IAAI,CAAC,KAAK,CAAC,UAAU,EAAE,KAAK,CAAC,EAAE,EAAE,YAAY,CAAC;aAClD,IAAI,CACH,GAAG;;;;QAAC,iBAAiB,IAAI,IAAI,wBAAwB,CAAC,iBAAiB,EAAE,KAAK,EAAE,OAAO,CAAC,KAAK,CAAC,EAAC,CAChG,CAAC;KACL;;;;;;;;IAED,kBAAkB,CAChB,UAAkB,EAClB,KAAmB,EACnB,UAAkB,EAClB,OAAoC;QAEpC,OAAO,IAAI,CAAC,YAAY,CAAC,UAAU,EAAE,KAAK,CAAC,EAAE,EAAE,UAAU,EAAE,OAAO,CAAC;aAChE,IAAI,CACH,GAAG;;;;QAAC,iBAAiB,IAAI,IAAI,wBAAwB,CAAC,iBAAiB,EAAE,KAAK,CAAC,EAAC,CACjF,CAAC;KACL;;;;;;;;IAED,YAAY,CACV,UAAkB,EAClB,OAA0B,EAC1B,UAAkB,EAClB,OAAoC;;cAE9B,YAAY,GAA+B,kBAAkB,CAAC;YAClE,IAAI,EAAE,UAAU;SACjB,EAAE,OAAO,CAAC;;QAGX,OAAO,YAAY,CAAC,KAAK,CAAC;QAE1B,OAAO,IAAI,CAAC,KAAK,CAAC,UAAU,EAAE,OAAO,EAAE,YAAY,CAAC,CAAC;KACtD;;;;;;;IAED,KAAK,CAAC,UAAkB,EAAE,OAA0B,EAAE,OAAmC;;cACjF,GAAG,GAAG,qBAAqB,CAAC,OAAO,EAAE,OAAO,EAAE,UAAU,EAAE,gCAAgC,CAAC;;cAC3F,UAAU,GAAG,2BAA2B,EAAE;;cAC1C,aAAa,GAAG,IAAI,CAAC,mBAAmB,CAAC,OAAO,CAAC,KAAK,CAAC;QAE7D,IAAI,CAAC,aAAa,EAAE;YAClB,UAAU,CAAC,MAAM,GAAG,iBAAiB,CAAC,OAAO,EAAE,UAAU,CAAC,MAAM,CAAC,CAAC;SACnE;;cAEK,MAAM,GAAG,aAAa;cACxB,IAAI,CAAC,IAAI,CAAC,IAAI,CAAoB,GAAG,EAAE,OAAO,EAAE,UAAU,CAAC;cAC3D,IAAI,CAAC,IAAI,CAAC,GAAG,CAAoB,GAAG,EAAE,UAAU,CAAC;QAErD,OAAO,MAAM,CAAC,IAAI,CAChB,GAAG;;;;QAAC,CAAC,QAAyD;YAC5D,IAAI,CAAC,uBAAuB,CAAC,QAAQ,EAAE,GAAG,CAAC,CAAC;YAC5C,0BAAO,QAAQ,GAAsB;SACtC,EAAC,CACH,CAAC;KACH;;;YArVF,UAAU,SAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;YA3DQ,UAAU;YAqBV,UAAU;YAOV,gBAAgB;YArBhB,MAAM;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACTf;;;;AAGA,SAAgB,uBAAuB,CAAC,GAAW;IACjD,OAAO,uCAAuC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;CAC1D;;;;;;ACLD;;;;AAGA,SAAgB,yBAAyB,CAAC,GAAW;IACnD,OAAO,iCAAiC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;CACpD;;;;;;;;;;;;;;;;ACLD;;;;AAGA,SAAgB,qBAAqB,CAAC,GAAW;IAC/C,OAAO,6BAA6B,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;CAChD;;;;;;ACLD;;;;AAGA,SAAgB,qBAAqB,CAAC,GAAW;IAC/C,OAAO,6BAA6B,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;CAChD;;;;;;ACLD;;;;AAGA,SAAgB,2BAA2B,CAAC,GAAW;IACrD,OAAO,oCAAoC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;CACvD;;;;;;ACLD;;;;;AAMA,SAAgB,2BAA2B,CAAC,UAAkB,EAAE,OAAe;IAC7E,CAAC,OAAO,CAAC,GAAG,CAAC,OAAO,IAAI,EAAE,EAAE,KAAK,CAAC,GAAG,CAAC,CAAC;IACvC,OAAO,OAAO,CAAC,UAAU;WACpB,OAAO;WACP,IAAI,MAAM,CAAC,UAAU,EAAE,IAAI,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC;WAC1C,qBAAqB,CAAC,OAAO,CAAC;WAC9B,yBAAyB,CAAC,OAAO,CAAC;WAClC,qBAAqB,CAAC,OAAO,CAAC;WAC9B,2BAA2B,CAAC,OAAO,CAAC,CACxC,CAAC;CACH;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AChBD;;;;;;;AAQA,SAAgB,uBAAuB,CAAC,UAAkB;;QACpD,OAAO,GAAW,IAAI;QACtB,KAAK,WAAW,CAAC,GAAG,CAAC,UAAU,IAAI,EAAE,EAAE,KAAK,CAAC,yCAAyC,CAAC;IAE3F,IAAI,WAAW,EAAE;QACf,WAAW,GAAG,WAAW,CAAC,OAAO,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC;QAC3C,OAAO,GAAG,MAAM,CAAC,WAAW,CAAC,CAAC;KAC/B;IAED,OAAO,OAAO,CAAC;CAChB;;;;;;AClBD;;;;;;;AASA,SAAgB,mBAAmB,CAAC,UAAkB;UAC9C,CAAC,IAAI,CAAC,GAAG,CAAC,UAAU,IAAI,EAAE,EAAE,KAAK,CAAC,mCAAmC,CAAC;IAC5E,OAAO,IAAI,KAAK,UAAU;UACtB,IAAI;UACJ,IAAI,CAAC,IAAI,EAAE,WAAW,CAAC,CAAC;CAC7B;;;;;;ACdD;;;;AAGA,SAAgB,mBAAmB,CAAC,GAAW;IAC7C,OAAO,mCAAmC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;CACtD;;;;;;;;;;ACLD,SAAgB,+BAA+B,CAAC,OAAe;IAC7D,OAAO,OAAO,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;CAClC;;;;;;;;;;ACFD,SAAgB,gCAAgC,CAAC,OAAe;IAC9D,OAAO,OAAO,CAAC,QAAQ,CAAC,eAAe,CAAC,IAAI,OAAO,CAAC,QAAQ,CAAC,aAAa,CAAC,CAAC;CAC7E;;;;;;;;;;;;;;;;ACFD;;;;AAIA,SAAgB,YAAY,CAAC,kBAA0B;UAC/C,CAAC,aAAa,CAAC,GAAG,CAAC,kBAAkB,IAAI,EAAE,EAAE,KAAK,CAAC,uBAAuB,CAAC;IACjF,OAAO,aAAa,CAAC,QAAQ,CAAC,GAAG,CAAC;UAC9B,kBAAkB,CAAC,aAAa,CAAC;UACjC,aAAa,CAAC;CACnB;;;;;;ACRD;;;;;AAIA,SAAgB,uBAAuB,CAAC,KAAU,EAAE,SAAkB;;UAC9D,WAAW,GAA0B;QACzC,WAAW,EAAE,KAAK,CAAC,YAAY,IAAI,KAAK,CAAC,WAAW,IAAI,KAAK,CAAC,KAAK,IAAI,IAAI;QAC3E,YAAY,EAAE,KAAK,CAAC,aAAa,IAAI,KAAK,CAAC,YAAY,IAAI,IAAI;QAC/D,SAAS,EAAE,KAAK,CAAC,UAAU,IAAI,KAAK,CAAC,SAAS,IAAI,CAAC;QACnD,QAAQ,EAAE,KAAK,CAAC,GAAG,IAAI,KAAK,CAAC,QAAQ,IAAI,KAAK;QAC9C,MAAM,EAAE,KAAK,CAAC,MAAM,IAAI,SAAS,IAAI,IAAI;QACzC,QAAQ,EAAE,KAAK,CAAC,QAAQ,IAAI,IAAI;QAChC,OAAO,EAAE,KAAK,CAAC,OAAO,IAAI,IAAI;KAC/B;IAED,IAAI,WAAW,CAAC,OAAO,EAAE;QACvB,WAAW,CAAC,OAAO,GAAG,IAAI,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;KACrD;IAED,IAAI,WAAW,CAAC,MAAM,EAAE;QACtB,YAAY,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;KAClC;IAED,IAAI,CAAC,WAAW,CAAC,OAAO,EAAE;QACxB,WAAW,CAAC,OAAO,GAAG,UAAU,CAAC,WAAW,CAAC,SAAS,EAAE,IAAI,IAAI,EAAE,CAAC,CAAC;KACrE;IAED,OAAO,WAAW,CAAC;CACpB;;;;;;;;;;AC1BD,SAAgB,iBAAiB,CAAC,KAAU;;UACpC,WAAW,GAAoB;QACnC,KAAK,EAAE,KAAK,CAAC,KAAK,IAAI,IAAI;QAC1B,QAAQ,EAAE,KAAK,CAAC,GAAG,IAAI,KAAK,CAAC,QAAQ,IAAI,KAAK;QAC9C,OAAO,EAAE,KAAK,CAAC,OAAO,IAAI,CAAC;KAC5B;IAED,IAAI,WAAW,CAAC,OAAO,EAAE;QACvB,WAAW,CAAC,OAAO,GAAG,IAAI,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;KACrD;IAED,OAAO,WAAW,CAAC;CACpB;;;;;;ACfD;;;;AAGA,SAAgB,+BAA+B,CAAC,UAAkB,MAAM,CAAC,QAAQ,CAAC,IAAI;;UAC9E,sBAAsB,GAAG,OAAO,CAAC,WAAW,CAAC,0CAA0C,CAAC;;UACxF,qBAAqB,GAAG,OAAO,CAAC,MAAM,CAAC,sBAAsB,CAAC;IAEpE,OAAO,OAAO,CAAC,OAAO,CAAC,qBAAqB,EAAE,EAAE,CAAC,CAAC;CACnD;;;;;;MCuBY,iBAAkB,SAAQ,eAAe;;;;;;;IACpD,YAAY,IAAgB,EAAE,MAAkB,EAAE,UAA4B,EAAE,GAAW;QACzF,KAAK,CAAC,IAAI,EAAE,MAAM,EAAE,UAAU,EAAE,GAAG,CAAC,CAAC;KACtC;;;;;;;;;IAED,cAAc,CAAC,SAAiB,EAAE,QAAgB,EAAE,IAAY,EAAE,QAAa,EAAE,MAAmB;;cAC5F,IAAI,GAAG,MAAM,CAAC,MAAM,CAAC;YACzB,SAAS,EAAE,QAAQ;YACnB,IAAI;YACJ,YAAY,EAAE,+BAA+B,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC;YACnE,UAAU,EAAE,oBAAoB;SACjC,EAAE,QAAQ,CAAC;;cACN,QAAQ,GAAG,UAAU,CAAC,IAAI,CAAC;QAEjC,OAAO,IAAI,CAAC,MAAM,CAAC,SAAS,EAAE,2BAA2B,EAAE,QAAQ,EAAE,MAAM,CAAC;aACzE,IAAI,CACH,GAAG;;;;QAAC,QAAQ,IAAI,uBAAuB,CAAC,QAAQ,EAAE,SAAS,CAAC,EAAC,CAC9D,CAAC;KACL;;;;;;;;;IAED,YAAY,CACV,SAAiB,EACjB,QAAgB,EAChB,YAAoB,EACpB,QAAa,EACb,MAAmB;;cAEb,IAAI,GAAG,MAAM,CAAC,MAAM,CAAC;YACzB,SAAS,EAAE,QAAQ;YACnB,aAAa,EAAE,YAAY;YAC3B,UAAU,EAAE,eAAe;SAC5B,EAAE,QAAQ,CAAC;;cACN,QAAQ,GAAG,UAAU,CAAC,IAAI,CAAC;QAEjC,OAAO,IAAI,CAAC,MAAM,CAAC,SAAS,EAAE,2BAA2B,EAAE,QAAQ,EAAE,MAAM,CAAC;aACzE,IAAI,CACH,GAAG;;;;QAAC,QAAQ,IAAI,uBAAuB,CAAC,QAAQ,EAAE,SAAS,CAAC,EAAC,CAC9D,CAAC;KACL;;;;;;;;IAED,cAAc,CAAC,SAAiB,EAAE,iBAAyB,EAAE,SAAiB,EAAE,MAAmB;;cAC3F,gBAAgB,GAAG;YACvB,OAAO,EAAE,UAAU;YACnB,SAAS;YACT,KAAK,EAAE,iBAAiB;YACxB,OAAO,EAAE,MAAM,CAAC,QAAQ,CAAC,IAAI;SAC9B;QAED,OAAO,IAAI,CAAC,KAAK,CAAC,SAAS,EAAE,8BAA8B,EAAE,gBAAgB,EAAE,MAAM,CAAC;aACnF,IAAI,CACH,GAAG;;;;QAAC,KAAK,IAAI,iBAAiB,CAAC,KAAK,CAAC,EAAC,CACvC,CAAC;KACL;;;;;;;;;;IAES,KAAK,CAAI,SAAiB,EAAE,QAAgB,EAAE,WAAe,EAAE,MAAmB;;cACpF,aAAa,GAAG,YAAY,CAAC,SAAS,CAAC;;cACvC,GAAG,GAAG,IAAI,CAAC,aAAa,EAAE,QAAQ,CAAC;;cACnC,UAAU,GAAsB,2BAA2B,CAAC,MAAM,CAAC;QAEzE,sBAAsB,CAAC,UAAU,EAAE,WAAW,CAAC,CAAC;QAChD,OAAO,IAAI,CAAC,IAAI;aACb,GAAG,CAAI,GAAG,EAAE,UAAU,CAAC;aACvB,IAAI,CACH,GAAG;;;;QAAC,CAAC,QAAW,KAAK,IAAI,CAAC,uBAAuB,CAAC,QAAQ,EAAE,GAAG,CAAC,EAAC,CAClE,CAAC;KACL;;;;;;;;;;IAES,MAAM,CAAI,SAAiB,EAAE,QAAgB,EAAE,QAAkB,EAAE,MAAmB;;cACxF,aAAa,GAAG,YAAY,CAAC,SAAS,CAAC;;cACvC,GAAG,GAAG,IAAI,CAAC,aAAa,EAAE,QAAQ,CAAC;;cACnC,UAAU,GAAsB,2BAA2B,CAAC,MAAM,CAAC;QAEzE,OAAO,IAAI,CAAC,IAAI;aACb,IAAI,CAAI,GAAG,EAAE,QAAQ,EAAE,UAAU,CAAC;aAClC,IAAI,CACH,GAAG;;;;QAAC,CAAC,QAAW,KAAK,IAAI,CAAC,uBAAuB,CAAC,QAAQ,EAAE,GAAG,CAAC,EAAC,CAClE,CAAC;KACL;;;YAhFF,UAAU,SAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;YA5BQ,UAAU;YAUV,UAAU;YACV,gBAAgB;YAEhB,MAAM;;;;;;;;ACdf;;;;AAMA,SAAgB,wBAAwB,CAAC,UAAkB,MAAM,CAAC,QAAQ,CAAC,IAAI;;UACvE,sBAAsB,GAAG,OAAO,CAAC,WAAW,CAAC,0CAA0C,CAAC;;UACxF,gBAAgB,GAAG,SAAS,CAChC,OAAO,CAAC,MAAM,CAAC,sBAAsB,CAAC,CACvC;;UAEK,YAAY,GAAG,cAAc,CAAC,gBAAgB,CAAC;;UAC/C,WAAW,GAAG,YAAY,CAAC,YAAY;;UACvC,QAAQ,GAAG,YAAY,CAAC,QAAQ;;UAChC,SAAS,GAAG,MAAM,CAAC,YAAY,CAAC,UAAU,CAAC;;UAC3C,QAAQ,GAAG,OAAO,CAAC,YAAY,CAAC,GAAG,CAAC;IAE1C,OAAO,uBAAuB,CAAC;QAC7B,WAAW;QACX,QAAQ;QACR,SAAS;QACT,QAAQ;KACT,CAAC,CAAC;CACJ;;;;;;ACxBD;;;;;;AAKA,SAAgB,yBAAyB,CAAC,SAAiB,EAAE,QAAgB,EAAE,UAAyC,EAAE;IACxH,OAAO,GAAG,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,qCAAqC,EAAE,OAAO,CAAC,CAAC;IAC5E,SAAS,GAAG,YAAY,CAAC,SAAS,CAAC,CAAC;;UAE9B,WAAW,GAAG,kBAAkB,CAAC,GAAG,OAAO,CAAC,WAAW,GAAG,OAAO,CAAC,cAAc,EAAE,CAAC;;UACnF,GAAG,GAAG,IAAI,CAAC,SAAS,EAAE,+BAA+B,CAAC;IAE5D,OAAO,GAAG,GAAG,cAAc,QAAQ,iBAAiB,WAAW,kBAAkB,OAAO,CAAC,YAAY,EAAE,CAAC;CACzG;;;;;;ACdD;;;;AAKA,SAAgB,mBAAmB,CAAC,SAAiB;;UAC7C,aAAa,GAAG,YAAY,CAAC,SAAS,CAAC;IAC7C,OAAO,IAAI,CAAC,aAAa,EAAE,uBAAuB,CAAC,CAAC;CACrD;;;;;;;;;;;;;;ICMY,YAAY;;;MAAZ,YAAY;CACxB,CAAA;;YALA,UAAU,SAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;AAEY,YAAY;IADxB,UAAU,CAAC,cAAc,CAAC;GACd,YAAY,CACxB;;;;;;;ACfD,MAAa,gCAAgC,GAAG,gBAAgB;;;;;;MCqBnD,eAAe;;;YAb3B,QAAQ,SAAC;gBACR,OAAO,EAAE;oBACP,YAAY;oBACZ,aAAa;iBACd;gBACD,YAAY,EAAE,EACb;gBACD,OAAO,EAAE,EACR;gBACD,SAAS,EAAE,EACV;gBACD,OAAO,EAAE,CAAC,sBAAsB,CAAC;aAClC;;;;;;;MCAY,aAAa;IACxB;KACC;;;;;;;IAED,aAAa,CAAC,gBAAwB,EAAE,SAAc,EAAE,EAAE,iBAA2B;QACnF,OAAO,MAAM,CAAC,gBAAgB,EAAE,MAAM,CAAC,MAAM,CAC3C,IAAI,CAAC,gBAAgB,EAAE,EACvB,MAAM,CACP,EAAE,iBAAiB,CAAC,CAAC;KACvB;;;;;;;;IAED,uBAAuB,CAAC,gBAAgB,GAAG,gCAAgC,EAAE,GAAG,QAAmB;;cAC3F,QAAQ,GAAG,mBAAA,IAAI,GAAC,aAAa,CAAC,gBAAgB,EAAE;YACpD,aAAa,EAAE,QAAQ,CAAC,MAAM;SAC/B,CAAC;;cAEI,iBAAiB,GAAsB;YAC3C,IAAI,EAAE,mBAAmB;YACzB,QAAQ;SACT;QAED,OAAO,mBAAA,IAAI,GAAC,UAAU,CAAC,mBAAA,IAAI,GAAC,SAAS,CAAC,iBAAiB,CAAC,EAAE,QAAQ,EAAE,cAAc,CAAC,CAAC;KACrF;;;;;;;;IAED,aAAa,CAAC,gBAAgB,GAAG,gCAAgC,EAAE,OAAgB;QACjF,OAAO,mBAAA,IAAI,GAAC,UAAU,CAAC,mBAAA,IAAI,GAAC,SAAS,CAAC,OAAO,CAAC,EAAE,gBAAgB,EAAE,cAAc,CAAC,CAAC;KACnF;;;;;IAED,SAAS,CAAC,IAAS;QACjB,OAAO,IAAI,CAAC,SAAS,CAAC,IAAI;;;;;QAAE,CAAC,GAAG,EAAE,KAAK;YACrC,OAAO,GAAG,CAAC,UAAU,CAAC,IAAI,CAAC,GAAG,SAAS,GAAG,KAAK,CAAC;SACjD,GAAE,CAAC,CAAC,CAAC;KACP;;;;;;;;IAED,UAAU,CAAC,IAAS,EAAE,gBAAwB;;cACtC,UAAU,GAAW,QAAQ,CAAC,IAAI,CAAC;iCACrC,IAAI;cACJ,mBAAA,IAAI,GAAC,SAAS,CAAC,IAAI,CAAC;QAExB,OAAO,mBAAA,IAAI,GAAC,UAAU,CAAC,UAAU,EAAE,gBAAgB,EAAE,cAAc,CAAC,CAAC;KACtE;;;;;;;;;IAED,YAAY,CAAC,UAAkB,EAAE,gBAAwB,EAAE,WAAoB;;cACvE,QAAQ,GAAG,mBAAA,IAAI,GAAC,aAAa,CAAC,gBAAgB,CAAC;QACrD,WAAW,GAAG,WAAW,IAAI,cAAc,CAAC,UAAU,CAAC,CAAC;;cAClD,IAAI,GAAG,YAAY,CAAC,UAAU,EAAE,WAAW,CAAC;QAElD,OAAO,mBAAA,IAAI,GAAC,aAAa,CAAC,GAAG,CAAC,eAAe,CAAC,IAAI,CAAC,EAAE,QAAQ,CAAC,CAAC;KAChE;;;;;;;;;IAED,UAAU,CAAC,IAAS,EAAE,gBAAwB,EAAE,WAAW,GAAG,cAAc;;cACpE,IAAI,GAAG,IAAI,IAAI,CAAC,CAAC,IAAI,CAAC,EAAE,EAAE,IAAI,EAAE,WAAW,EAAE,CAAC;;cAC9C,QAAQ,GAAG,mBAAA,IAAI,GAAC,aAAa,CAAC,gBAAgB,CAAC;QAErD,OAAO,mBAAA,IAAI,GAAC,UAAU,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAC;KACxC;;;;;;;;IAED,UAAU,CAAC,IAAU,EAAE,gBAAwB;;cACvC,QAAQ,GAAG,mBAAA,IAAI,GAAC,aAAa,CAAC,gBAAgB,CAAC;QACrD,OAAO,mBAAA,IAAI,GAAC,aAAa,CAAC,MAAM,CAAC,GAAG,CAAC,eAAe,CAAC,IAAI,CAAC,EAAE,QAAQ,CAAC,CAAC;KACvE;;;;;;;;IAED,aAAa,CAAC,GAAW,EAAE,QAAgB;;cACnC,IAAI,GAAG,QAAQ,CAAC,aAAa,CAAC,GAAG,CAAC;QAExC,IAAI,CAAC,IAAI,GAAG,GAAG,CAAC;QAChB,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;QACzB,IAAI,CAAC,KAAK,EAAE,CAAC;QAEb,0BAAO,IAAI,GAAC;KACb;;;;;IAES,gBAAgB;QACxB,OAAO;YACL,IAAI,EAAE,IAAI,IAAI,EAAE;YAChB,SAAS,EAAE,UAAU,CAAC,IAAI,IAAI,EAAE,EAAE,YAAY,CAAC;YAC/C,IAAI,EAAE,IAAI,IAAI,EAAE,CAAC,WAAW,EAAE;SAC/B,CAAC;KACH;;;YAjFF,UAAU,SAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;ICJY,iBAAiB;;;MAAjB,iBAAiB;IAJ9B;QAKE,4BAAuB,GAAG,CAAC,CAAC;QAC5B,8BAAyB,GAAG,CAAC,CAAC;QAC9B,8BAAyB,GAAG,EAAE,CAAC;QAC/B,mCAA8B,GAAG,CAAC,CAAC;QACnC,mCAA8B,GAAG,CAAC,CAAC;QACnC,0BAAqB,GAAG,IAAI,CAAC;QAC7B,yBAAoB,GAAG,IAAI,CAAC;QAC5B,oBAAe,GAAG,IAAI,CAAC;QACvB,8BAAyB,GAAG,KAAK,CAAC;QAClC,kCAA6B,GAAG,gCAAgC,CAAC;QACjE,qBAAgB,GAAG,CAAC,CAAC;QACrB,8BAAyB,GAAG,IAAI,CAAC;QACjC,mCAA8B,GAAG,IAAI,CAAC;QACtC,8BAAyB,GAAG,oBAAoB,CAAC;QACjD,qCAAgC,GAAG,6DAA6D;YAC9F,uGAAuG,CAAC;KAC3G;CAAA,CAAA;;YArBA,UAAU,SAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;AAEY,iBAAiB;IAD7B,UAAU,CAAC,mBAAmB,CAAC;GACnB,iBAAiB,CAiB7B;;;;;;;AChCD,MAAa,4CAA4C,GAAG,IAAI;;AAChE,MAAa,uCAAuC,GAAG,8BAA8B;;AACrF,MAAa,mBAAmB,GAAuC,EAAE;;AACzE,MAAa,yBAAyB,GAAG,UAAU;;;;;;ACHnD;;;;AAEA,SAAgB,YAAY,CAAC,EAAU;IACrC;;;;IAAO,CAAC,WAAgB;QACtB,mBAAmB,CAAC,IAAI,CAAC,EAAE,EAAE,EAAE,WAAW,EAAE,CAAC,CAAC;KAC/C,EAAC;CACH;;;;;;;;;;;ICFC,OAAQ,QAAQ;;;;IAKhB,MAAO,MAAM;;;;IAKb,MAAO,MAAM;;;;IAKb,MAAO,MAAM;;;;IAKb,MAAO,MAAM;;;;;;;;;;;;ACLf,MAAsB,cAAc;;;;IAMlC,YAA+B,GAAW;QAAX,QAAG,GAAH,GAAG,CAAQ;QAL1C,iBAAY,GAA2B,EAAE,CAAC;QAC1C,iBAAY,GAA2B,sBAAsB,CAAC,KAAK,CAAC;KAKnE;;;;;IAyBD,aAAa,CAAC,UAAgC;QAC5C,OAAO,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC,CAAC;KACnD;;;YArCF,UAAU,SAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;YAVQ,MAAM;;;;;;;;;;;;ACLf,SAAgB,qBAAqB,CAAC,QAAkB;;UAChD,WAAW,GAAgB;QAC/B,SAAS,EAAE,QAAQ,CAAC,SAAS;QAC7B,QAAQ,EAAE,QAAQ,CAAC,MAAM,CAAC,QAAQ;QAClC,QAAQ,EAAE,QAAQ,CAAC,MAAM,CAAC,QAAQ;QAClC,gBAAgB,EAAE,QAAQ,CAAC,MAAM,CAAC,gBAAgB;QAClD,QAAQ,EAAE,QAAQ,CAAC,MAAM,CAAC,QAAQ;QAClC,SAAS,EAAE,QAAQ,CAAC,MAAM,CAAC,SAAS;QACpC,OAAO,EAAE,QAAQ,CAAC,MAAM,CAAC,OAAO;QAChC,KAAK,EAAE,QAAQ,CAAC,MAAM,CAAC,KAAK;KAC7B;IAED,OAAO,WAAW,CAAC;CACpB;;;;;;;;ICfC,UAAW,UAAU;IACrB,UAAW,UAAU;IACrB,kBAAmB,UAAU;IAC7B,SAAU,SAAS;IACnB,OAAQ,OAAO;IACf,mBAAoB,mBAAmB;IACvC,YAAa,YAAY;IACzB,MAAO,MAAM;IACb,MAAO,MAAM;IACb,MAAO,MAAM;IACb,MAAO,MAAM;;;;;;;;;;;ICaF,qBAAqB;;;;MAArB,qBAAsB,SAAQ,cAAc;;;;;IAiBvD,YAAY,GAAW,EAAmB,MAAyB;QACjE,KAAK,CAAC,GAAG,CAAC,CAAC;QAD6B,WAAM,GAAN,MAAM,CAAmB;QAhBnE,iBAAY,GAAG;YACb,oBAAoB,CAAC,QAAQ;YAC7B,oBAAoB,CAAC,QAAQ;YAC7B,oBAAoB,CAAC,gBAAgB;YACrC,oBAAoB,CAAC,OAAO;YAC5B,oBAAoB,CAAC,KAAK;SAC3B,CAAC;KAYD;;;;IAVD,IAAI,IAAI;QACN,OAAO,IAAI,CAAC,MAAM,CAAC,yBAAyB,CAAC;KAC9C;;;;IAED,IAAI,WAAW;QACb,OAAO,IAAI,CAAC,MAAM,CAAC,gCAAgC,CAAC;KACrD;;;;;IAMD,kBAAkB,CAAC,OAAyB;QAC1C,OAAO,IAAI,OAAO;;;;;QAAc,CAAC,OAAO,EAAE,MAAM,KAC9C,SAAS,CAAC,WAAW;aAClB,kBAAkB;;;;QAAC,CAAC,QAAkB;YACrC,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,iCAAiC,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC;YAC7D,OAAO,CACL,qBAAqB,CAAC,QAAQ,CAAC,CAChC,CAAC;SACH,GAAE,MAAM,EAAE,OAAO,CAAC,EACtB,CAAC;KACH;;;;;IAED,aAAa,CAAC,OAAyB;;cAC/B,OAAO,GAAG,IAAI,OAAO,EAAe;;cACpC,OAAO,GAAG,SAAS,CAAC,WAAW,CAAC,aAAa;;;;QACjD,QAAQ;YACN,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,+BAA+B,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC;YAC3D,OAAO,CAAC,IAAI,CAAC,qBAAqB,CAAC,QAAQ,CAAC,CAAC,CAAC;SAC/C;;;;QACD,KAAK,IAAI,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,GAC7B,OAAO,CACR;QAED,OAAO,OAAO,CAAC,IAAI,CACjB,QAAQ;;;QAAC,MAAM,SAAS,CAAC,WAAW,CAAC,UAAU,CAAC,OAAO,CAAC,EAAC,CAC1D,CAAC;KACH;;;;IAED,WAAW;QACT,OAAO,EAAE,CAAC,aAAa,IAAI,SAAS,CAAC,CAAC;KACvC;CACF,CAAA;;YAtDA,UAAU,SAAC,EAAE,UAAU,EAAE,MAAM,EAAE;;;;YATzB,MAAM;YACN,iBAAiB;;;;;;;AAUb,qBAAqB;IADjC,YAAY,CAAC,yBAAyB,CAAC;qCAkBrB,MAAM,EAA2B,iBAAiB;GAjBxD,qBAAqB,CAoDjC;;;;;;MClDY,oBAAoB;;;YAdhC,QAAQ,SAAC;gBACR,OAAO,EAAE;oBACP,YAAY;oBACZ,aAAa;iBACd;gBACD,YAAY,EAAE,EACb;gBACD,OAAO,EAAE,EACR;gBACD,SAAS,EAAE;oBACT,EAAE,OAAO,EAAE,cAAc,EAAE,QAAQ,EAAE,qBAAqB,EAAE;iBAC7D;gBACD,OAAO,EAAE,CAAC,sBAAsB,CAAC;aAClC;;;;;;;;;;;;ACzBD,SAAgB,oBAAoB,CAAC,QAAqB,EAAE,mBAA2B;IACrF,OAAO,QAAQ,IAAI,QAAQ,CAAC,QAAQ,IAAI,mBAAmB,CAAC;CAC7D;;;;;;ACDD;;;;AAEA,SAAgB,eAAe,CAAC,QAAqC;;UAC7D,KAAK,sBAAG,QAAQ,EAAiB;;UACjC,OAAO,GAAG,CAAC,KAAK,IAAIA,UAAQ,CAAC,KAAK,CAAC,IAAI,CAAC;IAE9C,OAAO,OAAO,CAAC;CAChB;;;;;;ACPD;;;;AAGA,SAAgB,kBAAkB,CAAC,QAAqB;;UAChD,KAAK,GAAG,CAAC,QAAQ,CAAC,SAAS,EAAE,QAAQ,CAAC,QAAQ,CAAC;IACrD,IAAI,SAAS,CAAC,QAAQ,CAAC,QAAQ,CAAC,EAAE;QAChC,KAAK,CAAC,CAAC,CAAC,GAAG,QAAQ,CAAC,QAAQ,CAAC;KAC9B;IAED,OAAO,KAAK,CAAC;CACd;;;;;;ACXD;;;;AAIA,SAAgB,eAAe,CAAC,QAAgB;IAC9C,OAAOA,UAAQ,CAAC,QAAQ,CAAC,IAAI,sBAAsB,CAAC,QAAQ,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;CACxE;;;;;;ACND;;;;AAIA,SAAgB,gBAAgB,CAAC,SAAiB;IAChD,OAAOA,UAAQ,CAAC,SAAS,CAAC,IAAI,sBAAsB,CAAC,SAAS,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;CAC5E;;;;;;ACND;;;;AAIA,SAAgB,eAAe,CAAC,QAAiD;IAC/E,OAAO,eAAe,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,gBAAgB,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC;CACnF;;;;;;ACND;;;;AAGA,SAAgB,kBAAkB,CAAC,QAAiD;IAClF,OAAO,CAAC,eAAe,CAAC,QAAQ,CAAC,CAAC;CACnC;;;;;;ACJD;;;;;;AAIA,SAAgB,uBAAuB,CACrC,SAAsB,EACtB,SAAsB,EACtB,SAAS,GAAG,gCAAgC;IAE5C,OAAO,iBAAiB,CAAC,SAAS,CAAC,SAAS,EAAE,SAAS,CAAC,QAAQ,EAAE,SAAS,CAAC,SAAS,EAAE,SAAS,CAAC,QAAQ,EAAE,SAAS,CAAC,CAAC;CACvH;;;;;;;;;AC4BD,MAAa,kBAAkB;;;;;;;IAwH7B,YACE,UAA0B,EACT,GAAW,EACX,MAAqB,EACnB,MAAyB;QAF3B,QAAG,GAAH,GAAG,CAAQ;QACX,WAAM,GAAN,MAAM,CAAe;QACnB,WAAM,GAAN,MAAM,CAAmB;QAzH9C,uBAAkB,GAAG,KAAK,CAAC;QA2HzB,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;QAC7B,IAAI,CAAC,qBAAqB,GAAG,IAAI,aAAa,CAAC,CAAC,CAAC,CAAC;QAClD,IAAI,CAAC,uBAAuB,GAAG,IAAI,OAAO,EAAE,CAAC;QAE7C,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,qBAAqB,CAAC,YAAY,EAAE,CAAC;QAChE,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,uBAAuB,CAAC,YAAY,EAAE,CAAC;KACrE;;;;IA/GD,IAAI,YAAY;QACd,OAAO,IAAI,CAAC,QAAQ;cAChB,GAAG,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,uBAAuB,CAAC;WACpE,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,uBAAuB,CAAC,EAAE;cACxE,EAAE,CAAC;KACR;;;;IAED,IAAI,4BAA4B;QAC9B,IAAI,CAAC,IAAI,CAAC,oBAAoB,EAAE;YAC9B,OAAO,EAAE,CAAC;SACX;;cAEK,sBAAsB,GAAG,IAAI,CAAC,GAAG,EAAE,GAAG,IAAI,CAAC,oBAAoB,CAAC,OAAO,EAAE;QAC/E,OAAO,GAAG,cAAc,CAAC,sBAAsB,CAAC,MAAM,CAAC;KACxD;;;;IAED,IAAI,oBAAoB;;cAChB,iBAAiB,GAAG,IAAI,CAAC,UAAU,CAAC,YAAY,KAAK,sBAAsB,CAAC,KAAK;cACnF,IAAI,CAAC,MAAM,CAAC,yBAAyB;cACrC,IAAI,CAAC,MAAM,CAAC,8BAA8B;QAE9C,OAAO,oBAAoB,CAAC,IAAI,CAAC,QAAQ,EAAE,iBAAiB,CAAC,CAAC;KAC/D;;;;IAED,IAAI,sBAAsB;QACxB,OAAO,CAAC,IAAI,CAAC,oBAAoB,CAAC;KACnC;;;;IAED,IAAI,kBAAkB;;cACd,iBAAiB,GAAG,IAAI,CAAC,UAAU,CAAC,YAAY,KAAK,sBAAsB,CAAC,KAAK;cACnF,IAAI,CAAC,MAAM,CAAC,yBAAyB;cACrC,IAAI,CAAC,MAAM,CAAC,8BAA8B;QAE9C,OAAO,CAAC,oBAAoB,CAAC,IAAI,CAAC,QAAQ,EAAE,iBAAiB,CAAC,CAAC;KAChE;;;;IAED,IAAI,qBAAqB;QACvB,OAAO,IAAI,CAAC,UAAU,CAAC,YAAY,CAAC,OAAO,CAAC,oBAAoB,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC;KACjF;;;;IAED,IAAI,uBAAuB;QACzB,OAAO,IAAI,CAAC,QAAQ,IAAIA,UAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;KAC1D;;;;IAED,IAAI,yBAAyB;QAC3B,OAAO,CAAC,IAAI,CAAC,uBAAuB,CAAC;KACtC;;;;IAED,IAAI,0BAA0B;QAC5B,OAAO,IAAI,CAAC,UAAU,CAAC,YAAY,KAAK,sBAAsB,CAAC,KAAK,CAAC;KACtE;;;;IAED,IAAI,uCAAuC;QACzC,OAAO,IAAI,CAAC,UAAU,CAAC,YAAY,KAAK,sBAAsB,CAAC,IAAI;eAC9D,IAAI,CAAC,UAAU,CAAC,YAAY,KAAK,sBAAsB,CAAC,IAAI;eAC5D,IAAI,CAAC,UAAU,CAAC,YAAY,KAAK,sBAAsB,CAAC,IAAI;eAC5D,IAAI,CAAC,UAAU,CAAC,YAAY,KAAK,sBAAsB,CAAC,IAAI,CAAC;KACnE;;;;IAED,IAAI,iBAAiB;QACnB,OAAO,IAAI,CAAC,UAAU,CAAC;KACxB;;;;IAED,IAAI,iBAAiB;;cACb,UAAU,GAAG,CAAC,IAAI,CAAC,QAAQ;QAEjC,IAAI,UAAU,EAAE;YACd,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CAAC;SACzC;;cAEK,uBAAuB,GAAG,IAAI,CAAC,uBAAuB;;YACxD,QAAQ,GAAW,uBAAuB,GAAG,IAAI,CAAC,QAAQ,CAAC,QAAQ,GAAG,IAAI;;YAC1E,MAAc;QAElB,IAAI,uBAAuB,IAAI,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC,oBAAoB,CAAC,QAAQ,CAAC,EAAE;YAC3F,MAAM,GAAG,IAAI,CAAC,UAAU,CAAC,YAAY,KAAK,sBAAsB,CAAC,KAAK;kBAClE,GAAG;kBACH,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,YAAY,CAAC,CAAC,WAAW,EAAE,CAAC;SACxD;aAAM,IAAI,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC,oBAAoB,CAAC,IAAI,CAAC,EAAE;YACnE,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC;YAC9B,MAAM,GAAG,MAAM,CAAC,oBAAoB,CAAC,IAAI,CAAC,CAAC,WAAW,EAAE,CAAC;SAC1D;aAAM,IAAI,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC,oBAAoB,CAAC,IAAI,CAAC,EAAE;YACnE,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC;YAC9B,MAAM,GAAG,MAAM,CAAC,oBAAoB,CAAC,IAAI,CAAC,CAAC,WAAW,EAAE,CAAC;SAC1D;aAAM,IAAI,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC,oBAAoB,CAAC,IAAI,CAAC,EAAE;YACnE,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC;YAC9B,MAAM,GAAG,MAAM,CAAC,oBAAoB,CAAC,IAAI,CAAC,CAAC,WAAW,EAAE,CAAC;SAC1D;aAAM,IAAI,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC,oBAAoB,CAAC,IAAI,CAAC,EAAE;YACnE,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC;YAC9B,MAAM,GAAG,MAAM,CAAC,oBAAoB,CAAC,IAAI,CAAC,CAAC,WAAW,EAAE,CAAC;SAC1D;QAED,IAAI,WAAW,CAAC,QAAQ,CAAC,EAAE;YACzB,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CAAC;SACzC;QAED,OAAO,GAAG,YAAY,CAAC,QAAQ,CAAC,IAAI,MAAM,EAAE,CAAC;KAC9C;;;;;;IAgBD,iBAAiB;;cACT,UAAU,GAAG;YACjB,kBAAkB,EAAE,mBAAA,IAAI,GAAC,MAAM,CAAC,qBAAqB;SACtD;QAED,mBAAA,IAAI,GAAC,QAAQ,GAAG,IAAI,CAAC;QACrB,mBAAA,IAAI,GAAC,cAAc,EAAE,CAAC;QACtB,mBAAA,IAAI,GAAC,GAAG,CAAC,KAAK,CACZ,oCAAoC,mBAAA,IAAI,GAAC,UAAU,CAAC,IAAI,gCAAgC,UAAU,CAAC,kBAAkB,GAAG,CACzH,CAAC;QAEF,mBAAA,IAAI,GAAC,sBAAsB,GAAG,mBAAA,IAAI,GAAC,UAAU,CAAC,aAAa,CAAC,UAAU,CAAC;aACpE,SAAS;;;;;;QACR,QAAQ,IAAI,mBAAA,IAAI,GAAC,kBAAkB,CAAC,QAAQ,CAAC;;;;;;QAC7C,KAAK,IAAI,mBAAA,IAAI,GAAC,eAAe,CAAC,KAAK,CAAC,EACrC,CAAC;QAEJ,0BAAO,IAAI,GAAC;KACb;;;;;;IAED,kBAAkB;QAChB,mBAAA,IAAI,GAAC,kBAAkB,GAAG,KAAK,CAAC;QAChC,mBAAA,IAAI,GAAC,cAAc,EAAE,CAAC;QAEtB,0BAAO,IAAI,GAAC;KACb;;;;;;;IAED,aAAa,CAAC,UAAsB;QAClC,mBAAA,IAAI,GAAC,cAAc,EAAE,CAAC;QACtB,mBAAA,IAAI,GAAC,UAAU,GAAG,UAAU,CAAC;QAC7B,IAAI,mBAAA,IAAI,GAAC,kBAAkB,EAAE;YAC3B,mBAAA,IAAI,GAAC,iBAAiB,EAAE,CAAC;SAC1B;QAED,0BAAO,IAAI,GAAC;KACb;;;;;;;IAED,cAAc,CAAC,kBAA2B;QACxC,IAAI,kBAAkB,EAAE;YACtB,mBAAA,IAAI,GAAC,iBAAiB,EAAE,CAAC;SAC1B;aAAM;YACL,mBAAA,IAAI,GAAC,kBAAkB,EAAE,CAAC;SAC3B;QAED,0BAAO,IAAI,GAAC;KACb;;;;;;IAED,iBAAiB;QACf,mBAAA,IAAI,GAAC,cAAc,CAAC,CAAC,mBAAA,IAAI,GAAC,kBAAkB,CAAC,CAAC;QAC9C,0BAAO,IAAI,GAAC;KACb;;;;;;;IAED,eAAe,CAAC,QAAqC;QACnD,IAAI,CAAC,mBAAA,IAAI,GAAC,MAAM,CAAC,eAAe,EAAE;YAChC,MAAM,IAAI,KAAK,CAAC,wCAAwC,CAAC,CAAC;SAC3D;QAED,OAAO,mBAAA,IAAI,GAAC,kBAAkB,CAAC,QAAQ,CAAC,CAAC;KAC1C;;;;;;;;IAES,kBAAkB,CAAC,QAAqC;QAChE,IAAI,eAAe,CAAC,QAAQ,CAAC,EAAE;YAC7B,mBAAA,IAAI,GAAC,eAAe,oBAAC,QAAQ,GAAkB,CAAC;YAChD,0BAAO,IAAI,GAAC;SACb;;cAEK,WAAW,sBAAG,QAAQ,EAAe;QAC3C,IAAI,kBAAkB,CAAC,WAAW,CAAC,EAAE;YACnC,0BAAO,IAAI,GAAC;SACb;;cAEK,wBAAwB,GAAG,mBAAA,IAAI,GAAC,QAAQ;eACzC,uBAAuB,CAAC,mBAAA,IAAI,GAAC,QAAQ,EAAE,WAAW,EAAE,mBAAA,IAAI,GAAC,MAAM,CAAC,6BAA6B,CAAC;QAEnG,IAAI,wBAAwB,IAAI,CAAC,mBAAA,IAAI,GAAC,MAAM,CAAC,yBAAyB,EAAE;YACtE,mBAAA,IAAI,GAAC,uBAAuB,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;YAC/C,0BAAO,IAAI,GAAC;SACb;QAED,mBAAA,IAAI,GAAC,GAAG,CAAC,KAAK,CAAC,2BAA2B,mBAAA,IAAI,GAAC,UAAU,CAAC,IAAI,MAAM,WAAW,CAAC,QAAQ,KAAK,WAAW,CAAC,SAAS,EAAE,CAAC,CAAC;QACtH,mBAAA,IAAI,GAAC,iBAAiB,CAAC,WAAW,CAAC,CAAC;QACpC,mBAAA,IAAI,GAAC,QAAQ,GAAG,WAAW,CAAC;QAC5B,mBAAA,IAAI,GAAC,kBAAkB,GAAG,IAAI,CAAC;QAC/B,mBAAA,IAAI,GAAC,oBAAoB,GAAG,IAAI,IAAI,CAAC,mBAAA,IAAI,GAAC,QAAQ,CAAC,SAAS,IAAI,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC;QAC5E,mBAAA,IAAI,GAAC,uBAAuB,CAAC,IAAI,CAAC,mBAAA,IAAI,GAAC,QAAQ,CAAC,CAAC;QACjD,mBAAA,IAAI,GAAC,qBAAqB,CAAC,IAAI,CAAC,mBAAA,IAAI,GAAC,QAAQ,CAAC,CAAC;QAE/C,0BAAO,IAAI,GAAC;KACb;;;;;;;;IAES,eAAe,CAAC,KAAoB;;cACtC,YAAY,GAAG,QAAQ,CAAC,+CAA+C,EAAE,KAAK,CAAC;QACrF,mBAAA,IAAI,GAAC,qBAAqB,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;QACxC,mBAAA,IAAI,GAAC,GAAG,CAAC,KAAK,CAAC,YAAY,CAAC,CAAC;QAC7B,mBAAA,IAAI,GAAC,MAAM,CAAC,KAAK,CAAC,YAAY,CAAC,CAAC;QAChC,0BAAO,IAAI,GAAC;KACb;;;;;;;;IAEO,iBAAiB,CAAC,QAAqB;QAC7C,mBAAA,IAAI,GAAC,8BAA8B,CAAC,QAAQ,CAAC,CAAC;QAE9C,IAAI,mBAAA,IAAI,GAAC,MAAM,CAAC,yBAAyB,IAAI,mBAAA,IAAI,GAAC,MAAM,CAAC,gBAAgB,EAAE;;gBACrE,cAAc,GAAG,QAAQ,CAAC,QAAQ,GAAG,mBAAA,IAAI,GAAC,MAAM,CAAC,gBAAgB;YACrE,cAAc,GAAG,cAAc,GAAG,CAAC,GAAG,CAAC,GAAG,cAAc,CAAC;YAEzD,mBAAA,IAAI,GAAC,GAAG,CAAC,KAAK,CAAC,sCAAsC,QAAQ,CAAC,QAAQ,OAAO,cAAc,EAAE,CAAC,CAAC;YAC/F,MAAM,CAAC,MAAM,CAAC,QAAQ,EAAE;gBACtB,QAAQ,EAAE,cAAc;aACzB,CAAC,CAAC;SACJ;QAED,0BAAO,IAAI,GAAC;KACb;;;;;;IAEO,8BAA8B,CAAC,WAAwB;;cACvD,YAAY,GAAG,UAAU,CAAC,WAAW,CAAC,KAAK,CAAC;;cAC5C,cAAc,GAAG,UAAU,CAAC,WAAW,CAAC,OAAO,CAAC;;cAChD,qBAAqB,GAAG,YAAY,IAAI,cAAc;;cACtD,0BAA0B,GAAG,IAAI,CAAC,QAAQ,IAAI,qBAAqB,IAAI,IAAI,CAAC,MAAM,CAAC,8BAA8B;QAEvH,IAAI,0BAA0B,EAAE;;kBACxB,SAAS,GAAG,kBAAkB,CAAC,IAAI,CAAC,QAAQ,CAAC;;kBAC7C,OAAO,GAAG,kBAAkB,CAAC,WAAW,CAAC;YAE/C,IAAI,YAAY,EAAE;;;sBAEV,kBAAkB,GAAG,QAAQ,CAAC,SAAS,EAAE,OAAO,EAAE,EAAE,KAAK,EAAE,YAAY,EAAE,CAAC;gBAChF,IAAI,kBAAkB,EAAE;;0BAChB,cAAc,GAAG,kBAAkB,CAAC,kBAAkB,EAAE,UAAU,CAAC,SAAS,EAAE,UAAU,CAAC,KAAK,CAAC;;0BAC/F,YAAY,GAAG,qBAAqB,CACxC,IAAI,CAAC,GAAG,CAAC,WAAW,CAAC,SAAS,GAAG,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,CAC1D;;0BACK,KAAK,GAAG,cAAc,GAAG,YAAY;oBAC3C,MAAM,CAAC,MAAM,CAAC,WAAW,EAAE,EAAE,KAAK,EAAE,CAAC,CAAC;iBACvC;aACF;YAED,IAAI,cAAc,EAAE;;sBACZ,OAAO,GAAG,OAAO,CAAC,SAAS,EAAE,OAAO,CAAC;gBAC3C,MAAM,CAAC,MAAM,CAAC,WAAW,EAAE,EAAE,OAAO,EAAE,CAAC,CAAC;aACzC;SACF;KACF;;;;;;;IAEO,cAAc;QACpB,IAAI,mBAAA,IAAI,GAAC,sBAAsB,EAAE;YAC/B,mBAAA,IAAI,GAAC,GAAG,CAAC,KAAK,CAAC,gDAAgD,mBAAA,IAAI,GAAC,UAAU,CAAC,IAAI,GAAG,CAAC,CAAC;YACxF,mBAAA,IAAI,GAAC,sBAAsB,CAAC,WAAW,EAAE,CAAC;SAC3C;QAED,0BAAO,IAAI,GAAC;KACb;;;YAhSF,UAAU,SAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;YAVQ,cAAc;YAlBd,MAAM;YACN,aAAa;YACb,iBAAiB;;;;;;;;MCEb,uBAAuB;;;;IAElC,YAA6B,QAAkB;QAAlB,aAAQ,GAAR,QAAQ,CAAU;KAC9C;;;;;IAED,aAAa,CAAC,EAAU;;cAChB,QAAQ,GAAG,mBAAmB,CAAC,IAAI;;;;QAAC,cAAc,IAAI,cAAc,CAAC,EAAE,KAAK,EAAE,EAAC;QACrF,OAAO,IAAI,CAAC,sBAAsB,CAAC,QAAQ,CAAC,CAAC;KAC9C;;;;IAED,cAAc;QACZ,OAAO,mBAAmB;aACvB,GAAG;;;;QAAC,QAAQ,IAAI,IAAI,CAAC,sBAAsB,CAAC,QAAQ,CAAC,EAAC,CAAC;KAC3D;;;;;IAED,mBAAmB,CAAC,EAAU;QAC5B,OAAO,IAAI,CAAC,oBAAoB,EAAE;aAC/B,IAAI,CACH,GAAG;;;;QAAC,OAAO,IAAI,OAAO,CAAC,IAAI;;;;QAAC,MAAM,IAAI,MAAM,CAAC,EAAE,KAAK,EAAE,EAAC,EAAC,CACzD,CAAC;KACL;;;;IAED,6BAA6B;QAC3B,OAAO,IAAI,CAAC,oBAAoB,EAAE;aAC/B,IAAI,CACH,GAAG;;;;QAAC,OAAO,IAAI,OAAO,CAAC,MAAM;;;;QAAC,MAAM,IAAI,MAAM,CAAC,WAAW,EAAC,EAAC,CAC7D,CAAC;KACL;;;;IAED,oBAAoB;;cACZ,oBAAoB,GAAG,mBAAmB;aAC7C,GAAG;;;;QAAC,QAAQ;;kBACL,OAAO,GAAG,IAAI,CAAC,sBAAsB,CAAC,QAAQ,CAAC;;kBAC/C,MAAM,GAAqB;gBAC/B,EAAE,EAAE,QAAQ,CAAC,EAAE;gBACf,IAAI,EAAE,OAAO,CAAC,IAAI;gBAClB,WAAW,EAAE,OAAO,CAAC,WAAW;gBAChC,YAAY,EAAE,OAAO,CAAC,YAAY;gBAClC,YAAY,EAAE,OAAO,CAAC,YAAY;gBAClC,WAAW,EAAE,KAAK;aACnB;YAED,OAAO,OAAO,CAAC,WAAW,EAAE;iBACzB,IAAI,CACH,GAAG;;;;YAAC,SAAS,IAAI,MAAM,CAAC,WAAW,GAAG,SAAS,EAAC,EAChD,GAAG;;;YAAC,MAAM,MAAM,EAAC,CAClB,CAAC;SACL,EAAC;QAEJ,OAAO,oBAAoB,CAAC,MAAM,KAAK,CAAC;cACpC,EAAE,CAAC,EAAE,CAAC;cACN,QAAQ,CAAC,oBAAoB,CAAC,CAAC;KACpC;;;;;;IAEO,sBAAsB,CAAC,QAA0C;;cACjE,QAAQ,GAAe,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,QAAQ,CAAC,WAAW,CAAC;QACpE,OAAO,QAAQ,CAAC;KACjB;;;YA1DF,UAAU,SAAC,EAAE,UAAU,EAAE,MAAM,EAAE;;;;YAZb,QAAQ;;;;;;;;;;;;;;;;;;;;;;;ACA7B;;;;AAGA,SAAgB,mBAAmB,CAAC,GAAG,SAAwB;IAC7D,OAAO,SAAS,CAAC,GAAG;;;;IAAC,QAAQ,IAAI,kBAAkB,CAAC,QAAQ,CAAC,EAAC,CAAC;CAChE;;;;;;;;;;;;;;;;ACND;;;;AAEA,SAAgB,kBAAkB,CAAC,QAAgB;IACjD,OAAO,CAAC,eAAe,CAAC,QAAQ,CAAC,CAAC;CACnC;;;;;;ACJD;;;;AAGA,SAAgB,mBAAmB,CAAC,SAAiB;IACnD,OAAO,CAAC,gBAAgB,CAAC,SAAS,CAAC,CAAC;CACrC;;;;;;;;;;;;MCOK,qBAAqB,GAAG,CAAC;;MACzB,eAAe,GAAwC;IAC3D,KAAK,EAAE,OAAO;IACd,UAAU,EAAE,IAAI;IAChB,oBAAoB,EAAE,EAAE;CACzB;;;;;;AAED,SAAgB,4BAA4B,CAAC,IAAkB,EAAE,OAA6C;;UACtG,SAAS,GAAiB,gBAAgB,CAAC,IAAI,CAAC;IACtD,OAAO,GAAG,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,eAAe,EAAE,OAAO,CAAC,CAAC;;QAClD,WAAW,GAAG,CAAC;IAEnB,SAAS,CAAC,OAAO;;;;;IAAC,CAAC,QAAQ,EAAE,SAAS;QACpC,iBAAiB,CAAC,QAAQ,EAAE,WAAW,EAAE,SAAS,EAAE,OAAO,CAAC,CAAC;;cACvD,mBAAmB,GAAG,QAAQ,CAAC,MAAM,GAAG,CAAC;;cACzC,cAAc,GAAG,QAAQ,CAAC,mBAAmB,CAAC;QAEpD,WAAW,IAAI,mBAAmB,CAAC,cAAc,CAAC,CAAC;KACpD,EAAC,CAAC;CACJ;;;;;;;;AAED,SAAS,iBAAiB,CAAC,IAAgB,EAAE,YAAoB,EAAE,SAAiB,EAAE,OAA4C;;UAC1H,oBAAoB,GAAY,OAAO,CAAC,oBAAoB,CAAC,IAAI;;;;IACrE,mBAAmB,IACjB,mBAAmB,CAAC,SAAS,KAAK,SAAS,EAC9C;IAED,IAAI,oBAAoB,EAAE;QACxB,iBAAiB,CAAC,IAAI,EAAE,YAAY,EAAE,SAAS,EAAE,OAAO,CAAC,CAAC;KAC3D;SAAM;QACL,oCAAoC,CAAC,IAAI,EAAE,YAAY,EAAE,OAAO,CAAC,CAAC;KACnE;CACF;;;;;;;;AAED,SAAS,iBAAiB,CAAC,IAAgB,EAAE,YAAoB,EAAE,SAAiB,EAAE,OAA4C;;UAC1H,oBAAoB,GAAG,OAAO,CAAC,oBAAoB,CAAC,MAAM;;;;IAC9D,QAAQ,IAAI,QAAQ,CAAC,SAAS,KAAK,SAAS,EAC7C;;QAEG,eAAe,GAAG,CAAC;IACvB,aAAa,CAAC,oBAAoB;;;;IAAE,WAAW,IAAI,WAAW,CAAC,OAAO,EAAC,CAAC;IAExE,oBAAoB,CAAC,OAAO;;;;IAAC,WAAW;;cAChC,UAAU,GAAG,IAAI,CAAC,eAAe,CAAC;;cAClC,QAAQ,GAAG,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC;;cACxC,yBAAyB,GAAG,WAAW,CAAC,WAAW,GAAG,eAAe;;cACrE,kBAAkB,GAAG,IAAI,CAAC,GAAG,CAAC,WAAW,CAAC,OAAO,GAAG,YAAY,CAAC;;cACjE,4BAA4B,GAAG,kBAAkB,GAAG,yBAAyB;QAEnF,UAAU,CAAC,UAAU,EAAE,YAAY,EAAE,OAAO,CAAC,UAAU,CAAC,CAAC;QACzD,UAAU,CAAC,QAAQ,EAAE,WAAW,CAAC,OAAO,EAAE,OAAO,CAAC,UAAU,CAAC,CAAC;;cACxD,iBAAiB,GAAG,kBAAkB,CAAC,IAAI,EAAE,eAAe,EAAE,WAAW,CAAC,WAAW,CAAC;QAE5F,iBAAiB,CAAC,OAAO;;;;;QAAC,CAAC,OAAO,EAAE,KAAK;;kBACjC,UAAU,GAAG,KAAK,GAAG,CAAC;;kBACtB,gBAAgB,GAAG,UAAU,GAAG,4BAA4B;;kBAC5D,OAAO,GAAG,YAAY,GAAG,gBAAgB;YAC/C,UAAU,CAAC,OAAO,EAAE,OAAO,EAAE,OAAO,CAAC,UAAU,CAAC,CAAC;SAClD,EAAC,CAAC;QAEH,eAAe,GAAG,WAAW,CAAC,WAAW,CAAC;QAC1C,YAAY,GAAG,WAAW,CAAC,OAAO,CAAC;KACpC,EAAC,CAAC;;UAEG,eAAe,GAAG,eAAe,GAAG,IAAI,CAAC,MAAM,GAAG,CAAC;IACzD,IAAI,eAAe,EAAE;;cACb,eAAe,GAAe,kBAAkB,CAAC,IAAI,EAAE,eAAe,GAAG,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC;QAC9F,oCAAoC,CAAC,eAAe,EAAE,YAAY,EAAE,OAAO,CAAC,CAAC;KAC9E;CACF;;;;;;;AAED,SAAS,kBAAkB,CAAC,IAAgB,EAAE,eAAuB,EAAE,aAAqB;;QACtF,KAAK,GAAG,eAAe,GAAG,CAAC;;UACzB,QAAQ,GAAe,EAAE;IAE/B,OAAO,KAAK,GAAG,aAAa,EAAE,KAAK,EAAE,EAAE;;cAC/B,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC;QAC3B,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;KACxB;IAED,OAAO,QAAQ,CAAC;CACjB;;;;;;;AAED,SAAS,oCAAoC,CAAC,IAAgB,EAAE,YAAoB,EAAE,OAA4C;;QAC5H,cAAc;;QACd,aAAa,GAAG,YAAY;IAEhC,IAAI,CAAC,OAAO;;;;;IAAC,CAAC,MAAM,EAAE,KAAK;QACzB,IAAI,KAAK,KAAK,CAAC,EAAE;;kBACT,wBAAwB,GAAW,QAAQ,CAAC,cAAc,EAAE,MAAM,EAAE,OAAO,CAAC;YAClF,aAAa,IAAI,wBAAwB,CAAC;SAC3C;QAED,UAAU,CAAC,MAAM,EAAE,aAAa,EAAE,OAAO,CAAC,UAAU,CAAC,CAAC;QACtD,cAAc,GAAG,MAAM,CAAC;KACzB,EAAC,CAAC;CACJ;;;;;;;AAED,SAAS,UAAU,CAAC,UAAoB,EAAE,OAAe,EAAE,UAAmB;;UACtE,gBAAgB,GAAG,UAAU,IAAI,UAAU,CAAC,MAAM,GAAG,CAAC;;UACtD,YAAY,GAAG,gBAAgB,GAAG,CAAC,GAAG,CAAC;IAC7C,UAAU,CAAC,YAAY,CAAC,GAAG,OAAO,CAAC;IAEnC,IAAI,gBAAgB,EAAE;QACpB,YAAY,CAAC,UAAU,CAAC,CAAC;KAC1B;CACF;;;;;AAED,SAAS,YAAY,CAAC,UAAoB;IACxC,IAAI,WAAW,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,EAAE;QAC9B,UAAU,CAAC,CAAC,CAAC,GAAG,qBAAqB,CAAC;KACvC;CACF;;;;;;ACzHD;MAyBM,gCAAgC,GAAG,SAAS;;MAE5CG,iBAAe,GAA+B;IAClD,yBAAyB,EAAE,EAAE;IAC7B,eAAe,EAAE,IAAI;IACrB,yBAAyB,EAAE,CAAC;IAC5B,aAAa,EAAE,IAAI;IACnB,aAAa,EAAE,IAAI;IACnB,UAAU,EAAE,OAAO;IACnB,mBAAmB,EAAE,KAAK;IAC1B,uCAAuC,EAAE,CAAC;IAC1C,2CAA2C,EAAE,UAAU,CAAC,IAAI;CAC7D;AAGD,MAAa,mBAAmB;;;;IAQ9B,IAAI,aAAa;;cACT,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG;;;;QAAC,IAAI,IAAI,IAAI,CAAC,MAAM,EAAC;QAClD,OAAO,SAAS,CAAC,MAAM,CAAC,CAAC;KAC1B;;;;IAED,IAAI,gBAAgB;QAClB,OAAO,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC;KAC9B;;;;IAED,IAAI,WAAW;QACb,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;KAC1C;;;;IAED,IAAI,YAAY;QACd,OAAO,WAAW,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;KACtC;;;;IAED,IAAI,WAAW;QACb,OAAO,OAAO,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;KACnC;;;;IAED,IAAI,OAAO;QACT,OAAO,IAAI,CAAC,WAAW,CAAC,MAAM,KAAK,CAAC,CAAC;KACtC;;;;IAED,IAAI,WAAW;QACb,OAAO,IAAI,CAAC,WAAW,CAAC,MAAM,GAAG,CAAC,CAAC;KACpC;;;;IAED,IAAI,aAAa;QACf,OAAO,IAAI,CAAC,KAAK,CAAC,MAAM,KAAK,CAAC,IAAI,IAAI,CAAC,WAAW,CAAC,MAAM,KAAK,CAAC,CAAC;KACjE;;;;IAED,YAAY,OAAoC;QAC9C,IAAI,CAAC,KAAK,GAAG,CAAC,EAAE,CAAC,CAAC;QAClB,IAAI,CAAC,cAAc,GAAG,EAAE,CAAC;QACzB,IAAI,CAAC,kBAAkB,GAAG,IAAI,GAAG,EAA2C,CAAC;QAC7E,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC,MAAM,CAAC,EAAE,EAAEA,iBAAe,EAAE,OAAO,CAAC,CAAC;KAC5D;;;;;;;IAED,aAAa,CAAC,cAAuC;QACnD,mBAAA,IAAI,GAAC,iBAAiB,GAAG,cAAc,CAAC,SAAS;;;;;;QAAC,QAAQ,IAAI,mBAAA,IAAI,GAAC,WAAW,CAAC,QAAQ,CAAC,EAAC,CAAC;QAC1F,0BAAO,IAAI,GAAC;KACb;;;;;;;;IAED,WAAW,CAAC,QAAqB,EAAE,kBAA2B;;cACtD,mBAAmB,GAAG,CAAC,mBAAA,IAAI,GAAC,OAAO,CAAC,eAAe;eACpD,oBAAoB,CAAC,QAAQ,EAAE,mBAAA,IAAI,GAAC,OAAO,CAAC,yBAAyB,CAAC;;cACrE,qBAAqB,GAAG,CAAC,QAAQ,IAAI,CAAC,mBAAmB;QAE/D,IAAI,qBAAqB,EAAE;YACzB,OAAO,mBAAA,IAAI,GAAC,sBAAsB,CAAC,QAAQ,CAAC,CAAC;SAC9C;QAED,IAAI,mBAAA,IAAI,GAAC,OAAO,EAAE;YAChB,OAAO,mBAAA,IAAI,GAAC,gBAAgB,CAAC,QAAQ,CAAC,CAAC;SACxC;;cAEK,oBAAoB,GAAG,mBAAA,IAAI,GAAC,sBAAsB,CAAC,mBAAA,IAAI,GAAC,YAAY,EAAE,QAAQ,CAAC;;cAC/E,sBAAsB,GAAG,mBAAA,IAAI,GAAC,YAAY,CAAC,KAAK,KAAK,CAAC,IAAI,QAAQ,CAAC,KAAK,KAAK,CAAC,IAAI,oBAAoB;QAC5G,IAAI,sBAAsB,EAAE;YAC1B,mBAAA,IAAI,GACD,sBAAsB,CAAC,QAAQ,CAAC;iBAChC,2BAA2B,CAAC,QAAQ,CAAC,CAAC;YAEzC,0BAAO,IAAI,GAAC;SACb;QAED,mBAAA,IAAI,GAAC,gBAAgB,CAAC,QAAQ,CAAC,CAAC;QAChC,IAAIH,UAAQ,CAAC,kBAAkB,CAAC,EAAE;YAChC,mBAAA,IAAI,GAAC,mCAAmC,CAAC,kBAAkB,CAAC,CAAC;SAC9D;QAED,0BAAO,IAAI,GAAC;KACb;;;;;;IAED,YAAY;QACV,mBAAA,IAAI,GAAC,KAAK,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;QACpB,0BAAO,IAAI,GAAC;KACb;;;;;;;;IAED,qBAAqB,CAAC,WAAmB,EAAE,YAAoB,CAAC;;cACxD,IAAI,GAAG,mBAAA,IAAI,GAAC,KAAK,CAAC,SAAS,CAAC;QAClC,IAAI,CAAC,IAAI,EAAE;YACT,MAAM,IAAI,KAAK,CAAC,uBAAuB,SAAS,EAAE,CAAC,CAAC;SACrD;QAED,IAAI,CAAC,MAAM,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC;;cAEtB,GAAG,GAAG,mBAAA,IAAI,GAAC,8BAA8B,CAAC,SAAS,EAAE,WAAW,CAAC;QACvE,IAAI,mBAAA,IAAI,GAAC,kBAAkB,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE;YACpC,mBAAA,IAAI,GAAC,kBAAkB,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;SACrC;QAED,0BAAO,IAAI,GAAC;KACb;;;;;;;IAED,cAAc,CAAC,QAAqB;;YAC9B,SAAS,GAAG,CAAC,CAAC;;YACd,WAAW,GAAG,CAAC,CAAC;QAEpB,mBAAA,IAAI,GAAC,KAAK,CAAC,OAAO;;;;;QAAC,CAAC,IAAI,EAAE,KAAK;;kBACvB,kBAAkB,GAAG,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC;YACjD,IAAI,kBAAkB,GAAG,CAAC,CAAC,EAAE;gBAC3B,SAAS,GAAG,KAAK,CAAC;gBAClB,WAAW,GAAG,kBAAkB,CAAC;aAClC;SACF,EAAC,CAAC;QAEH,IAAI,SAAS,GAAG,CAAC,CAAC,IAAI,WAAW,GAAG,CAAC,CAAC,EAAE;YACtC,OAAO,mBAAA,IAAI,GAAC,qBAAqB,CAAC,WAAW,EAAE,SAAS,CAAC,CAAC;SAC3D;QAED,0BAAO,IAAI,GAAC;KACb;;;;;;;IAED,wBAAwB,CAAC,OAAe;QACtC,KAAK,CAAC,IAAI,CAAC,mBAAA,IAAI,GAAC,kBAAkB,CAAC,MAAM,EAAE,CAAC;aACzC,MAAM;;;;QAAC,WAAW,IAAI,WAAW,CAAC,OAAO,KAAK,OAAO,EAAC;aACtD,OAAO;;;;;;QAAC,WAAW,IAClB,mBAAA,IAAI,GAAC,+BAA+B,CAAC,WAAW,CAAC,WAAW,EAAE,WAAW,CAAC,SAAS,CAAC,EACrF,CAAC;QAEJ,0BAAO,IAAI,GAAC;KACb;;;;;;;;IAED,+BAA+B,CAAC,WAAmB,EAAE,YAAoB,CAAC;;cAClE,GAAG,GAAG,mBAAA,IAAI,GAAC,8BAA8B,CAAC,SAAS,EAAE,WAAW,CAAC;QACvE,IAAI,mBAAA,IAAI,GAAC,kBAAkB,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE;YACpC,mBAAA,IAAI,GAAC,kBAAkB,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;SACrC;QAED,0BAAO,IAAI,GAAC;KACb;;;;;;;IAED,qBAAqB,CAAC,OAAe;;cAC7B,SAAS,GAAG,IAAI,IAAI,EAAE,CAAC,OAAO,EAAE;cAChC,CAAC,UAAU,CAAC,GAAG,mBAAA,IAAI,GAAC,WAAW,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;QAC/C,IAAI,UAAU,IAAI,UAAU,CAAC,SAAS,IAAI,UAAU,CAAC,SAAS,KAAK,SAAS,EAAE;YAC5E,OAAO,mBAAA,IAAI,GAAC,mCAAmC,CAAC,OAAO,CAAC,CAAC;SAC1D;;cAEK,SAAS,GAAG,mBAAA,IAAI,GAAC,gBAAgB;;cACjC,GAAG,GAAG,gCAAgC;QAC5C,mBAAA,IAAI,GAAC,kBAAkB,CAAC,GAAG,CAAC,GAAG,EAAE;YAC/B,OAAO;YACP,SAAS;YACT,WAAW,EAAE,IAAI;YACjB,SAAS;SACV,CAAC,CAAC;QAEH,0BAAO,IAAI,GAAC;KACb;;;;;;;IAED,mCAAmC,CAAC,OAAe;;cAC3C,SAAS,GAAG,mBAAA,IAAI,GAAC,gBAAgB;;cACjC,eAAe,GAAG,mBAAA,IAAI,GAAC,WAAW,CAAC,MAAM,GAAG,CAAC;QACnD,OAAO,mBAAA,IAAI,GAAC,4BAA4B,CAAC,OAAO,EAAE,eAAe,EAAE,SAAS,CAAC,CAAC;KAC/E;;;;;;;;;IAED,4BAA4B,CAAC,OAAe,EAAE,WAAmB,EAAE,SAAS,GAAG,CAAC;;cACxE,GAAG,GAAG,mBAAA,IAAI,GAAC,8BAA8B,CAAC,SAAS,EAAE,WAAW,CAAC;QACvE,mBAAA,IAAI,GAAC,kBAAkB,CAAC,GAAG,CAAC,GAAG,EAAE;YAC/B,OAAO;YACP,SAAS;YACT,WAAW;YACX,SAAS,EAAE,IAAI,IAAI,EAAE,CAAC,OAAO,EAAE;SAChC,CAAC,CAAC;QAEH,0BAAO,IAAI,GAAC;KACb;;;;;;;IAED,gBAAgB,CAAC,QAAqB;QACpC,mBAAA,IAAI,GAAC,sBAAsB,CAAC,QAAQ,CAAC,CAAC;QACtC,mBAAA,IAAI,GAAC,iBAAiB,CAAC,QAAQ,CAAC,CAAC;QACjC,0BAAO,IAAI,GAAC;KACb;;;;;IAED,cAAc,CAAC,UAAU,GAAG,EAAE;QAC5B,OAAO;YACL,IAAI,EAAE,SAAS;YACf,QAAQ,EAAE,IAAI,CAAC,eAAe,EAAE;YAChC,UAAU;SACX,CAAC;KACH;;;;;IAED,aAAa,CAAC,UAAU,GAAG,EAAE;QAC3B,OAAO;YACL,IAAI,EAAE,SAAS;YACf,QAAQ,EAAE,IAAI,CAAC,cAAc,EAAE;YAC/B,UAAU;SACX,CAAC;KACH;;;;;IAED,mBAAmB,CAAC,UAAU,GAAG,EAAE;QACjC,OAAO;YACL,IAAI,EAAE,SAAS;YACf,QAAQ,EAAE,IAAI,CAAC,oBAAoB,EAAE;YACrC,UAAU;SACX,CAAC;KACH;;;;;IAED,kBAAkB,CAAC,UAAU,GAAG,EAAE;QAChC,OAAO;YACL,IAAI,EAAE,SAAS;YACf,QAAQ,EAAE,IAAI,CAAC,mBAAmB,EAAE;YACpC,UAAU;SACX,CAAC;KACH;;;;;IAED,gBAAgB,CAAC,UAAU,GAAG,EAAE;QAC9B,OAAO;YACL,IAAI,EAAE,SAAS;YACf,QAAQ,EAAE,IAAI,CAAC,iBAAiB,EAAE;YAClC,UAAU;SACX,CAAC;KACH;;;;;IAED,qBAAqB,CAAC,UAAU,GAAG,EAAE;QACnC,OAAO;YACL,IAAI,EAAE,SAAS;YACf,QAAQ,EAAE,IAAI,CAAC,sBAAsB,EAAE;YACvC,UAAU;SACX,CAAC;KACH;;;;;IAED,sBAAsB,CAAC,UAAU,GAAG,EAAE;QACpC,OAAO;YACL,IAAI,EAAE,SAAS;YACf,QAAQ,EAAE,IAAI,CAAC,uBAAuB,EAAE;YACxC,UAAU;SACX,CAAC;KACH;;;;IAED,SAAS;QACP,OAAO,IAAI,CAAC,aAAa;iCACrB,IAAI,CAAC,cAAc,EAAE;cACrB,IAAI,CAAC,aAAa,EAAE,CAAC;KAC1B;;;;IAED,UAAU;QACR,OAAO,IAAI,CAAC,aAAa;iCACrB,IAAI,CAAC,eAAe,EAAE;cACtB,IAAI,CAAC,cAAc,EAAE,CAAC;KAC3B;;;;;IAED,oBAAoB,CAAC,iBAAiB,GAAG,IAAI;;cACrC,IAAI,GAAG,IAAI,CAAC,cAAc,CAAC,iBAAiB,CAAC;QACnD,IAAI,eAAe,CAAC,IAAI,CAAC,WAAW,CAAC,EAAE;YACrC,MAAM,IAAI,KAAK,CAAC,kEAAkE,CAAC,CAAC;SACrF;QAED,0BAAO,IAAI,GAAe;KAC3B;;;;;IAED,mBAAmB,CAAC,iBAAiB,GAAG,IAAI;;YACtC,IAAI,GAAG,IAAI,CAAC,cAAc,CAAC,iBAAiB,CAAC;;cAC3C,gBAAgB,GAAG,CAAC,eAAe,CAAC,IAAI,CAAC,WAAW,CAAC;QAC3D,IAAI,gBAAgB,EAAE;YACpB,IAAI,GAAG;gBACL,IAAI,EAAE,iBAAiB;gBACvB,IAAI,EAAE,IAAI,CAAC,IAAI;gBACf,WAAW,EAAE,oBAAC,IAAI,CAAC,WAAW,GAAe;aAC9C,CAAC;SACH;QAED,0BAAO,IAAI,GAAoB;KAChC;;;;;IAED,cAAc,CAAC,iBAAiB,GAAG,IAAI;;cAC/B,KAAK,GAAiB,IAAI,CAAC,gBAAgB,EAAE;;cAC7C,IAAI,GAAiC,KAAK,CAAC,MAAM,GAAG,CAAC;cACvD;gBACA,IAAI,EAAE,iBAAiB;gBACvB,WAAW,EAAE,KAAK;aACnB;cACC;gBACA,IAAI,EAAE,YAAY;gBAClB,WAAW,EAAE,KAAK,CAAC,CAAC,CAAC;aACtB;QAEH,IAAI,IAAI,CAAC,OAAO,CAAC,aAAa,EAAE;;kBACxB,oBAAoB,GAA0B,iBAAiB;kBACjE,KAAK,CAAC,IAAI,CACV,IAAI,CAAC,kBAAkB,CAAC,MAAM,EAAE,CACjC;kBACC,EAAE;YAEN,4BAA4B,CAAC,IAAI,EAAE;gBACjC,KAAK,EAAE,IAAI,CAAC,OAAO,CAAC,UAAU;gBAC9B,UAAU,EAAE,IAAI,CAAC,OAAO,CAAC,aAAa;gBACtC,oBAAoB;aACrB,CAAC,CAAC;SACJ;QAED,OAAO,IAAI,CAAC;KACb;;;;IAED,sBAAsB;;YAChB,IAAI,GAAG,IAAI,CAAC,iBAAiB,EAAE;;cAC7B,eAAe,GAAG,IAAI,CAAC,IAAI,KAAK,SAAS;QAE/C,IAAI,eAAe,EAAE;YACnB,IAAI,GAAG;gBACL,IAAI,EAAE,cAAc;gBACpB,IAAI,EAAE,IAAI,CAAC,IAAI;gBACf,WAAW,EAAE,oBAAC,IAAI,CAAC,WAAW,GAAiB;aAChD,CAAC;SACH;QAED,0BAAO,IAAI,GAAiB;KAC7B;;;;IAED,uBAAuB;;cACf,IAAI,GAAG,IAAI,CAAC,iBAAiB,EAAE;;cAC/B,WAAW,GAAG,IAAI,CAAC,IAAI,KAAK,cAAc;QAEhD,IAAI,WAAW,EAAE;YACf,MAAM,IAAI,KAAK,CAAC,4DAA4D,CAAC,CAAC;SAC/E;QAED,0BAAO,IAAI,GAAY;KACxB;;;;IAED,iBAAiB;;cACT,KAAK,GAAiB,IAAI,CAAC,gBAAgB,EAAE;QACnD,KAAK,CAAC,OAAO;;;;QAAC,IAAI,IAAI,IAAI,CAAC,qBAAqB,CAAC,IAAI,CAAC,EAAC,CAAC;QAExD,OAAO,KAAK,CAAC,MAAM,GAAG,CAAC;cACnB;gBACA,IAAI,EAAE,cAAc;gBACpB,WAAW,EAAE,CAAC,KAAK,CAAC;aACrB;cACC;gBACA,IAAI,EAAE,SAAS;gBACf,WAAW,EAAE,KAAK;aACnB,CAAC;KACL;;;;IAED,eAAe;;cACP,KAAK,GAAiB,IAAI,CAAC,gBAAgB,EAAE;QAEnD,OAAO,KAAK,CAAC,MAAM,GAAG,CAAC;cACnB,EAAE,IAAI,EAAE,YAAY,EAAE,WAAW,EAAE,KAAK,CAAC,GAAG;;;;gBAAC,IAAI,IAAI,IAAI,CAAC,CAAC,CAAC,EAAC,EAAE;cAC/D,EAAE,IAAI,EAAE,OAAO,EAAE,WAAW,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;KACjD;;;;;IAED,2BAA2B,CAAC,QAAqB;;YAC3C,gBAAgB,GAAG,IAAI;QAC3B,IAAI,IAAI,CAAC,OAAO,EAAE;YAChB,IAAI,CAAC,iBAAiB,CAAC,QAAQ,CAAC,CAAC;YACjC,OAAO,gBAAgB,CAAC;SACzB;;cAEK,4BAA4B,GAAG,IAAI,CAAC,YAAY,CAAC,QAAQ,GAAG,QAAQ,CAAC,QAAQ;QACnF,IAAI,4BAA4B,EAAE;YAChC,IAAI,CAAC,mBAAmB,CAAC,QAAQ,CAAC,CAAC;SACpC;aAAM;YACL,gBAAgB,GAAG,KAAK,CAAC;SAC1B;QAED,OAAO,gBAAgB,CAAC;KACzB;;;;;;;IAED,mBAAmB,CAAC,QAAqB;QACvC,mBAAA,IAAI,GAAC,WAAW,CAAC,mBAAA,IAAI,GAAC,WAAW,CAAC,MAAM,GAAG,CAAC,CAAC,GAAG,QAAQ,CAAC;QAEzD,0BAAO,IAAI,GAAC;KACb;;;;IAED,eAAe;QACb,MAAM,IAAI,KAAK,CAAC,qBAAqB,CAAC,CAAC;KACxC;;;;IAED,iBAAiB;QACf,OAAO,IAAI,CAAC,cAAc,CAAC,GAAG;;;;QAAC,QAAQ;;kBAC/B,qBAAqB,GAAsC,MAAM,CAAC,MAAM,CAAC;gBAC7E,QAAQ,EAAE,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC;aACtC,EAAE,QAAQ,CAAC;YAEZ,OAAO,qBAAqB,CAAC;SAC9B,EAAC,CAAC;KACJ;;;;IAED,sBAAsB;;cACd,IAAI,GAAG,IAAI,CAAC,mBAAmB,CAAC,KAAK,CAAC;QAE5C,OAAO,IAAI,CAAC,WAAW,CAAC,GAAG;;;;;QACzB,CAAC,IAAgB,EAAE,SAAiB,KAAK,IAAI,CAAC,0BAA0B,CAAC,IAAI,EAAE,SAAS,CAAC,EAC1F,CAAC;KACH;;;;;IAED,YAAY,CAAC,QAAqB;;cAC1B,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI;;;;QAAC,IAAI,IAChC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,EAC5B;QAED,OAAO,OAAO,CAAC,KAAK,CAAC,CAAC;KACvB;;;;;;IAED,kBAAkB,CAAC,SAAiB,EAAE,WAAmB;QACvD,OAAO,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,WAAW,CAAC,CAAC;KAC3C;;;;IAED,OAAO;QACL,IAAI,IAAI,CAAC,iBAAiB,EAAE;YAC1B,IAAI,CAAC,iBAAiB,CAAC,WAAW,EAAE,CAAC;SACtC;QAED,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC;KACvB;;;;;;;IAEO,0BAA0B,CAAC,QAAoB,EAAE,SAAiB;QACxE,OAAO,QAAQ,CAAC,GAAG;;;;;QAAC,CAAC,MAAM,EAAE,WAAW;;kBAChC,QAAQ,GAAG,IAAI,CAAC,kBAAkB,CAAC,SAAS,EAAE,WAAW,CAAC;;kBAC1D,cAAc,GAAG,IAAI,CAAC,8BAA8B,CAAC,SAAS,EAAE,WAAW,CAAC;;kBAC5E,4BAA4B,GAAG,IAAI,CAAC,kBAAkB,CAAC,GAAG,CAAC,cAAc,CAAC;kBAC5E,IAAI,CAAC,kBAAkB,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC,OAAO;kBACnD,4CAA4C;YAEhD,OAAO,MAAM,CAAC,MAAM,CAAC;gBACnB,gBAAgB,EAAE,mBAAmB,CAAC,MAAM,CAAC;gBAC7C,SAAS;gBACT,WAAW;gBACX,4BAA4B;aAC7B,EAAE,QAAQ,CAAC,CAAC;SACd,EAAC,CAAC;KACJ;;;;;;;IAEO,8BAA8B,CAAC,SAAiB,EAAE,WAAmB;QAC3E,OAAO,GAAG,SAAS,IAAI,WAAW,EAAE,CAAC;KACtC;;;;;IAEO,gBAAgB;;cAChB,KAAK,GAAiB,EAAE;QAC9B,IAAI,CAAC,KAAK,CAAC,OAAO;;;;QAAC,IAAI;;kBACf,WAAW,GAAe,IAAI,CAAC,GAAG;;;;YACtC,QAAQ,IAAI,IAAI,CAAC,OAAO,CAAC,aAAa;kBAClC,CAAC,QAAQ,CAAC,SAAS,EAAE,QAAQ,CAAC,QAAQ,EAAE,QAAQ,CAAC,QAAQ,IAAI,CAAC,CAAC;kBAC/D,CAAC,QAAQ,CAAC,SAAS,EAAE,QAAQ,CAAC,QAAQ,CAAC,EAC5C;YAED,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;SACzB,EAAC,CAAC;QAEH,OAAO,KAAK,CAAC;KACd;;;;;;IAEO,qBAAqB,CAAC,aAAyB;QACrD,IAAI,aAAa,CAAC,MAAM,GAAG,CAAC,EAAE;kBACtB,CAAC,KAAK,CAAC,GAAG,aAAa;;kBACvB,IAAI,GAAa,WAAW,CAAC,aAAa,CAAC;kBAC3C,CAAC,QAAQ,EAAE,QAAQ,EAAE,MAAM,CAAC,GAAG,KAAK;kBACpC,CAAC,OAAO,EAAE,OAAO,CAAC,GAAG,IAAI;;kBACzB,mBAAmB,GAAG,CAAC,IAAI,CAAC,mBAAmB,CAAC,QAAQ,EAAE,QAAQ,EAAE,OAAO,EAAE,OAAO,CAAC;YAE3F,IAAI,mBAAmB,EAAE;;sBACjB,YAAY,GAAG,CAAC,QAAQ,EAAE,QAAQ,EAAE,MAAM,IAAI,CAAC,CAAC;gBACtD,aAAa,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;aAClC;SACF;KACF;;;;;;IAEO,iBAAiB,CAAC,QAAqB;QAC7C,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QAEhC,IAAI,IAAI,CAAC,kBAAkB,CAAC,GAAG,CAAC,gCAAgC,CAAC,EAAE;YACjE,IAAI,CAAC,0BAA0B,EAAE,CAAC;SACnC;KACF;;;;;IAEO,0BAA0B;;cAC1B,kBAAkB,GAAG,IAAI,CAAC,kBAAkB,CAAC,GAAG,CAAC,gCAAgC,CAAC;;cAClF,oBAAoB,GAAG,kBAAkB,CAAC,SAAS;cACnD,CAAC,oBAAoB,EAAE,YAAY,CAAC,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;;cACjE,0BAA0B,GAAG,oBAAoB,GAAG,oBAAoB,CAAC,SAAS;eACnF,oBAAoB,GAAG,YAAY,CAAC,SAAS;QAElD,IAAI,0BAA0B,EAAE;;kBACxB,cAAc,GAAG,IAAI,CAAC,GAAG,CAAC,YAAY,CAAC,SAAS,GAAG,oBAAoB,CAAC,SAAS,CAAC;;kBAClF,eAAe,GAAG,IAAI,CAAC,GAAG,CAAC,oBAAoB,GAAG,oBAAoB,CAAC,SAAS,CAAC;;kBACjF,iBAAiB,GAAG,eAAe,GAAG,cAAc;;kBACpD,iCAAiC,GAAG,wBAAwB,CAChE,oBAAoB,CAAC,QAAQ,EAC7B,oBAAoB,CAAC,SAAS,EAC9B,YAAY,CAAC,QAAQ,EACrB,YAAY,CAAC,SAAS,EACtB,UAAU,CAAC,IAAI,CAChB;;kBAEK,kCAAkC,GAAG,iBAAiB,GAAG,iCAAiC;;kBAC1F,iCAAiC,GAAG,IAAI,CAAC,iCAAiC,CAC9E,kBAAkB,CAAC,OAAO,EAC1B,iCAAiC,EACjC,kCAAkC,CAAC;YAErC,IAAI,iCAAiC,EAAE;gBACrC,OAAO;aACR;;kBAEK,OAAO,GAAG,OAAO,CACrB,CAAC,oBAAoB,CAAC,SAAS,EAAE,oBAAoB,CAAC,QAAQ,CAAC,EAC/D,CAAC,YAAY,CAAC,SAAS,EAAE,YAAY,CAAC,QAAQ,CAAC,CAChD;;kBAEK,QAAQ,GAAmB,WAAW,CAC1C,CAAC,oBAAoB,CAAC,SAAS,EAAE,oBAAoB,CAAC,QAAQ,CAAC,EAC/D,kCAAkC,EAClC,OAAO,EAAE,EAAE,KAAK,EAAE,YAAY,EAAE,CACjC;;kBAEK,kCAAkC,GAAG,IAAI,CAAC,WAAW,CAAC,MAAM,GAAG,CAAC;;kBAChE,WAAW,GAAgB,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,YAAY,EAAE;gBAC/D,SAAS,EAAE,QAAQ,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC,CAAC;gBAC3C,QAAQ,EAAE,QAAQ,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC,CAAC;gBAC1C,YAAY,EAAE,uCAAuC;aACtD,CAAC;YAEF,IAAI,CAAC,kBAAkB,CAAC,MAAM,CAAC,gCAAgC,CAAC,CAAC;YACjE,IAAI,CAAC,4BAA4B,CAAC,kBAAkB,CAAC,OAAO,EAAE,kCAAkC,EAAE,IAAI,CAAC,gBAAgB,CAAC,CAAC;YACzH,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,kCAAkC,EAAE,CAAC,EAAE,WAAW,CAAC,CAAC;SAC7E;aAAM,IAAI,oBAAoB,IAAI,YAAY,CAAC,SAAS,EAAE;YACzD,IAAI,CAAC,mCAAmC,CAAC,kBAAkB,CAAC,OAAO,CAAC,CAAC;SACtE;aAAM;YACL,MAAM,IAAI,KAAK,CAAC,kCAAkC,kBAAkB,CAAC,SAAS,8BAA8B;kBACxG,KAAK,oBAAoB,CAAC,SAAS,UAAU,YAAY,CAAC,SAAS,GAAG,CAAC,CAAC;SAC7E;KACF;;;;;;;;IAEO,iCAAiC,CACvC,kBAA0B,EAC1B,8BAAsC,EACtC,kCAA0C;;cAEpC,8BAA8B,GAAG,8BAA8B,GAAG,kCAAkC;;cACpG,2BAA2B,GAAG,kBAAkB,CACpD,IAAI,CAAC,OAAO,CAAC,uCAAuC,EACpD,IAAI,CAAC,OAAO,CAAC,2CAA2C,EACxD,UAAU,CAAC,SAAS,CACrB;;cAEK,4BAA4B,GAAG,kCAAkC,GAAG,2BAA2B;;cAC/F,wBAAwB,GAAG,8BAA8B,GAAG,2BAA2B;QAE7F,IAAI,4BAA4B,IAAI,wBAAwB,EAAE;;kBACtD,mBAAmB,GAAG,IAAI,CAAC,WAAW,CAAC,MAAM,GAAG,CAAC;;kBACjD,eAAe,GAAG,IAAI,CAAC,WAAW,CAAC,MAAM,GAAG,CAAC;;kBAC7C,WAAW,GAAG,kCAAkC,GAAG,8BAA8B;kBACnF,mBAAmB;kBACnB,eAAe;YAEnB,IAAI,CAAC,4BAA4B,CAAC,kBAAkB,EAAE,WAAW,EAAE,IAAI,CAAC,gBAAgB,CAAC,CAAC;YAC1F,IAAI,CAAC,kBAAkB,CAAC,MAAM,CAAC,gCAAgC,CAAC,CAAC;YACjE,OAAO,IAAI,CAAC;SACb;QAED,OAAO,KAAK,CAAC;KACd;;;;;;;IAEO,sBAAsB,CAAC,SAAsB,EAAE,SAAsB;QAC3E,OAAO,IAAI,CAAC,mBAAmB,CAC7B,SAAS,CAAC,SAAS,EACnB,SAAS,CAAC,QAAQ,EAClB,SAAS,CAAC,SAAS,EACnB,SAAS,CAAC,QAAQ,CACnB,CAAC;KACH;;;;;;;;;IAEO,mBAAmB,CAAC,UAAkB,EAAE,SAAiB,EAAE,UAAkB,EAAE,SAAiB;QACtG,OAAO,iBAAiB,CACtB,UAAU,EACV,SAAS,EACT,UAAU,EACV,SAAS,EACT,IAAI,CAAC,OAAO,CAAC,yBAAyB,CACvC,CAAC;KACH;;;;;;;;IAEO,sBAAsB,CAAC,QAAqB;QAClD,IAAI,mBAAA,IAAI,GAAC,OAAO,CAAC,mBAAmB,EAAE;YACpC,mBAAA,IAAI,GAAC,cAAc,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;SACpC;QAED,0BAAO,IAAI,GAAC;KACb;CACF;;;;;;;;;;;;;;;;;;;;;;;;;AC5nBD,SAAgB,gBAAgB,CAAC,OAAO;IACtC,OAAO,OAAO,GAAG,GAAG,GAAG,IAAI,CAAC,EAAE,CAAC;CAChC;;;;;;;;;;;;;;ICSY,cAAc;;;MAAd,cAAc;CAC1B,CAAA;;YALA,UAAU,SAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;AAEY,cAAc;IAD1B,UAAU,CAAC,gBAAgB,CAAC;GAChB,cAAc,CAC1B;;;;;;;;;;;ACZD;;;;AAMA,SAAgB,uBAAuB,CAAC,IAAkB;;UAClD,QAAQ,GAAG,EAAE;;UACb,KAAK,GAAiB,gBAAgB,CAAC,IAAI,CAAC;IAClD,KAAK,CAAC,OAAO;;;;IAAC,CAAC,WAAuB;;cAC9B,YAAY,GAAG,WAAW,CAAC,GAAG;;;;QAAC,CAAC,UAAoB,KAAK,mBAAmB,CAAC,UAAU,CAAC,EAAC;QAC/F,QAAQ,CAAC,QAAQ,EAAE,YAAY,CAAC,CAAC;KAClC,EAAC,CAAC;IAEH,OAAO,QAAQ,CAAC;CACjB;;;;;;ACdD;;;;AAQA,SAAS,UAAU,CAAC,CAAC;IACnB,OAAO,CAAC,GAAG,CAAC,CAAC;CACd;;;;;;AAED,SAAS,kBAAkB,CAAC,CAAQ,EAAE,CAAQ;IAC5C,OAAO,UAAU,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,UAAU,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;CACtD;;;;;;;AAED,SAAS,wBAAwB,CAAC,SAAgB,EAAE,cAAqB,EAAE,YAAmB;;UACtF,aAAa,GAAG,kBAAkB,CAAC,cAAc,EAAE,YAAY,CAAC;IAEtE,IAAI,aAAa,KAAK,CAAC,EAAE;QACvB,OAAO,kBAAkB,CAAC,SAAS,EAAE,cAAc,CAAC,CAAC;KACtD;;UAEK,KAAK,GAAG,CAAC,SAAS,CAAC,CAAC,GAAG,cAAc,CAAC,CAAC,KAAK,YAAY,CAAC,CAAC,GAAG,cAAc,CAAC,CAAC,CAAC;;UAC9E,KAAK,GAAG,CAAC,SAAS,CAAC,CAAC,GAAG,cAAc,CAAC,CAAC,KAAK,YAAY,CAAC,CAAC,GAAG,cAAc,CAAC,CAAC,CAAC;;UAC9E,YAAY,GAAG,KAAK,GAAG,KAAK;;UAC5B,KAAK,GAAG,YAAY,GAAG,aAAa;IAE1C,IAAI,KAAK,GAAG,CAAC,EAAE;QACb,OAAO,kBAAkB,CAAC,SAAS,EAAE,cAAc,CAAC,CAAC;KACtD;IAED,IAAI,KAAK,GAAG,CAAC,EAAE;QACb,OAAO,kBAAkB,CAAC,SAAS,EAAE,YAAY,CAAC,CAAC;KACpD;;UAEK,MAAM,GAAG,cAAc,CAAC,CAAC,GAAG,KAAK,IAAI,YAAY,CAAC,CAAC,GAAG,cAAc,CAAC,CAAC,CAAC;;UACvE,MAAM,GAAG,cAAc,CAAC,CAAC,GAAG,KAAK,IAAI,YAAY,CAAC,CAAC,GAAG,cAAc,CAAC,CAAC,CAAC;IAE7E,OAAO,kBAAkB,CAAC,SAAS,EAAE,EAAE,CAAC,EAAE,MAAM,EAAE,CAAC,EAAE,MAAM,EAAE,CAAC,CAAC;CAChE;;;;;;;AAED,SAAS,aAAa,CAAC,SAAgB,EAAE,cAAqB,EAAE,YAAmB;IACjF,OAAO,IAAI,CAAC,IAAI,CAAC,wBAAwB,CAAC,SAAS,EAAE,cAAc,EAAE,YAAY,CAAC,CAAC,CAAC;CACrF;;;;;;;AAED,SAAgB,iBAAiB,CAAC,SAAsB,EAAE,cAA2B,EAAE,YAAyB;;UACxG,cAAc,GAAa,sBAAsB,CAAC,SAAS,CAAC;;UAC5D,mBAAmB,GAAa,sBAAsB,CAAC,cAAc,CAAC;;UACtE,iBAAiB,GAAa,sBAAsB,CAAC,YAAY,CAAC;UAClE,CAAC,UAAU,EAAE,UAAU,CAAC,GAAG,cAAc;UACzC,CAAC,UAAU,EAAE,UAAU,CAAC,GAAG,mBAAmB;UAC9C,CAAC,QAAQ,EAAE,QAAQ,CAAC,GAAG,iBAAiB;IAE9C,OAAO,aAAa,CAClB,EAAE,CAAC,EAAE,UAAU,EAAE,CAAC,EAAE,UAAU,EAAE,EAChC,EAAE,CAAC,EAAE,UAAU,EAAE,CAAC,EAAE,UAAU,EAAE,EAChC,EAAE,CAAC,EAAE,QAAQ,EAAE,CAAC,EAAE,QAAQ,EAAE,CAC7B,CAAC;CACH;;;;;;AC5DD;;;;;;AAMA,SAAgB,kCAAkC,CAAC,IAAkB,EAAE,KAAkB,EAAE,OAA2B;IACpH,OAAO,UAAU,CAAC,IAAI,EAAE,KAAK,EAAE,MAAM,CAAC,MAAM,CAAC,EAAE,gBAAgB,EAAE,MAAM,EAAE,EAAE,OAAO,CAAC,CAAC,CAAC;CACtF;;;;;;;;;;;;;ACJD,SAAgB,oBAAoB,CAAC,IAAkB,EAAE,GAAW,EAAE,GAAW,EAAE,OAA0B;IAC3G,OAAO,IAAI,CAAC,UAAU,CAAC,IAAI,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC,EAAE,OAAO,CAAC,CAAC;CACnD;;;;;;;;;;;ACLD;;;;;;AAmBA,SAAgB,gBAAgB,CAAC,IAAkB,EAAE,KAAkB,EAAE,iBAA0B,IAAI;;UAC/F,sBAAsB,GAA6B,EAAE;;UACrD,KAAK,GAAiB,gBAAgB,CAAC,IAAI,CAAC;IAElD,KAAK,CAAC,OAAO;;;;IAAC,CAAC,WAAuB;;cAC9B,OAAO,GAAG,oBAAoB,CAAC,WAAW,EAAE,KAAK,EAAE,cAAc,CAAC;QACxE,QAAQ,CAAC,sBAAsB,EAAE,OAAO,CAAC,CAAC;KAC3C,EAAC,CAAC;;QAEC,YAAoC;;QACpC,aAAqC;;QACrC,QAAgC;;QAChC,QAAgC;IAEpC,sBAAsB,CAAC,OAAO;;;;IAAC,cAAc;QAC3C,IAAI,CAAC,YAAY,IAAI,cAAc,CAAC,QAAQ,GAAG,YAAY,CAAC,QAAQ,EAAE;YACpE,YAAY,GAAG,cAAc,CAAC;SAC/B;QAED,IAAI,CAAC,aAAa,IAAI,cAAc,CAAC,QAAQ,GAAG,aAAa,CAAC,QAAQ,EAAE;YACtE,aAAa,GAAG,cAAc,CAAC;SAChC;QAED,IAAI,CAAC,QAAQ,IAAI,cAAc,CAAC,YAAY,GAAG,QAAQ,CAAC,YAAY,EAAE;YACpE,QAAQ,GAAG,cAAc,CAAC;SAC3B;QAED,IAAI,CAAC,QAAQ,IAAI,cAAc,CAAC,YAAY,GAAG,QAAQ,CAAC,YAAY,EAAE;YACpE,QAAQ,GAAG,cAAc,CAAC;SAC3B;KACF,EAAC,CAAC;;;;UAKG,WAAW,GAAG,sBAAsB,CAAC,YAAY,CAAC,KAAK,GAAG,CAAC,CAAC;;UAC5D,UAAU,GAAG,sBAAsB,CAAC,YAAY,CAAC,KAAK,GAAG,CAAC,CAAC;;QAC7D,SAAS,GAAG,UAAU;;QACtB,aAAa,GAAG,WAAW;;;;;IAM/B,IAAI,WAAW,IAAI,UAAU,EAAE;;cACvB,aAAa,GAAG,iBAAiB,CAAC,KAAK,EAAE,YAAY,CAAC,eAAe,EAAE,WAAW,CAAC,eAAe,CAAC;;cACnG,aAAa,GAAG,iBAAiB,CAAC,KAAK,EAAE,YAAY,CAAC,eAAe,EAAE,UAAU,CAAC,eAAe,CAAC;QAExG,IAAI,aAAa,GAAG,aAAa,EAAE;YACjC,SAAS,GAAG,WAAW,CAAC;YACxB,aAAa,GAAG,sBAAsB,CAAC,SAAS,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC;SAC7D;KACF;IAED,OAAO;QACL,YAAY;QACZ,aAAa;QACb,SAAS;QACT,aAAa;QACb,QAAQ;QACR,QAAQ;KACT,CAAC;CACH;;;;;;;AAED,SAAgB,mBAAmB,CACjC,IAAkB,EAClB,KAAkB,EAClB,iBAA0B,IAAI;;UAExB,IAAI,GAAG,gBAAgB,CAAC,IAAI,EAAE,KAAK,EAAE,cAAc,CAAC;IAE1D,OAAO;QACL,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,YAAY,CAAC,eAAe,GAAG,IAAI;QAC5D,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC,eAAe,GAAG,IAAI;KACvD,CAAC;CACH;;;;;;;AAED,SAAgB,kBAAkB,CAAC,IAAkB,EAAE,KAAkB,EAAE,iBAA0B,IAAI;UACjG,CAAC,YAAY,CAAC,GAAG,mBAAmB,CAAC,IAAI,EAAE,KAAK,EAAE,cAAc,CAAC;IACvE,OAAO,YAAY,CAAC;CACrB;;;;;;;AAED,SAAS,oBAAoB,CAAC,WAAuB,EAAE,cAA2B,EAAE,cAAuB;;UACnG,+BAA+B,GAA6B,WAAW;SAC1E,GAAG;;;;;IACF,CAAC,UAAoB,EAAE,KAAa,KAAK,0BAA0B,CAAC,UAAU,EAAE,cAAc,EAAE,cAAc,EAAE,KAAK,CAAC,EACvH;IAEH,OAAO,+BAA+B,CAAC;CACxC;;;;;;AAED,SAAS,iBAAiB,CAAC,UAAoB,EAAE,cAA2B;;UACpE,WAAW,GAAa,sBAAsB,CAAC,cAAc,CAAC;IAEpE,OAAO,sBAAsB,CAAC,UAAU,CAAC,CAAC,CAAC,EAAE,UAAU,CAAC,CAAC,CAAC,EAAE,WAAW,CAAC,CAAC,CAAC,EAAE,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC;CAC7F;;;;;;;;AAED,SAAS,0BAA0B,CACjC,UAAoB,EACpB,cAA2B,EAC3B,cAAuB,EACvB,KAAa;;UAEPE,WAAQ,GAAG,cAAc;UAC3B,iBAAiB,CAAC,UAAU,EAAE,cAAc,CAAC;UAC7C,wBAAwB,CAAC,UAAU,EAAE,cAAc,CAAC;;UAElD,YAAY,GAA2B;QAC3C,eAAe,EAAE,UAAU;kBAC3BA,WAAQ;QACR,KAAK;KACN;IAED,OAAO,YAAY,CAAC;CACrB;;;;;;;;;;;;;AChID,SAAgB,mBAAmB,CAAC,UAAkB,EAAE,QAAgB,EAAE,SAAiB;IACzF,OAAO,SAAS,IAAI,UAAU,IAAI,SAAS,IAAI,QAAQ,CAAC;CACzD;;;;;;;;AAQD,SAAgB,kCAAkC,CAAC,UAAkB,EAAE,QAAgB,EAAE,SAAiB;IACxG,OAAO,SAAS,GAAG,UAAU,IAAI,SAAS,GAAG,QAAQ,CAAC;CACvD;;;;;;AClBD;;;;;;;;AAUA,SAAgB,kBAAkB,CAAC,UAAkB,EAAE,QAAgB,EAAE,cAAsB,EAAE,YAAoB;;;;;;;;;;;;;;;UAc7G,WAAW,GAAG,cAAc,GAAG,UAAU,IAAI,YAAY,GAAG,QAAQ;;UACpE,WAAW,GAAG,cAAc,KAAK,UAAU,IAAI,YAAY,KAAK,QAAQ;;UACxE,eAAe,GAAG,kCAAkC,CAAC,UAAU,EAAE,QAAQ,EAAE,cAAc,CAAC;;UAC1F,aAAa,GAAG,kCAAkC,CAAC,UAAU,EAAE,QAAQ,EAAE,YAAY,CAAC;;UAEtF,YAAY,GAAG,UAAU,KAAK,cAAc;;UAC5C,UAAU,GAAG,QAAQ,KAAK,YAAY;;UACtC,oBAAoB,GAAG,YAAY,IAAI,UAAU,IAAI,YAAY;;UACjE,kBAAkB,GAAG,UAAU,IAAI,QAAQ,IAAI,cAAc;IAEnE,OAAO,WAAW;WACb,WAAW;WACX,eAAe;WACf,aAAa;WACb,oBAAoB;WACpB,kBAAkB,CAAC;CACzB;;;;;;ACnCD;;;;;AAIA,SAAgB,mBAAmB,CAAC,IAAgB,EAAE,KAAkB;IACtE,OAAO,aAAa,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,EAAE,WAAW,CAAC,IAAI,CAAC,WAAW,CAAC,EAAE,KAAK,CAAC,CAAC;CACjF;;;;;;;AAED,SAAgB,oBAAoB,CAAC,IAAgB,EAAE,GAAW,EAAE,GAAW;UACvE,CAAC,YAAY,EAAE,YAAY,CAAC,GAAG,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC;UAClD,CAAC,UAAU,EAAE,UAAU,CAAC,GAAG,WAAW,CAAC,IAAI,CAAC,WAAW,CAAC;IAE9D,OAAO,cAAc,CAAC,YAAY,EAAE,YAAY,EAAE,UAAU,EAAE,UAAU,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;CACrF;;;;;;;;;;AAED,SAAgB,cAAc,CAC5B,YAAoB,EACpB,YAAoB,EACpB,UAAkB,EAClB,UAAkB,EAClB,YAAoB,EACpB,YAAoB;IAEpB,MAAM,IAAI,KAAK,CAAC,OAAO,CAAC,CAAC;CAC1B;;;;;;;;AAED,SAAgB,aAAa,CAAC,cAA2B,EAAE,YAAyB,EAAE,SAAsB,EAAE,SAAS,GAAG,CAAC;;UACnH,UAAU,GAAG,sBAAsB,CAAC,cAAc,CAAC;;UACnD,QAAQ,GAAG,sBAAsB,CAAC,YAAY,CAAC;;UAC/C,KAAK,GAAG,sBAAsB,CAAC,SAAS,CAAC;UAEzC,CAAC,WAAW,EAAE,WAAW,CAAC,GAAG,UAAU;UACvC,CAAC,SAAS,EAAE,SAAS,CAAC,GAAG,QAAQ;UACjC,CAAC,UAAU,EAAE,UAAU,CAAC,GAAG,KAAK;;UAChC,KAAK,GAAG,CAAC,SAAS,GAAG,WAAW,KAAK,SAAS,GAAG,WAAW,CAAC;;UAC7D,CAAC,GAAG,KAAK,GAAG,UAAU,GAAG,WAAW;IAE1C,IAAI,CAAC,CAAC,IAAI,UAAU,GAAG,SAAS,IAAI,CAAC,IAAI,UAAU,GAAG,SAAS,MAAM,UAAU,IAAI,WAAW,IAAI,UAAU,IAAI,SAAS,CAAC,EAAE;QAC1H,OAAO,IAAI,CAAC;KACb;IAED,OAAO,KAAK,CAAC;CACd;;;;;;;;;;;;;;;;;;;;;AC9CD;;;;;;AAIA,SAAgB,6BAA6B,CAAC,UAAuB,EAAE,QAAqB,EAAE,SAAsB;UAC5G,CAAC,EAAE,EAAE,EAAE,CAAC,GAAG,sBAAsB,CAAC,UAAU,CAAC;UAC7C,CAAC,EAAE,EAAE,EAAE,CAAC,GAAG,sBAAsB,CAAC,QAAQ,CAAC;UAC3C,CAAC,KAAK,EAAE,KAAK,CAAC,GAAG,sBAAsB,CAAC,SAAS,CAAC;IAExD,OAAO,qBAAqB,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,KAAK,EAAE,KAAK,CAAC,CAAC;CAC5D;;;;;;;;;;;;;;;;;;;ICGY,aAAa;;;MAAb,aAAa;IAJ1B;QAKE,oBAAe,GAAG,IAAI,CAAC;QACvB,gBAAW,GAAG,6DAA6D,CAAC;QAC5E,oBAAe,GAAG,YAAY,CAAC;QAC/B,uBAAkB,GAAG,YAAY,CAAC;QAClC,uBAAkB,GAAG,OAAO,CAAC;QAC7B,mBAAc,GAAG,gBAAgB,CAAC;QAClC,0BAAqB,GAAG,mEAAmE,CAAC;KAC7F;CAAA,CAAA;;YAZA,UAAU,SAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;AAEY,aAAa;IADzB,UAAU,CAAC,eAAe,CAAC;GACf,aAAa,CAQzB;;;;;;;;;;ICKY,iBAAiB;;;;MAAjB,iBAAkB,SAAQ,cAAc;;;;;;IAiBnD,YAAY,GAAW,EAAmB,IAAgB,EAAmB,MAAqB;QAChG,KAAK,CAAC,GAAG,CAAC,CAAC;QAD6B,SAAI,GAAJ,IAAI,CAAY;QAAmB,WAAM,GAAN,MAAM,CAAe;QAhBlG,iBAAY,GAAG;YACb,oBAAoB,CAAC,QAAQ;YAC7B,oBAAoB,CAAC,gBAAgB;YACrC,oBAAoB,CAAC,OAAO;YAC5B,oBAAoB,CAAC,KAAK;YAC1B,oBAAoB,CAAC,IAAI;SAC1B,CAAC;QAYA,IAAI,CAAC,YAAY,GAAG,sBAAsB,CAAC,IAAI,CAAC;KACjD;;;;IAXD,IAAI,IAAI;QACN,OAAO,IAAI,CAAC,MAAM,CAAC,cAAc,CAAC;KACnC;;;;IAED,IAAI,WAAW;QACb,OAAO,IAAI,CAAC,MAAM,CAAC,qBAAqB,CAAC;KAC1C;;;;;IAOD,kBAAkB,CAAC,OAAyB;;cACpC,GAAG,GAAG,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,WAAW,EAAE;YAC1C,QAAQ,EAAE,IAAI,CAAC,MAAM,CAAC,eAAe;YACrC,WAAW,EAAE,IAAI,IAAI,EAAE,CAAC,OAAO,EAAE;SAClC,CAAC;QAEF,OAAO,IAAI,CAAC,IAAI,CAAC,KAAK,CAAiB,GAAG,EAAE,IAAI,CAAC,MAAM,CAAC,kBAAkB,CAAC;aACxE,IAAI,CACH,GAAG;;;;QAAC,CAAC,IAAoB;;kBACjB,SAAS,GAAG,IAAI,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC,OAAO,EAAE;;kBACnD,QAAQ,GAAgB,MAAM,CAAC,MAAM,CAAC;gBAC1C,SAAS;;;;;;gBAMT,QAAQ,EAAE,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,IAAI;gBACxC,gBAAgB,EAAE,IAAI;gBACtB,KAAK,EAAE,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,WAAW;gBAC3C,OAAO,EAAE,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,OAAO;gBACzC,IAAI,EAAE,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,IAAI;aACrC,EAAE,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC;YAE5B,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,iCAAiC,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC;YAC7D,OAAO,QAAQ,CAAC;SACjB,EAAC,CACH;aACA,SAAS,EAAE,CAAC;KAChB;;;;;IAED,aAAa,CAAC,OAAyB;;YACjC,YAAyB;;cACvB,OAAO,GAAG,IAAI,OAAO,EAAe;;cACpC,QAAQ,GAAG,WAAW;;;QAAC;YAC3B,IAAI,CAAC,kBAAkB,CAAC,OAAO,CAAC;iBAC7B,IAAI;;;;YAAC,QAAQ;gBACZ,IAAI,QAAQ,CAAC,QAAQ,EAAE,YAAY,CAAC,EAAE;oBACpC,OAAO,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;iBACxB;gBAED,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,+BAA+B,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC;gBAC3D,YAAY,GAAG,QAAQ,CAAC;aACzB,EAAC;iBACD,KAAK;;;;YAAC,KAAK,IAAI,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,EAAC,CAAC;SACzC,GAAE,IAAI,CAAC,MAAM,CAAC,eAAe,CAAC;QAE/B,OAAO,OAAO,CAAC,IAAI,CACjB,QAAQ;;;QAAC,MAAM,aAAa,CAAC,QAAQ,CAAC,EAAC,CACxC,CAAC;KACH;;;;IAED,WAAW;QACT,OAAO,IAAI,CAAC,UAAU,EAAE;aACrB,IAAI,CACH,GAAG;;;;QAAC,MAAM,IAAI,OAAO,CAAC,MAAM,CAAC,EAAC,EAC9B,UAAU;;;QAAC,MAAM,EAAE,CAAC,KAAK,CAAC,EAAC,CAC5B,CAAC;KACL;;;;IAED,UAAU;;cACF,GAAG,GAAG,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,WAAW,EAAE;YAC1C,QAAQ,EAAE,IAAI,CAAC,MAAM,CAAC,kBAAkB;YACxC,WAAW,EAAE,IAAI,IAAI,EAAE,CAAC,OAAO,EAAE;SAClC,CAAC;QAEF,OAAO,IAAI,CAAC,IAAI,CAAC,KAAK,CAAqB,GAAG,EAAE,IAAI,CAAC,MAAM,CAAC,kBAAkB,CAAC,CAAC;KACjF;CACF,CAAA;;YA5FA,UAAU,SAAC,EAAE,UAAU,EAAE,MAAM,EAAE;;;;YAbzB,MAAM;YAVN,UAAU;YAWV,aAAa;;;;;;;AAcT,iBAAiB;IAD7B,YAAY,CAAC,UAAU,CAAC;qCAkBN,MAAM,EAAyB,UAAU,EAA2B,aAAa;GAjBvF,iBAAiB,CA0F7B;;;;;;AAED,SAAS,QAAQ,CAAC,SAAsB,EAAE,SAAsB;IAC9D,OAAO,CAAC,KAAK,CAAC,SAAS,EAAE,SAAS,CAAC,CAAC;CACrC;;;;;;AAED,SAAS,KAAK,CAAC,SAAsB,EAAE,SAAsB;IAC3D,OAAO,SAAS;WACX,SAAS;WACT,SAAS,CAAC,SAAS,KAAK,SAAS,CAAC,SAAS;WAC3C,SAAS,CAAC,QAAQ,KAAK,SAAS,CAAC,QAAQ;WACzC,SAAS,CAAC,SAAS,KAAK,SAAS,CAAC,SAAS;WAC3C,SAAS,CAAC,QAAQ,KAAK,SAAS,CAAC,QAAQ;WACzC,SAAS,CAAC,KAAK,KAAK,SAAS,CAAC,KAAK;WACnC,SAAS,CAAC,OAAO,KAAK,SAAS,CAAC,OAAO;WACvC,SAAS,CAAC,QAAQ,KAAK,SAAS,CAAC,QAAQ;WACzC,SAAS,CAAC,gBAAgB,KAAK,SAAS,CAAC,gBAAgB;WACzD,SAAS,CAAC,IAAI,KAAK,SAAS,CAAC,IAAI;WACjC,SAAS,CAAC,IAAI,KAAK,SAAS,CAAC,IAAI;WACjC,SAAS,CAAC,IAAI,KAAK,SAAS,CAAC,IAAI;WACjC,SAAS,CAAC,IAAI,KAAK,SAAS,CAAC,IAAI,CAAC;CACxC;;;;;;;;;;;;;;;;MCnHY,gBAAgB;;;YAd5B,QAAQ,SAAC;gBACR,OAAO,EAAE;oBACP,YAAY;oBACZ,aAAa;oBACb,oBAAoB;iBACrB;gBACD,YAAY,EAAE,EACb;gBACD,OAAO,EAAE,EACR;gBACD,SAAS,EAAE,EACV;gBACD,OAAO,EAAE,CAAC,sBAAsB,CAAC;aAClC;;;;;;;;;;;;;;;;;ACtBD,MAIa,qBAAsB,SAAQ,iBAAiB;CAS3D;;;;;;;;;;;;;ICZG,QAAS,QAAQ;IACjB,MAAO,MAAM;IACb,OAAQ,OAAO;IACf,KAAM,KAAK;IACX,KAAM,KAAK;IACX,MAAO,MAAM;IACb,UAAW,UAAU;IACrB,MAAO,MAAM;;;;;;;ACRjB,MAIa,eAAgB,SAAQ,iBAAiB;CAMrD;;;;;;MCWY,cAAc;;;;;;IACzB,YACU,UAAgC,EAChC,iBAAoC,EACpC,gBAAkC;QAFlC,eAAU,GAAV,UAAU,CAAsB;QAChC,sBAAiB,GAAjB,iBAAiB,CAAmB;QACpC,qBAAgB,GAAhB,gBAAgB,CAAkB;KAE3C;;;;;;;;;IAED,eAAe,CAAI,UAAsB,EAAE,KAAe,EAAE,KAA0B,EAAE,WAAoB;;cACpG,gBAAgB,GAA+B,EAAE,UAAU,EAAE,KAAK,CAAC,WAAW,EAAE;;YAClF,UAAU;QAEd,IAAI,WAAW,EAAE;YACf,gBAAgB,CAAC,KAAK,GAAG,WAAW,CAAC;YACrC,UAAU,GAAG,IAAI,UAAU,EAAE,CAAC,GAAG,CAAC,OAAO,EAAE,WAAW,CAAC,CAAC;SACzD;QAED,OAAO,UAAU,CAAC,UAAU;cACxB,IAAI,CAAC,UAAU,CAAC,eAAe,CAAI,UAAU,CAAC,UAAU,EAAE,KAAK,EAAE,KAAK,EAAE,gBAAgB,CAAC;cACzF,IAAI,CAAC,iBAAiB,CAAC,qBAAqB,CAAI,UAAU,CAAC,EAAE,EAAE,KAAK,CAAC,gBAAgB,EAAE,WAAW,CAAC,KAAK,CAAC,EAAE,UAAU,CAAC,CAAC;KAC5H;;;;;;;IAED,aAAa,CAAC,UAAsB,EAAE,KAAe,EAAE,WAAmB;QACxE,OAAO,UAAU,CAAC,UAAU;cACxB,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC,UAAU,CAAC,UAAU,EAAE,KAAK,EAAE,WAAW,EAAE,EAAE,UAAU,EAAE,KAAK,CAAC,WAAW,EAAE,CAAC;cAC3G,IAAI,CAAC,iBAAiB,CAAC,cAAc,CAAC,UAAU,CAAC,EAAE,EAAE,KAAK,CAAC,gBAAgB,EAAE,WAAW,EAAE,KAAK,CAAC,WAAW,CAAC,CAAC;KAClH;;;;;;;IAED,gBAAgB,CAAC,UAAsB,EAAE,KAAmB,EAAE,QAAkB;QAC9E,IAAI,CAAC,QAAQ,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE;YACjC,MAAM,IAAI,KAAK,CAAC,gDAAgD,CAAC,CAAC;SACnE;QAED,IAAI,CAAC,KAAK,CAAC,yBAAyB,EAAE;YACpC,MAAM,IAAI,KAAK,CAAC,kFAAkF,CAAC,CAAC;SACrG;;cAEK,WAAW,GAAG,GAAG,KAAK,CAAC,yBAAyB,SAAS,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI;QACvF,OAAO,IAAI,CAAC,WAAW,CAAC,UAAU,EAAE,KAAK,EAAE,WAAW,CAAC,CAAC;KACzD;;;;;;;IAED,WAAW,CAAC,UAAsB,EAAE,KAAmB,EAAE,WAAoB;;cACrE,cAAc,GAAG,oBAAoB,CAAC,KAAK,CAAC,MAAM,CAAC;QAEzD,OAAO,UAAU,CAAC,UAAU;cACxB,IAAI,CAAC,UAAU,CAAC,WAAW,CAAC,UAAU,CAAC,UAAU,EAAE,KAAK,EAAE,WAAW,EAAE,EAAE,UAAU,EAAE,KAAK,CAAC,WAAW,EAAE,CAAC;cACzG,IAAI,CAAC,iBAAiB,CAAC,gBAAgB,CACvC,UAAU,CAAC,EAAE,EACb,KAAK,CAAC,gBAAgB,EACtB,WAAW,EACX,KAAK,CAAC,WAAW,EACjB,IAAI,EACJ,IAAI,EACJ,IAAI,EACJ,cAAc,CACf,CAAC;KACL;;;;;;;IAED,kBAAkB,CAAC,UAAsB,EAAE,KAAmB,EAAE,UAAkB;;cAC1E,aAAa,GAAG,OAAO,CAAC,UAAU,CAAC,UAAU,CAAC;;cAC9C,cAAc,GAAG,oBAAoB,CAAC,KAAK,CAAC,MAAM,CAAC;;YACrD,WAAmB;QAEvB,IAAI,CAAC,aAAa,EAAE;YAClB,WAAW,GAAG,IAAI,kBAAkB,CAAC;gBACnC,WAAW,EAAE,CAAC,IAAI,CAAC,gBAAgB,CAAC,gBAAgB;aACrD,CAAC;iBACC,SAAS,CAAC,KAAK,CAAC,YAAY,EAAE,UAAU,CAAC;iBACzC,aAAa,EAAE,CAAC;SACpB;QAED,OAAO,aAAa;cAChB,IAAI,CAAC,UAAU,CAAC,kBAAkB,CAAC,UAAU,CAAC,UAAU,EAAE,KAAK,EAAE,UAAU,EAAE,EAAE,UAAU,EAAE,KAAK,CAAC,WAAW,EAAE,CAAC;cAC/G,IAAI,CAAC,iBAAiB,CAAC,gBAAgB,CACvC,UAAU,CAAC,EAAE,EACb,KAAK,CAAC,gBAAgB,EACtB,WAAW,EACX,KAAK,CAAC,WAAW,EACjB,IAAI,EACJ,IAAI,EACJ,IAAI,EACJ,cAAc,CACf,CAAC;KACL;;;YAtFF,UAAU,SAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;YAXQ,oBAAoB;YACpB,iBAAiB;YAKjB,gBAAgB;;;;;;;;;;;ICHZ,SAAS;;;MAAT,SAAU,SAAQ,cAAc;IAJ7C;;QAKE,kCAA6B,GAAG,kDAAkD,CAAC;QACnF,8BAAyB,GAAG,IAAI,CAAC;KAClC;CAAA,CAAA;;YAPA,UAAU,SAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;AAEY,SAAS;IADrB,UAAU,CAAC,WAAW,CAAC;GACX,SAAS,CAGrB;;;;;;MCEY,4BAA6B,SAAQ,mBAAgC;;;;;IAChF,YAAsB,IAAgB,EAAE,MAAiB;QACvD,KAAK,CAAC,IAAI,EAAE;YACV,GAAG,EAAE,IAAI,CAAC,MAAM,CAAC,UAAU,EAAE,MAAM,CAAC,6BAA6B,CAAC;YAClE,WAAW,EAAE,cAAc;SAC5B,CAAC,CAAC;QAJiB,SAAI,GAAJ,IAAI,CAAY;KAKrC;;;;;;;IAED,MAAM,CAAC,MAAmB,EAAE,WAAiB,EAAE,MAAmB;QAChE,WAAW,GAAG,WAAW,IAAI,EAAE,CAAC;QAChC,WAAW,CAAC,EAAE,GAAG,MAAM,CAAC,YAAY,CAAC;QAErC,OAAO,KAAK,CAAC,MAAM,CAAC,MAAM,EAAE,WAAW,EAAE,MAAM,CAAC,CAAC;KAClD;;;YAhBF,UAAU,SAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;YAfQ,UAAU;YAOV,SAAS;;;;;;;;ACRlB;;;;;AASA,SAAgB,iBAAiB,CAAC,KAAe,EAAE,sBAA+B,KAAK;;QACjF,SAAS,GAAG,KAAK;UACjB,KAAK,CAAC,gBAAgB,IAAI,KAAK,CAAC,WAAW;UAC3C,IAAI;IAER,IAAI,mBAAmB,EAAE;QACvB,SAAS,GAAG,cAAc,CAAC,SAAS,CAAC,CAAC;KACvC;IAED,OAAO,SAAS,CAAC;CAClB;MAyCY,QAAS,SAAQ,iBAAiB;;;;IAqC7C,YAAY,GAAG,OAAmB;QAChC,KAAK,CAAC,GAAG,OAAO,CAAC,CAAC;QAClB,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,gBAAgB,GAAG,EAAE,CAAC;KAC5E;;;;;IAED,kBAAkB,CAAC,KAAK;QACtB,OAAO,IAAI,CAAC,gBAAgB,CAAC,IAAI;;;;QAAC,WAAW,IAAI,WAAW,CAAC,KAAK,KAAK,KAAK,EAAC,CAAC;KAC/E;;;;;IAED,YAAY,CAAC,QAAyB;QACpC,OAAO,IAAI,CAAC,gBAAgB,CAAC,MAAM;;;;QAAC,WAAW,IAAI,WAAW,CAAC,QAAQ,KAAK,QAAQ,EAAC,CAAC;KACvF;;;;;IAED,WAAW,CAAC,QAAyB;;cAC7B,SAAS,GAAG,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC;QAC7C,OAAO,SAAS,CAAC,MAAM,GAAG,CAAC,CAAC;KAC7B;;;;IAED,IAAI,eAAe;QACjB,OAAO,IAAI,CAAC,gBAAgB,CAAC,MAAM,GAAG,CAAC,CAAC;KACzC;;;;IAED,IAAI,eAAe;;cACX,SAAS,GAAG,IAAI,CAAC,YAAY,CAAC,eAAe,CAAC,IAAI,CAAC;QACzD,OAAO,SAAS,CAAC,MAAM,GAAG,CAAC,CAAC;KAC7B;;;;IAED,IAAI,eAAe;;cACX,SAAS,GAAG,IAAI,CAAC,YAAY,CAAC,eAAe,CAAC,IAAI,CAAC;QACzD,OAAO,SAAS,CAAC,MAAM,GAAG,CAAC,CAAC;KAC7B;;;;IAED,IAAI,gBAAgB;;cACZ,SAAS,GAAG,IAAI,CAAC,YAAY,CAAC,eAAe,CAAC,KAAK,CAAC;QAC1D,OAAO,SAAS,CAAC,MAAM,GAAG,CAAC,CAAC;KAC7B;;;;IAED,IAAI,iBAAiB;;cACb,SAAS,GAAG,IAAI,CAAC,YAAY,CAAC,eAAe,CAAC,MAAM,CAAC;QAC3D,OAAO,SAAS,CAAC,MAAM,GAAG,CAAC,CAAC;KAC7B;CACF;;;;;;AC1ID,MAQa,UAAW,SAAQ,QAAQ;CAcvC;;;;;;;;;;AClBD,SAAgB,wBAAwB,CAAC,KAAmB;IAC1D,OAAO,KAAK,CAAC,aAAa,CAAC,GAAG;;;;;IAAC,CAAC,SAAS,EAAE,KAAK;;cACxC,OAAO,GAAG,KAAK,KAAK,CAAC;;cACrB,KAAK,GAAG,KAAK,CAAC,MAAM,CAAC,IAAI;;;;QAAC,CAAC,IAAI,CAAC,CAAC,IAAI,KAAK,SAAS,EAAC;QAE1D,IAAI,CAAC,KAAK,EAAE;YACV,MAAM,IAAI,KAAK,CAAC,+DAA+D,SAAS,uBAAuB,CAAC,CAAC;SAClH;QAED,OAAO;YACL,MAAM,EAAE,OAAO;YACf,KAAK,EAAE,KAAK,CAAC,KAAK;YAClB,uBAAuB,EAAE,KAAK,CAAC,IAAI;SACpC,CAAC;KACH,EAAC,CAAC;CACJ;;;;;;;;;;;AClBD,MAGa,iBAAkB,SAAQ,iBAAiB;CAMvD;;;;;;;;;;;;;;;;ACPD,SAAgB,SAAS,CAAC,OAAe,EAAE,GAAG,SAAuB;;QAC/D,KAAe;IACnB,SAAS,CAAC,OAAO;;;;IAAC,MAAM;QACtB,KAAK,GAAG,KAAK,IAAI,CAAC,MAAM,IAAI,EAAE,EAAE,IAAI;;;;QAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,EAAE,KAAK,OAAO,EAAC,CAAC;KAClE,EAAC,CAAC;IAEH,OAAO,KAAK,CAAC;CACd;;;;;;;;;;;;;;;;ACVD,MAMa,YAAa,SAAQ,QAAQ;;;;IAYxC,YAAY,GAAG,OAAmB;QAChC,KAAK,CAAC,GAAG,OAAO,CAAC,CAAC;QAElB,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,aAAa,IAAI,EAAE,CAAC;QAC9C,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,WAAW,IAAI,EAAE,CAAC;QAC1C,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,kBAAkB,IAAI,EAAE,CAAC;QACxD,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,eAAe,IAAI,IAAI,CAAC,eAAe,CAAC,MAAM;cACtE,IAAI,CAAC,eAAe;cACpB,wBAAwB,CAAC,IAAI,CAAC,CAAC;KACpC;CACF;;;;;;AC5BD,MAGa,YAAa,SAAQ,QAAQ;;;;IAQxC,IAAI,sBAAsB;QACxB,OAAO,IAAI,CAAC,iBAAiB,CAAC;KAC/B;;;;;IAED,IAAI,sBAAsB,CAAC,sBAA8B;QACvD,IAAI,CAAC,iBAAiB,GAAG,sBAAsB,CAAC;KACjD;CACF;;;;;;AChBD,MAIa,iBAAiB;;;;;IAI5B,MAAM,CAAC,MAAW;QAChB,MAAM,CAAC,MAAM,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;QAC5B,OAAO,IAAI,CAAC;KACb;;;;IAED,KAAK;;cACG,IAAI,GAAG,KAAK,CAAC,IAAI,CAAC;QACxB,OAAO,IAAI,iBAAiB,EAAE;aAC3B,MAAM,CAAC,IAAI,CAAC,CAAC;KACjB;CACF;;;;;;AClBD;AAKA,MAAa,qBAAqB,GAA8B,IAAI,eAAe,CAAW,gBAAgB,CAAC;KAC5G,GAAG,CACF,IAAI,eAAe,CAAW,4BAA4B,CAAC;KACxD,IAAI;;;;AAAC,CAAC,IAAI,OAAO,CAAC,CAAC,CAAC,MAAM,IAAI,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC,EAAC,EAElD,IAAI,eAAe,CAAW,2CAA2C,CAAC;KACvE,IAAI;;;;AAAC,CAAC,IAAI,OAAO,CAAC,UAAU,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,EAAC,CAC5C;;AAEH,MAAa,6BAA6B,GAAkC,IAAI,eAAe,CAC7F,mCAAmC,CACpC;KACE,GAAG,CACF,IAAI,eAAe,CAAe,+DAA+D,CAAC;KAC/F,IAAI;;;;AAAC,CAAC,IAAI,OAAO,CAAC,CAAC,CAAC,yBAAyB,CAAC,EAAC,CACnD;;AAEH,MAAa,2BAA2B,GAAkC,IAAI,eAAe,CAC3F,iCAAiC,CAClC;KACE,GAAG,CACF,IAAI,eAAe,CAAe,yDAAyD,CAAC;KACzF,IAAI;;;;AAAC,CAAC,IAAI,OAAO,CAAC,CAAC,CAAC,yBAAyB,CAAC,EAAC,CACnD;;AAEH,MAAa,wBAAwB,GAAiC,IAAI,eAAe,CAAc,cAAc,CAAC;KACnH,GAAG,CACF,IAAI,eAAe,CAAc,4BAA4B,CAAC;KAC3D,IAAI;;;;AAAC,CAAC,IAAI,OAAO,CAAC,CAAC,CAAC,aAAa,IAAI,CAAC,CAAC,aAAa,CAAC,MAAM,CAAC,EAAC,EAEhE,IAAI,eAAe,CAAc,0BAA0B,CAAC;KACzD,IAAI;;;;AAAC,CAAC,IAAI,OAAO,CAAC,CAAC,CAAC,WAAW,IAAI,CAAC,CAAC,WAAW,CAAC,MAAM,CAAC,EAAC,CAK7D;;;;;;AC3CH,MAIa,WAAY,SAAQ,iBAAiB;CAIjD;;;;;;ACND;;;;;AAsBA,SAAS,IAAI,CAAC,OAAe,EAAE,GAAG,SAAuB;IACvD,OAAO,SAAS,CAAC,OAAO,EAAE,GAAG,SAAS,CAAC,CAAC;CACzC;AAGD,MAAa,WAAY,SAAQ,iBAAiB;;;;IAehD,YAAY,UAAuB;QACjC,KAAK,EAAE,CAAC;QAXV,kBAAa,GAAmB,EAAE,CAAC;QACnC,gBAAW,GAAiB,EAAE,CAAC;QAC/B,kBAAa,GAAmB,EAAE,CAAC;QACnC,qBAAgB,GAAsB,EAAE,CAAC;QACzC,2BAAsB,GAA4B,EAAE,CAAC;QACrD,uBAAkB,GAAwB,EAAE,CAAC;QAC7C,iBAAY,GAAwB,EAAE,CAAC;QACvC,QAAG,GAAc,EAAE,CAAC;QACpB,YAAO,GAAuB,EAAE,CAAC;QAK/B,IAAI,UAAU,EAAE;YACd,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;YAC7B,IAAI,CAAC,YAAY,GAAG,UAAU,CAAC,EAAE,CAAC;SACnC;KACF;;;;;;IAKD,QAAQ,CAAC,OAAe;QACtB,OAAO,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,YAAY,EAAE,CAAC,CAAC;KAC3C;;;;;IAED,WAAW,CAAC,OAAe;QACzB,2BACE,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,aAAa,EAAE,IAAI,CAAC,WAAW,EAAE,IAAI,CAAC,aAAa,CAAC,IAC3D;KACf;;;;;IAED,cAAc,CAAC,OAAe;;;;;cAItB,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC;;cACrC,YAAY,GAAG,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC;;cACzC,cAAc,GAAG,CAAC,YAAY,IAAI,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC;;cAC9D,uBAAuB,GAAG,CAAC,YAAY,IAAI,CAAC,cAAc,IAAI,IAAI,CAAC,uBAAuB,CAAC,OAAO,CAAC;;cACnG,iBAAiB,GAAG,CAAC,YAAY,IAAI,CAAC,cAAc,IAAI,CAAC,uBAAuB,IAAI,IAAI,CAAC,iBAAiB,CAAC,OAAO,CAAC;;cACnH,mBAAmB,GAAG,CAAC,YAAY,IAAI,CAAC,cAAc,IAAI,CAAC,uBAAuB,IAAI,CAAC,iBAAiB;eACzG,IAAI,CAAC,mBAAmB,CAAC,OAAO,CAAC;;cAChC,cAAc,GAAG,CAAC,YAAY,IAAI,CAAC,cAAc,IAAI,CAAC,uBAAuB,IAAI,CAAC,iBAAiB,IAAI,CAAC,mBAAmB;eAC5H,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC;;cAC3B,OAAO,GAAG,CAAC,YAAY,IAAI,CAAC,cAAc,IAAI,CAAC,uBAAuB,IAAI,CAAC,iBAAiB,IAAI,CAAC,mBAAmB;eACrH,CAAC,cAAc,IAAI,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC;;cACvC,aAAa,GAAG,CAAC,YAAY,IAAI,CAAC,cAAc,IAAI,CAAC,uBAAuB,IAAI,CAAC,iBAAiB,IAAI,CAAC,mBAAmB;eAC3H,CAAC,cAAc,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC;;cACzD,KAAK,GAAa,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC;;cACxC,UAAU,GAAG,KAAK,GAAG,gBAAgB,CAAC,KAAK,CAAC,MAAM,CAAC,GAAG,IAAI;;cAC1D,OAAO,GAAG,KAAK,GAAG,UAAU,CAAC,KAAK,CAAC,MAAM,CAAC,GAAG,IAAI;QAEvD,OAAO;YACL,KAAK;YACL,OAAO;YACP,YAAY;YACZ,cAAc;YACd,uBAAuB;YACvB,iBAAiB;YACjB,mBAAmB;YACnB,cAAc;YACd,OAAO;YACP,aAAa;YACb,UAAU;YACV,UAAU;YACV,OAAO;SACR,CAAC;KACH;;;;;IAED,UAAU,CAAC,OAAe;QACxB,OAAO,OAAO,CACZ,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,CAC1B,CAAC;KACH;;;;;IAED,cAAc,CAAC,OAAe;QAC5B,OAAO,OAAO,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC;KACnD;;;;;IAED,YAAY,CAAC,OAAe;QAC1B,OAAO,OAAO,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC;KACjD;;;;;IAED,mBAAmB,CAAC,OAAe;QACjC,OAAO,OAAO,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,kBAAkB,CAAC,CAAC,CAAC;KACxD;;;;;IAED,cAAc,CAAC,OAAe;QAC5B,OAAO,OAAO,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC;KACnD;;;;;IAED,iBAAiB,CAAC,OAAe;QAC/B,OAAO,OAAO,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC;KACtD;;;;;IAED,uBAAuB,CAAC,OAAe;QACrC,OAAO,OAAO,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,sBAAsB,CAAC,CAAC,CAAC;KAC5D;;;;;IAED,aAAa,CAAC,OAAe;QAC3B,OAAO,OAAO,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC;KAClD;;;;;IAED,OAAO,CAAC,OAAe;QACrB,OAAO,OAAO,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;KAC5C;;;;;;IAKD,gBAAgB,CAAC,WAA8B;QAC7C,gBAAgB,CAAC,IAAI,EAAE,WAAW,CAAC,CAAC;QACpC,OAAO,IAAI,CAAC;KACb;;;;;IAED,oBAAoB,CAAC,WAA8B;QACjD,oBAAoB,CAAC,IAAI,EAAE,WAAW,CAAC,CAAC;QACxC,OAAO,IAAI,CAAC;KACb;;;;;;IAKD,gBAAgB,CAAC,WAAwB;QACvC,gBAAgB,CAAC,IAAI,EAAE,WAAW,CAAC,CAAC;QACpC,OAAO,IAAI,CAAC;KACb;;;;;IAED,eAAe,CAAC,OAAe;QAC7B,0BAAO,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,aAAa,CAAC,GAAiB;KAC1D;;;;;IAED,aAAa,CAAC,OAAe;QAC3B,0BAAO,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,WAAW,CAAC,GAAe;KACtD;;;;;IAED,oBAAoB,CAAC,OAAe;QAClC,0BAAO,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,kBAAkB,CAAC,GAAsB;KACpE;;;;IAED,YAAY;QACV,OAAO,oBAAC,IAAI,CAAC,WAAW;aACrB,MAAM,CAAC,IAAI,CAAC,aAAa,CAAC;aAC1B,MAAM,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;KAC/B;;;;IAED,qBAAqB;QACnB,OAAO,oBAAC,IAAI,CAAC,WAAW;aACrB,MAAM,CAAC,IAAI,CAAC,aAAa,CAAC;aAC1B,MAAM,CAAC,IAAI,CAAC,aAAa,CAAC;aAC1B,MAAM,CAAC,IAAI,CAAC,sBAAsB,CAAC;aACnC,MAAM,CAAC,IAAI,CAAC,gBAAgB,CAAC;aAC7B,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;KAC9B;;;;IAED,YAAY;QACV,OAAO,oBAAC,IAAI,CAAC,qBAAqB,EAAE;aACjC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC;aACnB,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;KACxB;;;;;IAED,oBAAoB,CAAC,KAAe;;YAC9B,SAAS,GAAW,IAAI;QAC5B,IAAI,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,EAAE,CAAC,EAAE;;kBACzB,UAAU,sBAAG,KAAK,EAAc;YACtC,SAAS,GAAG,UAAU,CAAC,aAAa,GAAG,UAAU,CAAC,aAAa,CAAC,EAAE,GAAG,IAAI,CAAC;SAC3E;QAED,IAAI,UAAU,CAAC,SAAS,CAAC,EAAE;YACzB,IAAI,CAAC,aAAa,CAAC,OAAO;;;;YAAC,OAAO;gBAChC,IAAI,OAAO,CAAC,WAAW,CAAC,IAAI;;;;gBAAC,CAAC,IAAI,CAAC,CAAC,EAAE,KAAK,KAAK,CAAC,EAAE,EAAC,EAAE;oBACpD,SAAS,GAAG,OAAO,CAAC,EAAE,CAAC;iBACxB;aACF,EAAC,CAAC;SACJ;QAED,OAAO,SAAS,CAAC;KAClB;;;;;IAED,uBAAuB,CAAC,cAAsB;;cACtC,YAAY,GAAG,IAAI,CAAC,eAAe,CAAC,cAAc,CAAC;QACzD,OAAO,IAAI,CAAC,WAAW,CAAC,MAAM;;;;QAAC,KAAK,IAClC,KAAK,CAAC,aAAa;eAChB,KAAK,CAAC,aAAa,CAAC,EAAE,KAAK,cAAc;eACzC,YAAY,CAAC,WAAW;mBACxB,YAAY,CAAC,WAAW,CAAC,IAAI;;;;gBAAC,CAAC,IAAI,CAAC,CAAC,EAAE,KAAK,KAAK,CAAC,EAAE,EAAC,EACzD,CAAC;KACH;;;;;;IAED,aAAa;QACX,mBAAA,IAAI,GAAC,WAAW,GAAG,mBAAA,IAAI,GAAC,WAAW,CAAC,GAAG;;;;QAAC,UAAU,IAAI,IAAI,UAAU,CAAC,IAAI,CAAC,UAAU,CAAC,EAAE,EAAE,mBAAA,IAAI,GAAC,MAAM,CAAC,EAAE,UAAU,CAAC,EAAC,CAAC;QACpH,mBAAA,IAAI,GAAC,aAAa,GAAG,mBAAA,IAAI,GAAC,aAAa,CAAC,GAAG;;;;QAAC,YAAY,IAAI,IAAI,YAAY,CAAC,IAAI,CAAC,YAAY,CAAC,EAAE,EAAE,mBAAA,IAAI,GAAC,MAAM,CAAC,EAAE,YAAY,CAAC,EAAC,CAAC;QAChI,mBAAA,IAAI,GAAC,aAAa,GAAG,mBAAA,IAAI,GAAC,aAAa,CAAC,GAAG;;;;QAAC,YAAY,IAAI,IAAI,YAAY,CAAC,IAAI,CAAC,YAAY,CAAC,EAAE,EAAE,mBAAA,IAAI,GAAC,MAAM,CAAC,EAAE,YAAY,CAAC,EAAC,CAAC;QAChI,mBAAA,IAAI,GAAC,gBAAgB,GAAG,mBAAA,IAAI,GAAC,gBAAgB,CAAC,GAAG;;;;QAAC,eAAe,IAAI,IAAI,eAAe,CAAC,eAAe,CAAC,EAAC,CAAC;QAC3G,mBAAA,IAAI,GAAC,sBAAsB,GAAG,mBAAA,IAAI,GAAC,sBAAsB,CAAC,GAAG;;;;QAC3D,qBAAqB,IAAI,IAAI,qBAAqB,CAAC,qBAAqB,CAAC,EAC1E,CAAC;QACF,mBAAA,IAAI,GAAC,kBAAkB,GAAG,mBAAA,IAAI,GAAC,kBAAkB,CAAC,GAAG;;;;QAAC,iBAAiB,IAAI,IAAI,iBAAiB,CAAC,iBAAiB,CAAC,EAAC,CAAC;QACrH,mBAAA,IAAI,GAAC,YAAY,GAAG,mBAAA,IAAI,GAAC,YAAY,CAAC,GAAG;;;;QAAC,WAAW,IAAI,IAAI,WAAW,CAAC,IAAI,CAAC,WAAW,CAAC,EAAE,EAAE,mBAAA,IAAI,GAAC,MAAM,CAAC,EAAE,WAAW,CAAC,EAAC,CAAC;QAE1H,OAAO,mBAAA,IAAI,GAAC,+BAA+B,EAAE,CAAC;KAC/C;;;;;;IAED,+BAA+B;QAC7B,IAAI,mBAAA,IAAI,GAAC,OAAO,CAAC,MAAM,EAAE;YACvB,mBAAA,IAAI,GAAC,qBAAqB,EAAE;iBACzB,OAAO;;;;YAAC,KAAK,IAAI,KAAK,CAAC,iBAAiB,CAAC,mBAAA,IAAI,GAAC,OAAO,CAAC,EAAC,CAAC;SAC5D;QAED,0BAAO,IAAI,GAAC;KACb;;;;;;;IAED,MAAM,CAAC,MAAW;QAChB,MAAM,CAAC,MAAM,oBAAC,IAAI,IAAE,MAAM,CAAC,CAAC;QAC5B,0BAAO,IAAI,GAAC;KACb;;;;IAED,KAAK;;cACG,IAAI,GAAG,KAAK,CAAC,IAAI,CAAC;QACxB,OAAO,IAAI,WAAW,EAAE;aACrB,MAAM,CAAC,IAAI,CAAC;aACZ,aAAa,EAAE,CAAC;KACpB;;;;IAED,QAAQ;QACN,OAAO,wBAAwB;aAC5B,KAAK,CAAC,IAAI,CAAC,CAAC;KAChB;CACF;;;;;;ACtQD;;;;;AAcA,SAASE,MAAI,CAAC,OAAe,EAAE,GAAG,SAAuB;IACvD,OAAO,SAAS,CAAC,OAAO,EAAE,GAAG,SAAS,CAAC,CAAC;CACzC;;;;;AAED,SAAS,gBAAgB,CAAC,KAAe;IACvC,KAAK,CAAC,MAAM,GAAG,KAAK,CAAC,MAAM,IAAI,EAAE,CAAC;CACnC;;;;;AAED,SAAS,uBAAuB,CAAC,KAAmB;IAClD,IAAI,KAAK,EAAE;QACT,KAAK,CAAC,eAAe,GAAG,KAAK,CAAC,eAAe,IAAI,EAAE,CAAC;KACrD;CACF;;;;;;AAED,SAAgB,iBAAiB,CAAC,MAAwB,EAAE,MAAwB;IAClF,SAAS,CAAC,MAAM,EAAE,MAAM,EAAE,EAAE,YAAY,EAAE,IAAI,EAAE,CAAC,CAAC;IAElD,IAAI,MAAM,IAAI,MAAM,CAAC,WAAW,IAAI,MAAM,IAAI,MAAM,CAAC,WAAW,EAAE;QAChE,cAAc,CAAC,MAAM,CAAC,WAAW,EAAE,MAAM,CAAC,WAAW,EAAE,EAAE,UAAU,EAAE,MAAM,EAAE,CAAC,CAAC;KAChF;CACF;;;;;;AAED,SAAgB,WAAW,CAAC,MAAoB,EAAE,MAAoB;IACpE,MAAM,GAAG,MAAM,IAAI,EAAE,CAAC;IACtB,MAAM,GAAG,MAAM,IAAI,EAAE,CAAC;IAEtB,cAAc,CAAC,MAAM,EAAE,MAAM,EAAE;QAC7B,UAAU,EAAE,MAAM;QAClB,WAAW;;;;;QAAE,CAAC,WAAuB,EAAE,WAAuB;YAC5D,IAAI,WAAW,CAAC,MAAM,IAAI,WAAW,CAAC,MAAM,IAAI,WAAW,CAAC,MAAM,CAAC,WAAW,EAAE;;sBACxE,kBAAkB,GAAG,WAAW,CAAC,MAAM,CAAC,WAAW,CAAC,MAAM;;;;gBAAC,CAAC,IAAIJ,UAAQ,CAAC,CAAC,CAAC,KAAK,CAAC,EAAC;gBAExF,IAAI,kBAAkB,IAAI,kBAAkB,CAAC,MAAM,EAAE;oBACnD,iBAAiB,CAAC,WAAW,CAAC,MAAM,EAAE,WAAW,CAAC,MAAM,CAAC,CAAC;oBAC1D,OAAO,KAAK,CAAC;iBACd;aACF;SACF,CAAA;KACF,CAAC,CAAC;CACJ;;;;;;AAED,SAAgB,UAAU,CAAC,MAAgB,EAAE,MAAgB;IAC3D,IAAI,CAAC,MAAM,IAAI,CAAC,MAAM,EAAE;QACtB,OAAO;KACR;;UAGK,SAAS,sBAAG,MAAM,EAAY;;UAC9B,SAAS,sBAAG,MAAM,EAAY;;UAC9B,sBAAsB,GAAG,SAAS,CAAC,gBAAgB,IAAI,EAAE;;UACzD,sBAAsB,GAAG,SAAS,CAAC,gBAAgB,IAAI,EAAE;;UACzD,iBAAiB,sBAAG,SAAS,CAAC,WAAW,EAAoB;;UAC7D,iBAAiB,sBAAG,SAAS,CAAC,WAAW,EAAoB;;UAC7D,cAAc,GAAG,OAAO,CAAC,iBAAiB,IAAI,iBAAiB,CAAC;;UAChE,WAAW,GAAG,IAAI,gBAAgB,oBAAC,SAAS,CAAC,WAAW,uBAAsB,SAAS,CAAC,WAAW,GAAqB;IAE9H,SAAS,CAAC,MAAM,EAAE,MAAM,EAAE,EAAE,YAAY,EAAE,IAAI,EAAE,CAAC,CAAC;IAClD,WAAW,CAAC,MAAM,CAAC,MAAM,EAAE,MAAM,CAAC,MAAM,CAAC,CAAC;IAE1C,IAAI,cAAc,EAAE;QAClB,oBAAC,MAAM,IAAuB,WAAW,GAAG,WAAW,CAAC;KACzD;IAED,IAAI,CAAC,sBAAsB,CAAC,MAAM,IAAI,sBAAsB,CAAC,MAAM,EAAE;QACnE,SAAS,CAAC,gBAAgB,GAAG,sBAAsB,CAAC;KACrD;CACF;;;;;;;;;AAED,SAAgB,WAAW,CACzB,MAAkB,EAClB,MAAkB,EAClB,cAA4B,EAC5B,IAAI,GAAG,IAAI,EACX,kBAA+D,IAAI;IAEnE,MAAM,GAAG,MAAM,IAAI,EAAE,CAAC;IACtB,MAAM,GAAG,MAAM,IAAI,EAAE,CAAC;IAEtB,MAAM,CAAC,OAAO;;;;IAAC,CAAC,WAAqB;QACnC,gBAAgB,CAAC,WAAW,CAAC,CAAC;QAC9B,UAAU,CAAC,WAAW,EAAE,MAAM,CAAC,IAAI;;;;QAAC,WAAW,IAAI,WAAW,CAAC,EAAE,KAAK,WAAW,CAAC,EAAE,EAAC,CAAC,CAAC;KACxF,EAAC,CAAC;;;IAIH,MAAM;SACH,MAAM;;;;IAAC,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI;;;;IAAC,CAAC,IAAI,GAAG,CAAC,EAAE,KAAK,CAAC,CAAC,EAAE,EAAC,EAAC;SACjD,OAAO;;;;IAAC,OAAO;;YACV,QAAQ,GAAa,OAAO;QAChC,IAAI,cAAc,EAAE;;kBACZ,MAAM,GAAaI,MAAI,CAAC,OAAO,CAAC,EAAE,EAAE,cAAc,CAAC,MAAM,EAAE,cAAc,CAAC,MAAM,EAAE,cAAc,CAAC,YAAY,CAAC;;YAGpH,QAAQ,GAAG,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,MAAM,CAAC,CAAC;YACrC,UAAU,CAAC,QAAQ,EAAE,OAAO,CAAC,CAAC;SAC/B;QAED,gBAAgB,CAAC,QAAQ,CAAC,CAAC;QAC3B,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;KACvB,EAAC,CAAC;IAEL,IAAI,IAAI,EAAE;QACR,MAAM,CAAC,IAAI;;;;;QAAC,CAAC,MAAM,EAAE,MAAM,KAAK,MAAM,CAAC,KAAK,GAAG,MAAM,CAAC,KAAK,EAAC,CAAC;KAC9D;IAED,IAAI,eAAe,EAAE;QACnB,MAAM,CAAC,OAAO;;;;QAAC,CAAC,WAAqB;YACnC,eAAe,CAAC,WAAW,EAAE,MAAM,CAAC,IAAI;;;;YAAC,WAAW,IAAI,WAAW,CAAC,EAAE,KAAK,WAAW,CAAC,EAAE,EAAC,CAAC,CAAC;SAC7F,EAAC,CAAC;KACJ;CACF;;;;;;;AAED,SAAgB,kBAAkB,CAAC,MAAsB,EAAE,MAAsB,EAAE,cAA4B;;UACvG,QAAQ,GAAG,IAAI;IACrB,WAAW,CAAC,MAAM,EAAE,MAAM,EAAE,cAAc,EAAE,QAAQ,EAAE,2BAA2B,CAAC,CAAC;CACpF;;;;;;AAED,SAAgB,2BAA2B,CAAC,WAAyB,EAAE,WAAyB;IAC9F,uBAAuB,CAAC,WAAW,CAAC,CAAC;IACrC,uBAAuB,CAAC,WAAW,CAAC,CAAC;IAErC,IAAI,WAAW,IAAI,WAAW,EAAE;QAC9B,cAAc,CAAC,WAAW,CAAC,eAAe,EAAE,WAAW,CAAC,eAAe,EAAE,EAAE,UAAU,EAAE,MAAM,EAAE,CAAC,CAAC;KAClG;CACF;;;;;;AAED,SAAgB,gBAAgB,CAAC,MAAmB,EAAE,GAAG,MAAqB;IAC5E,MAAM,CAAC,OAAO;;;;IAAC,OAAO;;cACd,UAAU,GAAG,OAAO,CAAC,UAAU,IAAI,MAAM,CAAC,UAAU;QAC1D,SAAS,CAAC,MAAM,EAAE,OAAO,EAAE,EAAE,YAAY,EAAE,IAAI,EAAE,CAAC,CAAC;QAEnD,IAAI,UAAU,EAAE;YACd,MAAM,CAAC,UAAU,GAAG,UAAU,CAAC;SAChC;QAED,kBAAkB,CAAC,MAAM,CAAC,aAAa,EAAE,OAAO,CAAC,aAAa,EAAE,MAAM,CAAC,CAAC;QACxE,WAAW,CAAC,MAAM,CAAC,WAAW,EAAE,OAAO,CAAC,WAAW,EAAE,MAAM,CAAC,CAAC;QAC7D,WAAW,CAAC,MAAM,CAAC,sBAAsB,EAAE,OAAO,CAAC,sBAAsB,EAAE,MAAM,CAAC,CAAC;QACnF,WAAW,CAAC,MAAM,CAAC,kBAAkB,EAAE,OAAO,CAAC,kBAAkB,EAAE,MAAM,CAAC,CAAC;QAC3E,WAAW,CAAC,MAAM,CAAC,gBAAgB,EAAE,OAAO,CAAC,gBAAgB,EAAE,MAAM,CAAC,CAAC;QACvE,WAAW,CAAC,MAAM,CAAC,aAAa,EAAE,OAAO,CAAC,aAAa,EAAE,MAAM,CAAC,CAAC;QACjE,WAAW,CAAC,MAAM,CAAC,YAAY,EAAE,OAAO,CAAC,YAAY,EAAE,MAAM,CAAC,CAAC;QAC/D,WAAW,CAAC,MAAM,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,CAAC,CAAC;QAC3C,WAAW,CAAC,MAAM,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,CAAC,CAAC;KAC5C,EAAC,CAAC;CACJ;;;;;;AAED,SAAgB,gBAAgB,CAAC,MAAmB,EAAE,GAAG,MAA2B;IAClF,MAAM,CAAC,OAAO;;;;IAAC,IAAI;QACjB,MAAM,CAAC,MAAM,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;KAC7B,EAAC,CAAC;CACJ;;;;;;AAED,SAAgB,oBAAoB,CAAC,MAAmB,EAAE,GAAG,MAA2B;IACtF,MAAM,CAAC,OAAO;;;;IAAC,IAAI;QACjB,IAAI,CAAC,MAAM,CAAC,OAAO;;;;QAAC,eAAe;;kBAC3B,WAAW,GAAG,MAAM,CAAC,WAAW,CAAC,eAAe,CAAC,EAAE,CAAC;YAC1D,IAAI,WAAW,EAAE;;sBACT,UAAU,GAAG,CAAC,GAAG,eAAe,CAAC,MAAM,CAAC;gBAC9C,WAAW,CAAC,UAAU,EAAE,WAAW,CAAC,MAAM,CAAC,CAAC;gBAC5C,WAAW,CAAC,MAAM,GAAG,UAAU,CAAC;gBAChC,IAAI,eAAe,CAAC,YAAY,EAAE;oBAChC,WAAW,CAAC,YAAY,GAAG,eAAe,CAAC,YAAY,CAAC;iBACzD;gBAED,WAAW,CAAC,WAAW,GAAG,IAAI,gBAAgB,CAAC,eAAe,CAAC,WAAW,EAAE,WAAW,CAAC,WAAW,CAAC,CAAC;aACtG;SACF,EAAC,CAAC;KACJ,EAAC,CAAC;CACJ;;;;;;;;AAED,SAAgB,uBAAuB,CACrC,UAAsB,EACtB,qBAAkC,EAClC,oBAAiC,EACjC,iBAAoC;;UAE9B,uBAAuB,GAAG,OAAO,CAAC,oBAAoB,CAAC;;UACvD,WAAW,GAAG,oBAAoB;WACnC,qBAAqB;WACrB,IAAI,WAAW,CAAC,UAAU,CAAC;IAEhC,WAAW,CAAC,gBAAgB,CAAC,iBAAiB,CAAC,CAAC;IAChD,WAAW,CAAC,UAAU,GAAG,WAAW,CAAC,UAAU,IAAI,UAAU,CAAC;IAC9D,WAAW,CAAC,YAAY,GAAG,WAAW,CAAC,YAAY,IAAI,UAAU,CAAC,EAAE,CAAC;IAErE,IAAI,uBAAuB,EAAE;;;;QAI3B,WAAW,CAAC,gBAAgB,CAAC,qBAAqB,CAAC,CAAC;KACrD;SAAM;;;QAGL,WAAW,CAAC,oBAAoB,CAAC,iBAAiB,CAAC,CAAC;KACrD;IAED,WAAW,CAAC,aAAa,EAAE,CAAC;IAE5B,OAAO,WAAW,CAAC;CACpB;;;;;;ACrND,MAea,oBAAoB;;;;;;;;;IAO/B,YACY,IAAgB,EAChB,SAA+B,EAC/B,iBAAoC,EACpC,4BAA0D,EAC1D,MAAqB,EACrB,GAAW;QALX,SAAI,GAAJ,IAAI,CAAY;QAChB,cAAS,GAAT,SAAS,CAAsB;QAC/B,sBAAiB,GAAjB,iBAAiB,CAAmB;QACpC,iCAA4B,GAA5B,4BAA4B,CAA8B;QAC1D,WAAM,GAAN,MAAM,CAAe;QACrB,QAAG,GAAH,GAAG,CAAQ;KACtB;;;;;IAEM,cAAc,CAAC,UAA+B;QACnD,IAAI,QAAQ,CAAC,UAAU,CAAC,EAAE;YACxB,IAAI,CAAC,YAAY,sBAAG,UAAU,EAAU,CAAC;SAC1C;aAAM;YACL,IAAI,CAAC,UAAU,sBAAG,UAAU,EAAc,CAAC;YAC3C,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,UAAU,CAAC,EAAE,CAAC;SACxC;QAED,OAAO,IAAI,CAAC;KACb;;;;;IAEM,eAAe,CAAC,OAAoB;QACzC,IAAI,CAAC,qBAAqB,GAAG,OAAO,CAAC;QACrC,OAAO,IAAI,CAAC;KACb;;;;IAEM,QAAQ;QACb,IAAI,CAAC,IAAI,CAAC,YAAY,EAAE;YACtB,MAAM,IAAI,KAAK,CAAC,mCAAmC,CAAC,CAAC;SACtD;QAED,OAAO,EAAE,CAAC,IAAI,CAAC;aACZ,IAAI,CACH,QAAQ,CAAC,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,EACvC,QAAQ,CAAC,IAAI,CAAC,wBAAwB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,EAClD,QAAQ,CAAC,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,EAC7C,QAAQ,CAAC,IAAI,CAAC,wBAAwB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,EAClD,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CACnC,CAAC;KACL;;;;;IAEO,aAAa;;cACb,UAAU,GAAG,IAAI,CAAC,UAAU;cAC9B,EAAE,CAAC,IAAI,CAAC,UAAU,CAAC;cACnB,IAAI,CAAC,iBAAiB;iBACrB,GAAG,CAAC,IAAI,CAAC,YAAY,CAAC;iBACtB,IAAI,CACH,GAAG;;;;YAAC,CAAC,UAAsB,KAAK,IAAI,CAAC,UAAU,GAAG,UAAU,EAAC,CAC9D;QAEL,OAAO,IAAI,CAAC,MAAM;aACf,IAAI,CAAC,UAAU,CAAC;aAChB,KAAK,CAAC,yCAAyC,IAAI,CAAC,YAAY,WAAW,CAAC;aAC5E,MAAM,CAAC;KACX;;;;;IAEO,wBAAwB;;cACxB,UAAU,GAAG,IAAI,CAAC,qBAAqB;cACzC,EAAE,CAAC,IAAI,CAAC,qBAAqB,CAAC;cAC9B,IAAI,CAAC,4BAA4B;iBAChC,GAAG,CAAC,IAAI,CAAC,YAAY,CAAC;iBACtB,IAAI,CACH,GAAG;;;;YAAC,CAAC,IAAiB;gBACpB,IAAI,CAAC,qBAAqB,GAAG,IAAI,WAAW,CAAC,IAAI,CAAC,UAAU,CAAC;qBAC1D,MAAM,CAAC,IAAI,CAAC,CAAC;;;gBAIhB,IAAI,CAAC,IAAI,EAAE;oBACT,IAAI,CAAC,qBAAqB,CAAC,iBAAiB,GAAG,IAAI,CAAC;iBACrD;aACF,EAAC,CACH;QAEL,OAAO,IAAI,CAAC,MAAM;aACf,IAAI,CAAC,UAAU,CAAC;aAChB,KAAK,CAAC,kEAAkE,IAAI,CAAC,YAAY,WAAW,CAAC;aACrG,MAAM,CAAC;KACX;;;;;IAEO,mBAAmB;;cACnB,UAAU,GAAG,IAAI,CAAC,iBAAiB,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,UAAU;cACpE,EAAE,CAAC,IAAI,CAAC,iBAAiB,CAAC;cAC1B,IAAI,CAAC,SAAS;iBACb,YAAY,CAAC,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC;iBACxC,IAAI,CACH,GAAG;;;;YAAC,CAAC,IAAuB,KAAK,IAAI,CAAC,iBAAiB,GAAG,IAAI,iBAAiB,EAAE,CAAC,MAAM,CAAC,IAAI,CAAC,EAAC,CAChG;QAEL,OAAO,IAAI,CAAC,MAAM;aACf,IAAI,CAAC,UAAU,CAAC;aAChB,KAAK,CAAC,qDAAqD,IAAI,CAAC,UAAU,CAAC,UAAU,WAAW,CAAC;aACjG,MAAM,CAAC;KACX;;;;;IAEO,wBAAwB;;cACxB,UAAU,GAAG,CAAC,IAAI,CAAC,UAAU,CAAC,UAAU,IAAI,CAAC,IAAI,CAAC,qBAAqB,CAAC,iBAAiB;cAC3F,EAAE,CAAC,IAAI,CAAC,oBAAoB,CAAC;cAC7B,QAAQ,CAAC;gBACT,IAAI,CAAC,SAAS,CAAC,YAAY,CAAC,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC;gBACvD,IAAI,CAAC,SAAS,CAAC,YAAY,CAAC,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC;aACxD,CAAC;iBACC,IAAI,CACH,GAAG;;;;YAAC,CAAC,IAAmB;sBAChB,CAAC,aAAa,EAAE,aAAa,CAAC,GAAG,IAAI;;sBACrC,WAAW,GAAG,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,aAAa,EAAE,aAAa,CAAC;;sBAC7D,oBAAoB,GAAG,IAAI,WAAW,EAAE,CAAC,MAAM,CAAC,WAAW,CAAC;gBAClE,OAAO,oBAAoB,CAAC;aAC7B,EAAC,EACF,GAAG;;;;YAAC,CAAC,IAAiB,KAAK,IAAI,CAAC,oBAAoB,GAAG,IAAI,WAAW,EAAE,CAAC,MAAM,CAAC,IAAI,CAAC,EAAC,CACvF;QAEL,OAAO,IAAI,CAAC,MAAM;aACf,IAAI,CAAC,UAAU,CAAC;aAChB,KAAK,CAAC,yDAAyD,IAAI,CAAC,UAAU,CAAC,UAAU,WAAW,CAAC;aACrG,MAAM,CAAC;KACX;;;;;IAEO,QAAQ;;cACR,WAAW,GAAG,uBAAuB,CACzC,IAAI,CAAC,UAAU,EACf,IAAI,CAAC,qBAAqB,EAC1B,IAAI,CAAC,oBAAoB,EACzB,IAAI,CAAC,iBAAiB,CACvB;QAED,OAAO,EAAE,CAAC,WAAW,CAAC,CAAC;KACxB;CACF;;;;;;MC/HY,kBAAkB;;;;;;;;;;IAG7B,YACY,IAAgB,EAChB,SAA+B,EAC/B,iBAAoC,EACpC,4BAA0D,EAC1D,MAAqB,EACrB,MAAiB,EACjB,GAAW;QANX,SAAI,GAAJ,IAAI,CAAY;QAChB,cAAS,GAAT,SAAS,CAAsB;QAC/B,sBAAiB,GAAjB,iBAAiB,CAAmB;QACpC,iCAA4B,GAA5B,4BAA4B,CAA8B;QAC1D,WAAM,GAAN,MAAM,CAAe;QACrB,WAAM,GAAN,MAAM,CAAW;QACjB,QAAG,GAAH,GAAG,CAAQ;QATvB,aAAQ,GAAsD,EAAE,CAAC;KAUhE;;;;;;IAED,GAAG,CAAC,UAA+B,EAAE,WAAyB;;cACtD,YAAY,GAAG,eAAe,CAAC,UAAU,CAAC;;cAC1C,UAAU,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI;;;;QAAC,KAAK,IAAI,KAAK,CAAC,YAAY,KAAK,YAAY,EAAC;QAEnF,IAAI,UAAU,EAAE;YACd,OAAO,EAAE,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC;SAChC;QAED,OAAO,IAAI,oBAAoB,CAC7B,IAAI,CAAC,IAAI,EACT,IAAI,CAAC,SAAS,EACd,IAAI,CAAC,iBAAiB,EACtB,IAAI,CAAC,4BAA4B,EACjC,IAAI,CAAC,MAAM,EACX,IAAI,CAAC,GAAG,CACT;aACE,cAAc,CAAC,UAAU,CAAC;aAC1B,eAAe,CAAC,WAAW,CAAC;aAC5B,QAAQ,EAAE;aACV,IAAI,CACH,GAAG;;;;QAAC,IAAI,IAAI,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,EAAC,CAC5C,CAAC;KACL;;;;;;IAEO,mBAAmB,CAAC,IAAiB;QAC3C,IAAI,IAAI,CAAC,MAAM,CAAC,yBAAyB,EAAE;YACzC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC;gBACjB,YAAY,EAAE,IAAI,CAAC,YAAY;gBAC/B,QAAQ,EAAE,IAAI;aACf,CAAC,CAAC;SACJ;KACF;;;YA/CF,UAAU,SAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;YAtBQ,UAAU;YAgBV,oBAAoB;YARpB,iBAAiB;YACjB,4BAA4B;YAE5B,aAAa;YAIb,SAAS;YALT,MAAM;;;;;;;;;;;;;MCEF,cAAe,SAAQ,UAAU;;;;;IAG5C,YAAY,OAAgB,EAAE,KAAmB;QAC/C,KAAK,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;QAEtB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,gBAAgB,CAAC,CAAC;QACrD,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,oBAAoB,CAAC,CAAC;QAC7D,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,kBAAkB,CAAC,CAAC;QACzD,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAC,KAAK,CAAC,kBAAkB,CAAC,CAAC;KACnD;;;;;;;IAED,OAAO,MAAM,CACX,KAAmB,EACnB,aAAuC,EAAE,EACzC,WAAiD,IAAI;;cAE/C,OAAO,GAAY,SAAS,CAAC,UAAU,qBAAE,QAAQ,GAAa;QACpE,OAAO,IAAI,cAAc,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;KAC3C;;;;;;;IAED,cAAc,CAAC,OAAe;QAC5B,mBAAA,IAAI,GAAC,WAAW,GAAG,OAAO,CAAC;QAC3B,OAAO,mBAAA,IAAI,GAAC,QAAQ,CAAC,mBAAA,IAAI,GAAC,KAAK,CAAC,oBAAoB,EAAE,OAAO,CAAC,CAAC;KAChE;;;;;;;IAED,YAAY,CAAC,OAAe;QAC1B,IAAI,CAAC,mBAAA,IAAI,GAAC,QAAQ,EAAE;YAClB,MAAM,IAAI,KAAK,CAAC,iDAAiD,CAAC,CAAC;SACpE;QAED,mBAAA,IAAI,GAAC,SAAS,GAAG,OAAO,CAAC;QACzB,OAAO,mBAAA,IAAI,GAAC,QAAQ,CAAC,mBAAA,IAAI,GAAC,KAAK,CAAC,kBAAkB,EAAE,OAAO,CAAC,CAAC;KAC9D;;;;;;;;IAED,gBAAgB,CAAC,WAAmB,EAAE,SAAiB;QACrD,OAAO,mBAAA,IAAI,GACR,cAAc,CAAC,WAAW,CAAC;aAC3B,YAAY,CAAC,SAAS,CAAC,CAAC;KAC5B;;;;IAED,KAAK;;cACG,WAAW,GAAG,KAAK,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC;QAC3C,OAAO,IAAI,cAAc,CAAC,WAAW,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;KACpD;;;;;IAES,mBAAmB;QAC3B,OAAO,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,KAAK,CAAC,mBAAmB,EAAE,CAAC;KAChE;CACF;;;;;;;;;;;;;;;;;AC3DD,MAAa,qBAAqB,GAAmC;IACnE,EAAE,KAAK,EAAE,MAAM,EAAE,YAAY,EAAE,MAAM,EAAE;IACvC,EAAE,KAAK,EAAE,OAAO,EAAE,YAAY,EAAE,OAAO,EAAE;IACzC,EAAE,KAAK,EAAE,KAAK,EAAE,YAAY,EAAE,KAAK,EAAE;IACrC,EAAE,KAAK,EAAE,QAAQ,EAAE,YAAY,EAAE,QAAQ,EAAE;CAC5C;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACFD,MAAa,QAAQ;IAArB;QASE,WAAM,GAAiB,EAAE,CAAC;QAC1B,YAAO,GAAiB,EAAE,CAAC;QAC3B,kBAAa,GAAwB,EAAE,CAAC;KAKzC;CAAA;;;;;;;;;ICXY,UAAU;;;MAAV,UAAU;CACtB,CAAA;;YALA,UAAU,SAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;AAEY,UAAU;IADtB,UAAU,CAAC,YAAY,CAAC;GACZ,UAAU,CACtB;;;;;;;;;;;;;;ICEY,YAAY;;;MAAZ,YAAY;IAJzB;QAKE,uBAAkB,GAAG,IAAI,CAAC;KAC3B;CAAA,CAAA;;YANA,UAAU,SAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;AAEY,YAAY;IADxB,UAAU,CAAC,cAAc,CAAC;GACd,YAAY,CAExB;;;;;;;;;ACCD,MAAa,mBAAmB;;;;IAI9B,YAA6B,MAAoB;QAApB,WAAM,GAAN,MAAM,CAAc;QAC/C,IAAI,CAAC,kBAAkB,GAAG,IAAI,OAAO,EAAE,CAAC;QACxC,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,kBAAkB,CAAC,YAAY,EAAE,CAAC;QAE3D,SAAS,CAAC,MAAM,EAAE,gBAAgB,CAAC,CAAC,SAAS;;;;QAAC,CAAC,KAAwB,KAAK,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC,EAAC,CAAC;KAC3G;;;;;;;IAED,UAAU,CAAC,MAAc;QACvB,IAAI,CAAC,mBAAA,IAAI,GAAC,MAAM,CAAC,kBAAkB,EAAE;YACnC,MAAM,IAAI,KAAK,CAAC,yCAAyC,CAAC,CAAC;SAC5D;QAED,mBAAA,IAAI,GAAC,kBAAkB,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QACrC,0BAAO,IAAI,GAAC;KACb;;;;;;IAEO,gBAAgB,CAAC,KAAwB;QAC/C,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC;YAC3B,CAAC,EAAE,KAAK,CAAC,YAAY,CAAC,CAAC;YACvB,CAAC,EAAE,KAAK,CAAC,YAAY,CAAC,CAAC;YACvB,CAAC,EAAE,KAAK,CAAC,YAAY,CAAC,CAAC;YACvB,YAAY,EAAE,KAAK,CAAC,4BAA4B,CAAC,CAAC;YAClD,YAAY,EAAE,KAAK,CAAC,4BAA4B,CAAC,CAAC;YAClD,YAAY,EAAE,KAAK,CAAC,4BAA4B,CAAC,CAAC;YAClD,iBAAiB,EAAE,KAAK,CAAC,YAAY,CAAC,KAAK;YAC3C,gBAAgB,EAAE,KAAK,CAAC,YAAY,CAAC,IAAI;YACzC,iBAAiB,EAAE,KAAK,CAAC,YAAY,CAAC,KAAK;SAC5C,CAAC,CAAC;KACJ;;;YAnCF,UAAU,SAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;YARQ,YAAY;;;;;;;;MCSR,eAAe;;;YAZ3B,QAAQ,SAAC;gBACR,OAAO,EAAE;oBACP,YAAY;iBACb;gBACD,YAAY,EAAE,EACb;gBACD,OAAO,EAAE,EACR;gBACD,SAAS,EAAE,EACV;gBACD,OAAO,EAAE,CAAC,sBAAsB,CAAC;aAClC;;;;;;;;;;;;ACfD;;;;;;AASA,SAAgB,yBAAyB,CAAC,WAA2D;;;UAE7F,QAAQ,GAAG,gBAAgB,CAAC,WAAW,CAAC,KAAK,CAAC;;UAC9C,OAAO,GAAG,gBAAgB,CAAC,WAAW,CAAC,IAAI,CAAC;;UAC5C,QAAQ,GAAG,gBAAgB,CAAC,WAAW,CAAC,KAAK,CAAC;;;UAG9C,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC;;UACvB,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC;;UACvB,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC;;UACtB,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC;;UACvB,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC;;;UAGvB,EAAE,GAAG,CAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE;;UAC7B,EAAE,GAAG,CAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE;;;QAG/B,cAAc,GAAG,IAAI,CAAC,IAAI,CAAC,EAAE,GAAG,EAAE,CAAC;;IAGvC,cAAc,GAAG,EAAE,GAAG,CAAC;UACnB,cAAc,IAAI,IAAI,CAAC,EAAE;UACzB,cAAc,IAAI,CAAC,GAAG,IAAI,CAAC,EAAE,CAAC;;IAGlC,cAAc,GAAG,gBAAgB,CAAC,cAAc,CAAC,CAAC;IAElD,OAAO,cAAc,CAAC;CACvB;;;;;;;;;ICzBY,iBAAiB;;;MAAjB,iBAAiB;IAJ9B;QAKE,4BAAuB,GAAG,IAAI,CAAC;QAC/B,wBAAmB,GAAG,IAAI,CAAC;KAC5B;CAAA,CAAA;;YAPA,UAAU,SAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;AAEY,iBAAiB;IAD7B,UAAU,CAAC,mBAAmB,CAAC;GACnB,iBAAiB,CAG7B;;;;;;;;;ACED,MAAa,wBAAwB;;;;IAYnC,YAA6B,MAAyB;QAAzB,WAAM,GAAN,MAAM,CAAmB;QAN9C,kCAA6B,GAAG,KAAK,CAAC;QAO5C,IAAI,CAAC,mBAAmB,GAAG,IAAI,OAAO,EAAE,CAAC;QACzC,IAAI,CAAC,uBAAuB,GAAG,IAAI,OAAO,EAAE,CAAC;QAC7C,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,uBAAuB,CAAC,YAAY,EAAE,CAAC;QACrE,IAAI,CAAC,aAAa,GAAG,KAAK,CACxB,IAAI,CAAC,mBAAmB,EACxB,IAAI,CAAC,iBAAiB,CAAC,IAAI,CACzB,GAAG;;;;QAAC,WAAW,IAAI,WAAW,CAAC,OAAO,EAAC,CACxC,CACF,CAAC;QAEF,SAAS,CAAC,MAAM,EAAE,mBAAmB,CAAC,CAAC,SAAS;;;;QAAC,CAAC,KAA6B,KAAK,IAAI,CAAC,qBAAqB,CAAC,KAAK,CAAC,EAAC,CAAC;QACvH,SAAS,CAAC,MAAM,EAAE,2BAA2B,CAAC,CAAC,SAAS;;;QAAC,MAAM,IAAI,CAAC,6BAA6B,GAAG,IAAI,EAAC,CAAC;QAC1G,SAAS,CAAC,MAAM,EAAE,yBAAyB,CAAC,CAAC,SAAS;;;QAAC,MAAM,IAAI,CAAC,6BAA6B,GAAG,IAAI,EAAC,CAAC;KACzG;;;;IAlBD,IAAI,qBAAqB;QACvB,OAAO,IAAI,CAAC,6BAA6B,CAAC;KAC3C;;;;;;;IAkBD,eAAe,CAAC,WAAwB;QACtC,IAAI,CAAC,mBAAA,IAAI,GAAC,MAAM,CAAC,uBAAuB,EAAE;YACxC,MAAM,IAAI,KAAK,CAAC,8CAA8C,CAAC,CAAC;SACjE;QAED,mBAAA,IAAI,GAAC,uBAAuB,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;QAC/C,0BAAO,IAAI,GAAC;KACb;;;;;;;IAED,WAAW,CAAC,OAAe;QACzB,IAAI,CAAC,mBAAA,IAAI,GAAC,MAAM,CAAC,mBAAmB,EAAE;YACpC,MAAM,IAAI,KAAK,CAAC,mCAAmC,CAAC,CAAC;SACtD;QAED,mBAAA,IAAI,GAAC,mBAAmB,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QACvC,0BAAO,IAAI,GAAC;KACb;;;;;;IAEO,qBAAqB,CAAC,KAA6B;QACzD,IAAI,CAAC,uBAAuB,CAAC,IAAI,CAAC;YAChC,KAAK,EAAE,KAAK,CAAC,KAAK;YAClB,IAAI,EAAE,KAAK,CAAC,IAAI;YAChB,KAAK,EAAE,KAAK,CAAC,KAAK;YAClB,OAAO,EAAE,yBAAyB,CAAC,KAAK,CAAC;SAC1C,CAAC,CAAC;KACJ;;;YAxDF,UAAU,SAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;YATQ,iBAAiB;;;;;;;;MCQb,oBAAoB;;;YAZhC,QAAQ,SAAC;gBACR,OAAO,EAAE;oBACP,YAAY;iBACb;gBACD,YAAY,EAAE,EACb;gBACD,OAAO,EAAE,EACR;gBACD,SAAS,EAAE,EACV;gBACD,OAAO,EAAE,CAAC,sBAAsB,CAAC;aAClC;;;;;;;;;;;;AChBD;;;AAQA,MAAa,gBAAgB;IA6B3B;QA3BA,cAAS,GAAG,KAAK,CAAC;QAClB,eAAU,GAAG,KAAK,CAAC;QA2BjB,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,OAAO,EAAE,CAAC,KAAK,CAAC;KAChC;;;;IAtBD,IAAI,UAAU;QACZ,OAAO,CAAC,IAAI,CAAC,SAAS,CAAC;KACxB;;;;IAED,IAAI,eAAe;QACjB,OAAO,iBAAiB,CAAC,IAAI,IAAI,EAAE,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;KACtD;;;;IAED,IAAI,cAAc;QAChB,OAAO,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,WAAW,CAAC;KAC9C;;;;IAED,IAAI,yBAAyB;QAC3B,OAAO,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,eAAe,CAAC;KAClD;;;;IAED,IAAI,yBAAyB;QAC3B,OAAO,IAAI,CAAC,yBAAyB,GAAG,EAAE,CAAC;KAC5C;;;;IAMD,KAAK;QACH,IAAI,CAAC,KAAK,EAAE,CAAC;QACb,IAAI,CAAC,SAAS,GAAG,IAAI,IAAI,EAAE,CAAC;QAC5B,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QAEtB,OAAO,IAAI,CAAC;KACb;;;;IAED,KAAK;QACH,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QACvB,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;QACxB,IAAI,CAAC,aAAa,GAAG,CAAC,CAAC;QACvB,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC;QACrB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QAEpB,OAAO,IAAI,CAAC;KACb;;;;;IAED,yBAAyB,CAAC,cAAsB;QAC9C,OAAO,IAAI,CAAC,UAAU;cAClB,CAAC;cACD,yBAAyB,CAAC,IAAI,CAAC,cAAc,EAAE,IAAI,CAAC,eAAe,EAAE,cAAc,CAAC,CAAC;KAC1F;;;;IAED,QAAQ;QACN,IAAI,CAAC,OAAO,GAAG,IAAI,IAAI,EAAE,CAAC;QAC1B,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QAEvB,OAAO,IAAI,CAAC;KACb;;;;IAED,MAAM;QACJ,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;QACvB,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QAEvB,OAAO,IAAI,CAAC;KACb;CACF;;;;;;;;ICrEC,oBAAiB;IACjB,qBAAkB;IAClB,yBAAsB;IACtB,qBAAkB;IAClB,sBAAmB;IACnB,eAAY;IACZ,gBAAa;;;;;;;;;;;;;;ACdf,MAGa,sBAAsB;IAAnC;QACE,mBAAc,GAAG,CAAC,CAAC;QAEA,YAAO,GAAuB,EAAE,CAAC;KAwHrD;;;;IAtHC,IAAI,WAAW;QACb,OAAO,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC;KAC5B;;;;IAED,IAAI,eAAe;QACjB,OAAO,IAAI,CAAC,cAAc,IAAI,CAAC;cAC3B,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,cAAc,GAAG,GAAG,CAAC,IAAI,CAAC;cAChE,CAAC,CAAC;KACP;;;;IAED,IAAI,aAAa;QACf,OAAO,IAAI,CAAC,OAAO,CAAC,MAAM;;;;;QAAC,CAAC,WAAW,EAAE,OAAO,KAAK,WAAW,GAAG,OAAO,CAAC,aAAa,GAAE,CAAC,CAAC,IAAI,CAAC,CAAC;KACnG;;;;IAED,IAAI,WAAW;QACb,OAAO,IAAI,CAAC,OAAO,CAAC,MAAM;;;;;QAAC,CAAC,WAAW,EAAE,OAAO,KAAK,WAAW,GAAG,OAAO,CAAC,WAAW,GAAE,CAAC,CAAC,IAAI,CAAC,CAAC;KACjG;;;;IAED,IAAI,cAAc;QAChB,OAAO,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,WAAW,CAAC;KAC9C;;;;IAED,IAAI,SAAS;QACX,OAAO,OAAO,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC;KACzC;;;;IAED,IAAI,UAAU;QACZ,OAAO,IAAI,CAAC,SAAS,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC;KAC1C;;;;IAED,IAAI,UAAU;;cACN,oBAAoB,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM;;;;QAAC,MAAM,IAAI,MAAM,CAAC,UAAU,EAAC,CAAC,MAAM;QACpF,OAAO,OAAO,CAAC,oBAAoB,IAAI,oBAAoB,KAAK,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;KACtF;;;;IAED,IAAI,kBAAkB;QACpB,OAAO,IAAI,CAAC,OAAO,CAAC,MAAM;;;;QAAC,MAAM,IAAI,MAAM,CAAC,SAAS,EAAC,CAAC,MAAM,CAAC;KAC/D;;;;IAED,IAAI,SAAS;;cACL,UAAU,GAAa,IAAI,CAAC,OAAO;aACtC,MAAM;;;;QAAC,MAAM,IAAI,MAAM,CAAC,SAAS,EAAC;aAClC,GAAG;;;;QAAC,MAAM,IAAI,MAAM,CAAC,SAAS;cAC3B,MAAM,CAAC,SAAS,CAAC,OAAO,EAAE;cAC1B,IAAI,EACP;QAEH,OAAO,IAAI,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,UAAU,CAAC,CAAC,CAAC;KAC1C;;;;IAED,IAAI,OAAO;;cACH,UAAU,GAAa,IAAI,CAAC,OAAO;aACtC,MAAM;;;;QAAC,MAAM,IAAI,MAAM,CAAC,SAAS,EAAC;aAClC,GAAG;;;;QAAC,MAAM,IAAI,MAAM,CAAC,SAAS;cAC3B,MAAM,CAAC,SAAS,CAAC,OAAO,EAAE;cAC1B,IAAI,EACP;QAEH,OAAO,IAAI,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,UAAU,CAAC,CAAC,CAAC;KAC1C;;;;IAED,IAAI,kBAAkB;QACpB,OAAO,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,cAAc,CAAC;KAClD;;;;IAED,IAAI,oBAAoB;;cAChB,cAAc,GAAG,IAAI,CAAC,kBAAkB;QAC9C,OAAO,cAAc;cACjB,OAAO,CACP,IAAI,CAAC,OAAO;iBACT,GAAG;;;;YAAC,MAAM,IAAI,MAAM,CAAC,yBAAyB,CAAC,cAAc,CAAC,EAAC,CACnE;cACC,CAAC,CAAC;KACP;;;;IAED,IAAI,gCAAgC;QAClC,OAAO,OAAO,CACZ,IAAI,CAAC,OAAO;aACT,GAAG;;;;QAAC,MAAM,IAAI,MAAM,CAAC,yBAAyB,EAAC,CACnD,CAAC;KACH;;;;;IAED,YAAY,CAAC,cAAsB;QACjC,IAAI,CAAC,cAAc,GAAG,cAAc,CAAC;QACrC,OAAO,IAAI,CAAC;KACb;;;;IAED,QAAQ;QACN,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,EAAE,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;QAC5C,IAAI,CAAC,cAAc,GAAG,CAAC,CAAC;QACxB,OAAO,IAAI,CAAC;KACb;;;;;IAED,SAAS,CAAC,GAAG,OAA2B;QACtC,OAAO,CAAC,OAAO;;;;QAAC,MAAM;YACpB,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;SAC3B,EAAC,CAAC;QAEH,OAAO,IAAI,CAAC;KACb;;;;IAED,SAAS;QACP,OAAO;YACL,SAAS,EAAE,IAAI,CAAC,SAAS;YACzB,UAAU,EAAE,IAAI,CAAC,UAAU;YAC3B,UAAU,EAAE,IAAI,CAAC,UAAU;YAC3B,cAAc,EAAE,IAAI,CAAC,cAAc;YACnC,SAAS,EAAE,IAAI,CAAC,SAAS;YACzB,OAAO,EAAE,IAAI,CAAC,OAAO;YACrB,eAAe,EAAE,IAAI,CAAC,eAAe;YACrC,cAAc,EAAE,IAAI,CAAC,cAAc;YACnC,kBAAkB,EAAE,IAAI,CAAC,kBAAkB;YAC3C,aAAa,EAAE,IAAI,CAAC,aAAa;YACjC,WAAW,EAAE,IAAI,CAAC,WAAW;YAC7B,oBAAoB,EAAE,IAAI,CAAC,oBAAoB;YAC/C,WAAW,EAAE,IAAI,CAAC,OAAO,CAAC,MAAM;SACjC,CAAC;KACH;CACF;;;;;;;AC/GD,MAAa,0BAA0B,GAAG;IACxC,gBAAgB,EAAE,IAAI;IACtB,WAAW,EAAE,CAAC;CACf;;;;;;;;;;;;AAYD,MAAsB,gBAAgB;;;;;IAmBpC,YAAsB,GAAW,EAAE,OAA4B;QAAzC,QAAG,GAAH,GAAG,CAAQ;QAhBd,iBAAY,GAAuB,EAAE,CAAC;QACtC,YAAO,GAA2B,IAAI,sBAAsB,EAAE,CAAC;QAKzE,YAAO,GAAuB,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,0BAA0B,CAAC,CAAC;QAWnF,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC;QACzB,IAAI,CAAC,mBAAmB,GAAG,IAAI,OAAO,EAAE,CAAC;QACzC,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,mBAAmB,CAAC,IAAI,EAAE,CAAC;QAEnD,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAC/C,MAAM;;;;QAAC,MAAM,IAAI,MAAM,CAAC,KAAK,KAAK,wBAAwB,CAAC,YAAY,EAAC,CACzE,CAAC;QAEF,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAChD,MAAM;;;;QAAC,MAAM,IAAI,MAAM,CAAC,KAAK,KAAK,wBAAwB,CAAC,aAAa,EAAC,CAC1E,CAAC;QAEF,IAAI,IAAI,CAAC,OAAO,CAAC,gBAAgB,EAAE;YACjC,UAAU;;;YAAC,MAAM,IAAI,CAAC,SAAS,EAAE,EAAC,CAAC;SACpC;KACF;;;;IAxBD,IAAI,SAAS;QACX,OAAO,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC;KAC/B;;;;IAED,IAAI,MAAM;QACR,OAAO,IAAI,CAAC,OAAO,CAAC,SAAS,EAAE,CAAC;KACjC;;;;;;IAwBD,UAAU,CAAC,OAA2B;QACpC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC;QACrC,OAAO,IAAI,CAAC;KACb;;;;;;;IAOD,SAAS;;;;cAGD,aAAa,GAAG,GAAG;;;QAAC,MAAM,CAAC,IAAI,CAAC,SAAS,GAC7C,IAAI,CAAC,sBAAsB,EAAE;aAC1B,IAAI,CACH,GAAG;;;;QAAC,CAAC,UAAkB,KAAK,IAAI,CAAC,OAAO,CAAC,YAAY,CAAC,UAAU,CAAC,EAAC,CACnE,CACJ;QAED,IAAI,CAAC,OAAO,EAAE;aACX,IAAI,CACH,QAAQ;;;QAAC,MAAM,aAAa,EAAC,CAC9B;aACA,SAAS;;;QAAC;;kBACH,cAAc,GAAG,IAAI,CAAC,OAAO,CAAC,WAAW,GAAG,IAAI,CAAC,YAAY,CAAC,MAAM;YAE1E,IAAI,cAAc,GAAG,CAAC,EAAE;gBACtB,IAAI,CAAC,eAAe,CAAC,IAAI,EAAE,wBAAwB,CAAC,YAAY,CAAC,CAAC;aACnE;YAED,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,cAAc,EAAE,CAAC,EAAE,EAAE;;sBACjC,KAAK,GAAG,IAAI,gBAAgB,EAAE,CAAC,KAAK,EAAE;gBAC5C,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;gBAC9B,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;gBAC9B,IAAI,CAAC,eAAe,CAAC,KAAK,EAAE,wBAAwB,CAAC,kBAAkB,CAAC,CAAC;gBACzE,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC,CAAC;aAC9B;SACF,EAAC,CAAC;KACN;;;;;IAKD,QAAQ;QACN,IAAI,CAAC,YAAY,CAAC,OAAO;;;;QAAC,KAAK,IAAI,KAAK,CAAC,MAAM,EAAE,EAAC,CAAC;KACpD;;;;;;;;;IAsBS,OAAO;QACf,OAAO,EAAE,CAAC,IAAI,CAAC,CAAC;KACjB;;;;;;IAES,mBAAmB,CAAC,KAAa;QACzC,OAAO,EAAE,CAAC,KAAK,CAAC,CAAC;KAClB;;;;;;IAES,cAAc,CAAC,IAAmC;QAC1D,OAAO,EAAE,CAAC,IAAI,CAAC,CAAC;KACjB;;;;;;;IAES,YAAY,CAAC,IAAmC,EAAE,KAAU;QACpE,OAAO,EAAE,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;KACxB;;;;;IAES,sBAAsB;QAC9B,OAAO,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;KACf;;;;;;;;;IAES,eAAe,CAAC,KAAuB,EAAE,KAA+B,EAAE,KAAc,EAAE,MAAgB;QAClH,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC;YAC5B,KAAK;YACL,KAAK;YACL,MAAM;YACN,MAAM,EAAE,IAAI,CAAC,OAAO,CAAC,SAAS,EAAE;YAChC,OAAO,EAAE,KAAK,GAAG,KAAK,CAAC,EAAE,GAAG,IAAI;SACjC,CAAC,CAAC;KACJ;;;;;;;;IAEO,eAAe,CAAC,KAAuB,EAAE,KAAc,EAAE,MAAgB;QAC/E,IAAI,CAAC,eAAe,CAAC,KAAK,EAAE,wBAAwB,CAAC,iBAAiB,EAAE,KAAK,EAAE,MAAM,CAAC,CAAC;KACxF;;;;;;;;IAEO,gBAAgB,CAAC,KAAuB,EAAE,KAAc,EAAE,MAAgB;QAChF,IAAI,CAAC,eAAe,CAAC,KAAK,EAAE,wBAAwB,CAAC,kBAAkB,EAAE,KAAK,EAAE,MAAM,CAAC,CAAC;KACzF;;;;;;IAEO,iBAAiB,CAAC,KAAuB;QAC/C,IAAI,KAAK,CAAC,UAAU,EAAE;YACpB,OAAO;SACR;;cAEK,KAAK,GAAG,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,KAAK,CAAC;QAC9C,KAAK,CAAC,QAAQ,EAAE,CAAC;QAEjB,IAAI,KAAK,KAAK,CAAC,CAAC,EAAE;YAChB,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;SACpC;QAED,IAAI,CAAC,eAAe,CAAC,KAAK,EAAE,wBAAwB,CAAC,mBAAmB,CAAC,CAAC;QAC1E,IAAI,IAAI,CAAC,YAAY,CAAC,MAAM,KAAK,CAAC,EAAE;YAClC,IAAI,CAAC,eAAe,CAAC,KAAK,EAAE,wBAAwB,CAAC,aAAa,CAAC,CAAC;YACpE,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE,CAAC;SACzB;KACF;;;;;;;IAEO,qBAAqB,CAAC,KAAuB,EAAE,IAAY;QACjE,IAAI,UAAU,CAAC,IAAI,CAAC,EAAE;YACpB,IAAI,CAAC,iBAAiB,CAAC,KAAK,CAAC,CAAC;SAC/B;KACF;;;;;;IAEO,gBAAgB,CAAC,KAAuB;QAC9C,IAAI,KAAK,CAAC,UAAU,EAAE;YACpB,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,0CAA0C,KAAK,CAAC,EAAE,EAAE,CAAC,CAAC;YACrE,IAAI,CAAC,iBAAiB,CAAC,KAAK,CAAC,CAAC;SAC/B;QAED,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,gDAAgD,CAAC,CAAC;;cAC3D,cAAc,GAAkC,EAAE,KAAK,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE;QACnF,IAAI,CAAC,OAAO,EAAE;aACX,IAAI,CACH,GAAG;;;;QAAC,CAAC,KAAa,KAAK,cAAc,CAAC,KAAK,GAAG,KAAK,EAAC,EACpD,GAAG;;;;QAAC,CAAC,KAAa,KAAK,IAAI,CAAC,qBAAqB,CAAC,KAAK,EAAE,KAAK,CAAC,EAAC,EAChE,SAAS;;;;QAAC,CAAC,KAAa,KAAK,OAAO,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,UAAU,EAAC,EACjE,GAAG;;;;QAAC,CAAC,KAAa,KAAK,IAAI,CAAC,eAAe,CAAC,KAAK,EAAE,KAAK,CAAC,EAAC,EAC1D,QAAQ;;;;QAAC,CAAC,KAAa,KAAK,IAAI,CAAC,mBAAmB,CAAC,KAAK,CAAC,EAAC,EAC5D,QAAQ;;;;QAAC,CAAC,KAAa,KAAK,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,EAAC,EAC/C,GAAG;;;;QAAC,CAAC,MAAe,KAAK,cAAc,CAAC,MAAM,GAAG,MAAM,EAAC,EACxD,GAAG;;;QAAC,MAAM,cAAc,EAAC,EACzB,QAAQ;;;;QAAC,CAAC,IAAmC,KAAK,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,EAAC,CAC/E;aACE,SAAS;;;;QAAC,CAAC,IAAmC;YAC7C,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,yBAAyB,CAAC,CAAC;YAC1C,KAAK,CAAC,aAAa,EAAE,CAAC;YACtB,IAAI,CAAC,gBAAgB,CAAC,KAAK,EAAE,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;YACtD,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC,CAAC;SAC9B;;;;QAAE,CAAC,KAAK;YACP,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,iCAAiC,EAAE,KAAK,CAAC,CAAC;YACzD,KAAK,CAAC,WAAW,EAAE,CAAC;YACpB,IAAI,CAAC,YAAY,CAAC,cAAc,EAAE,KAAK,CAAC;iBACrC,SAAS,EAAE;iBACX,IAAI;;;YAAC,MAAM,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC,EAAC,CAAC;SAC7C,EAAC,CAAC;KACN;CACF;;;;;;;;;;AClOD,MAAsB,wBAA0C,SAAQ,gBAAiC;IAAzG;;QACW,YAAO,GAA+B,MAAM,CAAC,MAAM,CAAC;YAC3D,UAAU,EAAE,IAAI;SACjB,EAAE,0BAA0B,CAAC,CAAC;KAqDhC;;;;;;;;;;;;;;;;;IAjCC,UAAU,CAAC,GAAG,KAAe;;cACrB,OAAO,GAAyB,KAAK;aACxC,GAAG;;;;QAAC,CAAC,IAAI,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,EAAC;QAE5B,OAAO,QAAQ,CAAC,OAAO,CAAC;aACrB,IAAI,CACH,GAAG;;;;QAAC,CAAC,OAAiB,KAAK,OAAO,CAAC,GAAG,EAAE,EAAC,CAC1C,CAAC;KACL;;;;;;IAMD,UAAU,CAAC,GAAG,KAAe;;cACrB,OAAO,GAAyB,KAAK;aACxC,GAAG;;;;QAAC,CAAC,IAAI,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,EAAC;QAE5B,OAAO,QAAQ,CAAC,OAAO,CAAC;aACrB,IAAI,CACH,GAAG;;;;QAAC,CAAC,OAAiB,KAAK,OAAO,CAAC,GAAG,EAAE,EAAC,CAC1C,CAAC;KACL;;;;;;IAES,cAAc,CAAC,OAAsC;QAC7D,OAAO,QAAQ,CACb,KAAK,CAAC,cAAc,CAAC,OAAO,CAAC,EAC7B,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,KAAK,CAAC,CAC5B;aACE,IAAI,CACH,GAAG;;;;QAAC,CAAC,MAAM,KAAK,MAAM,CAAC,CAAC,CAAC,EAAC,CAC3B,CAAC;KACL;CACF;;;;;;;;;;;;;;;;;;IC1DC,SAAM;IACN,aAAU;IACV,WAAQ;IACR,WAAQ;IACR,SAAM;;;;;;;;;;;;;;;;;;;;ICCK,WAAW;;;MAAX,WAAW;CACvB,CAAA;;YALA,UAAU,SAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;AAEY,WAAW;IADvB,UAAU,CAAC,aAAa,CAAC;GACb,WAAW,CACvB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACfD,MAYa,gBAAiB,SAAQ,mBAA8B;;;;;IAClE,YAAsB,IAAgB,EAAE,MAAsB;QAC5D,KAAK,CAAC,IAAI,EAAE;YACV,GAAG,EAAE,IAAI,CAAC,MAAM,CAAC,UAAU,EAAE,MAAM,CAAC,kBAAkB,CAAC;SACxD,CAAC,CAAC;QAHiB,SAAI,GAAJ,IAAI,CAAY;KAIrC;;;YARF,UAAU,SAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;YAXQ,UAAU;YAKV,cAAc;;;;;;;;;;;;;;ACLvB,MAAa,gCAAgC,GAAG,2BAA2B;;;;;;;ACgB3E,MAAa,qCAAqC,GAAG,wCAAwC;;;;;;;;;;;;AAiB7F,MAAa,oBAAqB,SAAQ,mBAA8B;;;;;IACtE,YAAsB,IAAgB,EAAE,MAAsB;QAC5D,KAAK,CAAC,IAAI,EAAE;YACV,GAAG,EAAE,IAAI,CAAC,MAAM,CAAC,UAAU,EAAE,MAAM,CAAC,uBAAuB,CAAC;YAC5D,WAAW,EAAE,QAAQ;SACtB,CAAC,CAAC;QAJiB,SAAI,GAAJ,IAAI,CAAY;KAKrC;;;;;;;IAKD,KAAK,CAAC,WAAiB,EAAE,MAAmB;QAC1C,IAAI,CAAC,WAAW,IAAI,CAAC,WAAW,CAAC,MAAM,EAAE;YACvC,MAAM,IAAI,KAAK,CAAC,gCAAgC,CAAC,CAAC;SACnD;QAED,OAAO,KAAK,CAAC,KAAK,CAAC,WAAW,EAAE,MAAM,CAAC,CAAC;KACzC;;;;;;;;IAKD,GAAG,CAAC,EAAmB,EAAE,WAAiB,EAAE,MAAmB;QAC7D,MAAM,IAAI,KAAK,CAAC,6BAA6B,CAAC,CAAC;KAChD;;;;;;;;IAKD,MAAM,CAAC,MAAiB,EAAE,WAAiB,EAAE,MAAmB;QAC9D,MAAM,IAAI,KAAK,CAAC,gCAAgC,CAAC,CAAC;KACnD;;;;;;;;IAKD,MAAM,CAAC,MAAiB,EAAE,WAAiB,EAAE,MAAmB;QAC9D,IAAI,CAAC,WAAW,IAAI,CAAC,WAAW,CAAC,MAAM,EAAE;YACvC,MAAM,IAAI,KAAK,CAAC,gCAAgC,CAAC,CAAC;SACnD;aAAM,IAAI,CAAC,WAAW,CAAC,WAAW,EAAE;YACnC,MAAM,IAAI,KAAK,CAAC,qCAAqC,CAAC,CAAC;SACxD;QAED,OAAO,KAAK,CAAC,MAAM,CAAC,IAAI,EAAE,WAAW,EAAE,MAAM,CAAC,CAAC;KAChD;;;;;;;;IAKD,MAAM,CAAC,EAAmB,EAAE,WAAiB,EAAE,MAAmB;QAChE,IAAI,CAAC,WAAW,IAAI,CAAC,WAAW,CAAC,MAAM,EAAE;YACvC,MAAM,IAAI,KAAK,CAAC,gCAAgC,CAAC,CAAC;SACnD;aAAM,IAAI,CAAC,WAAW,CAAC,WAAW,EAAE;YACnC,MAAM,IAAI,KAAK,CAAC,qCAAqC,CAAC,CAAC;SACxD;QAED,OAAO,KAAK,CAAC,MAAM,CAAC,EAAE,EAAE,WAAW,EAAE,MAAM,CAAC,CAAC;KAC9C;;;;;;;IAKD,gBAAgB,CAAC,MAAc,EAAE,MAAmB;QAClD,OAAO,IAAI,CAAC,KAAK,CAAC,EAAE,MAAM,EAAE,EAAE,MAAM,CAAC,CAAC;KACvC;;;;;;;IAKD,kBAAkB,CAAC,MAAc,EAAE,WAAmB;QACpD,OAAO,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE,EAAE,MAAM,EAAE,WAAW,EAAE,CAAC,CAAC;KACnD;;;;;;;IAMD,uBAAuB,CAAC,MAAc,EAAE,WAAmB;QACzD,OAAO,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE,EAAE,MAAM,EAAE,WAAW,EAAE,CAAC,CAAC;KACrD;;;YAlFF,UAAU,SAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;YA/BQ,UAAU;YAOV,cAAc;;;;;;;;ACRvB,MAYa,WAAY,SAAQ,mBAAyB;;;;;IACxD,YAAsB,IAAgB,EAAE,MAAsB;QAC5D,KAAK,CAAC,IAAI,EAAE;YACV,GAAG,EAAE,IAAI,CAAC,MAAM,CAAC,UAAU,EAAE,MAAM,CAAC,aAAa,CAAC;SACnD,CAAC,CAAC;QAHiB,SAAI,GAAJ,IAAI,CAAY;KAIrC;;;YARF,UAAU,SAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;YAXQ,UAAU;YAKV,cAAc;;;;;;;;;ACLvB,MAAa,gCAAgC,GAAG,2BAA2B;;;;;;ACA3E;;;;;;;;;;;AA2BA,MAAa,eAAgB,SAAQ,mBAAyB;;;;;IAC5D,YAAsB,IAAgB,EAAE,MAAsB;QAC5D,KAAK,CAAC,IAAI,EAAE;YACV,GAAG,EAAE,IAAI,CAAC,MAAM,CAAC,UAAU,EAAE,MAAM,CAAC,iBAAiB,CAAC;YACtD,WAAW,EAAE,QAAQ;SACtB,CAAC,CAAC;QAJiB,SAAI,GAAJ,IAAI,CAAY;KAKrC;;;;;;;IAKD,KAAK,CAAC,WAAiB,EAAE,MAAmB;QAC1C,IAAI,CAAC,WAAW,IAAI,CAAC,WAAW,CAAC,MAAM,EAAE;YACvC,MAAM,IAAI,KAAK,CAAC,gCAAgC,CAAC,CAAC;SACnD;QAED,OAAO,KAAK,CAAC,KAAK,CAAC,WAAW,EAAE,MAAM,CAAC,CAAC;KACzC;;;;;;;;IAKD,GAAG,CAAC,EAAmB,EAAE,WAAiB,EAAE,MAAmB;QAC7D,MAAM,IAAI,KAAK,CAAC,6BAA6B,CAAC,CAAC;KAChD;;;;;;;;IAKD,MAAM,CAAC,MAAY,EAAE,WAAiB,EAAE,MAAmB;QACzD,MAAM,IAAI,KAAK,CAAC,gCAAgC,CAAC,CAAC;KACnD;;;;;;;;IAKD,MAAM,CAAC,MAAY,EAAE,WAAiB,EAAE,MAAmB;QACzD,IAAI,CAAC,WAAW,IAAI,CAAC,WAAW,CAAC,MAAM,EAAE;YACvC,MAAM,IAAI,KAAK,CAAC,gCAAgC,CAAC,CAAC;SACnD;aAAM,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE;YAChC,MAAM,IAAI,KAAK,CAAC,gCAAgC,CAAC,CAAC;SACnD;QAED,OAAO,KAAK,CAAC,MAAM,CAAC,IAAI,EAAE,WAAW,EAAE,MAAM,CAAC,CAAC;KAChD;;;;;;;;IAKD,MAAM,CAAC,EAAmB,EAAE,WAAiB,EAAE,MAAmB;QAChE,IAAI,CAAC,WAAW,IAAI,CAAC,WAAW,CAAC,MAAM,EAAE;YACvC,MAAM,IAAI,KAAK,CAAC,gCAAgC,CAAC,CAAC;SACnD;aAAM,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE;YAChC,MAAM,IAAI,KAAK,CAAC,gCAAgC,CAAC,CAAC;SACnD;QAED,OAAO,KAAK,CAAC,MAAM,CAAC,EAAE,EAAE,WAAW,EAAE,MAAM,CAAC,CAAC;KAC9C;;;;;;;IAKD,WAAW,CAAC,MAAc,EAAE,MAAmB;QAC7C,OAAO,IAAI,CAAC,KAAK,CAAC,EAAE,MAAM,EAAE,EAAE,MAAM,CAAC,CAAC;KACvC;;;;;;;;IAKD,aAAa,CAAC,MAAc,EAAE,IAAU,EAAE,MAAmB;;;;;QAK3D,OAAO,KAAK,CAAC,MAAM,CAAC,IAAI,EAAE,EAAE,MAAM,EAAE,QAAQ,EAAE,GAAG,EAAE,EAAE,MAAM,CAAC,CAAC;KAC9D;;;;;;;;IAKD,mBAAmB,CAAC,MAAc,EAAE,QAAgB,EAAE,MAAmB;QACvE,QAAQ,GAAG,kBAAkB,CAAC,QAAQ,CAAC,CAAC;QACxC,OAAO,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE,EAAE,MAAM,EAAE,QAAQ,EAAE,EAAE,MAAM,CAAC,CAAC;KACxD;;;;;;;;IAKD,kBAAkB,CAAC,MAAc,EAAE,IAAU,EAAE,MAAmB;QAChE,OAAO,IAAI,CAAC,wBAAwB,CAAC,MAAM,EAAE,IAAI,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;KACjE;;;;;;;;IAKD,wBAAwB,CAAC,MAAc,EAAE,QAAgB,EAAE,MAAmB;QAC5E,QAAQ,GAAG,kBAAkB,CAAC,QAAQ,CAAC,CAAC;QACxC,OAAO,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE,EAAE,MAAM,EAAE,QAAQ,EAAE,EAAE,MAAM,CAAC,CAAC;KAC1D;;;YArGF,UAAU,SAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;YA1BQ,UAAU;YAMV,cAAc;;;;;;;;;;;;;;;;;;;;;;;;;;;ACyBvB,MAAa,WAAY,SAAQ,mBAAyB;;;;;IACxD,YAAsB,IAAgB,EAAE,MAAsB;QAC5D,KAAK,CAAC,IAAI,EAAE;YACV,GAAG,EAAE,IAAI,CAAC,MAAM,CAAC,UAAU,EAAE,MAAM,CAAC,aAAa,CAAC;SACnD,CAAC,CAAC;QAHiB,SAAI,GAAJ,IAAI,CAAY;KAIrC;;;;;;IAED,aAAa,CAAC,MAAc,EAAE,MAAmB;QAC/C,MAAM,GAAG,CAAC,MAAM,IAAI,IAAI,UAAU,EAAE,EAAE,GAAG,CAAC,gBAAgB,EAAE,MAAM,CAAC,CAAC;QACpE,OAAO,IAAI,CAAC,KAAK,CAAC,EAAE,EAAE,MAAM,CAAC,CAAC;KAC/B;;;;;;IAED,eAAe,CAAC,QAAgB,EAAE,MAAmB;QACnD,MAAM,GAAG,CAAC,MAAM,IAAI,IAAI,UAAU,EAAE,EAAE,GAAG,CAAC,kBAAkB,EAAE,QAAQ,CAAC,CAAC;QACxE,OAAO,IAAI,CAAC,KAAK,CAAC,EAAE,EAAE,MAAM,CAAC,CAAC;KAC/B;;;;;;IAED,MAAM,CAAC,UAAkB,EAAE,MAAmB;QAC5C,MAAM,GAAG,CAAC,MAAM,IAAI,IAAI,UAAU,EAAE,EAAE,GAAG,CAAC,QAAQ,EAAE,UAAU,CAAC,CAAC;QAChE,OAAO,IAAI,CAAC,KAAK,CAAC,EAAE,EAAE,MAAM,CAAC,CAAC;KAC/B;;;YAvBF,UAAU,SAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;YA7BQ,UAAU;YASV,cAAc;;;;;;;;;;;;;;;;;;;;;"}
