import { HttpClient } from '@angular/common/http';
import { Observable } from 'rxjs';
import { DataSourceService } from '../data-source/data-source.service';
import { DataSourceLrsMetadataService } from './data-source-lrs-metadata.service';
import { Logger } from '../core/logging/logger.service';
import { NotifyService } from '../core/notify/notify.service';
import { LrsMetadata } from './lrs-metadata';
import { DataSource } from '../data-source/data-source';
import { LrsConfig } from './lrs.config';
import { EsriMapServerService } from '../esri/esri-map-server.service';
import * as ɵngcc0 from '@angular/core';
export declare class LrsMetadataService {
    protected http: HttpClient;
    protected mapServer: EsriMapServerService;
    protected dataSourceService: DataSourceService;
    protected dataSourceLrsMetadataService: DataSourceLrsMetadataService;
    protected notify: NotifyService;
    protected config: LrsConfig;
    protected log: Logger;
    lrsCache: {
        dataSourceId: string;
        metaData: LrsMetadata;
    }[];
    constructor(http: HttpClient, mapServer: EsriMapServerService, dataSourceService: DataSourceService, dataSourceLrsMetadataService: DataSourceLrsMetadataService, notify: NotifyService, config: LrsConfig, log: Logger);
    get(dataSource: string | DataSource, lrsMetadata?: LrsMetadata): Observable<LrsMetadata>;
    private tryCacheLrsMetadata;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<LrsMetadataService, never>;
    static ɵprov: ɵngcc0.ɵɵInjectableDef<LrsMetadataService>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibHJzLW1ldGFkYXRhLnNlcnZpY2UuZC50cyIsInNvdXJjZXMiOlsibHJzLW1ldGFkYXRhLnNlcnZpY2UuZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQUNBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSHR0cENsaWVudCB9IGZyb20gJ0Bhbmd1bGFyL2NvbW1vbi9odHRwJztcbmltcG9ydCB7IE9ic2VydmFibGUgfSBmcm9tICdyeGpzJztcbmltcG9ydCB7IERhdGFTb3VyY2VTZXJ2aWNlIH0gZnJvbSAnLi4vZGF0YS1zb3VyY2UvZGF0YS1zb3VyY2Uuc2VydmljZSc7XG5pbXBvcnQgeyBEYXRhU291cmNlTHJzTWV0YWRhdGFTZXJ2aWNlIH0gZnJvbSAnLi9kYXRhLXNvdXJjZS1scnMtbWV0YWRhdGEuc2VydmljZSc7XG5pbXBvcnQgeyBMb2dnZXIgfSBmcm9tICcuLi9jb3JlL2xvZ2dpbmcvbG9nZ2VyLnNlcnZpY2UnO1xuaW1wb3J0IHsgTm90aWZ5U2VydmljZSB9IGZyb20gJy4uL2NvcmUvbm90aWZ5L25vdGlmeS5zZXJ2aWNlJztcbmltcG9ydCB7IExyc01ldGFkYXRhIH0gZnJvbSAnLi9scnMtbWV0YWRhdGEnO1xuaW1wb3J0IHsgRGF0YVNvdXJjZSB9IGZyb20gJy4uL2RhdGEtc291cmNlL2RhdGEtc291cmNlJztcbmltcG9ydCB7IExyc0NvbmZpZyB9IGZyb20gJy4vbHJzLmNvbmZpZyc7XG5pbXBvcnQgeyBFc3JpTWFwU2VydmVyU2VydmljZSB9IGZyb20gJy4uL2VzcmkvZXNyaS1tYXAtc2VydmVyLnNlcnZpY2UnO1xuZXhwb3J0IGRlY2xhcmUgY2xhc3MgTHJzTWV0YWRhdGFTZXJ2aWNlIHtcbiAgICBwcm90ZWN0ZWQgaHR0cDogSHR0cENsaWVudDtcbiAgICBwcm90ZWN0ZWQgbWFwU2VydmVyOiBFc3JpTWFwU2VydmVyU2VydmljZTtcbiAgICBwcm90ZWN0ZWQgZGF0YVNvdXJjZVNlcnZpY2U6IERhdGFTb3VyY2VTZXJ2aWNlO1xuICAgIHByb3RlY3RlZCBkYXRhU291cmNlTHJzTWV0YWRhdGFTZXJ2aWNlOiBEYXRhU291cmNlTHJzTWV0YWRhdGFTZXJ2aWNlO1xuICAgIHByb3RlY3RlZCBub3RpZnk6IE5vdGlmeVNlcnZpY2U7XG4gICAgcHJvdGVjdGVkIGNvbmZpZzogTHJzQ29uZmlnO1xuICAgIHByb3RlY3RlZCBsb2c6IExvZ2dlcjtcbiAgICBscnNDYWNoZToge1xuICAgICAgICBkYXRhU291cmNlSWQ6IHN0cmluZztcbiAgICAgICAgbWV0YURhdGE6IExyc01ldGFkYXRhO1xuICAgIH1bXTtcbiAgICBjb25zdHJ1Y3RvcihodHRwOiBIdHRwQ2xpZW50LCBtYXBTZXJ2ZXI6IEVzcmlNYXBTZXJ2ZXJTZXJ2aWNlLCBkYXRhU291cmNlU2VydmljZTogRGF0YVNvdXJjZVNlcnZpY2UsIGRhdGFTb3VyY2VMcnNNZXRhZGF0YVNlcnZpY2U6IERhdGFTb3VyY2VMcnNNZXRhZGF0YVNlcnZpY2UsIG5vdGlmeTogTm90aWZ5U2VydmljZSwgY29uZmlnOiBMcnNDb25maWcsIGxvZzogTG9nZ2VyKTtcbiAgICBnZXQoZGF0YVNvdXJjZTogc3RyaW5nIHwgRGF0YVNvdXJjZSwgbHJzTWV0YWRhdGE/OiBMcnNNZXRhZGF0YSk6IE9ic2VydmFibGU8THJzTWV0YWRhdGE+O1xuICAgIHByaXZhdGUgdHJ5Q2FjaGVMcnNNZXRhZGF0YTtcbn1cbiJdfQ==