import { LogEntry } from './log-entry';
import { LogLevel, LogType } from './log-level';
import { CoreConfig } from '../core.config';
/**
 * Console logger.
 */
import * as ɵngcc0 from '@angular/core';
export declare class Logger {
    private config;
    logs: Array<LogEntry>;
    constructor(config: CoreConfig);
    readonly level: LogLevel;
    readonly enabled: boolean;
    readonly isTrace: boolean;
    readonly isDebug: boolean;
    readonly isWarn: boolean;
    readonly isError: boolean;
    readonly isFatal: boolean;
    readonly traceCount: number;
    readonly debugCount: number;
    readonly warnCount: number;
    readonly errorCount: number;
    readonly fatalCount: number;
    count(logType: LogType): number;
    logsByType(logType: LogType): LogEntry[];
    logsByLevel(logLevel: LogLevel): LogEntry[];
    logEntry(log: LogEntry): LogEntry;
    log(msg: string, level: LogLevel, error?: Error): LogEntry;
    trace(msg: string): LogEntry;
    debug(msg: string): LogEntry;
    info(msg: string): LogEntry;
    warn(msg: string, error?: Error): LogEntry;
    error(msg: string, error?: Error): LogEntry;
    fatal(msg: string, error?: Error): LogEntry;
    clear(): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<Logger, never>;
    static ɵprov: ɵngcc0.ɵɵInjectableDef<Logger>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibG9nZ2VyLnNlcnZpY2UuZC50cyIsInNvdXJjZXMiOlsibG9nZ2VyLnNlcnZpY2UuZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQUNBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTG9nRW50cnkgfSBmcm9tICcuL2xvZy1lbnRyeSc7XG5pbXBvcnQgeyBMb2dMZXZlbCwgTG9nVHlwZSB9IGZyb20gJy4vbG9nLWxldmVsJztcbmltcG9ydCB7IENvcmVDb25maWcgfSBmcm9tICcuLi9jb3JlLmNvbmZpZyc7XG4vKipcbiAqIENvbnNvbGUgbG9nZ2VyLlxuICovXG5leHBvcnQgZGVjbGFyZSBjbGFzcyBMb2dnZXIge1xuICAgIHByaXZhdGUgY29uZmlnO1xuICAgIGxvZ3M6IEFycmF5PExvZ0VudHJ5PjtcbiAgICBjb25zdHJ1Y3Rvcihjb25maWc6IENvcmVDb25maWcpO1xuICAgIHJlYWRvbmx5IGxldmVsOiBMb2dMZXZlbDtcbiAgICByZWFkb25seSBlbmFibGVkOiBib29sZWFuO1xuICAgIHJlYWRvbmx5IGlzVHJhY2U6IGJvb2xlYW47XG4gICAgcmVhZG9ubHkgaXNEZWJ1ZzogYm9vbGVhbjtcbiAgICByZWFkb25seSBpc1dhcm46IGJvb2xlYW47XG4gICAgcmVhZG9ubHkgaXNFcnJvcjogYm9vbGVhbjtcbiAgICByZWFkb25seSBpc0ZhdGFsOiBib29sZWFuO1xuICAgIHJlYWRvbmx5IHRyYWNlQ291bnQ6IG51bWJlcjtcbiAgICByZWFkb25seSBkZWJ1Z0NvdW50OiBudW1iZXI7XG4gICAgcmVhZG9ubHkgd2FybkNvdW50OiBudW1iZXI7XG4gICAgcmVhZG9ubHkgZXJyb3JDb3VudDogbnVtYmVyO1xuICAgIHJlYWRvbmx5IGZhdGFsQ291bnQ6IG51bWJlcjtcbiAgICBjb3VudChsb2dUeXBlOiBMb2dUeXBlKTogbnVtYmVyO1xuICAgIGxvZ3NCeVR5cGUobG9nVHlwZTogTG9nVHlwZSk6IExvZ0VudHJ5W107XG4gICAgbG9nc0J5TGV2ZWwobG9nTGV2ZWw6IExvZ0xldmVsKTogTG9nRW50cnlbXTtcbiAgICBsb2dFbnRyeShsb2c6IExvZ0VudHJ5KTogTG9nRW50cnk7XG4gICAgbG9nKG1zZzogc3RyaW5nLCBsZXZlbDogTG9nTGV2ZWwsIGVycm9yPzogRXJyb3IpOiBMb2dFbnRyeTtcbiAgICB0cmFjZShtc2c6IHN0cmluZyk6IExvZ0VudHJ5O1xuICAgIGRlYnVnKG1zZzogc3RyaW5nKTogTG9nRW50cnk7XG4gICAgaW5mbyhtc2c6IHN0cmluZyk6IExvZ0VudHJ5O1xuICAgIHdhcm4obXNnOiBzdHJpbmcsIGVycm9yPzogRXJyb3IpOiBMb2dFbnRyeTtcbiAgICBlcnJvcihtc2c6IHN0cmluZywgZXJyb3I/OiBFcnJvcik6IExvZ0VudHJ5O1xuICAgIGZhdGFsKG1zZzogc3RyaW5nLCBlcnJvcj86IEVycm9yKTogTG9nRW50cnk7XG4gICAgY2xlYXIoKTogdm9pZDtcbn1cbiJdfQ==