import { ValidationResult } from './validation-results';
export declare class ValidationCheck<T> {
    id: number;
    description: string;
    private subChecks;
    private passCheck?;
    private failCheck?;
    private warnCheck?;
    private onlyIfCheck?;
    constructor(description: string, passCheck?: (value: any) => boolean);
    hasId(id: number): ValidationCheck<T>;
    message(description: string): ValidationCheck<T>;
    pass(passCheck?: (value: T) => boolean): ValidationCheck<T>;
    fail(failCheck?: (value: T) => boolean): ValidationCheck<T>;
    warn(warnCheck?: (value: T) => boolean): ValidationCheck<T>;
    onlyIf(onlyIfCheck?: (value: T) => boolean): ValidationCheck<T>;
    add(...innerChecks: ValidationCheck<T>[]): ValidationCheck<T>;
    check(target: T): ValidationResult;
}
