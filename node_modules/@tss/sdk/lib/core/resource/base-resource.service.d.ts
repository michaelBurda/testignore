import { HttpClient, HttpParams } from '@angular/common/http';
import { Observable } from 'rxjs';
import { BaseEmptyResourceService } from './base-empty-resource.service';
import { ResourceServiceConfig } from './resource-service-config';
export declare abstract class BaseResourceService<T> extends BaseEmptyResourceService<T> implements BaseEmptyResourceService<T> {
    protected http: HttpClient;
    constructor(http: HttpClient, paramsOrUrl: string | ResourceServiceConfig);
    query(routeTokens?: any, params?: HttpParams): Observable<T[]>;
    get(id: string | number, routeTokens?: any, params?: HttpParams): Observable<T>;
    create(entity: T, routeTokens?: any, params?: HttpParams): Observable<T>;
    update(entity: T, routeTokens?: any, params?: HttpParams): Observable<any>;
    delete(id: string | number, routeTokens?: any, params?: HttpParams): Observable<T>;
}
