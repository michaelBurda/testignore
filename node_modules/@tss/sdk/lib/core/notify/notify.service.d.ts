import { Observable } from 'rxjs';
import { CoreConfig } from '../core.config';
import { NotifyType } from './notify-type';
import { Notify } from './notify';
import { Logger } from '../logging/logger.service';
import { NotificationSubscriptionTracker } from './notification-subscription-tracker';
import { NotificationPromiseTracker } from './notification-promise-tracker';
import { NotifyResponse } from './notify-response';
/**
 * Notification service.
 */
import * as ɵngcc0 from '@angular/core';
export declare class NotifyService implements Notify {
    protected config: CoreConfig;
    protected log: Logger;
    constructor(config: CoreConfig, log: Logger);
    notify(type: NotifyType, message: string, title: string, config?: any): NotifyResponse;
    clear(notifyId?: string, containerId?: string): void;
    with<T>(source: Observable<T>): NotificationSubscriptionTracker<T>;
    promise<T>(source: Promise<T>): NotificationPromiseTracker<T>;
    wait(message: string, title?: string, config?: any): NotifyResponse;
    success(message: string, title?: string, config?: any): NotifyResponse;
    error(message: string, title?: string, error?: any, config?: any): NotifyResponse;
    warn(message: string, title?: string, error?: any, config?: any): NotifyResponse;
    info(message: string, title?: string, config?: any): NotifyResponse;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<NotifyService, never>;
    static ɵprov: ɵngcc0.ɵɵInjectableDef<NotifyService>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibm90aWZ5LnNlcnZpY2UuZC50cyIsInNvdXJjZXMiOlsibm90aWZ5LnNlcnZpY2UuZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUFDQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE9ic2VydmFibGUgfSBmcm9tICdyeGpzJztcbmltcG9ydCB7IENvcmVDb25maWcgfSBmcm9tICcuLi9jb3JlLmNvbmZpZyc7XG5pbXBvcnQgeyBOb3RpZnlUeXBlIH0gZnJvbSAnLi9ub3RpZnktdHlwZSc7XG5pbXBvcnQgeyBOb3RpZnkgfSBmcm9tICcuL25vdGlmeSc7XG5pbXBvcnQgeyBMb2dnZXIgfSBmcm9tICcuLi9sb2dnaW5nL2xvZ2dlci5zZXJ2aWNlJztcbmltcG9ydCB7IE5vdGlmaWNhdGlvblN1YnNjcmlwdGlvblRyYWNrZXIgfSBmcm9tICcuL25vdGlmaWNhdGlvbi1zdWJzY3JpcHRpb24tdHJhY2tlcic7XG5pbXBvcnQgeyBOb3RpZmljYXRpb25Qcm9taXNlVHJhY2tlciB9IGZyb20gJy4vbm90aWZpY2F0aW9uLXByb21pc2UtdHJhY2tlcic7XG5pbXBvcnQgeyBOb3RpZnlSZXNwb25zZSB9IGZyb20gJy4vbm90aWZ5LXJlc3BvbnNlJztcbi8qKlxuICogTm90aWZpY2F0aW9uIHNlcnZpY2UuXG4gKi9cbmV4cG9ydCBkZWNsYXJlIGNsYXNzIE5vdGlmeVNlcnZpY2UgaW1wbGVtZW50cyBOb3RpZnkge1xuICAgIHByb3RlY3RlZCBjb25maWc6IENvcmVDb25maWc7XG4gICAgcHJvdGVjdGVkIGxvZzogTG9nZ2VyO1xuICAgIGNvbnN0cnVjdG9yKGNvbmZpZzogQ29yZUNvbmZpZywgbG9nOiBMb2dnZXIpO1xuICAgIG5vdGlmeSh0eXBlOiBOb3RpZnlUeXBlLCBtZXNzYWdlOiBzdHJpbmcsIHRpdGxlOiBzdHJpbmcsIGNvbmZpZz86IGFueSk6IE5vdGlmeVJlc3BvbnNlO1xuICAgIGNsZWFyKG5vdGlmeUlkPzogc3RyaW5nLCBjb250YWluZXJJZD86IHN0cmluZyk6IHZvaWQ7XG4gICAgd2l0aDxUPihzb3VyY2U6IE9ic2VydmFibGU8VD4pOiBOb3RpZmljYXRpb25TdWJzY3JpcHRpb25UcmFja2VyPFQ+O1xuICAgIHByb21pc2U8VD4oc291cmNlOiBQcm9taXNlPFQ+KTogTm90aWZpY2F0aW9uUHJvbWlzZVRyYWNrZXI8VD47XG4gICAgd2FpdChtZXNzYWdlOiBzdHJpbmcsIHRpdGxlPzogc3RyaW5nLCBjb25maWc/OiBhbnkpOiBOb3RpZnlSZXNwb25zZTtcbiAgICBzdWNjZXNzKG1lc3NhZ2U6IHN0cmluZywgdGl0bGU/OiBzdHJpbmcsIGNvbmZpZz86IGFueSk6IE5vdGlmeVJlc3BvbnNlO1xuICAgIGVycm9yKG1lc3NhZ2U6IHN0cmluZywgdGl0bGU/OiBzdHJpbmcsIGVycm9yPzogYW55LCBjb25maWc/OiBhbnkpOiBOb3RpZnlSZXNwb25zZTtcbiAgICB3YXJuKG1lc3NhZ2U6IHN0cmluZywgdGl0bGU/OiBzdHJpbmcsIGVycm9yPzogYW55LCBjb25maWc/OiBhbnkpOiBOb3RpZnlSZXNwb25zZTtcbiAgICBpbmZvKG1lc3NhZ2U6IHN0cmluZywgdGl0bGU/OiBzdHJpbmcsIGNvbmZpZz86IGFueSk6IE5vdGlmeVJlc3BvbnNlO1xufVxuIl19