import { Orderable } from '../../core/sort/orderable';
export declare type DomainType = 'codedValue';
export declare type MergePolicyType = 'esriMPTDefaultValue' | 'esriMPTAreaWeighted' | 'esriMPTSumValues';
export declare type SplitPolicyType = 'esriSPTDefaultValue' | 'esriSPTDuplicate' | 'esriSPTGeometryRatio';
export declare type FieldType = 'id' | 'esriFieldTypeOID' | 'id-string' | 'string' | 'esriFieldTypeString' | 'number' | 'esriFieldTypeNumber' | 'double' | 'esriFieldTypeDouble' | 'int' | 'esriFieldTypeSmallInteger' | 'date' | 'esriFieldTypeDate' | 'geometry' | 'esriFieldTypeGeometry' | 'xml' | 'esriFieldTypeXML' | 'blob' | 'esriFieldTypeBlob' | 'guid' | 'esriFieldTypeGUID' | 'globalId' | 'esriFieldTypeGlobalID' | 'integer' | 'esriFieldTypeInteger' | 'raster' | 'esriFieldTypeRaster' | 'single' | 'esriFieldTypeSingle';
export declare type FieldRole = 'identity' | 'latitude' | 'longitude' | 'x' | 'y' | 'accuracy' | 'altitude' | 'altitude-accuracy' | 'heading' | 'speed' | 'username' | 'user-email' | 'user-firstname' | 'user-lastname' | 'date-now' | 'measure' | 'from-measure' | 'to-measure';
export declare type LayerFieldCodedValueCode = string | number;
export declare const FIELD_TYPE_OID: FieldType;
export declare const FIELD_TYPE_OID_STRING: FieldType;
export declare const FIELD_TYPE_STRING: FieldType;
export declare const FIELD_TYPE_NUMBER: FieldType;
export declare const FIELD_TYPE_XML: FieldType;
export declare const FIELD_TYPE_BLOB: FieldType;
export declare const FIELD_TYPE_DATE: FieldType;
export declare const FIELD_TYPE_DOUBLE: FieldType;
export declare const FIELD_TYPE_GUID: FieldType;
export declare const FIELD_TYPE_GEOMETRY: FieldType;
export declare const FIELD_TYPE_GLOBALID: FieldType;
export declare const FIELD_TYPE_INTEGER: FieldType;
export declare const FIELD_TYPE_RASTER: FieldType;
export declare const FIELD_TYPE_SINGLE: FieldType;
export declare const FIELD_TYPE_SMALL_INTEGER: FieldType;
export declare const ESRI_FIELD_TYPE_OID: FieldType;
export declare const ESRI_FIELD_TYPE_STRING: FieldType;
export declare const ESRI_FIELD_TYPE_NUMBER: FieldType;
export declare const ESRI_FIELD_TYPE_XML: FieldType;
export declare const ESRI_FIELD_TYPE_BLOB: FieldType;
export declare const ESRI_FIELD_TYPE_DATE: FieldType;
export declare const ESRI_FIELD_TYPE_DOUBLE: FieldType;
export declare const ESRI_FIELD_TYPE_GUID: FieldType;
export declare const ESRI_FIELD_TYPE_GEOMETRY: FieldType;
export declare const ESRI_FIELD_TYPE_GLOBALID: FieldType;
export declare const ESRI_FIELD_TYPE_INTEGER: FieldType;
export declare const ESRI_FIELD_TYPE_RASTER: FieldType;
export declare const ESRI_FIELD_TYPE_SINGLE: FieldType;
export declare const ESRI_FIELD_TYPE_SMALL_INTEGER: FieldType;
export declare const FIELD_METADATA: FieldMetadata[];
export interface FieldMetadata {
    alias: string;
    isNumeric: boolean;
    types: FieldType[];
}
export declare function isFieldGeometryType(fieldType: FieldType): boolean;
export declare function isObjectIdType(fieldType: FieldType): boolean;
export declare function getGeometryField(fields: LayerField[]): LayerField;
export declare function getGeometryFieldName(fields: LayerField[]): string;
export declare function getIdField(fields: LayerField[]): LayerField;
export declare function getIdFieldFieldName(fields: LayerField[]): string;
export declare function isFieldExpression(fieldNameOrExpression: string): boolean;
export declare function toFieldType(field: FieldType | LayerField): FieldType;
export declare function toFieldName(field: string | LayerField): string;
export declare function getField(fieldName: string, fields: LayerField[]): LayerField | null;
export declare function getFieldAlias(fieldName: string, fields: LayerField[]): string | null;
export declare function isFieldNumeric(field: FieldType | LayerField): boolean;
export declare function isFieldValueNumeric(field: FieldType | LayerField, value: any): boolean;
export interface LayerFieldCodedValue {
    name: string;
    code: LayerFieldCodedValueCode;
    order?: number;
}
export interface LayerFieldDomain {
    type: DomainType;
    name: string;
    codedValues: LayerFieldCodedValue[];
    mergePolicy: MergePolicyType;
    splitPolicy: SplitPolicyType;
}
export interface LayerField extends Orderable {
    name: string;
    type: FieldType;
    alias?: string;
    length?: number;
    editable?: boolean;
    nullable?: boolean;
    defaultValue?: any;
    domain?: LayerFieldDomain;
    domainName?: string;
    hidden?: boolean;
    order?: number;
    role?: FieldRole;
    placeholder?: string;
    min?: number;
    max?: number;
}
