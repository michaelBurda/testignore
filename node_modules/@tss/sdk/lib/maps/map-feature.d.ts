import { Feature, Geometry, GeoJsonProperties, BBox } from 'geojson';
import { FeatureClassLayer } from './feature-class-layer';
import { Cloneable } from '../core/clone/cloneable';
export declare class MapFeature implements Feature, Cloneable<MapFeature> {
    id?: string | number;
    geometry: Geometry;
    properties: GeoJsonProperties;
    bbox: BBox;
    type: 'Feature';
    routeId: string;
    fromMeasure: number;
    toMeasure: number;
    layer: FeatureClassLayer;
    displayValue: any;
    styleValue: any;
    isLinear: boolean;
    isPoint: boolean;
    isPolygon: boolean;
    viewDate?: Date;
    gdbVersion?: string;
    spatialReferenceId?: number;
    readonly layerId: number;
    readonly hasZ: boolean;
    readonly hasM: boolean;
    constructor(feature: Feature, layer: FeatureClassLayer, spatialReferenceId?: number);
    getIdFieldName(): string;
    getValue(fieldNameOrExpression: string): any;
    getCodedValueNameOrDefault(fieldName: string): any;
    setValue(fieldName: string, value: any): this;
    setId(id: string | number): this;
    setGeometry(geometry: Geometry): this;
    setMeasureFromGeometry(): this;
    isSpatialReferenceWgs84(): boolean;
    clone(): MapFeature;
    toFeature(): Feature;
    toGeoJson(): Feature;
    protected setGeometryTypeProperties(): this;
}
