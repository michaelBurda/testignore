import { Observable } from 'rxjs';
import { BaseGeolocator } from './base-geolocator.service';
import { GpsPosition } from '../gps-position/gps-position';
import { GeolocatorCapability } from './geolocator-capability';
import { Logger } from '../../core/logging/logger.service';
import { GeolocationConfig } from '../geolocation.config';
/**
 * Wrapper for geolocation service. The wrapper primarily exists to abstract the direct interaction with
 * the "navigator" object and to allow for injecting other implementations of geolocation functionality.
 */
export declare class GeolocationGeolocator extends BaseGeolocator {
    private readonly config;
    capabilities: GeolocatorCapability[];
    readonly name: string;
    readonly description: string;
    constructor(log: Logger, config: GeolocationConfig);
    getCurrentPosition(options?: PositionOptions): Promise<GpsPosition>;
    watchPosition(options?: PositionOptions): Observable<GpsPosition>;
    isAvailable(): Observable<boolean>;
}
