import { LengthUnit } from '../core/units/length-unit';
export declare type TurfDistanceUnits = 'miles' | 'kilometers' | 'radians' | 'degrees';
export interface PositionPathBuilderOptions {
    /**
     * The minimum distnace the next point must be from the previous point to count
     * as a new point (in meters).
     */
    minimumVertexDistanceMeters?: number | 0.25;
    /**
     * When true, will use the "minimumVertexDistanceMeters" setting to filter out points
     * that are not far enough away from the previous point.
     */
    requireMinimumVertexDistance?: boolean | true;
    /**
     * The accuracy (in meters) that must be met in order for it to be an acceptable point.
     * If the accuracy of a given point does not meet this standard it will not be added
     * to the point collection.
     */
    gpsRequiredAccuracyMeters?: number | 10;
    /**
     * When true, will use the "gpsRequiredAccuracyMeters" setting to filter out points
     * that are do not meet the required accuracy threshold.
     */
    requireAccuracy?: boolean | true;
    /**
     * The required precision to determine that two points are at the same location.
     */
    pointEquivalencyPrecision?: number | 8;
    /**
     * Includes z values (altitude) in exported geometry.
     */
    returnZValues?: boolean | true;
    /**
     * Includes m values (measure) in exported geometry.
     */
    returnMValues?: boolean | true;
    /**
     * The unit to calculate distance between verticees on (if returnMValues property is set to true).
     */
    mValueUnit?: TurfDistanceUnits | 'miles';
    /**
     * Stores every point that is added to the path in the native order it was added.
     * This option is typically used for analysis or debugging purposes.
     */
    storeUnfilteredPath?: boolean | false;
    /**
     * The distance threshold at which a calibration point measure will try to create a new vertex in the path.
     * The vertex will be placed based on the interpolated value between the last two vertices (based on timestamp).
     * For example, if the "calibrationMeasureSnappingDistanceDelta" value is
     */
    calibrationMeasureSnappingDistanceDelta?: number | 2;
    /**
     * The units of the "calibrationMeasureSnappingDistanceDelta" value.
     */
    calibrationMeasureSnappingDistanceDeltaUnit?: LengthUnit | LengthUnit.Foot;
}
