import { HttpClient } from '@angular/common/http';
import { Observable } from 'rxjs';
import { GeolocatorCapability } from '../geolocation/geolocator/geolocator-capability';
import { BaseGeolocator } from '../geolocation/geolocator/base-geolocator.service';
import { Logger } from '../core/logging/logger.service';
import { GpsGateConfig } from './gps-gate.config';
import { GpsGateVersionInfo } from './gps-gate-version-info';
import { GpsPosition } from '../geolocation/gps-position/gps-position';
/**
 * Wrapper for geolocation service. The wrapper primarily exists to abstract the direct interaction with
 * the "navigator" object and to allow for injecting other implementations of geolocation functionality.
 */
export declare class GpsGateGeolocator extends BaseGeolocator {
    private readonly http;
    private readonly config;
    capabilities: GeolocatorCapability[];
    readonly name: string;
    readonly description: string;
    constructor(log: Logger, http: HttpClient, config: GpsGateConfig);
    getCurrentPosition(options?: PositionOptions): Promise<GpsPosition>;
    watchPosition(options?: PositionOptions): Observable<GpsPosition>;
    isAvailable(): Observable<boolean>;
    getVersion(): Observable<GpsGateVersionInfo>;
}
