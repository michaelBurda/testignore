import { HttpResponse } from '@angular/common/http';
import { PersistentCacheStorage } from './cache.storage';
/**
 * Cache Service is an observables based in-memory cache implementation
 * Keeps track of in-flight observables and sets a default expiry for cached values
 */
import * as ɵngcc0 from '@angular/core';
export declare class CacheService {
    private cache;
    constructor(cache: PersistentCacheStorage);
    get(key: string): HttpResponse<any>;
    set(key: string, value: HttpResponse<any>, timeToLive?: number): void;
    has(key: string): boolean;
    private getExpireDate;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<CacheService, never>;
    static ɵprov: ɵngcc0.ɵɵInjectableDef<CacheService>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2FjaGUuc2VydmljZS5kLnRzIiwic291cmNlcyI6WyJjYWNoZS5zZXJ2aWNlLmQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUFDQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEh0dHBSZXNwb25zZSB9IGZyb20gJ0Bhbmd1bGFyL2NvbW1vbi9odHRwJztcbmltcG9ydCB7IFBlcnNpc3RlbnRDYWNoZVN0b3JhZ2UgfSBmcm9tICcuL2NhY2hlLnN0b3JhZ2UnO1xuLyoqXG4gKiBDYWNoZSBTZXJ2aWNlIGlzIGFuIG9ic2VydmFibGVzIGJhc2VkIGluLW1lbW9yeSBjYWNoZSBpbXBsZW1lbnRhdGlvblxuICogS2VlcHMgdHJhY2sgb2YgaW4tZmxpZ2h0IG9ic2VydmFibGVzIGFuZCBzZXRzIGEgZGVmYXVsdCBleHBpcnkgZm9yIGNhY2hlZCB2YWx1ZXNcbiAqL1xuZXhwb3J0IGRlY2xhcmUgY2xhc3MgQ2FjaGVTZXJ2aWNlIHtcbiAgICBwcml2YXRlIGNhY2hlO1xuICAgIGNvbnN0cnVjdG9yKGNhY2hlOiBQZXJzaXN0ZW50Q2FjaGVTdG9yYWdlKTtcbiAgICBnZXQoa2V5OiBzdHJpbmcpOiBIdHRwUmVzcG9uc2U8YW55PjtcbiAgICBzZXQoa2V5OiBzdHJpbmcsIHZhbHVlOiBIdHRwUmVzcG9uc2U8YW55PiwgdGltZVRvTGl2ZT86IG51bWJlcik6IHZvaWQ7XG4gICAgaGFzKGtleTogc3RyaW5nKTogYm9vbGVhbjtcbiAgICBwcml2YXRlIGdldEV4cGlyZURhdGU7XG59XG4iXX0=