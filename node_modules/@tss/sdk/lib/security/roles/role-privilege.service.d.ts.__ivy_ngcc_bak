import { HttpClient, HttpParams } from '@angular/common/http';
import { Observable } from 'rxjs';
import { SecurityConfig } from '../security-config';
import { Privilege } from '../privileges/privilege';
import { BaseResourceService } from '../../core/resource/base-resource.service';
export declare const MISSING_PRIVILEGE_PARAM_EXCEPTION_MSG = "Missing privilege identifier parameter";
/**
 * Service to provide all CRUD operations for privilege/role assignment.
 *
 * @example
 * ## Gets privileges for a given role:
 * service.privilegesByRole('879e27e1-b139-4348-86ca-ec4d5651475f')
 *
 * // Which is just a shortcut for:
 * service.query({ roleId: 'admin' });
 *
 */
export declare class RolePrivilegeService extends BaseResourceService<Privilege> {
    protected http: HttpClient;
    constructor(http: HttpClient, config: SecurityConfig);
    /**
     * Retrieves a list of privileges for a given role ID.
     */
    query(routeTokens?: any, params?: HttpParams): Observable<Privilege[]>;
    /**
     * This method is not supported for this resource. Please use "privilegesByRole".
     */
    get(id: string | number, routeTokens?: any, params?: HttpParams): Observable<Privilege>;
    /**
     * This method is not supported for this resource. Please use "addPrivilegeToRole".
     */
    create(entity: Privilege, routeTokens?: any, params?: HttpParams): Observable<Privilege>;
    /**
     * Updates a privilege assignment (adds a privilege to a role).
     */
    update(entity: Privilege, routeTokens?: any, params?: HttpParams): Observable<any>;
    /**
     * Removes a privilege from a role assignment.
     */
    delete(id: string | number, routeTokens?: any, params?: HttpParams): Observable<Privilege>;
    /**
     * Retrieves all privileges assigned to the given role ID.
     */
    privilegesByRole(roleId: string, params?: HttpParams): Observable<Privilege[]>;
    /**
     * Adds a privilege to role.
     */
    addPrivilegeToRole(roleId: string, privilegeId: string): Observable<Privilege>;
    /**
     * Removes a privilege from the given role.
     */
    removePrivilegeFromRole(roleId: string, privilegeId: string): Observable<Privilege>;
}
