import { HttpClient, HttpParams } from '@angular/common/http';
import { Observable } from 'rxjs';
import { Role } from './role';
import { SecurityConfig } from '../security-config';
import { BaseResourceService } from '../../core/resource/base-resource.service';
/**
 * Service to provide all CRUD operations for user/role assignment.
 *
 * @example
 * ## Gets roles for a given user:
 * service.rolesByUser('879e27e1-b139-4348-86ca-ec4d5651475f')
 *
 * // Which is just a shortcut for:
 * service.query({ userId: '879e27e1-b139-4348-86ca-ec4d5651475f' });
 *
 */
import * as ɵngcc0 from '@angular/core';
export declare class UserRoleService extends BaseResourceService<Role> {
    protected http: HttpClient;
    constructor(http: HttpClient, config: SecurityConfig);
    /**
     * Retrieves a list of roles for a given user ID.
     */
    query(routeTokens?: any, params?: HttpParams): Observable<Role[]>;
    /**
     * This method is not supported for this resource. Please use "rolesByUser".
     */
    get(id: string | number, routeTokens?: any, params?: HttpParams): Observable<Role>;
    /**
     * This method is not supported for this resource. Please use "addUserToRole".
     */
    create(entity: Role, routeTokens?: any, params?: HttpParams): Observable<Role>;
    /**
     * Updates a users role assignment (adds a role to a user).
     */
    update(entity: Role, routeTokens?: any, params?: HttpParams): Observable<any>;
    /**
     * Removes a user from a role assignment.
     */
    delete(id: string | number, routeTokens?: any, params?: HttpParams): Observable<Role>;
    /**
     * Retrieves all roles assigned to the given user ID.
     */
    rolesByUser(userId: string, params?: HttpParams): Observable<Role[]>;
    /**
     * Adds a user to role.
     */
    addUserToRole(userId: string, role: Role, params?: HttpParams): Observable<Role>;
    /**
     * Adds a user to role.
     */
    addUserToRoleByName(userId: string, roleName: string, params?: HttpParams): Observable<Role>;
    /**
     * Removes a user from the given role.
     */
    removeUserFromRole(userId: string, role: Role, params?: HttpParams): Observable<Role>;
    /**
     * Removes a user from the given role.
     */
    removeUserFromRoleByName(userId: string, roleName: string, params?: HttpParams): Observable<Role>;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<UserRoleService, never>;
    static ɵprov: ɵngcc0.ɵɵInjectableDef<UserRoleService>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidXNlci1yb2xlLnNlcnZpY2UuZC50cyIsInNvdXJjZXMiOlsidXNlci1yb2xlLnNlcnZpY2UuZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FBQ0EiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBIdHRwQ2xpZW50LCBIdHRwUGFyYW1zIH0gZnJvbSAnQGFuZ3VsYXIvY29tbW9uL2h0dHAnO1xuaW1wb3J0IHsgT2JzZXJ2YWJsZSB9IGZyb20gJ3J4anMnO1xuaW1wb3J0IHsgUm9sZSB9IGZyb20gJy4vcm9sZSc7XG5pbXBvcnQgeyBTZWN1cml0eUNvbmZpZyB9IGZyb20gJy4uL3NlY3VyaXR5LWNvbmZpZyc7XG5pbXBvcnQgeyBCYXNlUmVzb3VyY2VTZXJ2aWNlIH0gZnJvbSAnLi4vLi4vY29yZS9yZXNvdXJjZS9iYXNlLXJlc291cmNlLnNlcnZpY2UnO1xuLyoqXG4gKiBTZXJ2aWNlIHRvIHByb3ZpZGUgYWxsIENSVUQgb3BlcmF0aW9ucyBmb3IgdXNlci9yb2xlIGFzc2lnbm1lbnQuXG4gKlxuICogQGV4YW1wbGVcbiAqICMjIEdldHMgcm9sZXMgZm9yIGEgZ2l2ZW4gdXNlcjpcbiAqIHNlcnZpY2Uucm9sZXNCeVVzZXIoJzg3OWUyN2UxLWIxMzktNDM0OC04NmNhLWVjNGQ1NjUxNDc1ZicpXG4gKlxuICogLy8gV2hpY2ggaXMganVzdCBhIHNob3J0Y3V0IGZvcjpcbiAqIHNlcnZpY2UucXVlcnkoeyB1c2VySWQ6ICc4NzllMjdlMS1iMTM5LTQzNDgtODZjYS1lYzRkNTY1MTQ3NWYnIH0pO1xuICpcbiAqL1xuZXhwb3J0IGRlY2xhcmUgY2xhc3MgVXNlclJvbGVTZXJ2aWNlIGV4dGVuZHMgQmFzZVJlc291cmNlU2VydmljZTxSb2xlPiB7XG4gICAgcHJvdGVjdGVkIGh0dHA6IEh0dHBDbGllbnQ7XG4gICAgY29uc3RydWN0b3IoaHR0cDogSHR0cENsaWVudCwgY29uZmlnOiBTZWN1cml0eUNvbmZpZyk7XG4gICAgLyoqXG4gICAgICogUmV0cmlldmVzIGEgbGlzdCBvZiByb2xlcyBmb3IgYSBnaXZlbiB1c2VyIElELlxuICAgICAqL1xuICAgIHF1ZXJ5KHJvdXRlVG9rZW5zPzogYW55LCBwYXJhbXM/OiBIdHRwUGFyYW1zKTogT2JzZXJ2YWJsZTxSb2xlW10+O1xuICAgIC8qKlxuICAgICAqIFRoaXMgbWV0aG9kIGlzIG5vdCBzdXBwb3J0ZWQgZm9yIHRoaXMgcmVzb3VyY2UuIFBsZWFzZSB1c2UgXCJyb2xlc0J5VXNlclwiLlxuICAgICAqL1xuICAgIGdldChpZDogc3RyaW5nIHwgbnVtYmVyLCByb3V0ZVRva2Vucz86IGFueSwgcGFyYW1zPzogSHR0cFBhcmFtcyk6IE9ic2VydmFibGU8Um9sZT47XG4gICAgLyoqXG4gICAgICogVGhpcyBtZXRob2QgaXMgbm90IHN1cHBvcnRlZCBmb3IgdGhpcyByZXNvdXJjZS4gUGxlYXNlIHVzZSBcImFkZFVzZXJUb1JvbGVcIi5cbiAgICAgKi9cbiAgICBjcmVhdGUoZW50aXR5OiBSb2xlLCByb3V0ZVRva2Vucz86IGFueSwgcGFyYW1zPzogSHR0cFBhcmFtcyk6IE9ic2VydmFibGU8Um9sZT47XG4gICAgLyoqXG4gICAgICogVXBkYXRlcyBhIHVzZXJzIHJvbGUgYXNzaWdubWVudCAoYWRkcyBhIHJvbGUgdG8gYSB1c2VyKS5cbiAgICAgKi9cbiAgICB1cGRhdGUoZW50aXR5OiBSb2xlLCByb3V0ZVRva2Vucz86IGFueSwgcGFyYW1zPzogSHR0cFBhcmFtcyk6IE9ic2VydmFibGU8YW55PjtcbiAgICAvKipcbiAgICAgKiBSZW1vdmVzIGEgdXNlciBmcm9tIGEgcm9sZSBhc3NpZ25tZW50LlxuICAgICAqL1xuICAgIGRlbGV0ZShpZDogc3RyaW5nIHwgbnVtYmVyLCByb3V0ZVRva2Vucz86IGFueSwgcGFyYW1zPzogSHR0cFBhcmFtcyk6IE9ic2VydmFibGU8Um9sZT47XG4gICAgLyoqXG4gICAgICogUmV0cmlldmVzIGFsbCByb2xlcyBhc3NpZ25lZCB0byB0aGUgZ2l2ZW4gdXNlciBJRC5cbiAgICAgKi9cbiAgICByb2xlc0J5VXNlcih1c2VySWQ6IHN0cmluZywgcGFyYW1zPzogSHR0cFBhcmFtcyk6IE9ic2VydmFibGU8Um9sZVtdPjtcbiAgICAvKipcbiAgICAgKiBBZGRzIGEgdXNlciB0byByb2xlLlxuICAgICAqL1xuICAgIGFkZFVzZXJUb1JvbGUodXNlcklkOiBzdHJpbmcsIHJvbGU6IFJvbGUsIHBhcmFtcz86IEh0dHBQYXJhbXMpOiBPYnNlcnZhYmxlPFJvbGU+O1xuICAgIC8qKlxuICAgICAqIEFkZHMgYSB1c2VyIHRvIHJvbGUuXG4gICAgICovXG4gICAgYWRkVXNlclRvUm9sZUJ5TmFtZSh1c2VySWQ6IHN0cmluZywgcm9sZU5hbWU6IHN0cmluZywgcGFyYW1zPzogSHR0cFBhcmFtcyk6IE9ic2VydmFibGU8Um9sZT47XG4gICAgLyoqXG4gICAgICogUmVtb3ZlcyBhIHVzZXIgZnJvbSB0aGUgZ2l2ZW4gcm9sZS5cbiAgICAgKi9cbiAgICByZW1vdmVVc2VyRnJvbVJvbGUodXNlcklkOiBzdHJpbmcsIHJvbGU6IFJvbGUsIHBhcmFtcz86IEh0dHBQYXJhbXMpOiBPYnNlcnZhYmxlPFJvbGU+O1xuICAgIC8qKlxuICAgICAqIFJlbW92ZXMgYSB1c2VyIGZyb20gdGhlIGdpdmVuIHJvbGUuXG4gICAgICovXG4gICAgcmVtb3ZlVXNlckZyb21Sb2xlQnlOYW1lKHVzZXJJZDogc3RyaW5nLCByb2xlTmFtZTogc3RyaW5nLCBwYXJhbXM/OiBIdHRwUGFyYW1zKTogT2JzZXJ2YWJsZTxSb2xlPjtcbn1cbiJdfQ==