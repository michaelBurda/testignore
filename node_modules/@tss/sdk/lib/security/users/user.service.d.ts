import { HttpClient, HttpParams } from '@angular/common/http';
import { Observable } from 'rxjs';
import { BaseResourceService } from '../../core/resource/base-resource.service';
import { User } from './user';
import { SecurityConfig } from '../security-config';
/**
 * @example
 * ## Get Users that belong to a given role (by ID).
 * service.usersByRoleId('1428a342-8a95-4b6c-b3e9-da135e3ced04')
 *
 * // ...which is just a shortcut for:
 * service.query({}, new HttpParams().set('filterByRoleId', roleName));
 *
 * ## Get Users that belong to a given role (by name).
 * service.usersByRoleName('Admin')
 *
 * // ...which is just a shortcut for:
 * service.query({}, new HttpParams().set('filterByRoleName', roleName));
 */
import * as ɵngcc0 from '@angular/core';
export declare class UserService extends BaseResourceService<User> {
    protected http: HttpClient;
    constructor(http: HttpClient, config: SecurityConfig);
    usersByRoleId(roleId: string, params?: HttpParams): Observable<User[]>;
    usersByRoleName(roleName: string, params?: HttpParams): Observable<User[]>;
    search(searchText: string, params?: HttpParams): Observable<User[]>;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<UserService, never>;
    static ɵprov: ɵngcc0.ɵɵInjectableDef<UserService>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidXNlci5zZXJ2aWNlLmQudHMiLCJzb3VyY2VzIjpbInVzZXIuc2VydmljZS5kLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FBQ0EiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBIdHRwQ2xpZW50LCBIdHRwUGFyYW1zIH0gZnJvbSAnQGFuZ3VsYXIvY29tbW9uL2h0dHAnO1xuaW1wb3J0IHsgT2JzZXJ2YWJsZSB9IGZyb20gJ3J4anMnO1xuaW1wb3J0IHsgQmFzZVJlc291cmNlU2VydmljZSB9IGZyb20gJy4uLy4uL2NvcmUvcmVzb3VyY2UvYmFzZS1yZXNvdXJjZS5zZXJ2aWNlJztcbmltcG9ydCB7IFVzZXIgfSBmcm9tICcuL3VzZXInO1xuaW1wb3J0IHsgU2VjdXJpdHlDb25maWcgfSBmcm9tICcuLi9zZWN1cml0eS1jb25maWcnO1xuLyoqXG4gKiBAZXhhbXBsZVxuICogIyMgR2V0IFVzZXJzIHRoYXQgYmVsb25nIHRvIGEgZ2l2ZW4gcm9sZSAoYnkgSUQpLlxuICogc2VydmljZS51c2Vyc0J5Um9sZUlkKCcxNDI4YTM0Mi04YTk1LTRiNmMtYjNlOS1kYTEzNWUzY2VkMDQnKVxuICpcbiAqIC8vIC4uLndoaWNoIGlzIGp1c3QgYSBzaG9ydGN1dCBmb3I6XG4gKiBzZXJ2aWNlLnF1ZXJ5KHt9LCBuZXcgSHR0cFBhcmFtcygpLnNldCgnZmlsdGVyQnlSb2xlSWQnLCByb2xlTmFtZSkpO1xuICpcbiAqICMjIEdldCBVc2VycyB0aGF0IGJlbG9uZyB0byBhIGdpdmVuIHJvbGUgKGJ5IG5hbWUpLlxuICogc2VydmljZS51c2Vyc0J5Um9sZU5hbWUoJ0FkbWluJylcbiAqXG4gKiAvLyAuLi53aGljaCBpcyBqdXN0IGEgc2hvcnRjdXQgZm9yOlxuICogc2VydmljZS5xdWVyeSh7fSwgbmV3IEh0dHBQYXJhbXMoKS5zZXQoJ2ZpbHRlckJ5Um9sZU5hbWUnLCByb2xlTmFtZSkpO1xuICovXG5leHBvcnQgZGVjbGFyZSBjbGFzcyBVc2VyU2VydmljZSBleHRlbmRzIEJhc2VSZXNvdXJjZVNlcnZpY2U8VXNlcj4ge1xuICAgIHByb3RlY3RlZCBodHRwOiBIdHRwQ2xpZW50O1xuICAgIGNvbnN0cnVjdG9yKGh0dHA6IEh0dHBDbGllbnQsIGNvbmZpZzogU2VjdXJpdHlDb25maWcpO1xuICAgIHVzZXJzQnlSb2xlSWQocm9sZUlkOiBzdHJpbmcsIHBhcmFtcz86IEh0dHBQYXJhbXMpOiBPYnNlcnZhYmxlPFVzZXJbXT47XG4gICAgdXNlcnNCeVJvbGVOYW1lKHJvbGVOYW1lOiBzdHJpbmcsIHBhcmFtcz86IEh0dHBQYXJhbXMpOiBPYnNlcnZhYmxlPFVzZXJbXT47XG4gICAgc2VhcmNoKHNlYXJjaFRleHQ6IHN0cmluZywgcGFyYW1zPzogSHR0cFBhcmFtcyk6IE9ic2VydmFibGU8VXNlcltdPjtcbn1cbiJdfQ==