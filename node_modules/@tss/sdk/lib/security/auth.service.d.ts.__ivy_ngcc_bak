import { HttpClient } from '@angular/common/http';
import { Observable } from 'rxjs';
import { UserAccount } from './user-account';
import { RoleManagerService } from './role-manager.service';
import { SecurityConfig } from './security-config';
import { Logger } from '../core/logging/logger.service';
import { PersistentStorage } from '../core/storage/persistent-storage.service';
export declare enum SignInState {
    SignedIn = 0,
    SignedOut = 1,
    SignInFailed = 2,
    SignOutFailed = 3
}
export declare class AuthService {
    private http;
    private roleMgr;
    private config;
    private storage;
    private log;
    rememberMe: boolean;
    account: UserAccount;
    isAuthenticated: boolean;
    isDomainAccount: boolean;
    isFederatedAccount: boolean;
    readonly stateChange: Observable<SignInState>;
    private readonly stateChangeSubject;
    constructor(http: HttpClient, roleMgr: RoleManagerService, config: SecurityConfig, storage: PersistentStorage, log: Logger);
    signIn(userName: string, password: string, rememberMe?: boolean): Observable<UserAccount>;
    signOut(): Observable<any>;
    getUserInfo(): Observable<UserAccount>;
    getToken(): string;
    loadStoredToken(): boolean;
    onSignedIn(account: UserAccount, skipLocalStorage?: boolean): void;
    onSignedOut(): void;
    private onSignInFailed;
    private onSignedOutFailed;
    private getLocalToken;
    private setLocalToken;
}
